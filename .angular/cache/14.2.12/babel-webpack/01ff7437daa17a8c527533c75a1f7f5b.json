{"ast":null,"code":"/**\r\n * Functionality for drawing simple buttons.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../Container\";\nimport { Label } from \"./Label\";\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { registry } from \"../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Button class is capable of drawing a simple rectangular button with\r\n * optionally rounded corners and an icon in it.\r\n *\r\n * @see {@link IButtonEvents} for a list of available events\r\n * @see {@link IButtonAdapters} for a list of available Adapters\r\n */\n\nvar Button =\n/** @class */\nfunction (_super) {\n  __extends(Button, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Button() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"Button\";\n    _this.tooltipY = 0; // Set defaults\n\n    _this.iconPosition = \"left\";\n    _this.layout = \"horizontal\";\n    _this.contentAlign = \"center\";\n    _this.contentValign = \"middle\";\n\n    _this.padding(8, 16, 8, 16);\n\n    _this.setStateOnChildren = true;\n    var interfaceColors = new InterfaceColorSet(); // Create background\n\n    var background = _this.background;\n    background.fill = interfaceColors.getFor(\"secondaryButton\");\n    background.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\n    background.fillOpacity = 1;\n    background.strokeOpacity = 1;\n    background.cornerRadius(3, 3, 3, 3); // Create the label element\n\n    _this.label = new Label();\n    _this.label.fill = interfaceColors.getFor(\"secondaryButtonText\");\n    ;\n    _this.label.shouldClone = false; // Create default states\n\n    var hoverState = background.states.create(\"hover\");\n    hoverState.properties.fillOpacity = 1;\n    hoverState.properties.fill = interfaceColors.getFor(\"secondaryButtonHover\");\n    var downState = background.states.create(\"down\");\n    downState.transitionDuration = 100;\n    downState.properties.fill = interfaceColors.getFor(\"secondaryButtonDown\");\n    downState.properties.fillOpacity = 1; // Set up accessibility\n    // A button should be always focusable\n\n    _this.role = \"button\";\n    _this.focusable = true; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(Button.prototype, \"icon\", {\n    /**\r\n     * @return Icon Sprite\r\n     */\n    get: function () {\n      return this._icon;\n    },\n\n    /**\r\n     * A [[Sprite]] to be used as an icon on button.\r\n     *\r\n     * @param icon Icon Sprite\r\n     */\n    set: function (icon) {\n      var currentIcon = this._icon;\n\n      if (currentIcon) {\n        //this._icon.dispose();\n        //this.removeDispose(currentIcon);\n        currentIcon.parent = undefined;\n      }\n\n      if (icon) {\n        this._icon = icon;\n        icon.parent = this;\n        icon.interactionsEnabled = false;\n        icon.shouldClone = false;\n        this.iconPosition = this.iconPosition;\n\n        this._disposers.push(icon);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Button.prototype, \"iconPosition\", {\n    /**\r\n     * @return Icon position\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"iconPosition\");\n    },\n\n    /**\r\n     * Icon position: \"left\" or \"right\".\r\n     *\r\n     * @default \"left\"\r\n     * @param position  Icon position\r\n     */\n    set: function (position) {\n      this.setPropertyValue(\"iconPosition\", position);\n\n      if (this.icon) {\n        if (position == \"left\") {\n          this.icon.toBack();\n        } else {\n          this.icon.toFront();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Button.prototype, \"label\", {\n    /**\r\n     * @return Label element\r\n     */\n    get: function () {\n      return this._label;\n    },\n\n    /**\r\n     * [[Label]] element to be used for text.\r\n     *\r\n     * @param label element\r\n     */\n    set: function (label) {\n      if (this._label) {\n        //this._label.dispose();\n        this.removeDispose(this._label);\n      }\n\n      this._label = label;\n\n      if (label) {\n        label.parent = this;\n        label.interactionsEnabled = false;\n\n        this._disposers.push(this._label);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a background element for the button.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Background element\r\n   */\n\n  Button.prototype.createBackground = function () {\n    return new RoundedRectangle();\n  };\n  /**\r\n   * Copies properties and other attributes.\r\n   *\r\n   * @param source  Source\r\n   */\n\n\n  Button.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (source.label) {\n      this.label.copyFrom(source.label);\n    }\n\n    if (source.icon) {\n      this.icon = source.icon.clone();\n    }\n  };\n\n  return Button;\n}(Container);\n\nexport { Button };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Button\"] = Button;","map":{"version":3,"names":["__extends","Container","Label","RoundedRectangle","InterfaceColorSet","registry","Button","_super","_this","call","className","tooltipY","iconPosition","layout","contentAlign","contentValign","padding","setStateOnChildren","interfaceColors","background","fill","getFor","stroke","fillOpacity","strokeOpacity","cornerRadius","label","shouldClone","hoverState","states","create","properties","downState","transitionDuration","role","focusable","applyTheme","Object","defineProperty","prototype","get","_icon","set","icon","currentIcon","parent","undefined","interactionsEnabled","_disposers","push","enumerable","configurable","getPropertyValue","position","setPropertyValue","toBack","toFront","_label","removeDispose","createBackground","copyFrom","source","clone","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js"],"sourcesContent":["/**\r\n * Functionality for drawing simple buttons.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { Label } from \"./Label\";\r\nimport { RoundedRectangle } from \"../elements/RoundedRectangle\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Button class is capable of drawing a simple rectangular button with\r\n * optionally rounded corners and an icon in it.\r\n *\r\n * @see {@link IButtonEvents} for a list of available events\r\n * @see {@link IButtonAdapters} for a list of available Adapters\r\n */\r\nvar Button = /** @class */ (function (_super) {\r\n    __extends(Button, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Button() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Button\";\r\n        _this.tooltipY = 0;\r\n        // Set defaults\r\n        _this.iconPosition = \"left\";\r\n        _this.layout = \"horizontal\";\r\n        _this.contentAlign = \"center\";\r\n        _this.contentValign = \"middle\";\r\n        _this.padding(8, 16, 8, 16);\r\n        _this.setStateOnChildren = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create background\r\n        var background = _this.background;\r\n        background.fill = interfaceColors.getFor(\"secondaryButton\");\r\n        background.stroke = interfaceColors.getFor(\"secondaryButtonStroke\");\r\n        background.fillOpacity = 1;\r\n        background.strokeOpacity = 1;\r\n        background.cornerRadius(3, 3, 3, 3);\r\n        // Create the label element\r\n        _this.label = new Label();\r\n        _this.label.fill = interfaceColors.getFor(\"secondaryButtonText\");\r\n        ;\r\n        _this.label.shouldClone = false;\r\n        // Create default states\r\n        var hoverState = background.states.create(\"hover\");\r\n        hoverState.properties.fillOpacity = 1;\r\n        hoverState.properties.fill = interfaceColors.getFor(\"secondaryButtonHover\");\r\n        var downState = background.states.create(\"down\");\r\n        downState.transitionDuration = 100;\r\n        downState.properties.fill = interfaceColors.getFor(\"secondaryButtonDown\");\r\n        downState.properties.fillOpacity = 1;\r\n        // Set up accessibility\r\n        // A button should be always focusable\r\n        _this.role = \"button\";\r\n        _this.focusable = true;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Button.prototype, \"icon\", {\r\n        /**\r\n         * @return Icon Sprite\r\n         */\r\n        get: function () {\r\n            return this._icon;\r\n        },\r\n        /**\r\n         * A [[Sprite]] to be used as an icon on button.\r\n         *\r\n         * @param icon Icon Sprite\r\n         */\r\n        set: function (icon) {\r\n            var currentIcon = this._icon;\r\n            if (currentIcon) {\r\n                //this._icon.dispose();\r\n                //this.removeDispose(currentIcon);\r\n                currentIcon.parent = undefined;\r\n            }\r\n            if (icon) {\r\n                this._icon = icon;\r\n                icon.parent = this;\r\n                icon.interactionsEnabled = false;\r\n                icon.shouldClone = false;\r\n                this.iconPosition = this.iconPosition;\r\n                this._disposers.push(icon);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Button.prototype, \"iconPosition\", {\r\n        /**\r\n         * @return Icon position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"iconPosition\");\r\n        },\r\n        /**\r\n         * Icon position: \"left\" or \"right\".\r\n         *\r\n         * @default \"left\"\r\n         * @param position  Icon position\r\n         */\r\n        set: function (position) {\r\n            this.setPropertyValue(\"iconPosition\", position);\r\n            if (this.icon) {\r\n                if (position == \"left\") {\r\n                    this.icon.toBack();\r\n                }\r\n                else {\r\n                    this.icon.toFront();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Button.prototype, \"label\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            return this._label;\r\n        },\r\n        /**\r\n         * [[Label]] element to be used for text.\r\n         *\r\n         * @param label element\r\n         */\r\n        set: function (label) {\r\n            if (this._label) {\r\n                //this._label.dispose();\r\n                this.removeDispose(this._label);\r\n            }\r\n            this._label = label;\r\n            if (label) {\r\n                label.parent = this;\r\n                label.interactionsEnabled = false;\r\n                this._disposers.push(this._label);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a background element for the button.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Background element\r\n     */\r\n    Button.prototype.createBackground = function () {\r\n        return new RoundedRectangle();\r\n    };\r\n    /**\r\n     * Copies properties and other attributes.\r\n     *\r\n     * @param source  Source\r\n     */\r\n    Button.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (source.label) {\r\n            this.label.copyFrom(source.label);\r\n        }\r\n        if (source.icon) {\r\n            this.icon = source.icon.clone();\r\n        }\r\n    };\r\n    return Button;\r\n}(Container));\r\nexport { Button };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Button\"] = Button;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}