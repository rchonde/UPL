{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointments/rendering_strategies/strategy_horizontal_month.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport HorizontalMonthLineRenderingStrategy from \"./strategy_horizontal_month_line\";\nimport { getGroupWidth } from \"../../workspaces/helpers/positionHelper\";\nimport dateUtils from \"../../../../core/utils/date\";\nvar MONTH_APPOINTMENT_HEIGHT_RATIO = .6;\nvar MONTH_APPOINTMENT_MIN_OFFSET = 26;\nvar MONTH_APPOINTMENT_MAX_OFFSET = 30;\nvar MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET = 36;\nvar MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET = 60;\nvar toMs = dateUtils.dateToMilliseconds;\n\nclass HorizontalMonthRenderingStrategy extends HorizontalMonthLineRenderingStrategy {\n  get endViewDate() {\n    return this.options.endViewDate;\n  }\n\n  get adaptivityEnabled() {\n    return this.options.adaptivityEnabled;\n  }\n\n  get DOMMetaData() {\n    return this.options.DOMMetaData;\n  }\n\n  _getLeftPosition(settings) {\n    var fullWeekAppointmentWidth = this.getGroupWidth(settings.groupIndex);\n    return this._calculateMultiWeekAppointmentLeftOffset(settings.hMax, fullWeekAppointmentWidth);\n  }\n\n  _getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings) {\n    var {\n      groupIndex: groupIndex,\n      info: {\n        appointment: {\n          startDate: startDate\n        }\n      }\n    } = settings;\n    var rawFullChunksWidth = fullChunksWidth - firstChunkWidth + weekWidth;\n    var allChunksCount = Math.ceil(rawFullChunksWidth / weekWidth);\n\n    var viewRowIndex = this._tryGetRowIndexInView(startDate);\n\n    if (void 0 !== viewRowIndex) {\n      var viewChunksCount = this.viewDataProvider.getRowCountInGroup(groupIndex);\n      var allowedChunksCount = viewChunksCount - viewRowIndex;\n      return allChunksCount <= allowedChunksCount ? allChunksCount : allowedChunksCount;\n    }\n\n    return allChunksCount;\n  }\n\n  _tryGetRowIndexInView(positionStartDate) {\n    var _this$options$dataRan;\n\n    var columnsCount = this.viewDataProvider.getColumnsCount();\n\n    if ((null === (_this$options$dataRan = this.options.dataRange) || void 0 === _this$options$dataRan ? void 0 : _this$options$dataRan.length) < 1 || !columnsCount) {\n      return;\n    }\n\n    var [startViewDate] = this.options.dateRange;\n    var dayDurationMs = toMs(\"day\");\n    var timeFromStart = positionStartDate.getTime() - startViewDate.getTime();\n    return Math.floor(timeFromStart / dayDurationMs / columnsCount);\n  }\n\n  _getChunkWidths(geometry) {\n    var firstChunkWidth = geometry.reducedWidth;\n    var fullChunksWidth = Math.floor(geometry.sourceAppointmentWidth);\n    var widthWithoutFirstChunk = fullChunksWidth - firstChunkWidth;\n    return [firstChunkWidth, fullChunksWidth, widthWithoutFirstChunk];\n  }\n\n  _getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition) {\n    var tailChunkWidth = withoutFirstChunkWidth % weekWidth || weekWidth;\n    var rtlPosition = leftPosition + (weekWidth - tailChunkWidth);\n    var tailChunkLeftPosition = this.rtlEnabled ? rtlPosition : leftPosition;\n    return [tailChunkWidth, tailChunkLeftPosition];\n  }\n\n  _getAppointmentParts(geometry, settings) {\n    var result = [];\n    var weekWidth = Math.round(this.getGroupWidth(settings.groupIndex));\n\n    var [firstChunkWidth, fullChunksWidth, withoutFirstChunkWidth] = this._getChunkWidths(geometry, settings, weekWidth);\n\n    var leftPosition = this._getLeftPosition(settings);\n\n    var hasTailChunk = this.endViewDate > settings.info.appointment.endDate;\n\n    var chunkCount = this._getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings);\n\n    var [tailChunkWidth, tailChunkLeftPosition] = this._getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition);\n\n    for (var chunkIndex = 1; chunkIndex < chunkCount; chunkIndex++) {\n      var topPosition = settings.top + this.cellHeight * chunkIndex;\n      var isTailChunk = hasTailChunk && chunkIndex === chunkCount - 1;\n      result.push(_extends({}, settings, {\n        top: topPosition,\n        left: isTailChunk ? tailChunkLeftPosition : leftPosition,\n        height: geometry.height,\n        width: isTailChunk ? tailChunkWidth : weekWidth,\n        appointmentReduced: isTailChunk ? \"tail\" : \"body\",\n        rowIndex: ++settings.rowIndex,\n        columnIndex: 0\n      }));\n    }\n\n    return result;\n  }\n\n  _calculateMultiWeekAppointmentLeftOffset(max, width) {\n    return this.rtlEnabled ? max : max - width;\n  }\n\n  getGroupWidth(groupIndex) {\n    return getGroupWidth(groupIndex, this.viewDataProvider, {\n      intervalCount: this.options.intervalCount,\n      currentDate: this.options.currentDate,\n      viewType: this.options.viewType,\n      hoursInterval: this.options.hoursInterval,\n      startDayHour: this.options.startDayHour,\n      endDayHour: this.options.endDayHour,\n      isVirtualScrolling: this.isVirtualScrolling,\n      rtlEnabled: this.rtlEnabled,\n      DOMMetaData: this.DOMMetaData\n    });\n  }\n\n  _getAppointmentDefaultHeight() {\n    return this._getAppointmentHeightByTheme();\n  }\n\n  _getAppointmentMinHeight() {\n    return this._getAppointmentDefaultHeight();\n  }\n\n  _columnCondition(a, b) {\n    var conditions = this._getConditions(a, b);\n\n    return conditions.rowCondition || conditions.columnCondition || conditions.cellPositionCondition;\n  }\n\n  createTaskPositionMap(items) {\n    return super.createTaskPositionMap(items, true);\n  }\n\n  _getSortedPositions(map) {\n    return super._getSortedPositions(map, true);\n  }\n\n  _getDefaultRatio() {\n    return MONTH_APPOINTMENT_HEIGHT_RATIO;\n  }\n\n  _getOffsets() {\n    return {\n      unlimited: MONTH_APPOINTMENT_MIN_OFFSET,\n      auto: MONTH_APPOINTMENT_MAX_OFFSET\n    };\n  }\n\n  getDropDownAppointmentWidth(intervalCount) {\n    if (this.adaptivityEnabled) {\n      return this.getDropDownButtonAdaptiveSize();\n    }\n\n    var offset = intervalCount > 1 ? MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET : MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET;\n    return this.cellWidth - offset;\n  }\n\n  needCorrectAppointmentDates() {\n    return false;\n  }\n\n  _needVerticalGroupBounds() {\n    return false;\n  }\n\n  _needHorizontalGroupBounds() {\n    return true;\n  }\n\n  getPositionShift(timeShift) {\n    return {\n      cellPosition: timeShift * this.cellWidth,\n      top: 0,\n      left: 0\n    };\n  }\n\n}\n\nexport default HorizontalMonthRenderingStrategy;","map":{"version":3,"names":["_extends","HorizontalMonthLineRenderingStrategy","getGroupWidth","dateUtils","MONTH_APPOINTMENT_HEIGHT_RATIO","MONTH_APPOINTMENT_MIN_OFFSET","MONTH_APPOINTMENT_MAX_OFFSET","MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET","MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET","toMs","dateToMilliseconds","HorizontalMonthRenderingStrategy","endViewDate","options","adaptivityEnabled","DOMMetaData","_getLeftPosition","settings","fullWeekAppointmentWidth","groupIndex","_calculateMultiWeekAppointmentLeftOffset","hMax","_getChunkCount","fullChunksWidth","firstChunkWidth","weekWidth","info","appointment","startDate","rawFullChunksWidth","allChunksCount","Math","ceil","viewRowIndex","_tryGetRowIndexInView","viewChunksCount","viewDataProvider","getRowCountInGroup","allowedChunksCount","positionStartDate","_this$options$dataRan","columnsCount","getColumnsCount","dataRange","length","startViewDate","dateRange","dayDurationMs","timeFromStart","getTime","floor","_getChunkWidths","geometry","reducedWidth","sourceAppointmentWidth","widthWithoutFirstChunk","_getTailChunkSettings","withoutFirstChunkWidth","leftPosition","tailChunkWidth","rtlPosition","tailChunkLeftPosition","rtlEnabled","_getAppointmentParts","result","round","hasTailChunk","endDate","chunkCount","chunkIndex","topPosition","top","cellHeight","isTailChunk","push","left","height","width","appointmentReduced","rowIndex","columnIndex","max","intervalCount","currentDate","viewType","hoursInterval","startDayHour","endDayHour","isVirtualScrolling","_getAppointmentDefaultHeight","_getAppointmentHeightByTheme","_getAppointmentMinHeight","_columnCondition","a","b","conditions","_getConditions","rowCondition","columnCondition","cellPositionCondition","createTaskPositionMap","items","_getSortedPositions","map","_getDefaultRatio","_getOffsets","unlimited","auto","getDropDownAppointmentWidth","getDropDownButtonAdaptiveSize","offset","cellWidth","needCorrectAppointmentDates","_needVerticalGroupBounds","_needHorizontalGroupBounds","getPositionShift","timeShift","cellPosition"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/scheduler/appointments/rendering_strategies/strategy_horizontal_month.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointments/rendering_strategies/strategy_horizontal_month.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport HorizontalMonthLineRenderingStrategy from \"./strategy_horizontal_month_line\";\r\nimport {\r\n    getGroupWidth\r\n} from \"../../workspaces/helpers/positionHelper\";\r\nimport dateUtils from \"../../../../core/utils/date\";\r\nvar MONTH_APPOINTMENT_HEIGHT_RATIO = .6;\r\nvar MONTH_APPOINTMENT_MIN_OFFSET = 26;\r\nvar MONTH_APPOINTMENT_MAX_OFFSET = 30;\r\nvar MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET = 36;\r\nvar MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET = 60;\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass HorizontalMonthRenderingStrategy extends HorizontalMonthLineRenderingStrategy {\r\n    get endViewDate() {\r\n        return this.options.endViewDate\r\n    }\r\n    get adaptivityEnabled() {\r\n        return this.options.adaptivityEnabled\r\n    }\r\n    get DOMMetaData() {\r\n        return this.options.DOMMetaData\r\n    }\r\n    _getLeftPosition(settings) {\r\n        var fullWeekAppointmentWidth = this.getGroupWidth(settings.groupIndex);\r\n        return this._calculateMultiWeekAppointmentLeftOffset(settings.hMax, fullWeekAppointmentWidth)\r\n    }\r\n    _getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings) {\r\n        var {\r\n            groupIndex: groupIndex,\r\n            info: {\r\n                appointment: {\r\n                    startDate: startDate\r\n                }\r\n            }\r\n        } = settings;\r\n        var rawFullChunksWidth = fullChunksWidth - firstChunkWidth + weekWidth;\r\n        var allChunksCount = Math.ceil(rawFullChunksWidth / weekWidth);\r\n        var viewRowIndex = this._tryGetRowIndexInView(startDate);\r\n        if (void 0 !== viewRowIndex) {\r\n            var viewChunksCount = this.viewDataProvider.getRowCountInGroup(groupIndex);\r\n            var allowedChunksCount = viewChunksCount - viewRowIndex;\r\n            return allChunksCount <= allowedChunksCount ? allChunksCount : allowedChunksCount\r\n        }\r\n        return allChunksCount\r\n    }\r\n    _tryGetRowIndexInView(positionStartDate) {\r\n        var _this$options$dataRan;\r\n        var columnsCount = this.viewDataProvider.getColumnsCount();\r\n        if ((null === (_this$options$dataRan = this.options.dataRange) || void 0 === _this$options$dataRan ? void 0 : _this$options$dataRan.length) < 1 || !columnsCount) {\r\n            return\r\n        }\r\n        var [startViewDate] = this.options.dateRange;\r\n        var dayDurationMs = toMs(\"day\");\r\n        var timeFromStart = positionStartDate.getTime() - startViewDate.getTime();\r\n        return Math.floor(timeFromStart / dayDurationMs / columnsCount)\r\n    }\r\n    _getChunkWidths(geometry) {\r\n        var firstChunkWidth = geometry.reducedWidth;\r\n        var fullChunksWidth = Math.floor(geometry.sourceAppointmentWidth);\r\n        var widthWithoutFirstChunk = fullChunksWidth - firstChunkWidth;\r\n        return [firstChunkWidth, fullChunksWidth, widthWithoutFirstChunk]\r\n    }\r\n    _getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition) {\r\n        var tailChunkWidth = withoutFirstChunkWidth % weekWidth || weekWidth;\r\n        var rtlPosition = leftPosition + (weekWidth - tailChunkWidth);\r\n        var tailChunkLeftPosition = this.rtlEnabled ? rtlPosition : leftPosition;\r\n        return [tailChunkWidth, tailChunkLeftPosition]\r\n    }\r\n    _getAppointmentParts(geometry, settings) {\r\n        var result = [];\r\n        var weekWidth = Math.round(this.getGroupWidth(settings.groupIndex));\r\n        var [firstChunkWidth, fullChunksWidth, withoutFirstChunkWidth] = this._getChunkWidths(geometry, settings, weekWidth);\r\n        var leftPosition = this._getLeftPosition(settings);\r\n        var hasTailChunk = this.endViewDate > settings.info.appointment.endDate;\r\n        var chunkCount = this._getChunkCount(fullChunksWidth, firstChunkWidth, weekWidth, settings);\r\n        var [tailChunkWidth, tailChunkLeftPosition] = this._getTailChunkSettings(withoutFirstChunkWidth, weekWidth, leftPosition);\r\n        for (var chunkIndex = 1; chunkIndex < chunkCount; chunkIndex++) {\r\n            var topPosition = settings.top + this.cellHeight * chunkIndex;\r\n            var isTailChunk = hasTailChunk && chunkIndex === chunkCount - 1;\r\n            result.push(_extends({}, settings, {\r\n                top: topPosition,\r\n                left: isTailChunk ? tailChunkLeftPosition : leftPosition,\r\n                height: geometry.height,\r\n                width: isTailChunk ? tailChunkWidth : weekWidth,\r\n                appointmentReduced: isTailChunk ? \"tail\" : \"body\",\r\n                rowIndex: ++settings.rowIndex,\r\n                columnIndex: 0\r\n            }))\r\n        }\r\n        return result\r\n    }\r\n    _calculateMultiWeekAppointmentLeftOffset(max, width) {\r\n        return this.rtlEnabled ? max : max - width\r\n    }\r\n    getGroupWidth(groupIndex) {\r\n        return getGroupWidth(groupIndex, this.viewDataProvider, {\r\n            intervalCount: this.options.intervalCount,\r\n            currentDate: this.options.currentDate,\r\n            viewType: this.options.viewType,\r\n            hoursInterval: this.options.hoursInterval,\r\n            startDayHour: this.options.startDayHour,\r\n            endDayHour: this.options.endDayHour,\r\n            isVirtualScrolling: this.isVirtualScrolling,\r\n            rtlEnabled: this.rtlEnabled,\r\n            DOMMetaData: this.DOMMetaData\r\n        })\r\n    }\r\n    _getAppointmentDefaultHeight() {\r\n        return this._getAppointmentHeightByTheme()\r\n    }\r\n    _getAppointmentMinHeight() {\r\n        return this._getAppointmentDefaultHeight()\r\n    }\r\n    _columnCondition(a, b) {\r\n        var conditions = this._getConditions(a, b);\r\n        return conditions.rowCondition || conditions.columnCondition || conditions.cellPositionCondition\r\n    }\r\n    createTaskPositionMap(items) {\r\n        return super.createTaskPositionMap(items, true)\r\n    }\r\n    _getSortedPositions(map) {\r\n        return super._getSortedPositions(map, true)\r\n    }\r\n    _getDefaultRatio() {\r\n        return MONTH_APPOINTMENT_HEIGHT_RATIO\r\n    }\r\n    _getOffsets() {\r\n        return {\r\n            unlimited: MONTH_APPOINTMENT_MIN_OFFSET,\r\n            auto: MONTH_APPOINTMENT_MAX_OFFSET\r\n        }\r\n    }\r\n    getDropDownAppointmentWidth(intervalCount) {\r\n        if (this.adaptivityEnabled) {\r\n            return this.getDropDownButtonAdaptiveSize()\r\n        }\r\n        var offset = intervalCount > 1 ? MONTH_DROPDOWN_APPOINTMENT_MAX_RIGHT_OFFSET : MONTH_DROPDOWN_APPOINTMENT_MIN_RIGHT_OFFSET;\r\n        return this.cellWidth - offset\r\n    }\r\n    needCorrectAppointmentDates() {\r\n        return false\r\n    }\r\n    _needVerticalGroupBounds() {\r\n        return false\r\n    }\r\n    _needHorizontalGroupBounds() {\r\n        return true\r\n    }\r\n    getPositionShift(timeShift) {\r\n        return {\r\n            cellPosition: timeShift * this.cellWidth,\r\n            top: 0,\r\n            left: 0\r\n        }\r\n    }\r\n}\r\nexport default HorizontalMonthRenderingStrategy;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}