{"ast":null,"code":"/**\r\n * Resize button module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Button } from \"./Button\";\nimport { Sprite } from \"../Sprite\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { registry } from \"../Registry\";\nimport * as $path from \"../rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a draggable resize/grip button.\r\n *\r\n * @see {@link IResizeButtonEvents} for a list of available events\r\n * @see {@link IResizeButtonAdapters} for a list of available Adapters\r\n */\n\nvar ResizeButton =\n/** @class */\nfunction (_super) {\n  __extends(ResizeButton, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ResizeButton() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"ResizeButton\"; // Set defaults\n\n    _this.orientation = \"horizontal\";\n    _this.layout = \"absolute\";\n    _this.horizontalCenter = \"middle\";\n    _this.verticalCenter = \"middle\";\n    _this.draggable = true;\n\n    _this.padding(8, 8, 8, 8);\n\n    _this.background.cornerRadius(20, 20, 20, 20); // Create an icon\n\n\n    var icon = new Sprite();\n    icon.element = _this.paper.add(\"path\");\n    var path = $path.moveTo({\n      x: -2,\n      y: -6\n    });\n    path += $path.lineTo({\n      x: -2,\n      y: 6\n    });\n    path += $path.moveTo({\n      x: 2,\n      y: -6\n    });\n    path += $path.lineTo({\n      x: 2,\n      y: 6\n    });\n    icon.path = path;\n    icon.pixelPerfect = true;\n    icon.padding(0, 4, 0, 4);\n    icon.stroke = new InterfaceColorSet().getFor(\"alternativeText\");\n    icon.strokeOpacity = 0.7; //icon.align = \"center\";\n    //icon.valign = \"middle\";\n\n    _this.icon = icon;\n\n    _this.label.dispose();\n\n    _this.label = undefined; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(ResizeButton.prototype, \"orientation\", {\n    /**\r\n     * Use for setting of direction (orientation) of the resize button.\r\n     *\r\n     * Available options: \"horizontal\", \"vertical\".\r\n     *\r\n     * @param value Orientation\r\n     */\n    set: function (value) {\n      var icon = this.icon;\n\n      if (icon) {\n        if (value == \"horizontal\") {\n          icon.rotation = 0;\n        } else {\n          icon.rotation = -90;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ResizeButton;\n}(Button);\n\nexport { ResizeButton };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ResizeButton\"] = ResizeButton;","map":{"version":3,"names":["__extends","Button","Sprite","InterfaceColorSet","registry","$path","ResizeButton","_super","_this","call","className","orientation","layout","horizontalCenter","verticalCenter","draggable","padding","background","cornerRadius","icon","element","paper","add","path","moveTo","x","y","lineTo","pixelPerfect","stroke","getFor","strokeOpacity","label","dispose","undefined","applyTheme","Object","defineProperty","prototype","set","value","rotation","enumerable","configurable","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/elements/ResizeButton.js"],"sourcesContent":["/**\r\n * Resize button module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Button } from \"./Button\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $path from \"../rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a draggable resize/grip button.\r\n *\r\n * @see {@link IResizeButtonEvents} for a list of available events\r\n * @see {@link IResizeButtonAdapters} for a list of available Adapters\r\n */\r\nvar ResizeButton = /** @class */ (function (_super) {\r\n    __extends(ResizeButton, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ResizeButton() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"ResizeButton\";\r\n        // Set defaults\r\n        _this.orientation = \"horizontal\";\r\n        _this.layout = \"absolute\";\r\n        _this.horizontalCenter = \"middle\";\r\n        _this.verticalCenter = \"middle\";\r\n        _this.draggable = true;\r\n        _this.padding(8, 8, 8, 8);\r\n        _this.background.cornerRadius(20, 20, 20, 20);\r\n        // Create an icon\r\n        var icon = new Sprite();\r\n        icon.element = _this.paper.add(\"path\");\r\n        var path = $path.moveTo({ x: -2, y: -6 });\r\n        path += $path.lineTo({ x: -2, y: 6 });\r\n        path += $path.moveTo({ x: 2, y: -6 });\r\n        path += $path.lineTo({ x: 2, y: 6 });\r\n        icon.path = path;\r\n        icon.pixelPerfect = true;\r\n        icon.padding(0, 4, 0, 4);\r\n        icon.stroke = new InterfaceColorSet().getFor(\"alternativeText\");\r\n        icon.strokeOpacity = 0.7;\r\n        //icon.align = \"center\";\r\n        //icon.valign = \"middle\";\r\n        _this.icon = icon;\r\n        _this.label.dispose();\r\n        _this.label = undefined;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ResizeButton.prototype, \"orientation\", {\r\n        /**\r\n         * Use for setting of direction (orientation) of the resize button.\r\n         *\r\n         * Available options: \"horizontal\", \"vertical\".\r\n         *\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            var icon = this.icon;\r\n            if (icon) {\r\n                if (value == \"horizontal\") {\r\n                    icon.rotation = 0;\r\n                }\r\n                else {\r\n                    icon.rotation = -90;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ResizeButton;\r\n}(Button));\r\nexport { ResizeButton };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ResizeButton\"] = ResizeButton;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,mBAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAChDP,SAAS,CAACM,YAAD,EAAeC,MAAf,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,YAAT,GAAwB;IACpB,IAAIE,KAAK,GACT;IACAD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACE,SAAN,GAAkB,cAAlB,CAJoB,CAKpB;;IACAF,KAAK,CAACG,WAAN,GAAoB,YAApB;IACAH,KAAK,CAACI,MAAN,GAAe,UAAf;IACAJ,KAAK,CAACK,gBAAN,GAAyB,QAAzB;IACAL,KAAK,CAACM,cAAN,GAAuB,QAAvB;IACAN,KAAK,CAACO,SAAN,GAAkB,IAAlB;;IACAP,KAAK,CAACQ,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB;;IACAR,KAAK,CAACS,UAAN,CAAiBC,YAAjB,CAA8B,EAA9B,EAAkC,EAAlC,EAAsC,EAAtC,EAA0C,EAA1C,EAZoB,CAapB;;;IACA,IAAIC,IAAI,GAAG,IAAIjB,MAAJ,EAAX;IACAiB,IAAI,CAACC,OAAL,GAAeZ,KAAK,CAACa,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CAAf;IACA,IAAIC,IAAI,GAAGlB,KAAK,CAACmB,MAAN,CAAa;MAAEC,CAAC,EAAE,CAAC,CAAN;MAASC,CAAC,EAAE,CAAC;IAAb,CAAb,CAAX;IACAH,IAAI,IAAIlB,KAAK,CAACsB,MAAN,CAAa;MAAEF,CAAC,EAAE,CAAC,CAAN;MAASC,CAAC,EAAE;IAAZ,CAAb,CAAR;IACAH,IAAI,IAAIlB,KAAK,CAACmB,MAAN,CAAa;MAAEC,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE,CAAC;IAAZ,CAAb,CAAR;IACAH,IAAI,IAAIlB,KAAK,CAACsB,MAAN,CAAa;MAAEF,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE;IAAX,CAAb,CAAR;IACAP,IAAI,CAACI,IAAL,GAAYA,IAAZ;IACAJ,IAAI,CAACS,YAAL,GAAoB,IAApB;IACAT,IAAI,CAACH,OAAL,CAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB;IACAG,IAAI,CAACU,MAAL,GAAc,IAAI1B,iBAAJ,GAAwB2B,MAAxB,CAA+B,iBAA/B,CAAd;IACAX,IAAI,CAACY,aAAL,GAAqB,GAArB,CAxBoB,CAyBpB;IACA;;IACAvB,KAAK,CAACW,IAAN,GAAaA,IAAb;;IACAX,KAAK,CAACwB,KAAN,CAAYC,OAAZ;;IACAzB,KAAK,CAACwB,KAAN,GAAcE,SAAd,CA7BoB,CA8BpB;;IACA1B,KAAK,CAAC2B,UAAN;;IACA,OAAO3B,KAAP;EACH;;EACD4B,MAAM,CAACC,cAAP,CAAsB/B,YAAY,CAACgC,SAAnC,EAA8C,aAA9C,EAA6D;IACzD;AACR;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,IAAIrB,IAAI,GAAG,KAAKA,IAAhB;;MACA,IAAIA,IAAJ,EAAU;QACN,IAAIqB,KAAK,IAAI,YAAb,EAA2B;UACvBrB,IAAI,CAACsB,QAAL,GAAgB,CAAhB;QACH,CAFD,MAGK;UACDtB,IAAI,CAACsB,QAAL,GAAgB,CAAC,EAAjB;QACH;MACJ;IACJ,CAlBwD;IAmBzDC,UAAU,EAAE,IAnB6C;IAoBzDC,YAAY,EAAE;EApB2C,CAA7D;EAsBA,OAAOrC,YAAP;AACH,CA9DiC,CA8DhCL,MA9DgC,CAAlC;;AA+DA,SAASK,YAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,QAAQ,CAACwC,iBAAT,CAA2B,cAA3B,IAA6CtC,YAA7C"},"metadata":{},"sourceType":"module"}