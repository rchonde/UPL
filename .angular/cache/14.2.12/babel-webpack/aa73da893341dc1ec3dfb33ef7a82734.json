{"ast":null,"code":"/**\r\n * Legend-related functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Component } from \"../core/Component\";\nimport { DataItem } from \"../core/DataItem\";\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\nimport { Container } from \"../core/Container\";\nimport { Label } from \"../core/elements/Label\";\nimport { keyboard } from \"../core/utils/Keyboard\";\nimport { registry } from \"../core/Registry\";\nimport { getInteraction } from \"../core/interaction/Interaction\";\nimport { percent, Percent } from \"../core/utils/Percent\";\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\nimport * as $utils from \"../core/utils/Utils\";\nimport * as $type from \"../core/utils/Type\";\nimport * as $math from \"../core/utils/Math\";\nimport { Sprite } from \"../core/Sprite\";\nimport { Disposer } from \"../core/utils/Disposer\";\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar LegendDataItem =\n/** @class */\nfunction (_super) {\n  __extends(LegendDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function LegendDataItem() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * @ignore\r\n     */\n\n\n    _this.childrenCreated = false;\n    _this.className = \"LegendDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(LegendDataItem.prototype, \"label\", {\n    /**\r\n     * A legend item's [[Label]] element.\r\n     *\r\n     * @return Label\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._label) {\n        var label_1 = this.component.labels.create();\n        this._label = label_1;\n        this.addSprite(label_1);\n\n        this._disposers.push(label_1);\n\n        label_1.parent = this.itemContainer;\n\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.labels.removeValue(label_1);\n          }\n        }));\n      }\n\n      return this._label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"color\", {\n    /**\r\n     * @return Main color\r\n     */\n    get: function () {\n      return this.properties.color;\n    },\n\n    /**\r\n     * Main color of legend data item.\r\n     *\r\n     * This is set by the target element this legend item represents, like\r\n     * a Series or a Slice.\r\n     *\r\n     * It can be used to derive a color in legend's sub-items, like label:\r\n     *\r\n     * ```TypeScript\r\n     * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"legend\": {\r\n     *     // ...\r\n     *     \"labels\": {\r\n     *       \"text\": \"[{color}]{name}[/]\"\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n     * @param value  Main color\r\n     */\n    set: function (value) {\n      this.setProperty(\"color\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"valueLabel\", {\n    /**\r\n     * A legend item's [[Label]] element for \"value label\".\r\n     *\r\n     * @return Label\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._valueLabel) {\n        var valueLabel_1 = this.component.valueLabels.create();\n        this._valueLabel = valueLabel_1;\n        this.addSprite(valueLabel_1);\n\n        this._disposers.push(valueLabel_1);\n\n        valueLabel_1.parent = this.itemContainer;\n\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.valueLabels.removeValue(valueLabel_1);\n          }\n        }));\n      }\n\n      return this._valueLabel;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"itemContainer\", {\n    /**\r\n     * A reference to the main [[Container]] that holds legend item's elements:\r\n     * marker and labels.\r\n     *\r\n     * @return Item container\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._itemContainer) {\n        var component_1 = this.component;\n        var itemContainer_1 = component_1.itemContainers.create();\n        itemContainer_1.parent = component_1;\n        this._itemContainer = itemContainer_1;\n        this.addSprite(itemContainer_1);\n\n        this._disposers.push(itemContainer_1); // Add click/tap event to toggle item\n\n\n        if (itemContainer_1.togglable) {\n          itemContainer_1.events.on(\"toggled\", function (ev) {\n            component_1.toggleDataItem(ev.target.dataItem);\n          }, undefined, false);\n        } // Add focus event so that we can track which object is currently in focus\n        // for keyboard toggling\n\n\n        if (itemContainer_1.focusable) {\n          itemContainer_1.events.on(\"hit\", function (ev) {\n            // We need this here in order to reset focused item when it is clicked\n            // normally so that it is not toggled by ENTER afterwards\n            component_1.focusedItem = undefined;\n          }, undefined, false);\n          itemContainer_1.events.on(\"focus\", function (ev) {\n            component_1.focusedItem = ev.target.dataItem;\n          }, undefined, false);\n          itemContainer_1.events.on(\"blur\", function (ev) {\n            component_1.focusedItem = undefined;\n          }, undefined, false);\n        }\n\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.itemContainers.removeValue(itemContainer_1);\n          }\n        }));\n\n        if (this.dataContext.uidAttr) {\n          itemContainer_1.readerControls = this.dataContext.uidAttr();\n          itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();\n        }\n\n        var sprite = this.dataContext;\n\n        if ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\n          var visibilitychanged = function (ev) {\n            itemContainer_1.readerChecked = ev.visible;\n            itemContainer_1.events.disableType(\"toggled\");\n            itemContainer_1.isActive = !ev.visible;\n            itemContainer_1.events.enableType(\"toggled\");\n          };\n\n          sprite.addDisposer(new Disposer(function () {\n            if (_this.component) {\n              _this.component.dataItems.remove(_this);\n            }\n          }));\n\n          if (sprite instanceof Sprite) {\n            itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\n            itemContainer_1.addDisposer(sprite.events.on(\"hidden\", function (ev) {\n              itemContainer_1.readerChecked = false;\n              itemContainer_1.events.disableType(\"toggled\");\n              itemContainer_1.isActive = true;\n              itemContainer_1.events.enableType(\"toggled\");\n            }, undefined, false));\n            itemContainer_1.addDisposer(sprite.events.on(\"shown\", function (ev) {\n              itemContainer_1.readerChecked = true;\n              itemContainer_1.events.disableType(\"toggled\");\n              itemContainer_1.isActive = false;\n              itemContainer_1.events.enableType(\"toggled\");\n            }, undefined, false));\n          } else {\n            itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\n          }\n        }\n      }\n\n      return this._itemContainer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LegendDataItem.prototype, \"marker\", {\n    /**\r\n     * A [[Container]] that holds legend item's marker element.\r\n     *\r\n     * @return Marker\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._marker) {\n        var marker_1 = this.component.markers.create();\n        this._marker = marker_1;\n        marker_1.parent = this.itemContainer;\n        this.addSprite(marker_1);\n\n        this._disposers.push(marker_1);\n\n        this._disposers.push(new Disposer(function () {\n          if ($type.hasValue(_this.component)) {\n            _this.component.markers.removeValue(marker_1);\n          }\n        }));\n      }\n\n      return this._marker;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return LegendDataItem;\n}(DataItem);\n\nexport { LegendDataItem };\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\n\nvar LegendSettings =\n/** @class */\nfunction () {\n  function LegendSettings() {\n    /**\r\n     * Should marker be created for each legend item.\r\n     */\n    this.createMarker = true;\n  }\n\n  return LegendSettings;\n}();\n\nexport { LegendSettings };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Legend() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Legend\"; // Set defaults\n\n    _this.layout = \"grid\";\n\n    _this.setPropertyValue(\"useDefaultMarker\", false);\n\n    _this.setPropertyValue(\"scrollable\", false);\n\n    _this.setPropertyValue(\"contentAlign\", \"center\"); // Create a template container and list for legend items\n\n\n    var itemContainer = new Container();\n    itemContainer.applyOnClones = true;\n    itemContainer.padding(8, 0, 8, 0);\n    itemContainer.margin(0, 10, 0, 10);\n    itemContainer.layout = \"horizontal\";\n    itemContainer.clickable = true;\n    itemContainer.focusable = true;\n    itemContainer.role = \"switch\";\n    itemContainer.togglable = true;\n    itemContainer.cursorOverStyle = MouseCursorStyle.pointer;\n    itemContainer.background.fillOpacity = 0; // creates hit area\n    // Create container list using item template we just created\n\n    _this.itemContainers = new ListTemplate(itemContainer);\n\n    _this._disposers.push(new ListDisposer(_this.itemContainers));\n\n    _this._disposers.push(_this.itemContainers.template); // Set up global keyboard events for toggling elements\n\n\n    _this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\n      if (keyboard.isKey(ev.event, \"enter\") && _this.focusedItem) {\n        var focusedItem = _this.focusedItem;\n        var target = focusedItem.itemContainer;\n\n        if (target.togglable) {\n          _this.toggleDataItem(focusedItem);\n        } else if (target.clickable && target.events.isEnabled(\"hit\")) {\n          target.dispatchImmediately(\"hit\", {\n            event: ev\n          }); // We need this here because \"hit\" event resets `this.focusedItem`\n          // And we need it here\n\n          _this.focusedItem = focusedItem;\n        }\n      }\n    }, _this));\n\n    var interfaceColors = new InterfaceColorSet(); // Create a template container and list for the a marker\n\n    var marker = new Container();\n    marker.width = 23;\n    marker.height = 23;\n    marker.interactionsEnabled = false;\n    marker.applyOnClones = true;\n    marker.setStateOnChildren = true;\n    marker.background.fillOpacity = 0;\n    marker.background.strokeOpacity = 0;\n    marker.propertyFields.fill = \"fill\";\n    marker.valign = \"middle\";\n    var disabledColor = interfaceColors.getFor(\"disabledBackground\");\n    marker.events.on(\"childadded\", function (event) {\n      var child = event.newValue;\n      var activeState = child.states.create(\"active\");\n      activeState.properties.stroke = disabledColor;\n      activeState.properties.fill = disabledColor;\n    });\n    _this.markers = new ListTemplate(marker);\n\n    _this._disposers.push(new ListDisposer(_this.markers));\n\n    _this._disposers.push(_this.markers.template); // Create a legend background element\n\n\n    var rectangle = marker.createChild(RoundedRectangle);\n    rectangle.width = percent(100);\n    rectangle.height = percent(100);\n    rectangle.applyOnClones = true;\n    rectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\n\n    rectangle.strokeOpacity = 0; // Create a template container and list for item labels\n\n    var label = new Label();\n    label.text = \"{name}\";\n    label.margin(0, 5, 0, 5);\n    label.valign = \"middle\";\n    label.applyOnClones = true;\n    label.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\n    _this.labels = new ListTemplate(label);\n\n    _this._disposers.push(new ListDisposer(_this.labels));\n\n    _this._disposers.push(_this.labels.template);\n\n    label.interactionsEnabled = false;\n    label.truncate = true;\n    label.fullWords = false; // Create a template container and list for item value labels\n\n    var valueLabel = new Label();\n    valueLabel.margin(0, 5, 0, 0);\n    valueLabel.valign = \"middle\";\n    valueLabel.width = 50; // to avoid rearranging legend entries when value changes.\n\n    valueLabel.align = \"right\";\n    valueLabel.textAlign = \"end\";\n    valueLabel.applyOnClones = true;\n    valueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\n    valueLabel.interactionsEnabled = false;\n    _this.valueLabels = new ListTemplate(valueLabel);\n\n    _this._disposers.push(new ListDisposer(_this.valueLabels));\n\n    _this._disposers.push(_this.valueLabels.template);\n\n    _this.position = \"bottom\"; // don't use setPropertyValue here!\n    // Create a state for disabled legend items\n\n    itemContainer.states.create(\"active\");\n    itemContainer.setStateOnChildren = true; // Apply accessibility settings\n\n    _this.role = \"group\";\n\n    _this.events.on(\"layoutvalidated\", _this.handleScrollbar, _this, false);\n\n    _this.events.on(\"parentset\", function () {\n      var parent = _this.parent;\n\n      if (parent) {\n        _this._disposers.push(parent.events.on(\"maxsizechanged\", function () {\n          if (_this.scrollable) {\n            _this.setTimeout(function () {\n              _this.updateMasks();\n\n              _this.handleScrollbar();\n\n              _this._handleWheelReal(1);\n            }, 100);\n          }\n        }));\n      }\n    });\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  Legend.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Legend\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  Legend.prototype.createDataItem = function () {\n    return new LegendDataItem();\n  };\n  /**\r\n   * [validateDataElements description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n\n\n  Legend.prototype.validateDataElements = function () {\n    if (this.scrollbar) {\n      this.scrollbar.start = 0;\n      this.scrollbar.end = 1;\n    }\n\n    _super.prototype.validateDataElements.call(this);\n  };\n  /**\r\n   * [validateDataElement description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem Data item\r\n   * @todo Description\r\n   * @todo Figure out how to update appearance of legend item without losing focus\r\n   * @todo Update legend marker appearance as apperance of related series changes\r\n   */\n\n\n  Legend.prototype.validateDataElement = function (dataItem) {\n    _super.prototype.validateDataElement.call(this, dataItem); // Get data item (legend item's) container\n\n\n    var container = dataItem.itemContainer;\n    var marker = dataItem.marker;\n    $utils.used(dataItem.label);\n    var valueLabel = dataItem.valueLabel; // Set parent and update current state\n\n    container.readerChecked = dataItem.dataContext.visible; // Tell series its legend data item\n\n    dataItem.dataContext.legendDataItem = dataItem;\n    var tempMaxWidth = dataItem.label.maxWidth;\n\n    if (!(dataItem.label.width instanceof Percent)) {\n      dataItem.label.width = undefined;\n    }\n\n    if (tempMaxWidth > 0) {\n      dataItem.label.maxWidth = tempMaxWidth;\n    }\n\n    if (valueLabel.align == \"right\") {\n      valueLabel.width = undefined;\n    }\n\n    var legendSettings = dataItem.dataContext.legendSettings; // If we are not using default markers, create a unique legend marker based\n    // on the data item type\n\n    var dataContext = dataItem.dataContext;\n\n    if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\n      if (!dataItem.childrenCreated) {\n        dataContext.createLegendMarker(marker);\n        dataItem.childrenCreated = true;\n      }\n    } else {\n      this.markers.template.propertyFields.fill = undefined;\n    }\n\n    if (dataContext.updateLegendValue) {\n      dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\n    }\n\n    if (dataContext.component && dataContext.component.updateLegendValue) {\n      dataContext.component.updateLegendValue(dataContext);\n    }\n\n    if (valueLabel.invalid) {\n      valueLabel.validate();\n    }\n\n    if (valueLabel.text == \"\" || valueLabel.text == undefined) {\n      valueLabel.__disabled = true;\n    } else {\n      valueLabel.__disabled = false;\n    }\n\n    if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\n      valueLabel.__disabled = false;\n    }\n\n    var visible = dataItem.dataContext.visible;\n\n    if (visible === undefined) {\n      visible = true;\n    }\n\n    visible = $type.toBoolean(visible);\n    dataItem.dataContext.visible = visible;\n    container.events.disableType(\"toggled\");\n    container.isActive = !visible;\n\n    if (container.isActive) {\n      container.setState(\"active\", 0);\n    } else {\n      container.setState(\"default\", 0);\n    }\n\n    container.events.enableType(\"toggled\");\n  };\n\n  Legend.prototype.afterDraw = function () {\n    var _this = this;\n\n    var maxWidth = this.getPropertyValue(\"maxWidth\");\n    var maxLabelWidth = 0;\n    this.labels.each(function (label) {\n      if (label.invalid) {\n        label.maxWidth = undefined;\n        label.validate();\n      }\n\n      if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\n        maxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\n      }\n    });\n    var maxValueLabelWidth = 0;\n    this.valueLabels.each(function (label) {\n      if (label.invalid) {\n        label.validate();\n      }\n\n      if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\n        maxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\n      }\n    });\n    var maxMarkerWidth = 0;\n    this.markers.each(function (marker) {\n      if (marker.invalid) {\n        marker.validate();\n      }\n\n      if (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\n        maxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\n      }\n    });\n    var itemContainer = this.itemContainers.template;\n    var margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\n    var maxAdjustedLabelWidth;\n    var trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\n\n    if (!$type.isNumber(maxWidth)) {\n      maxAdjustedLabelWidth = maxLabelWidth;\n    } else {\n      maxWidth = maxWidth - margin;\n\n      if (maxWidth > trueMaxWidth) {\n        maxWidth = trueMaxWidth;\n      }\n\n      maxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\n    }\n\n    this.labels.each(function (label) {\n      if (_this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\n        if (!(label.width instanceof Percent)) {\n          label.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\n          label.maxWidth = label.width;\n        }\n      }\n    });\n\n    if (this.valueLabels.template.align == \"right\") {\n      this.valueLabels.each(function (valueLabel) {\n        valueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\n      });\n    }\n\n    _super.prototype.afterDraw.call(this);\n  };\n\n  Legend.prototype.handleScrollbar = function () {\n    var scrollbar = this.scrollbar;\n\n    if (this.scrollable && scrollbar) {\n      var measuredHeight = this.maxHeight;\n      scrollbar.height = measuredHeight;\n      scrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\n\n      if (this.contentHeight > measuredHeight) {\n        scrollbar.visible = true;\n        scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\n        this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\n      } else {\n        scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\n        this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\n        scrollbar.visible = false;\n        scrollbar.start = 0;\n        scrollbar.end = 1;\n      }\n\n      scrollbar.handleThumbPosition();\n      this.updateMasks();\n    }\n  };\n\n  Object.defineProperty(Legend.prototype, \"position\", {\n    /**\r\n     * @return Position\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"position\");\n    },\n\n    /**\r\n     * Position of the legend.\r\n     *\r\n     * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n     *\r\n     * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n     * layout structure than other charts.\r\n     *\r\n     * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n     * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n     *\r\n     * @default \"bottom\"\r\n     * @param value  Position\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"position\", value)) {\n        if (value == \"left\" || value == \"right\") {\n          this.margin(10, 5, 10, 10);\n          this.valign = \"middle\";\n          this.contentAlign = \"none\";\n          this.valueLabels.template.align = \"right\";\n\n          if (!$type.isNumber(this.maxColumns)) {\n            this.maxColumns = 1;\n          }\n\n          this.width = undefined;\n          this.maxWidth = 220;\n        } else {\n          this.maxColumns = undefined;\n          this.width = percent(100);\n          this.valueLabels.template.align = \"left\";\n        }\n\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Legend.prototype, \"useDefaultMarker\", {\n    /**\r\n     * @return Use default marker?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"useDefaultMarker\");\n    },\n\n    /**\r\n     * Should legend try to mirror the look of the related item when building\r\n     * the marker for legend item?\r\n     *\r\n     * If set to `false` it will try to make the marker look like its related\r\n     * item.\r\n     *\r\n     * E.g. if an item is for a Line Series, it will display a line of the\r\n     * same thickness, color, and will use the same bullets if series have them.\r\n     *\r\n     * If set to `true`, all markers will be shown as squares, regardless of te\r\n     * series type.\r\n     *\r\n     * @default false\r\n     * @param value Use default marker?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"useDefaultMarker\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Legend.prototype, \"scrollable\", {\n    /**\r\n     * @return Legend Scrollable?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"scrollable\");\n    },\n\n    /**\r\n     * If set to `true` the Legend will display a scrollbar if its contents do\r\n     * not fit into its `maxHeight`.\r\n     *\r\n     * Please note that `maxHeight` is automatically set for Legend when its\r\n     * `position` is set to `\"left\"` or `\"right\"`.\r\n     *\r\n     * @default false\r\n     * @since 4.8.0\r\n     * @param  value  Legend Scrollable?\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"scrollable\", value, true)) {\n        if (value) {\n          var scrollbar = this.createChild(Scrollbar);\n          this.scrollbar = scrollbar;\n          scrollbar.isMeasured = false;\n          scrollbar.orientation = \"vertical\";\n          scrollbar.endGrip.__disabled = true;\n          scrollbar.startGrip.__disabled = true;\n          scrollbar.visible = false;\n          scrollbar.marginLeft = 5;\n          this._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\n\n          this._disposers.push(this._mouseWheelDisposer);\n\n          this._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\n        } else {\n          if (this._mouseWheelDisposer) {\n            this._mouseWheelDisposer.dispose();\n\n            if (this.scrollbar) {\n              this.scrollbar.dispose();\n              this.scrollbar = undefined;\n            }\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Handles mouse wheel scrolling of legend.\r\n   *\r\n   * @param  event  Event\r\n   */\n\n  Legend.prototype.handleWheel = function (event) {\n    this._handleWheelReal(event.shift.y);\n  };\n\n  Legend.prototype._handleWheelReal = function (shift) {\n    var scrollbar = this.scrollbar;\n\n    if (scrollbar) {\n      var ds = shift / 1000 * this.measuredHeight / this.contentHeight;\n      var delta = scrollbar.end - scrollbar.start;\n\n      if (shift > 0) {\n        scrollbar.start = $math.max(0, scrollbar.start - ds);\n        scrollbar.end = scrollbar.start + delta;\n      } else {\n        scrollbar.end = $math.min(1, scrollbar.end - ds);\n        scrollbar.start = scrollbar.end - delta;\n      }\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  Legend.prototype.updateMasks = function () {\n    var _this = this;\n\n    if (this.scrollbar) {\n      this.itemContainers.each(function (itemContainer) {\n        itemContainer.dy = -_this.scrollbar.thumb.pixelY * _this.contentHeight / _this.maxHeight;\n        itemContainer.maskRectangle = {\n          x: 0,\n          y: -itemContainer.dy,\n          width: _this.measuredWidth,\n          height: _this.maxHeight\n        };\n      });\n    }\n\n    this.invalidatePosition();\n  };\n  /**\r\n   * Toggles a legend item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item Legend item\r\n   * @todo Maybe do it with togglable instead\r\n   */\n\n\n  Legend.prototype.toggleDataItem = function (item) {\n    var dataContext = item.dataContext;\n\n    if (!dataContext.visible || dataContext.isHiding || dataContext instanceof Sprite && dataContext.isHidden) {\n      item.color = item.colorOrig;\n      dataContext.appeared = true;\n      item.itemContainer.isActive = false;\n\n      if (dataContext.hidden === true) {\n        dataContext.hidden = false;\n      }\n\n      if (dataContext.show) {\n        dataContext.show();\n      } else {\n        dataContext.visible = true;\n      }\n\n      this.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\n    } else {\n      item.itemContainer.isActive = true;\n      dataContext.appeared = true;\n\n      if (dataContext.hide) {\n        dataContext.hide();\n      } else {\n        dataContext.visible = false;\n      }\n\n      this.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\n      item.color = new InterfaceColorSet().getFor(\"disabledBackground\");\n    }\n  };\n\n  Object.defineProperty(Legend.prototype, \"preloader\", {\n    /**\r\n     * Override preloader method so that legend does not accidentally show its\r\n     * own preloader.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Always `undefined`\r\n     */\n    get: function () {\n      return;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * [handleDataItemPropertyChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {\n    dataItem.valueLabel.invalidate();\n    dataItem.label.invalidate();\n  };\n\n  return Legend;\n}(Component);\n\nexport { Legend };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Legend\"] = Legend;\n/**\r\n * Add default responsive rules\r\n */\n\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.widthXS,\n  state: function (target, stateId) {\n    if (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\n      var state = target.states.create(stateId);\n      state.properties.position = \"bottom\";\n      return state;\n    }\n\n    return null;\n  }\n});\n/**\r\n * Move legend to the right if chart is very short\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.heightXS,\n  state: function (target, stateId) {\n    if (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\n      var state = target.states.create(stateId);\n      state.properties.position = \"right\";\n      return state;\n    }\n\n    return null;\n  }\n});\n/**\r\n * Disable legend altogether on small charts\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.isXS,\n  state: function (target, stateId) {\n    if (target instanceof Legend) {\n      var state = target.states.create(stateId);\n      state.properties.disabled = true;\n      return state;\n    }\n\n    return null;\n  }\n});","map":{"version":3,"names":["__extends","Component","DataItem","ListTemplate","ListDisposer","RoundedRectangle","Container","Label","keyboard","registry","getInteraction","percent","Percent","InterfaceColorSet","$utils","$type","$math","Sprite","Disposer","MouseCursorStyle","defaultRules","ResponsiveBreakpoints","Scrollbar","LegendDataItem","_super","_this","call","childrenCreated","className","applyTheme","Object","defineProperty","prototype","get","_label","label_1","component","labels","create","addSprite","_disposers","push","parent","itemContainer","hasValue","removeValue","enumerable","configurable","properties","color","set","value","setProperty","_valueLabel","valueLabel_1","valueLabels","_itemContainer","component_1","itemContainer_1","itemContainers","togglable","events","on","ev","toggleDataItem","target","dataItem","undefined","focusable","focusedItem","dataContext","uidAttr","readerControls","readerLabelledBy","sprite","isDisposed","visibilitychanged","readerChecked","visible","disableType","isActive","enableType","addDisposer","dataItems","remove","_marker","marker_1","markers","LegendSettings","createMarker","Legend","layout","setPropertyValue","applyOnClones","padding","margin","clickable","role","cursorOverStyle","pointer","background","fillOpacity","template","body","isKey","event","isEnabled","dispatchImmediately","interfaceColors","marker","width","height","interactionsEnabled","setStateOnChildren","strokeOpacity","propertyFields","fill","valign","disabledColor","getFor","child","newValue","activeState","states","stroke","rectangle","createChild","label","text","truncate","fullWords","valueLabel","align","textAlign","position","handleScrollbar","scrollable","setTimeout","updateMasks","_handleWheelReal","applyInternalDefaults","readerTitle","language","translate","createDataItem","validateDataElements","scrollbar","start","end","validateDataElement","container","used","legendDataItem","tempMaxWidth","maxWidth","legendSettings","createLegendMarker","useDefaultMarker","updateLegendValue","invalid","validate","__disabled","itemValueText","valueText","toBoolean","setState","afterDraw","getPropertyValue","maxLabelWidth","each","measuredWidth","pixelMarginLeft","pixelMarginRight","maxValueLabelWidth","maxMarkerWidth","maxAdjustedLabelWidth","trueMaxWidth","isNumber","Math","min","measuredHeight","maxHeight","x","pixelWidth","contentHeight","thumb","paddingRight","handleThumbPosition","contentAlign","maxColumns","invalidate","isMeasured","orientation","endGrip","startGrip","marginLeft","_mouseWheelDisposer","handleWheel","dispose","shift","y","ds","delta","max","dy","pixelY","maskRectangle","invalidatePosition","item","isHiding","isHidden","colorOrig","appeared","hidden","show","svgContainer","readerAlert","locale","hide","handleDataItemPropertyChange","name","registeredClasses","relevant","widthXS","state","stateId","heightXS","isXS","disabled"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/Legend.js"],"sourcesContent":["/**\r\n * Legend-related functionality.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../core/Component\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { RoundedRectangle } from \"../core/elements/RoundedRectangle\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { keyboard } from \"../core/utils/Keyboard\";\r\nimport { registry } from \"../core/Registry\";\r\nimport { getInteraction } from \"../core/interaction/Interaction\";\r\nimport { percent, Percent } from \"../core/utils/Percent\";\r\nimport { InterfaceColorSet } from \"../core/utils/InterfaceColorSet\";\r\nimport * as $utils from \"../core/utils/Utils\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport * as $math from \"../core/utils/Math\";\r\nimport { Sprite } from \"../core/Sprite\";\r\nimport { Disposer } from \"../core/utils/Disposer\";\r\nimport { MouseCursorStyle } from \"../core/interaction/Mouse\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\nimport { Scrollbar } from \"../core/elements/Scrollbar\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Legend]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar LegendDataItem = /** @class */ (function (_super) {\r\n    __extends(LegendDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LegendDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.childrenCreated = false;\r\n        _this.className = \"LegendDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(LegendDataItem.prototype, \"label\", {\r\n        /**\r\n         * A legend item's [[Label]] element.\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this._label = label_1;\r\n                this.addSprite(label_1);\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"color\", {\r\n        /**\r\n         * @return Main color\r\n         */\r\n        get: function () {\r\n            return this.properties.color;\r\n        },\r\n        /**\r\n         * Main color of legend data item.\r\n         *\r\n         * This is set by the target element this legend item represents, like\r\n         * a Series or a Slice.\r\n         *\r\n         * It can be used to derive a color in legend's sub-items, like label:\r\n         *\r\n         * ```TypeScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.legend.labels.template.text = \"[{color}]{name}[/]\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"legend\": {\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"text\": \"[{color}]{name}[/]\"\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.\r\n         * @param value  Main color\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"color\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"valueLabel\", {\r\n        /**\r\n         * A legend item's [[Label]] element for \"value label\".\r\n         *\r\n         * @return Label\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._valueLabel) {\r\n                var valueLabel_1 = this.component.valueLabels.create();\r\n                this._valueLabel = valueLabel_1;\r\n                this.addSprite(valueLabel_1);\r\n                this._disposers.push(valueLabel_1);\r\n                valueLabel_1.parent = this.itemContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.valueLabels.removeValue(valueLabel_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._valueLabel;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"itemContainer\", {\r\n        /**\r\n         * A reference to the main [[Container]] that holds legend item's elements:\r\n         * marker and labels.\r\n         *\r\n         * @return Item container\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._itemContainer) {\r\n                var component_1 = this.component;\r\n                var itemContainer_1 = component_1.itemContainers.create();\r\n                itemContainer_1.parent = component_1;\r\n                this._itemContainer = itemContainer_1;\r\n                this.addSprite(itemContainer_1);\r\n                this._disposers.push(itemContainer_1);\r\n                // Add click/tap event to toggle item\r\n                if (itemContainer_1.togglable) {\r\n                    itemContainer_1.events.on(\"toggled\", function (ev) {\r\n                        component_1.toggleDataItem(ev.target.dataItem);\r\n                    }, undefined, false);\r\n                }\r\n                // Add focus event so that we can track which object is currently in focus\r\n                // for keyboard toggling\r\n                if (itemContainer_1.focusable) {\r\n                    itemContainer_1.events.on(\"hit\", function (ev) {\r\n                        // We need this here in order to reset focused item when it is clicked\r\n                        // normally so that it is not toggled by ENTER afterwards\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"focus\", function (ev) {\r\n                        component_1.focusedItem = ev.target.dataItem;\r\n                    }, undefined, false);\r\n                    itemContainer_1.events.on(\"blur\", function (ev) {\r\n                        component_1.focusedItem = undefined;\r\n                    }, undefined, false);\r\n                }\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.itemContainers.removeValue(itemContainer_1);\r\n                    }\r\n                }));\r\n                if (this.dataContext.uidAttr) {\r\n                    itemContainer_1.readerControls = this.dataContext.uidAttr();\r\n                    itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();\r\n                }\r\n                var sprite = this.dataContext;\r\n                if ((sprite instanceof DataItem || sprite instanceof Sprite) && !sprite.isDisposed()) {\r\n                    var visibilitychanged = function (ev) {\r\n                        itemContainer_1.readerChecked = ev.visible;\r\n                        itemContainer_1.events.disableType(\"toggled\");\r\n                        itemContainer_1.isActive = !ev.visible;\r\n                        itemContainer_1.events.enableType(\"toggled\");\r\n                    };\r\n                    sprite.addDisposer(new Disposer(function () {\r\n                        if (_this.component) {\r\n                            _this.component.dataItems.remove(_this);\r\n                        }\r\n                    }));\r\n                    if (sprite instanceof Sprite) {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"hidden\", function (ev) {\r\n                            itemContainer_1.readerChecked = false;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = true;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"shown\", function (ev) {\r\n                            itemContainer_1.readerChecked = true;\r\n                            itemContainer_1.events.disableType(\"toggled\");\r\n                            itemContainer_1.isActive = false;\r\n                            itemContainer_1.events.enableType(\"toggled\");\r\n                        }, undefined, false));\r\n                    }\r\n                    else {\r\n                        itemContainer_1.addDisposer(sprite.events.on(\"visibilitychanged\", visibilitychanged, undefined, false));\r\n                    }\r\n                }\r\n            }\r\n            return this._itemContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LegendDataItem.prototype, \"marker\", {\r\n        /**\r\n         * A [[Container]] that holds legend item's marker element.\r\n         *\r\n         * @return Marker\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._marker) {\r\n                var marker_1 = this.component.markers.create();\r\n                this._marker = marker_1;\r\n                marker_1.parent = this.itemContainer;\r\n                this.addSprite(marker_1);\r\n                this._disposers.push(marker_1);\r\n                this._disposers.push(new Disposer(function () {\r\n                    if ($type.hasValue(_this.component)) {\r\n                        _this.component.markers.removeValue(marker_1);\r\n                    }\r\n                }));\r\n            }\r\n            return this._marker;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LegendDataItem;\r\n}(DataItem));\r\nexport { LegendDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a class that carries legend settings.\r\n *\r\n * A legend might change its settings dynamically. Legend can also be shared\r\n * by several elements, requiring different settings.\r\n *\r\n * Having legend's settings in a separate object is a good way to \"hot swap\"\r\n * a set of settings for the legend.\r\n */\r\nvar LegendSettings = /** @class */ (function () {\r\n    function LegendSettings() {\r\n        /**\r\n         * Should marker be created for each legend item.\r\n         */\r\n        this.createMarker = true;\r\n    }\r\n    return LegendSettings;\r\n}());\r\nexport { LegendSettings };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Legend]] class is used to create legend for the chart.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation\r\n * @see {@link ILegendEvents} for a list of available events\r\n * @see {@link ILegendAdapters} for a list of available Adapters\r\n */\r\nvar Legend = /** @class */ (function (_super) {\r\n    __extends(Legend, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Legend() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Legend\";\r\n        // Set defaults\r\n        _this.layout = \"grid\";\r\n        _this.setPropertyValue(\"useDefaultMarker\", false);\r\n        _this.setPropertyValue(\"scrollable\", false);\r\n        _this.setPropertyValue(\"contentAlign\", \"center\");\r\n        // Create a template container and list for legend items\r\n        var itemContainer = new Container();\r\n        itemContainer.applyOnClones = true;\r\n        itemContainer.padding(8, 0, 8, 0);\r\n        itemContainer.margin(0, 10, 0, 10);\r\n        itemContainer.layout = \"horizontal\";\r\n        itemContainer.clickable = true;\r\n        itemContainer.focusable = true;\r\n        itemContainer.role = \"switch\";\r\n        itemContainer.togglable = true;\r\n        itemContainer.cursorOverStyle = MouseCursorStyle.pointer;\r\n        itemContainer.background.fillOpacity = 0; // creates hit area\r\n        // Create container list using item template we just created\r\n        _this.itemContainers = new ListTemplate(itemContainer);\r\n        _this._disposers.push(new ListDisposer(_this.itemContainers));\r\n        _this._disposers.push(_this.itemContainers.template);\r\n        // Set up global keyboard events for toggling elements\r\n        _this._disposers.push(getInteraction().body.events.on(\"keyup\", function (ev) {\r\n            if (keyboard.isKey(ev.event, \"enter\") && _this.focusedItem) {\r\n                var focusedItem = _this.focusedItem;\r\n                var target = focusedItem.itemContainer;\r\n                if (target.togglable) {\r\n                    _this.toggleDataItem(focusedItem);\r\n                }\r\n                else if (target.clickable && target.events.isEnabled(\"hit\")) {\r\n                    target.dispatchImmediately(\"hit\", { event: ev });\r\n                    // We need this here because \"hit\" event resets `this.focusedItem`\r\n                    // And we need it here\r\n                    _this.focusedItem = focusedItem;\r\n                }\r\n            }\r\n        }, _this));\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create a template container and list for the a marker\r\n        var marker = new Container();\r\n        marker.width = 23;\r\n        marker.height = 23;\r\n        marker.interactionsEnabled = false;\r\n        marker.applyOnClones = true;\r\n        marker.setStateOnChildren = true;\r\n        marker.background.fillOpacity = 0;\r\n        marker.background.strokeOpacity = 0;\r\n        marker.propertyFields.fill = \"fill\";\r\n        marker.valign = \"middle\";\r\n        var disabledColor = interfaceColors.getFor(\"disabledBackground\");\r\n        marker.events.on(\"childadded\", function (event) {\r\n            var child = event.newValue;\r\n            var activeState = child.states.create(\"active\");\r\n            activeState.properties.stroke = disabledColor;\r\n            activeState.properties.fill = disabledColor;\r\n        });\r\n        _this.markers = new ListTemplate(marker);\r\n        _this._disposers.push(new ListDisposer(_this.markers));\r\n        _this._disposers.push(_this.markers.template);\r\n        // Create a legend background element\r\n        var rectangle = marker.createChild(RoundedRectangle);\r\n        rectangle.width = percent(100);\r\n        rectangle.height = percent(100);\r\n        rectangle.applyOnClones = true;\r\n        rectangle.propertyFields.fill = \"fill\"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182\r\n        rectangle.strokeOpacity = 0;\r\n        // Create a template container and list for item labels\r\n        var label = new Label();\r\n        label.text = \"{name}\";\r\n        label.margin(0, 5, 0, 5);\r\n        label.valign = \"middle\";\r\n        label.applyOnClones = true;\r\n        label.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        _this.labels = new ListTemplate(label);\r\n        _this._disposers.push(new ListDisposer(_this.labels));\r\n        _this._disposers.push(_this.labels.template);\r\n        label.interactionsEnabled = false;\r\n        label.truncate = true;\r\n        label.fullWords = false;\r\n        // Create a template container and list for item value labels\r\n        var valueLabel = new Label();\r\n        valueLabel.margin(0, 5, 0, 0);\r\n        valueLabel.valign = \"middle\";\r\n        valueLabel.width = 50; // to avoid rearranging legend entries when value changes.\r\n        valueLabel.align = \"right\";\r\n        valueLabel.textAlign = \"end\";\r\n        valueLabel.applyOnClones = true;\r\n        valueLabel.states.create(\"active\").properties.fill = interfaceColors.getFor(\"disabledBackground\");\r\n        valueLabel.interactionsEnabled = false;\r\n        _this.valueLabels = new ListTemplate(valueLabel);\r\n        _this._disposers.push(new ListDisposer(_this.valueLabels));\r\n        _this._disposers.push(_this.valueLabels.template);\r\n        _this.position = \"bottom\"; // don't use setPropertyValue here!\r\n        // Create a state for disabled legend items\r\n        itemContainer.states.create(\"active\");\r\n        itemContainer.setStateOnChildren = true;\r\n        // Apply accessibility settings\r\n        _this.role = \"group\";\r\n        _this.events.on(\"layoutvalidated\", _this.handleScrollbar, _this, false);\r\n        _this.events.on(\"parentset\", function () {\r\n            var parent = _this.parent;\r\n            if (parent) {\r\n                _this._disposers.push(parent.events.on(\"maxsizechanged\", function () {\r\n                    if (_this.scrollable) {\r\n                        _this.setTimeout(function () {\r\n                            _this.updateMasks();\r\n                            _this.handleScrollbar();\r\n                            _this._handleWheelReal(1);\r\n                        }, 100);\r\n                    }\r\n                }));\r\n            }\r\n        });\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Legend.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Legend\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Legend.prototype.createDataItem = function () {\r\n        return new LegendDataItem();\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Legend.prototype.validateDataElements = function () {\r\n        if (this.scrollbar) {\r\n            this.scrollbar.start = 0;\r\n            this.scrollbar.end = 1;\r\n        }\r\n        _super.prototype.validateDataElements.call(this);\r\n    };\r\n    /**\r\n     * [validateDataElement description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     * @todo Description\r\n     * @todo Figure out how to update appearance of legend item without losing focus\r\n     * @todo Update legend marker appearance as apperance of related series changes\r\n     */\r\n    Legend.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        // Get data item (legend item's) container\r\n        var container = dataItem.itemContainer;\r\n        var marker = dataItem.marker;\r\n        $utils.used(dataItem.label);\r\n        var valueLabel = dataItem.valueLabel;\r\n        // Set parent and update current state\r\n        container.readerChecked = dataItem.dataContext.visible;\r\n        // Tell series its legend data item\r\n        dataItem.dataContext.legendDataItem = dataItem;\r\n        var tempMaxWidth = dataItem.label.maxWidth;\r\n        if (!(dataItem.label.width instanceof Percent)) {\r\n            dataItem.label.width = undefined;\r\n        }\r\n        if (tempMaxWidth > 0) {\r\n            dataItem.label.maxWidth = tempMaxWidth;\r\n        }\r\n        if (valueLabel.align == \"right\") {\r\n            valueLabel.width = undefined;\r\n        }\r\n        var legendSettings = dataItem.dataContext.legendSettings;\r\n        // If we are not using default markers, create a unique legend marker based\r\n        // on the data item type\r\n        var dataContext = dataItem.dataContext;\r\n        if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof Sprite))) {\r\n            if (!dataItem.childrenCreated) {\r\n                dataContext.createLegendMarker(marker);\r\n                dataItem.childrenCreated = true;\r\n            }\r\n        }\r\n        else {\r\n            this.markers.template.propertyFields.fill = undefined;\r\n        }\r\n        if (dataContext.updateLegendValue) {\r\n            dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values\r\n        }\r\n        if (dataContext.component && dataContext.component.updateLegendValue) {\r\n            dataContext.component.updateLegendValue(dataContext);\r\n        }\r\n        if (valueLabel.invalid) {\r\n            valueLabel.validate();\r\n        }\r\n        if (valueLabel.text == \"\" || valueLabel.text == undefined) {\r\n            valueLabel.__disabled = true;\r\n        }\r\n        else {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {\r\n            valueLabel.__disabled = false;\r\n        }\r\n        var visible = dataItem.dataContext.visible;\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        visible = $type.toBoolean(visible);\r\n        dataItem.dataContext.visible = visible;\r\n        container.events.disableType(\"toggled\");\r\n        container.isActive = !visible;\r\n        if (container.isActive) {\r\n            container.setState(\"active\", 0);\r\n        }\r\n        else {\r\n            container.setState(\"default\", 0);\r\n        }\r\n        container.events.enableType(\"toggled\");\r\n    };\r\n    Legend.prototype.afterDraw = function () {\r\n        var _this = this;\r\n        var maxWidth = this.getPropertyValue(\"maxWidth\");\r\n        var maxLabelWidth = 0;\r\n        this.labels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.maxWidth = undefined;\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {\r\n                maxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxValueLabelWidth = 0;\r\n        this.valueLabels.each(function (label) {\r\n            if (label.invalid) {\r\n                label.validate();\r\n            }\r\n            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {\r\n                maxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;\r\n            }\r\n        });\r\n        var maxMarkerWidth = 0;\r\n        this.markers.each(function (marker) {\r\n            if (marker.invalid) {\r\n                marker.validate();\r\n            }\r\n            if (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {\r\n                maxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;\r\n            }\r\n        });\r\n        var itemContainer = this.itemContainers.template;\r\n        var margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;\r\n        var maxAdjustedLabelWidth;\r\n        var trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;\r\n        if (!$type.isNumber(maxWidth)) {\r\n            maxAdjustedLabelWidth = maxLabelWidth;\r\n        }\r\n        else {\r\n            maxWidth = maxWidth - margin;\r\n            if (maxWidth > trueMaxWidth) {\r\n                maxWidth = trueMaxWidth;\r\n            }\r\n            maxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;\r\n        }\r\n        this.labels.each(function (label) {\r\n            if (_this.valueLabels.template.align == \"right\" || label.measuredWidth > maxAdjustedLabelWidth) {\r\n                if (!(label.width instanceof Percent)) {\r\n                    label.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);\r\n                    label.maxWidth = label.width;\r\n                }\r\n            }\r\n        });\r\n        if (this.valueLabels.template.align == \"right\") {\r\n            this.valueLabels.each(function (valueLabel) {\r\n                valueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;\r\n            });\r\n        }\r\n        _super.prototype.afterDraw.call(this);\r\n    };\r\n    Legend.prototype.handleScrollbar = function () {\r\n        var scrollbar = this.scrollbar;\r\n        if (this.scrollable && scrollbar) {\r\n            var measuredHeight = this.maxHeight;\r\n            scrollbar.height = measuredHeight;\r\n            scrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;\r\n            if (this.contentHeight > measuredHeight) {\r\n                scrollbar.visible = true;\r\n                scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n            }\r\n            else {\r\n                scrollbar.thumb.height = scrollbar.height * measuredHeight / this.contentHeight;\r\n                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + scrollbar.pixelMarginRight;\r\n                scrollbar.visible = false;\r\n                scrollbar.start = 0;\r\n                scrollbar.end = 1;\r\n            }\r\n            scrollbar.handleThumbPosition();\r\n            this.updateMasks();\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"position\", {\r\n        /**\r\n         * @return Position\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"position\");\r\n        },\r\n        /**\r\n         * Position of the legend.\r\n         *\r\n         * Options: \"left\", \"right\", \"top\", \"bottom\" (default), or \"absolute\".\r\n         *\r\n         * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different\r\n         * layout structure than other charts.\r\n         *\r\n         * To position legend in [[MapChart]] set legend's `align` (`\"left\"` or\r\n         * `\"right\"`) and `valign` (`\"top\"` or `\"bottom\"`) properties instead.\r\n         *\r\n         * @default \"bottom\"\r\n         * @param value  Position\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"position\", value)) {\r\n                if (value == \"left\" || value == \"right\") {\r\n                    this.margin(10, 5, 10, 10);\r\n                    this.valign = \"middle\";\r\n                    this.contentAlign = \"none\";\r\n                    this.valueLabels.template.align = \"right\";\r\n                    if (!$type.isNumber(this.maxColumns)) {\r\n                        this.maxColumns = 1;\r\n                    }\r\n                    this.width = undefined;\r\n                    this.maxWidth = 220;\r\n                }\r\n                else {\r\n                    this.maxColumns = undefined;\r\n                    this.width = percent(100);\r\n                    this.valueLabels.template.align = \"left\";\r\n                }\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"useDefaultMarker\", {\r\n        /**\r\n         * @return Use default marker?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"useDefaultMarker\");\r\n        },\r\n        /**\r\n         * Should legend try to mirror the look of the related item when building\r\n         * the marker for legend item?\r\n         *\r\n         * If set to `false` it will try to make the marker look like its related\r\n         * item.\r\n         *\r\n         * E.g. if an item is for a Line Series, it will display a line of the\r\n         * same thickness, color, and will use the same bullets if series have them.\r\n         *\r\n         * If set to `true`, all markers will be shown as squares, regardless of te\r\n         * series type.\r\n         *\r\n         * @default false\r\n         * @param value Use default marker?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"useDefaultMarker\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Legend.prototype, \"scrollable\", {\r\n        /**\r\n         * @return Legend Scrollable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"scrollable\");\r\n        },\r\n        /**\r\n         * If set to `true` the Legend will display a scrollbar if its contents do\r\n         * not fit into its `maxHeight`.\r\n         *\r\n         * Please note that `maxHeight` is automatically set for Legend when its\r\n         * `position` is set to `\"left\"` or `\"right\"`.\r\n         *\r\n         * @default false\r\n         * @since 4.8.0\r\n         * @param  value  Legend Scrollable?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"scrollable\", value, true)) {\r\n                if (value) {\r\n                    var scrollbar = this.createChild(Scrollbar);\r\n                    this.scrollbar = scrollbar;\r\n                    scrollbar.isMeasured = false;\r\n                    scrollbar.orientation = \"vertical\";\r\n                    scrollbar.endGrip.__disabled = true;\r\n                    scrollbar.startGrip.__disabled = true;\r\n                    scrollbar.visible = false;\r\n                    scrollbar.marginLeft = 5;\r\n                    this._mouseWheelDisposer = this.events.on(\"wheel\", this.handleWheel, this, false);\r\n                    this._disposers.push(this._mouseWheelDisposer);\r\n                    this._disposers.push(scrollbar.events.on(\"rangechanged\", this.updateMasks, this, false));\r\n                }\r\n                else {\r\n                    if (this._mouseWheelDisposer) {\r\n                        this._mouseWheelDisposer.dispose();\r\n                        if (this.scrollbar) {\r\n                            this.scrollbar.dispose();\r\n                            this.scrollbar = undefined;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Handles mouse wheel scrolling of legend.\r\n     *\r\n     * @param  event  Event\r\n     */\r\n    Legend.prototype.handleWheel = function (event) {\r\n        this._handleWheelReal(event.shift.y);\r\n    };\r\n    Legend.prototype._handleWheelReal = function (shift) {\r\n        var scrollbar = this.scrollbar;\r\n        if (scrollbar) {\r\n            var ds = (shift / 1000 * this.measuredHeight / this.contentHeight);\r\n            var delta = scrollbar.end - scrollbar.start;\r\n            if (shift > 0) {\r\n                scrollbar.start = $math.max(0, scrollbar.start - ds);\r\n                scrollbar.end = scrollbar.start + delta;\r\n            }\r\n            else {\r\n                scrollbar.end = $math.min(1, scrollbar.end - ds);\r\n                scrollbar.start = scrollbar.end - delta;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Legend.prototype.updateMasks = function () {\r\n        var _this = this;\r\n        if (this.scrollbar) {\r\n            this.itemContainers.each(function (itemContainer) {\r\n                itemContainer.dy = -_this.scrollbar.thumb.pixelY * _this.contentHeight / _this.maxHeight;\r\n                itemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: _this.measuredWidth, height: _this.maxHeight };\r\n            });\r\n        }\r\n        this.invalidatePosition();\r\n    };\r\n    /**\r\n     * Toggles a legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item Legend item\r\n     * @todo Maybe do it with togglable instead\r\n     */\r\n    Legend.prototype.toggleDataItem = function (item) {\r\n        var dataContext = item.dataContext;\r\n        if (!dataContext.visible || dataContext.isHiding || (dataContext instanceof Sprite && dataContext.isHidden)) {\r\n            item.color = item.colorOrig;\r\n            dataContext.appeared = true;\r\n            item.itemContainer.isActive = false;\r\n            if (dataContext.hidden === true) {\r\n                dataContext.hidden = false;\r\n            }\r\n            if (dataContext.show) {\r\n                dataContext.show();\r\n            }\r\n            else {\r\n                dataContext.visible = true;\r\n            }\r\n            this.svgContainer.readerAlert(this.language.translate(\"%1 shown\", this.language.locale, item.label.readerTitle));\r\n        }\r\n        else {\r\n            item.itemContainer.isActive = true;\r\n            dataContext.appeared = true;\r\n            if (dataContext.hide) {\r\n                dataContext.hide();\r\n            }\r\n            else {\r\n                dataContext.visible = false;\r\n            }\r\n            this.svgContainer.readerAlert(this.language.translate(\"%1 hidden\", this.language.locale, item.label.readerTitle));\r\n            item.color = new InterfaceColorSet().getFor(\"disabledBackground\");\r\n        }\r\n    };\r\n    Object.defineProperty(Legend.prototype, \"preloader\", {\r\n        /**\r\n         * Override preloader method so that legend does not accidentally show its\r\n         * own preloader.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Always `undefined`\r\n         */\r\n        get: function () {\r\n            return;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [handleDataItemPropertyChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {\r\n        dataItem.valueLabel.invalidate();\r\n        dataItem.label.invalidate();\r\n    };\r\n    return Legend;\r\n}(Component));\r\nexport { Legend };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Legend\"] = Legend;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Move legend to below the chart if chart is narrow\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"left\" || target.position == \"right\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"bottom\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Move legend to the right if chart is very short\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend && (target.position == \"top\" || target.position == \"bottom\")) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.position = \"right\";\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Disable legend altogether on small charts\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.isXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Legend) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}