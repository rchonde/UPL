{"ast":null,"code":"/**\r\n * 3D Pie chart module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { PieChart, PieChartDataItem } from \"./PieChart\";\nimport { PieSeries3D } from \"../series/PieSeries3D\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar PieChart3DDataItem =\n/** @class */\nfunction (_super) {\n  __extends(PieChart3DDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PieChart3DDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"PieChart3DDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return PieChart3DDataItem;\n}(PieChartDataItem);\n\nexport { PieChart3DDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\n\nvar PieChart3D =\n/** @class */\nfunction (_super) {\n  __extends(PieChart3D, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PieChart3D() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"PieChart3D\";\n    _this.depth = 20;\n    _this.angle = 10; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(PieChart3D.prototype, \"depth\", {\n    /**\r\n     * @return Depth (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"depth\");\n    },\n\n    /**\r\n     * Depth of the 3D pie in pixels.\r\n     *\r\n     * This will determine \"height\" of the pie.\r\n     *\r\n     * @default 20\r\n     * @param value  Depth (px)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"depth\", value)) {\n        this.invalidateDataUsers();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieChart3D.prototype, \"angle\", {\n    /**\r\n     * @return Angle (degrees)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"angle\");\n    },\n\n    /**\r\n     * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n     *\r\n     * @default 10\r\n     * @param value  Angle (degrees)\r\n     */\n    set: function (value) {\n      value = $math.fitToRange(value, 0, 90);\n\n      if (this.setPropertyValue(\"angle\", value)) {\n        this.invalidateDataUsers();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates and returns a new Series.\r\n   *\r\n   * @return New series\r\n   */\n\n  PieChart3D.prototype.createSeries = function () {\n    return new PieSeries3D();\n  };\n\n  return PieChart3D;\n}(PieChart);\n\nexport { PieChart3D };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;","map":{"version":3,"names":["__extends","PieChart","PieChartDataItem","PieSeries3D","registry","$math","PieChart3DDataItem","_super","_this","call","className","applyTheme","PieChart3D","depth","angle","Object","defineProperty","prototype","get","getPropertyValue","set","value","setPropertyValue","invalidateDataUsers","enumerable","configurable","fitToRange","createSeries","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js"],"sourcesContent":["/**\r\n * 3D Pie chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * Imports\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PieChart, PieChartDataItem } from \"./PieChart\";\r\nimport { PieSeries3D } from \"../series/PieSeries3D\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[PieChart3D]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieChart3DDataItem = /** @class */ (function (_super) {\r\n    __extends(PieChart3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieChart3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return PieChart3DDataItem;\r\n}(PieChartDataItem));\r\nexport { PieChart3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a 3D Pie chart.\r\n *\r\n *  * ```TypeScript\r\n * // Includes\r\n * import * as am4core from \"@amcharts/amcharts4/core\";\r\n * import * as am4charts from \"@amcharts/amcharts4/charts\";\r\n *\r\n * // Create chart\r\n * let chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * let series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JavaScript\r\n * // Create chart\r\n * var chart = am4core.create(\"chartdiv\", am4charts.Pie3DChart);\r\n *\r\n * // The following would work as well:\r\n * // var chart = am4core.create(\"chartdiv\", \"Pie3DChart\");\r\n *\r\n * // Set data\r\n * chart.data = [{\r\n * \t\"country\": \"Lithuania\",\r\n * \t\"litres\": 501.9\r\n * }, {\r\n * \t\"country\": \"Czechia\",\r\n * \t\"litres\": 301.9\r\n * }, {\r\n * \t\"country\": \"Ireland\",\r\n * \t\"litres\": 201.1\r\n * }];\r\n *\r\n * // Create series\r\n * var series = chart.series.push(new am4charts.Pie3DSeries());\r\n * series.dataFields.value = \"litres\";\r\n * series.dataFields.category = \"country\";\r\n * ```\r\n * ```JSON\r\n * var chart = am4core.createFromConfig({\r\n *\r\n * \t// Series\r\n * \t\"series\": [{\r\n * \t\t\"type\": \"Pie3DSeries\",\r\n * \t\t\"dataFields\": {\r\n * \t\t\t\"value\": \"litres\",\r\n * \t\t\t\"category\": \"country\"\r\n * \t\t}\r\n * \t}],\r\n *\r\n * \t// Data\r\n * \t\"data\": [{\r\n * \t\t\"country\": \"Lithuania\",\r\n * \t\t\"litres\": 501.9\r\n * \t}, {\r\n * \t\t\"country\": \"Czechia\",\r\n * \t\t\"litres\": 301.9\r\n * \t}, {\r\n * \t\t\"country\": \"Ireland\",\r\n * \t\t\"litres\": 201.1\r\n * \t}]\r\n *\r\n * }, \"chartdiv\", \"Pie3DChart\");\r\n * ```\r\n *\r\n * @see {@link IPieChart3DEvents} for a list of available Events\r\n * @see {@link IPieChart3DAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation\r\n * @important\r\n */\r\nvar PieChart3D = /** @class */ (function (_super) {\r\n    __extends(PieChart3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieChart3D() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"PieChart3D\";\r\n        _this.depth = 20;\r\n        _this.angle = 10;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieChart3D.prototype, \"depth\", {\r\n        /**\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth of the 3D pie in pixels.\r\n         *\r\n         * This will determine \"height\" of the pie.\r\n         *\r\n         * @default 20\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"depth\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieChart3D.prototype, \"angle\", {\r\n        /**\r\n         * @return Angle (degrees)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * An angle of a \"point of view\" in degrees. Possible range 0 - 90.\r\n         *\r\n         * @default 10\r\n         * @param value  Angle (degrees)\r\n         */\r\n        set: function (value) {\r\n            value = $math.fitToRange(value, 0, 90);\r\n            if (this.setPropertyValue(\"angle\", value)) {\r\n                this.invalidateDataUsers();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a new Series.\r\n     *\r\n     * @return New series\r\n     */\r\n    PieChart3D.prototype.createSeries = function () {\r\n        return new PieSeries3D();\r\n    };\r\n    return PieChart3D;\r\n}(PieChart));\r\nexport { PieChart3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieChart3D\"] = PieChart3D;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,QAAT,EAAmBC,gBAAnB,QAA2C,YAA3C;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACtDP,SAAS,CAACM,kBAAD,EAAqBC,MAArB,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,kBAAT,GAA8B;IAC1B,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,oBAAlB;;IACAF,KAAK,CAACG,UAAN;;IACA,OAAOH,KAAP;EACH;;EACD,OAAOF,kBAAP;AACH,CAZuC,CAYtCJ,gBAZsC,CAAxC;;AAaA,SAASI,kBAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIM,UAAU;AAAG;AAAe,UAAUL,MAAV,EAAkB;EAC9CP,SAAS,CAACY,UAAD,EAAaL,MAAb,CAAT;EACA;AACJ;AACA;;;EACI,SAASK,UAAT,GAAsB;IAClB,IAAIJ,KAAK,GACT;IACAD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACE,SAAN,GAAkB,YAAlB;IACAF,KAAK,CAACK,KAAN,GAAc,EAAd;IACAL,KAAK,CAACM,KAAN,GAAc,EAAd,CANkB,CAOlB;;IACAN,KAAK,CAACG,UAAN;;IACA,OAAOH,KAAP;EACH;;EACDO,MAAM,CAACC,cAAP,CAAsBJ,UAAU,CAACK,SAAjC,EAA4C,OAA5C,EAAqD;IACjD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,gBAAL,CAAsB,OAAtB,CAAP;IACH,CANgD;;IAOjD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,IAAI,KAAKC,gBAAL,CAAsB,OAAtB,EAA+BD,KAA/B,CAAJ,EAA2C;QACvC,KAAKE,mBAAL;MACH;IACJ,CAnBgD;IAoBjDC,UAAU,EAAE,IApBqC;IAqBjDC,YAAY,EAAE;EArBmC,CAArD;EAuBAV,MAAM,CAACC,cAAP,CAAsBJ,UAAU,CAACK,SAAjC,EAA4C,OAA5C,EAAqD;IACjD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,gBAAL,CAAsB,OAAtB,CAAP;IACH,CANgD;;IAOjD;AACR;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClBA,KAAK,GAAGhB,KAAK,CAACqB,UAAN,CAAiBL,KAAjB,EAAwB,CAAxB,EAA2B,EAA3B,CAAR;;MACA,IAAI,KAAKC,gBAAL,CAAsB,OAAtB,EAA+BD,KAA/B,CAAJ,EAA2C;QACvC,KAAKE,mBAAL;MACH;IACJ,CAlBgD;IAmBjDC,UAAU,EAAE,IAnBqC;IAoBjDC,YAAY,EAAE;EApBmC,CAArD;EAsBA;AACJ;AACA;AACA;AACA;;EACIb,UAAU,CAACK,SAAX,CAAqBU,YAArB,GAAoC,YAAY;IAC5C,OAAO,IAAIxB,WAAJ,EAAP;EACH,CAFD;;EAGA,OAAOS,UAAP;AACH,CAtE+B,CAsE9BX,QAtE8B,CAAhC;;AAuEA,SAASW,UAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAR,QAAQ,CAACwB,iBAAT,CAA2B,YAA3B,IAA2ChB,UAA3C"},"metadata":{},"sourceType":"module"}