{"ast":null,"code":"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} n\n * @param {?} x\n * @return {?}\n */\nfunction mod(n, x) {\n  return (n % x + x) % x;\n}\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction absFloor(num) {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isDate(value) {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction isDateValid(date) {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n/**\n * @param {?} fn\n * @return {?}\n */\n\n\nfunction isFunction(fn) {\n  return fn instanceof Function || Object.prototype.toString.call(fn) === '[object Function]';\n}\n/**\n * @param {?=} value\n * @return {?}\n */\n\n\nfunction isNumber(value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n/**\n * @template T\n * @param {?=} input\n * @return {?}\n */\n\n\nfunction isArray(input) {\n  return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n/**\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction hasOwnProp(a\n/*object*/\n, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n/**\n * @template T\n * @param {?} input\n * @return {?}\n */\n\n\nfunction isObject(input\n/*object*/\n) {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\n\n\nfunction isObjectEmpty(obj) {\n  if (Object.getOwnPropertyNames) {\n    return Object.getOwnPropertyNames(obj).length === 0;\n  }\n  /** @type {?} */\n\n\n  let k;\n\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction isUndefined(input) {\n  return input === void 0;\n}\n/**\n * @template T\n * @param {?} argumentForCoercion\n * @return {?}\n */\n\n\nfunction toInt(argumentForCoercion) {\n  /** @type {?} */\n  const coercedNumber = +argumentForCoercion;\n  /** @type {?} */\n\n  let value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst aliases = {};\n/** @type {?} */\n\nconst _mapUnits = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n/**\n * @param {?} unit\n * @param {?} shorthand\n * @return {?}\n */\n\nfunction addUnitAlias(unit, shorthand) {\n  /** @type {?} */\n  const lowerCase = unit.toLowerCase();\n  /** @type {?} */\n\n  let _unit = unit;\n\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n/**\n * @param {?} units\n * @return {?}\n */\n\n\nfunction normalizeUnits(units) {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n/**\n * @param {?} inputObject\n * @return {?}\n */\n\n\nfunction normalizeObjectUnits(inputObject) {\n  /** @type {?} */\n  const normalizedInput = {};\n  /** @type {?} */\n\n  let normalizedProp;\n  /** @type {?} */\n\n  let prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return (\n    /** @type {?} */\n    normalizedInput\n  );\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// place in new Date([array])\n\n/** @type {?} */\n\n\nconst YEAR = 0;\n/** @type {?} */\n\nconst MONTH = 1;\n/** @type {?} */\n\nconst DATE = 2;\n/** @type {?} */\n\nconst HOUR = 3;\n/** @type {?} */\n\nconst MINUTE = 4;\n/** @type {?} */\n\nconst SECOND = 5;\n/** @type {?} */\n\nconst MILLISECOND = 6;\n/** @type {?} */\n\nconst WEEK = 7;\n/** @type {?} */\n\nconst WEEKDAY = 8;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} num\n * @param {?} targetLength\n * @param {?=} forceSign\n * @return {?}\n */\n\nfunction zeroFill(num, targetLength, forceSign) {\n  /** @type {?} */\n  const absNumber = `${Math.abs(num)}`;\n  /** @type {?} */\n\n  const zerosToFill = targetLength - absNumber.length;\n  /** @type {?} */\n\n  const sign = num >= 0;\n  /** @type {?} */\n\n  const _sign = sign ? forceSign ? '+' : '' : '-'; // todo: this is crazy slow\n\n  /** @type {?} */\n\n\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return _sign + _zeros + absNumber;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nlet formatFunctions = {};\n/** @type {?} */\n\nlet formatTokenFunctions = {}; // tslint:disable-next-line\n\n/** @type {?} */\n\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g; // token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\n\n/**\n * @param {?} token\n * @param {?} padded\n * @param {?} ordinal\n * @param {?} callback\n * @return {?}\n */\n\nfunction addFormatToken(token, padded, ordinal, callback) {\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] =\n    /**\n    * @return {?}\n    */\n    function () {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] =\n    /**\n    * @param {?} date\n    * @param {?} opts\n    * @return {?}\n    */\n    function (date, opts) {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n/**\n * @param {?} format\n * @return {?}\n */\n\n\nfunction makeFormatFunction(format) {\n  /** @type {?} */\n  const array = format.match(formattingTokens);\n  /** @type {?} */\n\n  const length = array.length;\n  /** @type {?} */\n\n  const formatArr = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]] ? formatTokenFunctions[array[i]] : removeFormattingTokens(array[i]);\n  }\n\n  return (\n    /**\n    * @param {?} date\n    * @param {?} locale\n    * @param {?} isUTC\n    * @param {?=} offset\n    * @return {?}\n    */\n    function (date, locale, isUTC, offset = 0) {\n      /** @type {?} */\n      let output = '';\n\n      for (let j = 0; j < length; j++) {\n        output += isFunction(formatArr[j]) ?\n        /** @type {?} */\n        formatArr[j].call(null, date, {\n          format,\n          locale,\n          isUTC,\n          offset\n        }) : formatArr[j];\n      }\n\n      return output;\n    }\n  );\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @return {?}\n */\n\n\nfunction createUTCDate(y, m, d) {\n  /** @type {?} */\n  const date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @param {?=} h\n * @param {?=} M\n * @param {?=} s\n * @param {?=} ms\n * @return {?}\n */\n\n\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n  /** @type {?} */\n  const date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getHours(date, isUTC = false) {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMinutes(date, isUTC = false) {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSeconds(date, isUTC = false) {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMilliseconds(date, isUTC = false) {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getTime(date) {\n  return date.getTime();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDay(date, isUTC = false) {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDate(date, isUTC = false) {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMonth(date, isUTC = false) {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getFullYear(date, isUTC = false) {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction unix(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getFirstDayOfMonth(date) {\n  return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\n/**\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\n\n\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n  return date.getDay() === firstDayOfWeek;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameMonth(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameYear(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return getFullYear(date1) === getFullYear(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameDay(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && isSameMonth(date1, date2) && getDate(date1) === getDate(date2);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst match1 = /\\d/; //       0 - 9\n\n/** @type {?} */\n\nconst match2 = /\\d\\d/; //      00 - 99\n\n/** @type {?} */\n\nconst match3 = /\\d{3}/; //     000 - 999\n\n/** @type {?} */\n\nconst match4 = /\\d{4}/; //    0000 - 9999\n\n/** @type {?} */\n\nconst match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n/** @type {?} */\n\nconst match1to2 = /\\d\\d?/; //       0 - 99\n\n/** @type {?} */\n\nconst match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n/** @type {?} */\n\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n/** @type {?} */\n\nconst match1to3 = /\\d{1,3}/; //       0 - 999\n\n/** @type {?} */\n\nconst match1to4 = /\\d{1,4}/; //       0 - 9999\n\n/** @type {?} */\n\nconst match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n/** @type {?} */\n\nconst matchUnsigned = /\\d+/; //       0 - inf\n\n/** @type {?} */\n\nconst matchSigned = /[+-]?\\d+/; // +00:00 -00:00 +0000 -0000 or Z\n\n/** @type {?} */\n\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n/** @type {?} */\n\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\n\n/** @type {?} */\n\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n/** @type {?} */\n\nconst regexes = {};\n/**\n * @param {?} token\n * @param {?} regex\n * @param {?=} strictRegex\n * @return {?}\n */\n\nfunction addRegexToken(token, regex, strictRegex) {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n    return;\n  }\n\n  regexes[token] =\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return isStrict && strictRegex ? strictRegex : regex;\n  };\n}\n/**\n * @param {?} token\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction getParseRegexForToken(token, locale) {\n  /** @type {?} */\n  const _strict = false;\n\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n} // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction unescapeFormat(str) {\n  // tslint:disable-next-line\n  return regexEscape(str.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n  /**\n  * @param {?} matched\n  * @param {?} p1\n  * @param {?} p2\n  * @param {?} p3\n  * @param {?} p4\n  * @return {?}\n  */\n  (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst tokens = {};\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\n\nfunction addParseToken(token, callback) {\n  /** @type {?} */\n  const _token = isString(token) ? [token] : token;\n  /** @type {?} */\n\n\n  let func = callback;\n\n  if (isNumber(callback)) {\n    func =\n    /**\n    * @param {?} input\n    * @param {?} array\n    * @param {?} config\n    * @return {?}\n    */\n    function (input, array, config) {\n      array[callback] = toInt(input);\n      return config;\n    };\n  }\n\n  if (isArray(_token) && isFunction(func)) {\n    /** @type {?} */\n    let i;\n\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\n\n\nfunction addWeekParseToken(token, callback) {\n  addParseToken(token,\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @param {?} _token\n  * @return {?}\n  */\n  function (input, array, config, _token) {\n    config._w = config._w || {};\n    return callback(input, config._w, config, _token);\n  });\n}\n/**\n * @param {?} token\n * @param {?} input\n * @param {?} config\n * @return {?}\n */\n\n\nfunction addTimeToArrayFromToken(token, input, config) {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfMonth() {\n  // FORMATTING\n  addFormatToken('D', ['DD', 2, false], 'Do',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getDate(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('date', 'D'); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction defaultParsingFlags() {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction getParsingFlags(config) {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction getYear(date, opts) {\n  return getFullYear(date, opts.isUTC).toString();\n}\n/**\n * @return {?}\n */\n\n\nfunction initYear() {\n  addFormatToken('Y', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const y = getFullYear(date, opts.isUTC);\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n  addFormatToken(null, ['YY', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear); // ALIASES\n\n  addUnitAlias('year', 'y'); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n    return config;\n  });\n  addParseToken('YY',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n    return config;\n  });\n  addParseToken('Y',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n    return config;\n  });\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction parseTwoDigitYear(input) {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n/**\n * @param {?} year\n * @return {?}\n */\n\n\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n/**\n * @param {?} year\n * @return {?}\n */\n\n\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: this is duplicate, source in date-getters.ts\n\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\n\n\nfunction daysInMonth(year, month) {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  /** @type {?} */\n\n\n  const modMonth = mod(month, 12);\n  /** @type {?} */\n\n  const _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1 ? isLeapYear(_year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n}\n/**\n * @return {?}\n */\n\n\nfunction initMonth() {\n  // FORMATTING\n  addFormatToken('M', ['MM', 2, false], 'Mo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\n  });\n  addFormatToken('MMM', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('MMMM', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.months(date, opts.format, opts.isUTC);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[MONTH] = toInt(input) - 1;\n    return config;\n  });\n  addParseToken(['MMM', 'MMMM'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, array, config, token) {\n    /** @type {?} */\n    const month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = !!input;\n    }\n\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst defaultTimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\n\nfunction shiftDate(date, unit) {\n  /** @type {?} */\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  /** @type {?} */\n\n\n  const year = date.getFullYear() + (_unit.year || 0);\n  /** @type {?} */\n\n  const month = date.getMonth() + (_unit.month || 0);\n  /** @type {?} */\n\n  let day = date.getDate() + (_unit.day || 0);\n\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth(year, month));\n  }\n\n  return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\n\n\nfunction setFullDate(date, unit) {\n  return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n  getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\n/**\n * @param {?} def\n * @param {?=} num\n * @return {?}\n */\n\n\nfunction getNum(def, num) {\n  return isNumber(num) ? num : def;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMonth(date, value, isUTC) {\n  /** @type {?} */\n  const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setHours(date, value, isUTC) {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMinutes(date, value, isUTC) {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setSeconds(date, value, isUTC) {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMilliseconds(date, value, isUTC) {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDate(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @return {?}\n */\n\n\nfunction setTime(date, value) {\n  date.setTime(value);\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\n\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction cloneDate(date) {\n  return new Date(date.getTime());\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction startOf(date, unit, isUTC) {\n  /** @type {?} */\n  const _date = cloneDate(date); // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n\n\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n\n    /* falls through */\n\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  } // weeks are a special case\n\n\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {\n      isUTC\n    });\n  }\n\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  } // quarters are also special\n\n\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction endOf(date, unit, isUTC) {\n  /** @type {?} */\n  let _unit = unit; // 'date' is an alias for 'day', so it should be considered as such.\n\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n  /** @type {?} */\n\n\n  const start = startOf(date, _unit, isUTC);\n  /** @type {?} */\n\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  /** @type {?} */\n\n\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n  return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfYear() {\n  // FORMATTING\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return getDayOfYear(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD');\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._dayOfYear = toInt(input);\n    return config;\n  });\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDayOfYear(date, isUTC) {\n  /** @type {?} */\n  const date1 = +startOf(date, 'day', isUTC);\n  /** @type {?} */\n\n  const date2 = +startOf(date, 'year', isUTC);\n  /** @type {?} */\n\n  const someDate = date1 - date2;\n  /** @type {?} */\n\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.round(someDate / oneDay) + 1;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction firstWeekOffset(year, dow, doy) {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\n  /** @type {?} */\n  const fwd = dow - doy + 7; // first-week day local weekday -- which local weekday is fwd\n\n  /** @type {?} */\n\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n  return -fwdlw + fwd - 1;\n} // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n/**\n * @param {?} year\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  /** @type {?} */\n  const localWeekday = (7 + weekday - dow) % 7;\n  /** @type {?} */\n\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  /** @type {?} */\n\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  /** @type {?} */\n\n  let resYear;\n  /** @type {?} */\n\n  let resDayOfYear;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n/**\n * @param {?} date\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction weekOfYear(date, dow, doy, isUTC) {\n  /** @type {?} */\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  /** @type {?} */\n\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  /** @type {?} */\n\n  let resWeek;\n  /** @type {?} */\n\n  let resYear;\n\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction weeksInYear(year, dow, doy) {\n  /** @type {?} */\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  /** @type {?} */\n\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n/** @type {?} */\n\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n/** @type {?} */\n\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n/** @type {?} */\n\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n/** @type {?} */\n\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n/** @type {?} */\n\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n/** @type {?} */\n\nconst defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n/** @type {?} */\n\nconst defaultOrdinal = '%d';\n/** @type {?} */\n\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n/** @type {?} */\n\nconst defaultMonthsShortRegex = matchWord;\n/** @type {?} */\n\nconst defaultMonthsRegex = matchWord;\n\nclass Locale {\n  /**\n   * @param {?} config\n   */\n  constructor(config) {\n    if (!!config) {\n      this.set(config);\n    }\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  set(config) {\n    /** @type {?} */\n    let confKey;\n\n    for (confKey in config) {\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      /** @type {?} */\n\n\n      const prop = config[\n      /** @type {?} */\n      confKey];\n      /** @type {?} */\n\n      const key =\n      /** @type {?} */\n      isFunction(prop) ? confKey : `_${confKey}`;\n      this[key] =\n      /** @type {?} */\n      prop;\n    }\n\n    this._config = config;\n  }\n  /**\n   * @param {?} key\n   * @param {?} date\n   * @param {?} now\n   * @return {?}\n   */\n\n\n  calendar(key, date, now) {\n    /** @type {?} */\n    const output = this._calendar[key] || this._calendar.sameElse;\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  longDateFormat(key) {\n    /** @type {?} */\n    const format = this._longDateFormat[key];\n    /** @type {?} */\n\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,\n    /**\n    * @param {?} val\n    * @return {?}\n    */\n    function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get invalidDate() {\n    return this._invalidDate;\n  }\n  /**\n   * @param {?} val\n   * @return {?}\n   */\n\n\n  set invalidDate(val) {\n    this._invalidDate = val;\n  }\n  /**\n   * @param {?} num\n   * @param {?=} token\n   * @return {?}\n   */\n\n\n  ordinal(num, token) {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n\n\n  preparse(str) {\n    return str;\n  }\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n\n\n  postformat(str) {\n    return str;\n  }\n  /**\n   * @param {?} num\n   * @param {?} withoutSuffix\n   * @param {?} str\n   * @param {?} isFuture\n   * @return {?}\n   */\n\n\n  relativeTime(num, withoutSuffix, str, isFuture) {\n    /** @type {?} */\n    const output = this._relativeTime[str];\n    return isFunction(output) ? output(num, withoutSuffix, str, isFuture) : output.replace(/%d/i, num.toString(10));\n  }\n  /**\n   * @param {?} diff\n   * @param {?} output\n   * @return {?}\n   */\n\n\n  pastFuture(diff, output) {\n    /** @type {?} */\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  months(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._months) ? this._months : this._months.standalone;\n    }\n\n    if (isArray(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n    /** @type {?} */\n\n\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone';\n    return this._months[key][getMonth(date, isUTC)];\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  monthsShort(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;\n    }\n\n    if (isArray(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    /** @type {?} */\n\n\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n  /**\n   * @param {?} monthName\n   * @param {?=} format\n   * @param {?=} strict\n   * @return {?}\n   */\n\n\n  monthsParse(monthName, format, strict) {\n    /** @type {?} */\n    let date;\n    /** @type {?} */\n\n    let regex;\n\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n    /** @type {?} */\n\n\n    let i;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n\n      if (strict && !this._longMonthsParse[i]) {\n        /** @type {?} */\n        const _months = this.months(date, '', true).replace('.', '');\n        /** @type {?} */\n\n\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' &&\n      /** @type {?} */\n      this._longMonthsParse[i].test(monthName)) {\n        return i;\n      }\n\n      if (strict && format === 'MMM' &&\n      /** @type {?} */\n      this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      }\n\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n  /**\n   * @param {?} isStrict\n   * @return {?}\n   */\n\n\n  monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n\n      return this._monthsRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n  }\n  /**\n   * @param {?} isStrict\n   * @return {?}\n   */\n\n\n  monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n\n      return this._monthsShortRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n  /**\n   * Week\n   * @param {?} date\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  week(date, isUTC) {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  firstDayOfWeek() {\n    return this._week.dow;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  firstDayOfYear() {\n    return this._week.doy;\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  weekdays(date, format, isUTC) {\n    if (!date) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays.standalone;\n    }\n\n    if (isArray(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n    /** @type {?} */\n\n\n    const _key = this._weekdays.isFormat.test(format) ? 'format' : 'standalone';\n\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  weekdaysMin(date, format, isUTC) {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  weekdaysShort(date, format, isUTC) {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  } // proto.weekdaysParse  =        localeWeekdaysParse;\n\n  /**\n   * @param {?=} weekdayName\n   * @param {?=} format\n   * @param {?=} strict\n   * @return {?}\n   */\n\n\n  weekdaysParse(weekdayName, format, strict) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n\n      /** @type {?} */\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n\n      if (!isArray(this._fullWeekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse) || !isArray(this._weekdaysParse)) {\n        return;\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // proto.weekdaysRegex       =        weekdaysRegex;\n\n  /**\n   * @param {?} isStrict\n   * @return {?}\n   */\n\n\n  weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  } // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n  /**\n   * @param {?=} isStrict\n   * @return {?}\n   */\n\n\n  weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n  /**\n   * @param {?=} isStrict\n   * @return {?}\n   */\n\n\n  weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n\n\n  isPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n\n\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n\n    return isLower ? 'am' : 'AM';\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  formatLongDate(key) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    /** @type {?} */\n\n    const format = this._longDateFormat[key];\n    /** @type {?} */\n\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,\n    /**\n    * @param {?} val\n    * @return {?}\n    */\n    val => {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  /**\n   * @private\n   * @param {?} monthName\n   * @param {?} format\n   * @param {?=} strict\n   * @return {?}\n   */\n\n\n  handleMonthStrictParse(monthName, format, strict) {\n    /** @type {?} */\n    const llc = monthName.toLocaleLowerCase();\n    /** @type {?} */\n\n    let i;\n    /** @type {?} */\n\n    let ii;\n    /** @type {?} */\n\n    let mom;\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii =\n        /** @type {?} */\n        this._shortMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n\n      ii =\n      /** @type {?} */\n      this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n\n    if (format === 'MMM') {\n      ii =\n      /** @type {?} */\n      this._shortMonthsParse.indexOf(llc);\n\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii =\n      /** @type {?} */\n      this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n\n    ii =\n    /** @type {?} */\n    this._longMonthsParse.indexOf(llc);\n\n    if (ii !== -1) {\n      return ii;\n    }\n\n    ii =\n    /** @type {?} */\n    this._shortMonthsParse.indexOf(llc);\n    return ii !== -1 ? ii : null;\n  }\n  /**\n   * @private\n   * @param {?} weekdayName\n   * @param {?} format\n   * @param {?} strict\n   * @return {?}\n   */\n\n\n  handleWeekStrictParse(weekdayName, format, strict) {\n    /** @type {?} */\n    let ii;\n    /** @type {?} */\n\n    const llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      /** @type {?} */\n\n      let i;\n\n      for (i = 0; i < 7; ++i) {\n        /** @type {?} */\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n\n    if (!isArray(this._weekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse)) {\n      return;\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  computeMonthsParse() {\n    /** @type {?} */\n    const shortPieces = [];\n    /** @type {?} */\n\n    const longPieces = [];\n    /** @type {?} */\n\n    const mixedPieces = [];\n    /** @type {?} */\n\n    let date;\n    /** @type {?} */\n\n    let i;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  computeWeekdaysParse() {\n    /** @type {?} */\n    const minPieces = [];\n    /** @type {?} */\n\n    const shortPieces = [];\n    /** @type {?} */\n\n    const longPieces = [];\n    /** @type {?} */\n\n    const mixedPieces = [];\n    /** @type {?} */\n\n    let i;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n\n      /** @type {?} */\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      /** @type {?} */\n\n      const minp = this.weekdaysMin(date);\n      /** @type {?} */\n\n      const shortp = this.weekdaysShort(date);\n      /** @type {?} */\n\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction cmpLenRev(a, b) {\n  return b.length - a.length;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nconst defaultInvalidDate = 'Invalid date';\n/** @type {?} */\n\nconst defaultLocaleWeek = {\n  dow: 0,\n  // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n};\n/** @type {?} */\n\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n/** @type {?} */\n\nconst defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\n/** @type {?} */\n\nconst baseConfig = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n  week: defaultLocaleWeek,\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n  meridiemParse: defaultLocaleMeridiemParse\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n * @param {?} array1\n * @param {?} array2\n * @param {?} dontConvert\n * @return {?}\n */\n\nfunction compareArrays(array1, array2, dontConvert) {\n  /** @type {?} */\n  const len = Math.min(array1.length, array2.length);\n  /** @type {?} */\n\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  /** @type {?} */\n\n  let diffs = 0;\n  /** @type {?} */\n\n  let i;\n\n  for (i = 0; i < len; i++) {\n    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @return {?}\n */\n\n\nfunction initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getWeek(date, opts.locale).toString(10);\n  });\n  addFormatToken('W', ['WW', 2, false], 'Wo',\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return getISOWeek(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n    return config;\n  }); // export function getSetWeek (input) {\n  //   var week = this.localeData().week(this);\n  //   return input == null ? week : this.add((input - week) * 7, 'd');\n  // }\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getWeek(date, locale = getLocale(), isUTC) {\n  return locale.week(date, isUTC);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeek(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @return {?}\n */\n\n\nfunction initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    // return this.weekYear() % 100;\n    return (getWeekYear(date, opts.locale) % 100).toString();\n  });\n  addFormatToken(null, ['GG', 2, false], null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    // return this.isoWeekYear() % 100;\n    return (getISOWeekYear(date) % 100).toString();\n  });\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n    return config;\n  });\n  addWeekParseToken(['gg', 'GG'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token] = parseTwoDigitYear(input);\n    return config;\n  });\n}\n/**\n * @param {?} token\n * @param {?} getter\n * @return {?}\n */\n\n\nfunction addWeekYearFormatToken(token, getter) {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction _getWeekYearFormatCb(date, opts) {\n  return getWeekYear(date, opts.locale).toString();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction _getISOWeekYearFormatCb(date) {\n  return getISOWeekYear(date).toString();\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeekYear(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: add support for timezones\n\n/**\n * @return {?}\n */\n\n\nfunction initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.isUTC ? 'UTC' : '';\n  });\n  addFormatToken('zz', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initTimestamp() {\n  // FORMATTING\n  addFormatToken('X', null, null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return unix(date).toString(10);\n  });\n  addFormatToken('x', null, null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return date.valueOf().toString(10);\n  }); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n    return config;\n  });\n  addParseToken('x',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._d = new Date(toInt(input));\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initSecond() {\n  // FORMATTING\n  addFormatToken('s', ['ss', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getSeconds(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('second', 's'); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initQuarter() {\n  // FORMATTING\n  addFormatToken('Q', null, 'Qo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getQuarter(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n    return config;\n  });\n} // MOMENTS\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getQuarter(date, isUTC = false) {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} token\n * @param {?} separator\n * @return {?}\n */\n\n\nfunction addOffsetFormatToken(token, separator) {\n  addFormatToken(token, null, null,\n  /**\n  * @param {?} date\n  * @param {?} config\n  * @return {?}\n  */\n  function (date, config) {\n    /** @type {?} */\n    let offset = getUTCOffset(date, {\n      _isUTC: config.isUTC,\n      _offset: config.offset\n    });\n    /** @type {?} */\n\n    let sign = '+';\n\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n  });\n}\n/**\n * @return {?}\n */\n\n\nfunction initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n    return config;\n  });\n} // HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\n\n/** @type {?} */\n\n\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n/**\n * @param {?} matcher\n * @param {?} str\n * @return {?}\n */\n\nfunction offsetFromString(matcher, str) {\n  /** @type {?} */\n  const matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n  /** @type {?} */\n\n\n  const chunk = matches[matches.length - 1];\n  /** @type {?} */\n\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  /** @type {?} */\n\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  /** @type {?} */\n\n  const _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n} // Return a moment from input, that is local/utc/zone equivalent to model.\n\n/**\n * @param {?} input\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction cloneWithOffset(input, date, config = {}) {\n  if (!config._isUTC) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  const res = cloneDate(date); // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n\n  /** @type {?} */\n\n  const offsetDiff = (config._offset || 0) * 60000;\n  /** @type {?} */\n\n  const diff = input.valueOf() - res.valueOf() + offsetDiff; // Use low-level api, because this fn is low-level api.\n\n  res.setTime(res.valueOf() + diff); // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getDateOffset(date) {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n} // HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\n\n/**\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction getUTCOffset(date, config = {}) {\n  /** @type {?} */\n  const _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initMinute() {\n  // FORMATTING\n  addFormatToken('m', ['mm', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getMinutes(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initMillisecond() {\n  addFormatToken('S', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n  });\n  addFormatToken(null, ['SS', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n  });\n  addFormatToken(null, ['SSS', 3, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getMilliseconds(date, opts.isUTC).toString(10);\n  });\n  addFormatToken(null, ['SSSS', 4, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n  });\n  addFormatToken(null, ['SSSSS', 5, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n  });\n  addFormatToken(null, ['SSSSSS', 6, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  /** @type {?} */\n\n  let token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  /**\n   * @param {?} input\n   * @param {?} array\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  function parseMs(input, array, config) {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n    return config;\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initHour() {\n  // FORMATTING\n  // FORMATTING\n\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n  function hFormat(date, isUTC) {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n\n\n  function kFormat(date, isUTC) {\n    return getHours(date, isUTC) || 24;\n  }\n\n  addFormatToken('H', ['HH', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getHours(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('h', ['hh', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return hFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('k', ['kk', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return kFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('hmm', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _h = hFormat(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}`;\n  });\n  addFormatToken('hmmss', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _h = hFormat(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    /** @type {?} */\n\n\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}${_ss}`;\n  });\n  addFormatToken('Hmm', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _H = getHours(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}`;\n  });\n  addFormatToken('Hmmss', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _H = getHours(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    /** @type {?} */\n\n\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}${_ss}`;\n  });\n  /**\n   * @param {?} token\n   * @param {?} lowercase\n   * @return {?}\n   */\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, null, null,\n    /**\n    * @param {?} date\n    * @param {?} opts\n    * @return {?}\n    */\n    function (date, opts) {\n      return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PARSING\n\n  /**\n   * @param {?} isStrict\n   * @param {?} locale\n   * @return {?}\n   */\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n    return config;\n  });\n  addParseToken(['a', 'A'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n    return config;\n  });\n  addParseToken(['h', 'hh'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmm',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmmss',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos1 = input.length - 4;\n    /** @type {?} */\n\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('Hmm',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    return config;\n  });\n  addParseToken('Hmmss',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos1 = input.length - 4;\n    /** @type {?} */\n\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst locales = {};\n/** @type {?} */\n\nconst localeFamilies = {};\n/** @type {?} */\n\nlet globalLocale;\n/**\n * @param {?} key\n * @return {?}\n */\n\nfunction normalizeLocale(key) {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n} // pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\n\n/**\n * @param {?} names\n * @return {?}\n */\n\n\nfunction chooseLocale(names) {\n  /** @type {?} */\n  let next;\n  /** @type {?} */\n\n  let locale;\n  /** @type {?} */\n\n  let i = 0;\n\n  while (i < names.length) {\n    /** @type {?} */\n    const split = normalizeLocale(names[i]).split('-');\n    /** @type {?} */\n\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n\n      if (locale) {\n        return locale;\n      }\n\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n\n      j--;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * @param {?} parentConfig\n * @param {?} childConfig\n * @return {?}\n */\n\n\nfunction mergeConfigs(parentConfig, childConfig) {\n  /** @type {?} */\n  const res = Object.assign({}, parentConfig);\n\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[\n      /** @type {?} */\n      childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[\n      /** @type {?} */\n      childProp] = childConfig[childProp];\n    } else {\n      delete res[\n      /** @type {?} */\n      childProp];\n    }\n  }\n\n  for (const parentProp in parentConfig) {\n    if (hasOwnProp(parentConfig, parentProp) && !hasOwnProp(childConfig, parentProp) && isObject(parentConfig[\n    /** @type {?} */\n    parentProp])) {\n      // make sure changes to properties don't modify parent config\n      res[\n      /** @type {?} */\n      parentProp] = Object.assign({}, res[\n      /** @type {?} */\n      parentProp]);\n    }\n  }\n\n  return res;\n}\n/**\n * @param {?} name\n * @return {?}\n */\n\n\nfunction loadLocale(name) {\n  // no way!\n\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    // tslint:disable-next-line\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`); // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n} // This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\n\n/**\n * @param {?=} key\n * @param {?=} values\n * @return {?}\n */\n\n\nfunction getSetGlobalLocale(key, values) {\n  /** @type {?} */\n  let data;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction defineLocale(name, config) {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n  /** @type {?} */\n\n\n  let parentConfig = baseConfig;\n  config.abbr = name;\n\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n\n      localeFamilies[config.parentLocale].push({\n        name,\n        config\n      });\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    function (x) {\n      defineLocale(x.name, x.config);\n    });\n  } // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n\n\n  getSetGlobalLocale(name);\n  return locales[name];\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction updateLocale(name, config) {\n  /** @type {?} */\n  let _config = config;\n\n  if (_config != null) {\n    /** @type {?} */\n    let parentConfig = baseConfig; // MERGE\n\n    /** @type {?} */\n\n    const tmpLocale = loadLocale(name);\n\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n\n    _config = mergeConfigs(parentConfig, _config);\n    /** @type {?} */\n\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale; // backwards compat for now: also set the locale\n\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n} // returns locale data\n\n/**\n * @param {?=} key\n * @return {?}\n */\n\n\nfunction getLocale(key) {\n  setDefaultLocale();\n\n  if (!key) {\n    return globalLocale;\n  } // let locale;\n\n  /** @type {?} */\n\n\n  const _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n/**\n * @return {?}\n */\n\n\nfunction listLocales() {\n  return Object.keys(locales);\n}\n/**\n * @return {?}\n */\n\n\nfunction setDefaultLocale() {\n  if (locales[`en`]) {\n    return undefined;\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    ordinal(num) {\n      /** @type {?} */\n      const b = num % 10;\n      /** @type {?} */\n\n      const output = toInt(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return num + output;\n    }\n\n  });\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\n\nconst ɵ0 =\n/**\n* @param {?} mem\n* @param {?} order\n* @return {?}\n*/\n(mem, order) => {\n  mem[order] = true;\n  return mem;\n};\n/** @type {?} */\n\n\nconst orderingHash = ordering.reduce(ɵ0, {});\n/**\n * @param {?} duration\n * @return {?}\n */\n\nfunction isDurationValid(duration) {\n  /** @type {?} */\n  const durationKeys = Object.keys(duration);\n\n  if (durationKeys.some(\n  /**\n  * @param {?} key\n  * @return {?}\n  */\n  key => {\n    return key in orderingHash && duration[key] === null || isNaN(duration[key]);\n  })) {\n    return false;\n  } // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n  /** @type {?} */\n\n\n  let unitHasDecimal = false;\n\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} number\n * @return {?}\n */\n\n\nfunction absCeil(number) {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} dur\n * @return {?}\n */\n\n\nfunction bubble(dur) {\n  /** @type {?} */\n  let milliseconds = dur._milliseconds;\n  /** @type {?} */\n\n  let days = dur._days;\n  /** @type {?} */\n\n  let months = dur._months;\n  /** @type {?} */\n\n  const data = dur._data; // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n\n  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  } // The following code bubbles up values, see the tests for\n  // examples of what that means.\n\n\n  data.milliseconds = milliseconds % 1000;\n  /** @type {?} */\n\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n  /** @type {?} */\n\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n  /** @type {?} */\n\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n  days += absFloor(hours / 24); // convert days to months\n\n  /** @type {?} */\n\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n  /** @type {?} */\n\n  const years = absFloor(months / 12);\n  months %= 12;\n  data.day = days;\n  data.month = months;\n  data.year = years;\n  return dur;\n}\n/**\n * @param {?} day\n * @return {?}\n */\n\n\nfunction daysToMonths(day) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n/**\n * @param {?} month\n * @return {?}\n */\n\n\nfunction monthsToDays(month) {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nlet round = Math.round;\n/** @type {?} */\n\nconst thresholds = {\n  ss: 44,\n  // a few seconds to seconds\n  s: 45,\n  // seconds to minute\n  m: 45,\n  // minutes to hour\n  h: 22,\n  // hours to day\n  d: 26,\n  // days to month\n  M: 11 // months to year\n\n}; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n/**\n * @param {?} str\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} isFuture\n * @param {?} locale\n * @return {?}\n */\n\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n/**\n * @param {?} posNegDuration\n * @param {?} withoutSuffix\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n  /** @type {?} */\n  const duration = createDuration(posNegDuration).abs();\n  /** @type {?} */\n\n  const seconds = round(duration.as('s'));\n  /** @type {?} */\n\n  const minutes = round(duration.as('m'));\n  /** @type {?} */\n\n  const hours = round(duration.as('h'));\n  /** @type {?} */\n\n  const days = round(duration.as('d'));\n  /** @type {?} */\n\n  const months = round(duration.as('M'));\n  /** @type {?} */\n\n  const years = round(duration.as('y'));\n  /** @type {?} */\n\n  const a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n  /** @type {?} */\n\n  const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale]; // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass Duration {\n  /**\n   * @param {?} duration\n   * @param {?=} config\n   */\n  constructor(duration, config = {}) {\n    this._data = {};\n    this._locale = getLocale();\n    this._locale = config && config._locale || getLocale(); // const normalizedInput = normalizeObjectUnits(duration);\n\n    /** @type {?} */\n\n    const normalizedInput = duration;\n    /** @type {?} */\n\n    const years = normalizedInput.year || 0;\n    /** @type {?} */\n\n    const quarters = normalizedInput.quarter || 0;\n    /** @type {?} */\n\n    const months = normalizedInput.month || 0;\n    /** @type {?} */\n\n    const weeks = normalizedInput.week || 0;\n    /** @type {?} */\n\n    const days = normalizedInput.day || 0;\n    /** @type {?} */\n\n    const hours = normalizedInput.hours || 0;\n    /** @type {?} */\n\n    const minutes = normalizedInput.minutes || 0;\n    /** @type {?} */\n\n    const seconds = normalizedInput.seconds || 0;\n    /** @type {?} */\n\n    const milliseconds = normalizedInput.milliseconds || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60 * 1000 + // 1000 * 60\n    hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12; // this._data = {};\n    // this._locale = getLocale();\n    // this._bubble();\n\n    return bubble(this);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  isValid() {\n    return this._isValid;\n  }\n  /**\n   * @param {?=} withSuffix\n   * @return {?}\n   */\n\n\n  humanize(withSuffix) {\n    // throw new Error(`TODO: implement`);\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n    /** @type {?} */\n\n\n    const locale = this.localeData();\n    /** @type {?} */\n\n    let output = relativeTime(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  localeData() {\n    return this._locale;\n  }\n  /**\n   * @param {?=} localeKey\n   * @return {?}\n   */\n\n\n  locale(localeKey) {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n\n    this._locale = getLocale(localeKey) || this._locale;\n    return this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  abs() {\n    /** @type {?} */\n    const mathAbs = Math.abs;\n    /** @type {?} */\n\n    const data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n    return this;\n  }\n  /**\n   * @param {?} _units\n   * @return {?}\n   */\n\n\n  as(_units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    /** @type {?} */\n\n\n    let days;\n    /** @type {?} */\n\n    let months;\n    /** @type {?} */\n\n    const milliseconds = this._milliseconds;\n    /** @type {?} */\n\n    const units = normalizeUnits(_units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    } // handle milliseconds separately because of floating point math errors (issue #1867)\n\n\n    days = this._days + Math.round(monthsToDays(this._months));\n\n    switch (units) {\n      case 'week':\n        return days / 7 + milliseconds / 6048e5;\n\n      case 'day':\n        return days + milliseconds / 864e5;\n\n      case 'hours':\n        return days * 24 + milliseconds / 36e5;\n\n      case 'minutes':\n        return days * 1440 + milliseconds / 6e4;\n\n      case 'seconds':\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  valueOf() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n}\n/**\n * @param {?} obj\n * @return {?}\n */\n\n\nfunction isDuration(obj) {\n  return obj instanceof Duration;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction isValid(config) {\n  if (config._isValid == null) {\n    /** @type {?} */\n    const flags = getParsingFlags(config);\n    /** @type {?} */\n\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts,\n    /**\n    * @param {?} i\n    * @return {?}\n    */\n    function (i) {\n      return i != null;\n    });\n    /** @type {?} */\n\n    let isNowValid = !isNaN(config._d && config._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n    if (config._strict) {\n      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n/**\n * @param {?} config\n * @param {?=} flags\n * @return {?}\n */\n\n\nfunction createInvalid(config, flags) {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || {\n    userInvalidated: true\n  });\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction markInvalid(config) {\n  config._isValid = false;\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\n\n/** @type {?} */\n\n\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/; // tslint:disable-next-line\n\n/** @type {?} */\n\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n/** @type {?} */\n\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n/** @type {?} */\n\nconst isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/, true], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/, true], ['YYYYMMDD', /\\d{8}/, true], // YYYYMM is NOT allowed by the standard\n['GGGG[W]WWE', /\\d{4}W\\d{3}/, true], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/, true]]; // iso time formats and regexes\n\n/** @type {?} */\n\nconst isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n/** @type {?} */\n\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n/** @type {?} */\n\nconst obsOffsets = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n}; // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\n\n/** @type {?} */\n\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/; // date from iso format\n\n/**\n * @param {?} config\n * @return {?}\n */\n\nfunction configFromISO(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const input = config._i;\n  /** @type {?} */\n\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n  /** @type {?} */\n\n  let allowTime;\n  /** @type {?} */\n\n  let dateFormat;\n  /** @type {?} */\n\n  let timeFormat;\n  /** @type {?} */\n\n  let tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n    return config;\n  } // getParsingFlags(config).iso = true;\n\n  /** @type {?} */\n\n\n  let i;\n  /** @type {?} */\n\n  let l;\n\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n  return configFromStringAndFormat(config);\n} // tslint:disable-next-line\n\n/**\n * @param {?} yearStr\n * @param {?} monthStr\n * @param {?} dayStr\n * @param {?} hourStr\n * @param {?} minuteStr\n * @param {?} secondStr\n * @return {?}\n */\n\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  /** @type {?} */\n  const result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n/**\n * @param {?} yearStr\n * @return {?}\n */\n\n\nfunction untruncateYear(yearStr) {\n  /** @type {?} */\n  const year = parseInt(yearStr, 10);\n  return year <= 49 ? year + 2000 : year;\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction preprocessRFC2822(str) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n/**\n * @param {?} weekdayStr\n * @param {?} parsedInput\n * @param {?} config\n * @return {?}\n */\n\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\n    /** @type {?} */\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    /** @type {?} */\n\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {?} obsOffset\n * @param {?} militaryOffset\n * @param {?} numOffset\n * @return {?}\n */\n\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    /** @type {?} */\n    const hm = parseInt(numOffset, 10);\n    /** @type {?} */\n\n    const m = hm % 100;\n    /** @type {?} */\n\n    const h = (hm - m) / 100;\n    return h * 60 + m;\n  }\n} // date and time from ref 2822 format\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromRFC2822(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n  /** @type {?} */\n\n\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n  config._d = createUTCDate.apply(null, config._a);\n\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n  return config;\n} // date from iso format or fallback\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromString(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n    return config;\n  } // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n\n  configFromISO(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  } // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n\n\n  return createInvalid(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\n\n\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n  /** @type {?} */\n  const _locale = getLocale(locale || 'en');\n\n  if (!_locale) {\n    throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n  }\n  /** @type {?} */\n\n\n  const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n  /** @type {?} */\n\n\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n} // format date using native date object\n\n/**\n * @param {?} date\n * @param {?} _format\n * @param {?} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\n\n\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n  /** @type {?} */\n\n\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n/**\n * @param {?} _format\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction expandFormat(_format, locale) {\n  /** @type {?} */\n  let format = _format;\n  /** @type {?} */\n\n  let i = 5;\n  /** @type {?} */\n\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  /** @type {?} */\n\n  const replaceLongDateFormatTokens =\n  /**\n  * @param {?} input\n  * @return {?}\n  */\n  input => {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Pick the first defined of two or three arguments.\n\n/**\n * @template T\n * @param {?=} a\n * @param {?=} b\n * @param {?=} c\n * @return {?}\n */\n\n\nfunction defaults(a, b, c) {\n  if (a != null) {\n    return a;\n  }\n\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction currentDateArray(config) {\n  /** @type {?} */\n  const nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n} // convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromArray(config) {\n  /** @type {?} */\n  const input = [];\n  /** @type {?} */\n\n  let i;\n  /** @type {?} */\n\n  let date;\n  /** @type {?} */\n\n  let currentDate;\n  /** @type {?} */\n\n  let expectedWeekday;\n  /** @type {?} */\n\n  let yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  currentDate = currentDateArray(config); // compute day of the year from weeks and weekdays\n\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  } // if the day of the year is set, figure out what it is\n\n\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  } // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n\n\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  } // Zero out whatever was not defaulted, including time\n\n\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n  } // Check for 24:00:00.000\n\n\n  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  } // check for mismatching day of week\n\n\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction dayOfYearFromWeekInfo(config) {\n  /** @type {?} */\n  let w;\n  /** @type {?} */\n\n  let weekYear;\n  /** @type {?} */\n\n  let week;\n  /** @type {?} */\n\n  let weekday;\n  /** @type {?} */\n\n  let dow;\n  /** @type {?} */\n\n  let doy;\n  /** @type {?} */\n\n  let temp;\n  /** @type {?} */\n\n  let weekdayOverflow;\n  w = config._w;\n\n  if (w.GG != null || w.W != null || w.E != null) {\n    dow = 1;\n    doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w.W, 1);\n    weekday = defaults(w.E, 1);\n\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n    /** @type {?} */\n\n    const curWeek = weekOfYear(new Date(), dow, doy);\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n    week = defaults(w.w, curWeek.week);\n\n    if (w.d != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w.d;\n\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w.e != null) {\n      // local weekday -- counting starts from begining of week\n      weekday = w.e + dow;\n\n      if (w.e < 0 || w.e > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to begining of week\n      weekday = dow;\n    }\n  }\n\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction checkOverflow(config) {\n  /** @type {?} */\n  let overflow;\n  /** @type {?} */\n\n  const a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\n\n/** @type {?} */\n\n\nconst ISO_8601 = 'ISO_8601'; // constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\n\n/** @type {?} */\n\nconst RFC_2822 = 'RFC_2822'; // date from string and format string\n\n/**\n * @param {?} config\n * @return {?}\n */\n\nfunction configFromStringAndFormat(config) {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || !config._i && config._i !== 0) {\n    return config;\n  } // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n  /** @type {?} */\n\n\n  let input = config._i.toString();\n  /** @type {?} */\n\n\n  let totalParsedInputLength = 0;\n  /** @type {?} */\n\n  const inputLength = input.length;\n  /** @type {?} */\n\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n  /** @type {?} */\n\n  let i;\n  /** @type {?} */\n\n  let token;\n  /** @type {?} */\n\n  let parsedInput;\n  /** @type {?} */\n\n  let skipped;\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    } // don't parse if it's not a known token\n\n\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  } // add remaining unparsed input length to the string\n\n\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  } // clear _12h flag if hour is <= 12\n\n\n  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n  configFromArray(config);\n  return checkOverflow(config);\n}\n/**\n * @param {?} locale\n * @param {?} _hour\n * @param {?} meridiem\n * @return {?}\n */\n\n\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n  /** @type {?} */\n  let hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  } // Fallback\n\n  /** @type {?} */\n\n\n  const isPm = locale.isPM(meridiem);\n\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// date from string and array of format strings\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromStringAndArray(config) {\n  /** @type {?} */\n  let tempConfig;\n  /** @type {?} */\n\n  let bestMoment;\n  /** @type {?} */\n\n  let scoreToBeat;\n  /** @type {?} */\n\n  let currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n    return createInvalid(config);\n  }\n  /** @type {?} */\n\n\n  let i;\n\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    } // if there is any input that was not parsed add a penalty for that format\n\n\n    currentScore += getParsingFlags(tempConfig).charsLeftOver; // or tokens\n\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromObject(config) {\n  if (config._d) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const input = config._i;\n\n  if (isObject(input)) {\n    /** @type {?} */\n    const i = normalizeObjectUnits(\n    /** @type {?} */\n    input);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds] // todo: obsolete -> remove it\n    .map(\n    /**\n    * @param {?} obj\n    * @return {?}\n    */\n    obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n\n  return configFromArray(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction createFromConfig(config) {\n  /** @type {?} */\n  const res = checkOverflow(prepareConfig(config)); // todo: remove, in moment.js it's never called cuz of moment constructor\n\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n\n  if (!isValid(Object.assign({}, res, {\n    _isValid: null\n  }))) {\n    res._d = new Date(NaN);\n  } // todo: update offset\n\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n\n  return res;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction prepareConfig(config) {\n  /** @type {?} */\n  let input = config._i;\n  /** @type {?} */\n\n  const format = config._f;\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || format === undefined && input === '') {\n    return createInvalid(config, {\n      nullInput: true\n    });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n    return config;\n  } // todo: add check for recursion\n\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromInput(config) {\n  /** @type {?} */\n  const input = config._i;\n\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray(input) && input.length) {\n    /** @type {?} */\n    const _arr = input.slice(0);\n\n    config._a = _arr.map(\n    /**\n    * @param {?} obj\n    * @return {?}\n    */\n    obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n  /** @type {?} */\n  const config = {};\n  /** @type {?} */\n\n  let _input = input; // params switch -> skip; test it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n  // todo: fail fast and return not valid date\n\n  if (isObject(_input) && isObjectEmpty(_input) || isArray(_input) && _input.length === 0) {\n    _input = undefined;\n  } // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n\n\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n  return createFromConfig(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n  if (isDate(input)) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n  return config._d;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n\n  return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction absRound(num) {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isAfter(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isBefore(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n/**\n * @param {?} date\n * @param {?} daysDisabled\n * @return {?}\n */\n\n\nfunction isDisabledDay(date, daysDisabled) {\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n\n  return daysDisabled.some(\n  /**\n  * @param {?} day\n  * @return {?}\n  */\n  day => day === date.getDay());\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isSame(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n  /** @type {?} */\n\n\n  const inputMs = date2.valueOf();\n  return startOf(date1, units).valueOf() <= inputMs && inputMs <= endOf(date1, units).valueOf();\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\n\n/** @type {?} */\n\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * @param {?=} input\n * @param {?=} key\n * @param {?=} config\n * @return {?}\n */\n\nfunction createDuration(input, key, config = {}) {\n  /** @type {?} */\n  const duration = convertDuration(input, key); // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n/**\n * @param {?} input\n * @param {?} key\n * @return {?}\n */\n\n\nfunction convertDuration(input, key) {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? {\n      [key]: input\n    } : {\n      milliseconds: input\n    };\n  }\n\n  if (isString(input)) {\n    /** @type {?} */\n    let match = aspNetRegex.exec(input);\n\n    if (match) {\n      /** @type {?} */\n      const sign = match[1] === '-' ? -1 : 1;\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n\n    if (match) {\n      /** @type {?} */\n      const sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n  }\n\n  if (isObject(input) && ('from' in input || 'to' in input)) {\n    /** @type {?} */\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n} // createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\n/**\n * @param {?} inp\n * @param {?} sign\n * @return {?}\n */\n\n\nfunction parseIso(inp, sign) {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n\n  /** @type {?} */\n  const res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\n\n\nfunction positiveMomentsDifference(base, other) {\n  /** @type {?} */\n  const res = {\n    milliseconds: 0,\n    months: 0\n  };\n  res.months = getMonth(other) - getMonth(base) + (getFullYear(other) - getFullYear(base)) * 12;\n  /** @type {?} */\n\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +add(cloneDate(base), res.months, 'month');\n  return res;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\n\n\nfunction momentsDifference(base, other) {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return {\n      milliseconds: 0,\n      months: 0\n    };\n  }\n  /** @type {?} */\n\n\n  let res;\n  /** @type {?} */\n\n  const _other = cloneWithOffset(other, base, {\n    _offset: base.getTimezoneOffset()\n  });\n\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction add(date, val, period, isUTC) {\n  /** @type {?} */\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, 1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction subtract(date, val, period, isUTC) {\n  /** @type {?} */\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, -1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} duration\n * @param {?} isAdding\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction addSubtract(date, duration, isAdding, isUTC) {\n  /** @type {?} */\n  const milliseconds = duration._milliseconds;\n  /** @type {?} */\n\n  const days = absRound(duration._days);\n  /** @type {?} */\n\n  const months = absRound(duration._months); // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date); // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfWeek() {\n  // FORMATTING\n  addFormatToken('d', null, 'do',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('dd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('ddd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('dddd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdays(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('e', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getLocaleDayOfWeek(date, opts.locale, opts.isUTC).toString(10); // return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('E', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getISODayOfWeek(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    /** @type {?} */\n    const weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = !!input;\n    }\n\n    return config;\n  });\n  addWeekParseToken(['d', 'e', 'E'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token] = toInt(input);\n    return config;\n  });\n} // HELPERS\n\n/**\n * @param {?} input\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction parseWeekday(input, locale) {\n  if (!isString(input)) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  const _num = parseInt(input, 10);\n\n  if (!isNaN(_num)) {\n    return _num;\n  }\n  /** @type {?} */\n\n\n  const _weekDay = locale.weekdaysParse(input);\n\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n/**\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\n\n\nfunction parseIsoWeekday(input, locale = getLocale()) {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n  /** @type {?} */\n  const day = getDay(date, isUTC);\n  /** @type {?} */\n\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDayOfWeek(date, isUTC) {\n  return getDay(date, isUTC);\n}\n/**\n * ****************************************\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n// todo: utc\n// getSetLocaleDayOfWeek\n\n\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\n\n\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n  /** @type {?} */\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n  return add(date, input - weekday, 'day');\n} // getSetISODayOfWeek\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISODayOfWeek(date, isUTC) {\n  return getDay(date, isUTC) || 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\n\n\nfunction setISODayOfWeek(date, input, opts = {}) {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  /** @type {?} */\n  const weekday = parseIsoWeekday(input, opts.locale);\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\n/** @type {?} */\n\n\nconst symbolMap = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠'\n};\n/** @type {?} */\n\nconst numberMap = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0'\n};\n/** @type {?} */\n\nconst pluralForm =\n/**\n* @param {?} num\n* @return {?}\n*/\nfunction (num) {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\n/** @type {?} */\n\n\nconst plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\n/** @type {?} */\n\nconst pluralize =\n/**\n* @param {?} u\n* @return {?}\n*/\nfunction (u) {\n  return (\n    /**\n    * @param {?} num\n    * @param {?} withoutSuffix\n    * @return {?}\n    */\n    function (num, withoutSuffix) {\n      /** @type {?} */\n      const f = pluralForm(num);\n      /** @type {?} */\n\n      let str = plurals[u][pluralForm(num)];\n\n      if (f === 2) {\n        str = str[withoutSuffix ? 0 : 1];\n      }\n\n      return (\n        /** @type {?} */\n        str.replace(/%d/i, num.toString())\n      );\n    }\n  );\n};\n/** @type {?} */\n\n\nconst months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n/** @type {?} */\n\nconst arLocale = {\n  abbr: 'ar',\n  months,\n  monthsShort: months,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /ص|م/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return 'م' === input;\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    } else {\n      return 'م';\n    }\n  },\n\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  preparse(str) {\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return numberMap[match];\n    }).replace(/،/g, ',');\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  postformat(str) {\n    return str.replace(/\\d/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, '،');\n  },\n\n  week: {\n    dow: 6,\n    // Saturday is the first day of the week.\n    doy: 12 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n\nconst ɵ0$1 =\n/**\n* @param {?} d\n* @return {?}\n*/\nfunction (d) {\n  switch (d) {\n    case 0:\n    case 3:\n    case 6:\n      return '[В изминалата] dddd [в] LT';\n\n    case 1:\n    case 2:\n    case 4:\n    case 5:\n      return '[В изминалия] dddd [в] LT';\n  }\n};\n/** @type {?} */\n\n\nconst bgLocale = {\n  abbr: 'bg',\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek: ɵ0$1,\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    ss: '%d секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal:\n  /**\n  * @param {?} _num\n  * @return {?}\n  */\n  function (_num) {\n    /** @type {?} */\n    const number = Number(_num);\n    /** @type {?} */\n\n    let lastDigit = number % 10;\n    /** @type {?} */\n\n    let last2Digits = number % 100;\n\n    if (number === 0) {\n      return number + '-ев';\n    } else if (last2Digits === 0) {\n      return number + '-ен';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ти';\n    } else if (lastDigit === 1) {\n      return number + '-ви';\n    } else if (lastDigit === 2) {\n      return number + '-ри';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-ми';\n    } else {\n      return number + '-ти';\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n\n/** @type {?} */\n\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_');\n/** @type {?} */\n\nlet monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n/** @type {?} */\n\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\n/** @type {?} */\n\nlet monthsRegex = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n/** @type {?} */\n\nconst caLocale = {\n  abbr: 'ca',\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    const output = num > 4 ? 'é' : num === 1 || num === 3 ? 'r' : num === 2 ? 'n' : num === 4 ? 't' : 'é';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\n/** @type {?} */\n\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\n/** @type {?} */\n\nconst monthsShort$1 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n\n    // break;\n  }\n}\n\nconst ɵ0$2 =\n/**\n* @param {?} months\n* @param {?} monthsShort\n* @return {?}\n*/\nfunction (months, monthsShort) {\n  /** @type {?} */\n  let i;\n  /** @type {?} */\n\n  let _monthsParse = [];\n\n  for (i = 0; i < 12; i++) {\n    // use custom parser to solve problem with July (červenec)\n    _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n  }\n\n  return _monthsParse;\n},\n      ɵ1 =\n/**\n* @param {?} monthsShort\n* @return {?}\n*/\nfunction (monthsShort) {\n  /** @type {?} */\n  let i;\n  /** @type {?} */\n\n  let _shortMonthsParse = [];\n\n  for (i = 0; i < 12; i++) {\n    _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n  }\n\n  return _shortMonthsParse;\n},\n      ɵ2 =\n/**\n* @param {?} months\n* @return {?}\n*/\nfunction (months) {\n  /** @type {?} */\n  let i;\n  /** @type {?} */\n\n  let _longMonthsParse = [];\n\n  for (i = 0; i < 12; i++) {\n    _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n  }\n\n  return _longMonthsParse;\n};\n/** @type {?} */\n\n\nconst csLocale = {\n  abbr: 'cs',\n  months: months$1,\n  monthsShort: monthsShort$1,\n  monthsParse: ɵ0$2(months$1, monthsShort$1),\n  shortMonthsParse: ɵ1(monthsShort$1),\n  longMonthsParse: ɵ2(months$1),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n\n        case 3:\n          return '[ve středu v] LT';\n\n        case 4:\n          return '[ve čtvrtek v] LT';\n\n        case 5:\n          return '[v pátek v] LT';\n\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n\n    lastDay: '[včera v] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n\n        case 3:\n          return '[minulou středu v] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\n/** @type {?} */\n\nconst daLocale = {\n  abbr: 'da',\n  months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n  weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n  weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'på dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[i] dddd[s kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'få sekunder',\n    m: 'et minut',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dage',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'et år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction processRelativeTime(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const format = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n/** @type {?} */\n\n\nconst deLocale = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\n/** @type {?} */\n\nconst enGbLocale = {\n  abbr: 'en-gb',\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    const b = num % 10;\n    /** @type {?} */\n\n    const output = ~~(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\n/** @type {?} */\n\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nlet monthsParse$1 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\n\nlet monthsRegex$1 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\n\nconst esDoLocale = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$2[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$1[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$1,\n  monthsShortRegex: monthsRegex$1,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$1,\n  longMonthsParse: monthsParse$1,\n  shortMonthsParse: monthsParse$1,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\n/** @type {?} */\n\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nlet monthsParse$2 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\n\nlet monthsRegex$2 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\n\nconst esLocale = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$2;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$3[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$2[getMonth(date, isUTC)];\n  },\n\n  monthsRegex: monthsRegex$2,\n  monthsShortRegex: monthsRegex$2,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$2,\n  longMonthsParse: monthsParse$2,\n  shortMonthsParse: monthsParse$2,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\n/** @type {?} */\n\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nlet monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nconst esUsLocale = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$3;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$4[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$3[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n\n/** @type {?} */\n\nconst processRelativeTime$1 =\n/**\n* @param {?} num\n* @param {?} withoutSuffix\n* @param {?} key\n* @param {?} isFuture\n* @return {?}\n*/\nfunction (num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const format = {\n    s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n    ss: [num + 'sekundi', num + 'sekundit'],\n    m: ['ühe minuti', 'üks minut'],\n    mm: [num + ' minuti', num + ' minutit'],\n    h: ['ühe tunni', 'tund aega', 'üks tund'],\n    hh: [num + ' tunni', num + ' tundi'],\n    d: ['ühe päeva', 'üks päev'],\n    M: ['kuu aja', 'kuu aega', 'üks kuu'],\n    MM: [num + ' kuu', num + ' kuud'],\n    y: ['ühe aasta', 'aasta', 'üks aasta'],\n    yy: [num + ' aasta', num + ' aastat']\n  };\n\n  if (withoutSuffix) {\n    return format[key][2] ? format[key][2] : format[key][1];\n  }\n\n  return isFuture ? format[key][0] : format[key][1];\n};\n/** @type {?} */\n\n\nconst etLocale = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Täna,] LT',\n    nextDay: '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay: '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pärast',\n    past: '%s tagasi',\n    s: processRelativeTime$1,\n    ss: processRelativeTime$1,\n    m: processRelativeTime$1,\n    mm: processRelativeTime$1,\n    h: processRelativeTime$1,\n    hh: processRelativeTime$1,\n    d: processRelativeTime$1,\n    dd: '%d päeva',\n    M: processRelativeTime$1,\n    MM: processRelativeTime$1,\n    y: processRelativeTime$1,\n    yy: processRelativeTime$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\n/** @type {?} */\n\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');\n/** @type {?} */\n\nvar numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$1(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = '';\n\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n/**\n * @param {?} num\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction verbalNumber(num, isFuture) {\n  return num < 10 ? isFuture ? numbersFuture[num] : numbersPast[num] : num;\n}\n/** @type {?} */\n\n\nconst fiLocale = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate$1,\n    ss: translate$1,\n    m: translate$1,\n    mm: translate$1,\n    h: translate$1,\n    hh: translate$1,\n    d: translate$1,\n    dd: translate$1,\n    M: translate$1,\n    MM: translate$1,\n    y: translate$1,\n    yy: translate$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\n/** @type {?} */\n\nconst frLocale = {\n  abbr: 'fr',\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n      // Words with masculine grammatical gender: mois, trimestre, jour\n\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n      // Words with feminine grammatical gender: semaine\n\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\n\n/** @type {?} */\n\nlet monthsShortDot$4 = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_');\n/** @type {?} */\n\nlet monthsShort$5 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\n/** @type {?} */\n\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nlet monthsRegex$3 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nconst glLocale = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$4;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$5[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$4[getMonth(date, isUTC)];\n  },\n\n  monthsRegex: monthsRegex$3,\n  monthsShortRegex: monthsRegex$3,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$3,\n  longMonthsParse: monthsParse$3,\n  shortMonthsParse: monthsParse$3,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoxe á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañan á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[onte á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[o] dddd [pasado á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\n/** @type {?} */\n\nconst heLocale = {\n  abbr: 'he',\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    ss: '%d שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    hh(num) {\n      if (num === 2) {\n        return 'שעתיים';\n      }\n\n      return num + ' שעות';\n    },\n\n    d: 'יום',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    dd(num) {\n      if (num === 2) {\n        return 'יומיים';\n      }\n\n      return num + ' ימים';\n    },\n\n    M: 'חודש',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    MM(num) {\n      if (num === 2) {\n        return 'חודשיים';\n      }\n\n      return num + ' חודשים';\n    },\n\n    y: 'שנה',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    yy(num) {\n      if (num === 2) {\n        return 'שנתיים';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' שנה';\n      }\n\n      return num + ' שנים';\n    }\n\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    } else {\n      return 'בערב';\n    }\n  }\n\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\n/** @type {?} */\n\nlet symbolMap$1 = {\n  1: '१',\n  2: '२',\n  3: '३',\n  4: '४',\n  5: '५',\n  6: '६',\n  7: '७',\n  8: '८',\n  9: '९',\n  0: '०'\n};\n/** @type {?} */\n\nlet numberMap$1 = {\n  '१': '1',\n  '२': '2',\n  '३': '3',\n  '४': '4',\n  '५': '5',\n  '६': '6',\n  '७': '7',\n  '८': '8',\n  '९': '9',\n  '०': '0'\n};\n/** @type {?} */\n\nconst hiLocale = {\n  abbr: 'hi',\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    ss: '%d सेकंड',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष'\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  preparse(str) {\n    return str.replace(/[१२३४५६७८९०]/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return numberMap$1[match];\n    });\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  postformat(str) {\n    return str.replace(/\\d/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return symbolMap$1[match];\n    });\n  },\n\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\n/** @type {?} */\n\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';\n\n    case 'ss':\n      return num + (isFuture || withoutSuffix ? ' másodperc' : ' másodperce');\n\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n\n  return '';\n}\n/**\n * @param {?} date\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction week(date, isFuture) {\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n/** @type {?} */\n\n\nconst huLocale = {\n  abbr: 'hu',\n  months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'YYYY.MM.DD.',\n    LL: 'YYYY. MMMM D.',\n    LLL: 'YYYY. MMMM D. H:mm',\n    LLLL: 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n\n  calendar: {\n    sameDay: '[ma] LT[-kor]',\n    nextDay: '[holnap] LT[-kor]',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return week(date, true);\n    },\n\n    lastDay: '[tegnap] LT[-kor]',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return week(date, false);\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s múlva',\n    past: '%s',\n    s: translate$2,\n    ss: translate$2,\n    m: translate$2,\n    mm: translate$2,\n    h: translate$2,\n    hh: translate$2,\n    d: translate$2,\n    dd: translate$2,\n    M: translate$2,\n    MM: translate$2,\n    y: translate$2,\n    yy: translate$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n\n/** @type {?} */\n\nconst hrLocale = {\n  abbr: 'hr',\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[Jučer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    const b = num % 10;\n    /** @type {?} */\n\n    const output = ~~(num % 100 / 10) === 1 ? '.' : b === 1 ? '.' : b === 2 ? '.' : b === 3 ? '.' : '.';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\n/** @type {?} */\n\nconst idLocale = {\n  abbr: 'id',\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Besok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kemarin pukul] LT',\n    lastWeek: 'dddd [lalu pukul] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lalu',\n    s: 'beberapa detik',\n    ss: '%d detik',\n    m: 'semenit',\n    mm: '%d menit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun'\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\n/** @type {?} */\n\nconst itLocale = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    future(num) {\n      return (/^[0-9].+$/.test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\n/** @type {?} */\n\nconst jaLocale = {\n  abbr: 'ja',\n  months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日 HH:mm',\n    LLLL: 'YYYY年M月D日 HH:mm dddd',\n    l: 'YYYY/MM/DD',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日 HH:mm dddd'\n  },\n  meridiemParse: /午前|午後/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return input === '午後';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    } else {\n      return '午後';\n    }\n  },\n\n  calendar: {\n    sameDay: '[今日] LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[来週]dddd LT',\n    lastDay: '[昨日] LT',\n    lastWeek: '[前週]dddd LT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}日/,\n\n  /**\n   * @param {?} num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      default:\n        return num.toString(10);\n    }\n  },\n\n  relativeTime: {\n    future: '%s後',\n    past: '%s前',\n    s: '数秒',\n    ss: '%d秒',\n    m: '1分',\n    mm: '%d分',\n    h: '1時間',\n    hh: '%d時間',\n    d: '1日',\n    dd: '%d日',\n    M: '1ヶ月',\n    MM: '%dヶ月',\n    y: '1年',\n    yy: '%d年'\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\n/** @type {?} */\n\nconst koLocale = {\n  abbr: 'ko',\n  months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'YYYY.MM.DD',\n    LL: 'YYYY년 MMMM D일',\n    LLL: 'YYYY년 MMMM D일 A h:mm',\n    LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n    l: 'YYYY.MM.DD',\n    ll: 'YYYY년 MMMM D일',\n    lll: 'YYYY년 MMMM D일 A h:mm',\n    llll: 'YYYY년 MMMM D일 dddd A h:mm'\n  },\n  calendar: {\n    sameDay: '오늘 LT',\n    nextDay: '내일 LT',\n    nextWeek: 'dddd LT',\n    lastDay: '어제 LT',\n    lastWeek: '지난주 dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s 후',\n    past: '%s 전',\n    s: '몇 초',\n    ss: '%d초',\n    m: '1분',\n    mm: '%d분',\n    h: '한 시간',\n    hh: '%d시간',\n    d: '하루',\n    dd: '%d일',\n    M: '한 달',\n    MM: '%d달',\n    y: '일 년',\n    yy: '%d년'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n  ordinal:\n  /**\n  * @param {?} num\n  * @param {?} period\n  * @return {?}\n  */\n  function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '일';\n\n      case 'M':\n        return num + '월';\n\n      case 'w':\n      case 'W':\n        return num + '주';\n\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse: /오전|오후/,\n  isPM:\n  /**\n  * @param {?} token\n  * @return {?}\n  */\n  function (token) {\n    return token === '오후';\n  },\n  meridiem:\n  /**\n  * @param {?} hour\n  * @param {?} minute\n  * @param {?} isUpper\n  * @return {?}\n  */\n  function (hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n\n/** @type {?} */\n\nconst units = {\n  ss: 'sekundė_sekundžių_sekundes',\n  m: 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h: 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d: 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M: 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y: 'metai_metų_metus',\n  yy: 'metai_metų_metus'\n};\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n  if (withoutSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n  return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction special(num) {\n  return num % 10 === 0 || num > 10 && num < 20;\n}\n/**\n * @param {?} key\n * @return {?}\n */\n\n\nfunction forms(key) {\n  return (\n    /** @type {?} */\n    units[key].split('_')\n  );\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  let result = num + ' ';\n\n  if (num === 1) {\n    return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n    return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\n/** @type {?} */\n\n\nconst ltLocale = {\n  abbr: 'lt',\n  months: {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays: {\n    format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n    standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n    isFormat: /dddd HH:mm/\n  },\n  weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY [m.] MMMM D [d.]',\n    LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n    l: 'YYYY-MM-DD',\n    ll: 'YYYY [m.] MMMM D [d.]',\n    lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar: {\n    sameDay: '[Šiandien] LT',\n    nextDay: '[Rytoj] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[Vakar] LT',\n    lastWeek: '[Praėjusį] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'po %s',\n    past: 'prieš %s',\n    s: translateSeconds,\n    ss: translate$3,\n    m: translateSingular,\n    mm: translate$3,\n    h: translateSingular,\n    hh: translate$3,\n    d: translateSingular,\n    dd: translate$3,\n    M: translateSingular,\n    MM: translate$3,\n    y: translateSingular,\n    yy: translate$3\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n\n  /**\n   * @param {?} num\n   * @return {?}\n   */\n  ordinal(num) {\n    return num + '-oji';\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n\n/** @type {?} */\n\nconst lvLocale = {\n  abbr: 'lv',\n  months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'pēc %s',\n    past: 'pirms %s',\n    s: 'dažām sekundēm',\n    ss: '%d sekundēm',\n    m: 'minūtes',\n    mm: '%d minūtēm',\n    h: 'stundas',\n    hh: '%d stundām',\n    d: 'dienas',\n    dd: '%d dienām',\n    M: 'mēneša',\n    MM: '%d mēnešiem',\n    y: 'gada',\n    yy: '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n\n  /**\n   * @param {?} num\n   * @return {?}\n   */\n  ordinal(num) {\n    return num + '.';\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n\n    case 'ss':\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\n\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' минут' : ' минутын');\n\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\n\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' сар' : ' сарын');\n\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\n\n    default:\n      return num.toString(10);\n  }\n}\n/** @type {?} */\n\n\nconst mnLocale = {\n  abbr: 'mn',\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY оны MMMMын D',\n    LLL: 'YYYY оны MMMMын D HH:mm',\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n  },\n  meridiemParse: /ҮӨ|ҮХ/i,\n  isPM:\n  /**\n  * @param {?} input\n  * @return {?}\n  */\n  function (input) {\n    return input === 'ҮХ';\n  },\n  meridiem:\n  /**\n  * @param {?} hour\n  * @param {?} minute\n  * @param {?} isLower\n  * @return {?}\n  */\n  function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ҮӨ';\n    } else {\n      return 'ҮХ';\n    }\n  },\n  calendar: {\n    sameDay: '[Өнөөдөр] LT',\n    nextDay: '[Маргааш] LT',\n    nextWeek: '[Ирэх] dddd LT',\n    lastDay: '[Өчигдөр] LT',\n    lastWeek: '[Өнгөрсөн] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s дараа',\n    past: '%s өмнө',\n    s: translate$4,\n    ss: translate$4,\n    m: translate$4,\n    mm: translate$4,\n    h: translate$4,\n    hh: translate$4,\n    d: translate$4,\n    dd: translate$4,\n    M: translate$4,\n    MM: translate$4,\n    y: translate$4,\n    yy: translate$4\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n  ordinal:\n  /**\n  * @param {?} num\n  * @param {?} period\n  * @return {?}\n  */\n  function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' өдөр';\n\n      default:\n        return num.toString(10);\n    }\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\n/** @type {?} */\n\nconst nbLocale = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n/** @type {?} */\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\n\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\n\nlet monthsParse$4 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nlet monthsRegex$4 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nconst nlBeLocale = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$4,\n  monthsShortRegex: monthsRegex$4,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$4,\n  longMonthsParse: monthsParse$4,\n  shortMonthsParse: monthsParse$4,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n/** @type {?} */\n\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\n\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\n\nlet monthsParse$5 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nlet monthsRegex$5 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nconst nlLocale = {\n  abbr: 'nl',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots$1[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$5,\n  monthsShortRegex: monthsRegex$5,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$5,\n  longMonthsParse: monthsParse$5,\n  shortMonthsParse: monthsParse$5,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\n/** @type {?} */\n\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\n/** @type {?} */\n\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$1(num) {\n  return num % 10 < 5 && num % 10 > 1 && ~~(num / 10) % 10 !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction translate$5(num, withoutSuffix, key) {\n  /** @type {?} */\n  let result = num + ' ';\n\n  switch (key) {\n    case 'ss':\n      return result + (plural$1(num) ? 'sekundy' : 'sekund');\n\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n\n    case 'mm':\n      return result + (plural$1(num) ? 'minuty' : 'minut');\n\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n\n    case 'hh':\n      return result + (plural$1(num) ? 'godziny' : 'godzin');\n\n    case 'MM':\n      return result + (plural$1(num) ? 'miesiące' : 'miesięcy');\n\n    case 'yy':\n      return result + (plural$1(num) ? 'lata' : 'lat');\n  }\n}\n/** @type {?} */\n\n\nconst plLocale = {\n  abbr: 'pl',\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  months(date, format, isUTC) {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielę o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W środę o] LT';\n\n        case 5:\n          return '[W piątek o] LT';\n\n        case 6:\n          return '[W sobotę o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n\n    lastDay: '[Wczoraj o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n\n        case 3:\n          return '[W zeszłą środę o] LT';\n\n        case 4:\n          return '[W zeszłą czwartek o] LT';\n\n        case 5:\n          return '[W zeszłą piątek o] LT';\n\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate$5,\n    m: translate$5,\n    mm: translate$5,\n    h: translate$5,\n    hh: translate$5,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate$5,\n    y: 'rok',\n    yy: translate$5\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n/** @type {?} */\n\nconst ptBrLocale = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday\n      '[Última] dddd [às] LT'; // Monday - Friday\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n  /** @type {?} */\n  let format = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n  /** @type {?} */\n\n  let separator = ' ';\n\n  if (num % 100 >= 20 || num >= 100 && num % 100 === 0) {\n    separator = ' de ';\n  }\n\n  return num + separator + format[key];\n}\n/** @type {?} */\n\n\nconst roLocale = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    ss: relativeTimeWithPlural,\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o oră',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lună',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$2(word, num) {\n  /** @type {?} */\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n  /** @type {?} */\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n\n  return num + ' ' + plural$2(format[key], +num);\n}\n/** @type {?} */\n\n\nlet monthsParse$6 = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; // http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n\n/** @type {?} */\n\nconst ruLocale = {\n  abbr: 'ru',\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse: monthsParse$6,\n  longMonthsParse: monthsParse$6,\n  shortMonthsParse: monthsParse$6,\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n\n    /**\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    nextWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n\n    /**\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    lastWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural$1,\n    m: relativeTimeWithPlural$1,\n    mm: relativeTimeWithPlural$1,\n    h: 'час',\n    hh: relativeTimeWithPlural$1,\n    d: 'день',\n    dd: relativeTimeWithPlural$1,\n    M: 'месяц',\n    MM: relativeTimeWithPlural$1,\n    y: 'год',\n    yy: relativeTimeWithPlural$1\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      case 'w':\n      case 'W':\n        return num + '-я';\n\n      default:\n        return num.toString(10);\n    }\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\n\n/** @type {?} */\n\nconst months$2 = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\n/** @type {?} */\n\nconst monthsShort$6 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$3(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'sekundy' : 'sekúnd');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'minúty' : 'minút');\n      } else {\n        return result + 'minútami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'hodiny' : 'hodín');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'deň' : 'dňom';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'dni' : 'dní');\n      } else {\n        return result + 'dňami';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'mesiace' : 'mesiacov');\n      } else {\n        return result + 'mesiacmi';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokom';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'roky' : 'rokov');\n      } else {\n        return result + 'rokmi';\n      }\n\n    // break;\n  }\n}\n/** @type {?} */\n\n\nconst skLocale = {\n  abbr: 'sk',\n  months: months$2,\n  monthsShort: monthsShort$6,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n\n        case 3:\n          return '[v stredu o] LT';\n\n        case 4:\n          return '[vo štvrtok o] LT';\n\n        case 5:\n          return '[v piatok o] LT';\n\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n\n    lastDay: '[včera o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n\n        case 3:\n          return '[minulú stredu o] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate$6,\n    ss: translate$6,\n    m: translate$6,\n    mm: translate$6,\n    h: translate$6,\n    hh: translate$6,\n    d: translate$6,\n    dd: translate$6,\n    M: translate$6,\n    MM: translate$6,\n    y: translate$6,\n    yy: translate$6\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\n/**\n * @param {?} number\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = number + ' ';\n\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n\n      return result;\n\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n\n      return result;\n\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n\n      return result;\n\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n\n      return result;\n\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n\n      return result;\n\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n\n      return result;\n  }\n}\n/** @type {?} */\n\n\nconst slLocale = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[v] [sredo] [ob] LT';\n\n        case 6:\n          return '[v] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n\n    lastDay: '[včeraj ob] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime$2,\n    ss: processRelativeTime$2,\n    m: processRelativeTime$2,\n    mm: processRelativeTime$2,\n    h: processRelativeTime$2,\n    hh: processRelativeTime$2,\n    d: processRelativeTime$2,\n    dd: processRelativeTime$2,\n    M: processRelativeTime$2,\n    MM: processRelativeTime$2,\n    y: processRelativeTime$2,\n    yy: processRelativeTime$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\n/** @type {?} */\n\nconst svLocale = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    let b = num % 10;\n    /** @type {?} */\n\n    let output = ~~(num % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\n/** @type {?} */\n\nconst thLocale = {\n  abbr: 'th',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  // yes, three characters difference\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n\n/** @type {?} */\n\nlet suffixes = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı'\n};\n/** @type {?} */\n\nconst trLocale = {\n  abbr: 'tr',\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    if (num === 0) {\n      // special case for zero\n      return num + '\\'ıncı';\n    }\n    /** @type {?} */\n\n\n    let a = num % 10;\n    /** @type {?} */\n\n    let b = num % 100 - a;\n    /** @type {?} */\n\n    let c = num >= 100 ? 100 : null;\n    return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$4(word, num) {\n  /** @type {?} */\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n  /** @type {?} */\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  }\n\n  if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n\n  return num + ' ' + plural$4(format[key], +num);\n}\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction weekdaysCaseReplace(date, format, isUTC) {\n  /** @type {?} */\n  let weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  };\n\n  if (!date) {\n    return weekdays.nominative;\n  }\n  /** @type {?} */\n\n\n  let nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction processHoursFunction(str) {\n  return (\n    /**\n    * @param {?} date\n    * @return {?}\n    */\n    function (date) {\n      return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n    }\n  );\n}\n/** @type {?} */\n\n\nconst ukLocale = {\n  abbr: 'uk',\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [')(date);\n\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [')(date);\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural$2,\n    m: relativeTimeWithPlural$2,\n    mm: relativeTimeWithPlural$2,\n    h: 'годину',\n    hh: relativeTimeWithPlural$2,\n    d: 'день',\n    dd: relativeTimeWithPlural$2,\n    M: 'місяць',\n    MM: relativeTimeWithPlural$2,\n    y: 'рік',\n    yy: relativeTimeWithPlural$2\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      default:\n        return num.toString();\n    }\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\n/** @type {?} */\n\nconst viLocale = {\n  abbr: 'vi',\n  months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /sa|ch/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^ch$/i.test(input);\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [năm] YYYY',\n    LLL: 'D MMMM [năm] YYYY HH:mm',\n    LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n    l: 'DD/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần trước lúc] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s tới',\n    past: '%s trước',\n    s: 'vài giây',\n    ss: '%d giây',\n    m: 'một phút',\n    mm: '%d phút',\n    h: 'một giờ',\n    hh: '%d giờ',\n    d: 'một ngày',\n    dd: '%d ngày',\n    M: 'một tháng',\n    MM: '%d tháng',\n    y: 'một năm',\n    yy: '%d năm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    return '' + _num;\n  },\n\n  week: {\n    dow: 1,\n    // Thứ Hai là ngày đầu tuần.\n    doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\n/** @type {?} */\n\nconst zhCnLocale = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日Ah点mm分',\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\n    l: 'YYYY/M/D',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    /** @type {?} */\n    let hm = hour * 100 + minute;\n\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      case 'M':\n        return num + '月';\n\n      case 'w':\n      case 'W':\n        return num + '周';\n\n      default:\n        return num.toString();\n    }\n  },\n\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    ss: '%d 秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, startOf, subtract, svLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale, createDate as ɵa };","map":{"version":3,"names":["mod","n","x","absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","prop","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","sign","_sign","_zeros","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","makeFormatFunction","format","array","match","formatArr","i","removeFormattingTokens","isUTC","offset","output","j","replace","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","unix","valueOf","getFirstDayOfMonth","isFirstDayOfWeek","firstDayOfWeek","isSameMonth","date1","date2","isSameYear","isSameDay","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","_strict","RegExp","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","config","addWeekParseToken","_w","addTimeToArrayFromToken","_a","initDayOfMonth","_dayOfMonthOrdinalParse","_ordinalParse","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","getYear","initYear","parseTwoDigitYear","parseInt","daysInYear","year","isLeapYear","daysInMonth","month","NaN","modMonth","_year","initMonth","monthsShort","months","monthsShortRegex","monthsRegex","_locale","monthsParse","defaultTimeUnit","day","seconds","shiftDate","assign","min","setFullDate","getNum","milliseconds","def","setMonth","dayOfMonth","setUTCMonth","setHours","setUTCHours","setMinutes","setUTCMinutes","setSeconds","setUTCSeconds","setMilliseconds","setUTCMilliseconds","setDate","setUTCDate","setTime","cloneDate","startOf","_date","setLocaleDayOfWeek","setISODayOfWeek","endOf","start","_step","add","res","subtract","initDayOfYear","getDayOfYear","_dayOfYear","someDate","oneDay","round","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","dayOfYear","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultMonthsShortRegex","defaultMonthsRegex","Locale","constructor","set","confKey","key","_config","calendar","now","_calendar","sameElse","longDateFormat","_longDateFormat","formatUpper","toUpperCase","val","slice","invalidDate","_invalidDate","_ordinal","preparse","postformat","relativeTime","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","_months","standalone","isFormat","test","_monthsShort","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","computeMonthsParse","_monthsStrictRegex","_monthsRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfYear","weekdays","_weekdays","_key","weekdaysMin","_weekdaysMin","weekdaysShort","_weekdaysShort","weekdaysParse","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","setDayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","isPM","charAt","hours","minutes","isLower","formatLongDate","llc","toLocaleLowerCase","ii","mom","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","defaultInvalidDate","defaultLocaleWeek","defaultLocaleMeridiemParse","defaultRelativeTime","future","past","ss","mm","hh","dd","MM","yy","baseConfig","dayOfMonthOrdinalParse","meridiemParse","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","initWeek","getWeek","getISOWeek","getLocale","initWeekYear","getWeekYear","getISOWeekYear","addWeekYearFormatToken","_getWeekYearFormatCb","_getISOWeekYearFormatCb","getter","initTimezone","initTimestamp","_d","parseFloat","initSecond","initQuarter","getQuarter","addOffsetFormatToken","separator","getUTCOffset","_isUTC","_offset","initOffset","_useUTC","_tzm","offsetFromString","chunkOffset","matcher","matches","chunk","parts","_min","cloneWithOffset","offsetDiff","getDateOffset","getTimezoneOffset","initMinute","initMillisecond","parseMs","initHour","hFormat","kFormat","_h","_mm","_ss","_H","lowercase","matchMeridiem","_meridiemParse","kInput","_isPm","_meridiem","bigHour","pos","pos1","pos2","locales","localeFamilies","globalLocale","normalizeLocale","chooseLocale","names","next","loadLocale","mergeConfigs","parentConfig","childConfig","childProp","parentProp","name","console","error","getSetGlobalLocale","values","data","defineLocale","_abbr","abbr","parentLocale","forEach","updateLocale","tmpLocale","setDefaultLocale","listLocales","keys","initDayOfWeek","ordering","ɵ0","mem","order","orderingHash","reduce","isDurationValid","duration","durationKeys","some","unitHasDecimal","absCeil","number","bubble","dur","_milliseconds","days","_days","_data","monthsToDays","monthsFromDays","daysToMonths","years","thresholds","substituteTimeAgo","posNegDuration","createDuration","as","Duration","quarters","quarter","weeks","_isValid","isValid","humanize","withSuffix","localeData","localeKey","mathAbs","_units","Error","isDuration","flags","parsedParts","isNowValid","invalidWeekday","isFrozen","createInvalid","markInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","exec","allowTime","dateFormat","timeFormat","tzFormat","l","_f","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","trim","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","configFromString","formatDate","_format","formatMoment","expandFormat","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","currentDateArray","nowValue","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_overflowDayOfYear","_nextDay","w","weekYear","temp","weekdayOverflow","GG","W","E","curWeek","gg","e","_overflowWeeks","_overflowWeekday","checkOverflow","ISO_8601","RFC_2822","totalParsedInputLength","inputLength","skipped","meridiemFixWrap","_hour","meridiemHour","isPm","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","map","createFromConfig","prepareConfig","_l","configFromInput","_arr","createLocalOrUTC","_input","parseDate","utcAsLocal","absRound","isAfter","isBefore","isDisabledDay","daysDisabled","isSame","inputMs","aspNetRegex","isoRegex","convertDuration","parseIso","diffRes","momentsDifference","from","to","inp","positiveMomentsDifference","base","other","_basePlus","_other","period","addSubtract","isAdding","getLocaleDayOfWeek","getISODayOfWeek","parseWeekday","_num","_weekDay","parseIsoWeekday","getDayOfWeek","symbolMap","numberMap","pluralForm","plurals","pluralize","u","f","arLocale","weekdaysParseExact","ɵ0$1","bgLocale","Number","lastDigit","last2Digits","monthsShortDot","caLocale","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","months$1","monthsShort$1","plural","translate","ɵ0$2","ɵ1","ɵ2","csLocale","daLocale","processRelativeTime","deLocale","monthsParseExact","enGbLocale","monthsShortDot$1","monthsShort$2","monthsParse$1","monthsRegex$1","esDoLocale","monthsShortDot$2","monthsShort$3","monthsParse$2","monthsRegex$2","esLocale","monthsShortDot$3","monthsShort$4","esUsLocale","processRelativeTime$1","etLocale","numbersPast","numbersFuture","translate$1","verbalNumber","fiLocale","ll","lll","llll","frLocale","monthsShortDot$4","monthsShort$5","monthsParse$3","monthsRegex$3","glLocale","heLocale","symbolMap$1","numberMap$1","hiLocale","weekEndings","translate$2","huLocale","hrLocale","idLocale","itLocale","jaLocale","koLocale","isUpper","translateSeconds","translateSingular","forms","special","translate$3","ltLocale","lvLocale","translate$4","mnLocale","nbLocale","monthsShortWithDots","monthsShortWithoutDots","monthsParse$4","monthsRegex$4","nlBeLocale","monthsShortWithDots$1","monthsShortWithoutDots$1","monthsParse$5","monthsRegex$5","nlLocale","monthsNominative","monthsSubjective","plural$1","translate$5","plLocale","ptBrLocale","relativeTimeWithPlural","roLocale","plural$2","word","relativeTimeWithPlural$1","monthsParse$6","ruLocale","months$2","monthsShort$6","plural$3","translate$6","skLocale","processRelativeTime$2","slLocale","svLocale","thLocale","suffixes","trLocale","plural$4","relativeTimeWithPlural$2","weekdaysCaseReplace","nominative","accusative","genitive","nounCase","processHoursFunction","ukLocale","viLocale","zhCnLocale","ɵa"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/ngx-bootstrap/__ivy_ngcc__/chronos/fesm2015/ngx-bootstrap-chronos.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} n\n * @param {?} x\n * @return {?}\n */\nfunction mod(n, x) {\n    return (n % x + x) % x;\n}\n/**\n * @param {?} num\n * @return {?}\n */\nfunction absFloor(num) {\n    return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} str\n * @return {?}\n */\nfunction isString(str) {\n    return typeof str === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDate(value) {\n    return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction isDateValid(date) {\n    return date && date.getTime && !isNaN(date.getTime());\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction isFunction(fn) {\n    return (fn instanceof Function ||\n        Object.prototype.toString.call(fn) === '[object Function]');\n}\n/**\n * @param {?=} value\n * @return {?}\n */\nfunction isNumber(value) {\n    return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n/**\n * @template T\n * @param {?=} input\n * @return {?}\n */\nfunction isArray(input) {\n    return (input instanceof Array ||\n        Object.prototype.toString.call(input) === '[object Array]');\n}\n/**\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction hasOwnProp(a /*object*/, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n/**\n * @template T\n * @param {?} input\n * @return {?}\n */\nfunction isObject(input /*object*/) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return (input != null && Object.prototype.toString.call(input) === '[object Object]');\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    }\n    /** @type {?} */\n    let k;\n    for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isUndefined(input) {\n    return input === void 0;\n}\n/**\n * @template T\n * @param {?} argumentForCoercion\n * @return {?}\n */\nfunction toInt(argumentForCoercion) {\n    /** @type {?} */\n    const coercedNumber = +argumentForCoercion;\n    /** @type {?} */\n    let value = 0;\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst aliases = {};\n/** @type {?} */\nconst _mapUnits = {\n    date: 'day',\n    hour: 'hours',\n    minute: 'minutes',\n    second: 'seconds',\n    millisecond: 'milliseconds'\n};\n/**\n * @param {?} unit\n * @param {?} shorthand\n * @return {?}\n */\nfunction addUnitAlias(unit, shorthand) {\n    /** @type {?} */\n    const lowerCase = unit.toLowerCase();\n    /** @type {?} */\n    let _unit = unit;\n    if (lowerCase in _mapUnits) {\n        _unit = _mapUnits[lowerCase];\n    }\n    aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n/**\n * @param {?} units\n * @return {?}\n */\nfunction normalizeUnits(units) {\n    return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n/**\n * @param {?} inputObject\n * @return {?}\n */\nfunction normalizeObjectUnits(inputObject) {\n    /** @type {?} */\n    const normalizedInput = {};\n    /** @type {?} */\n    let normalizedProp;\n    /** @type {?} */\n    let prop;\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n    return (/** @type {?} */ (normalizedInput));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// place in new Date([array])\n/** @type {?} */\nconst YEAR = 0;\n/** @type {?} */\nconst MONTH = 1;\n/** @type {?} */\nconst DATE = 2;\n/** @type {?} */\nconst HOUR = 3;\n/** @type {?} */\nconst MINUTE = 4;\n/** @type {?} */\nconst SECOND = 5;\n/** @type {?} */\nconst MILLISECOND = 6;\n/** @type {?} */\nconst WEEK = 7;\n/** @type {?} */\nconst WEEKDAY = 8;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} num\n * @param {?} targetLength\n * @param {?=} forceSign\n * @return {?}\n */\nfunction zeroFill(num, targetLength, forceSign) {\n    /** @type {?} */\n    const absNumber = `${Math.abs(num)}`;\n    /** @type {?} */\n    const zerosToFill = targetLength - absNumber.length;\n    /** @type {?} */\n    const sign = num >= 0;\n    /** @type {?} */\n    const _sign = sign ? (forceSign ? '+' : '') : '-';\n    // todo: this is crazy slow\n    /** @type {?} */\n    const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n    return (_sign + _zeros + absNumber);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet formatFunctions = {};\n/** @type {?} */\nlet formatTokenFunctions = {};\n// tslint:disable-next-line\n/** @type {?} */\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\n/**\n * @param {?} token\n * @param {?} padded\n * @param {?} ordinal\n * @param {?} callback\n * @return {?}\n */\nfunction addFormatToken(token, padded, ordinal, callback) {\n    if (token) {\n        formatTokenFunctions[token] = callback;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = (/**\n         * @return {?}\n         */\n        function () {\n            return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n        });\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = (/**\n         * @param {?} date\n         * @param {?} opts\n         * @return {?}\n         */\n        function (date, opts) {\n            return opts.locale.ordinal(callback.apply(null, arguments), token);\n        });\n    }\n}\n/**\n * @param {?} format\n * @return {?}\n */\nfunction makeFormatFunction(format) {\n    /** @type {?} */\n    const array = format.match(formattingTokens);\n    /** @type {?} */\n    const length = array.length;\n    /** @type {?} */\n    const formatArr = new Array(length);\n    for (let i = 0; i < length; i++) {\n        formatArr[i] = formatTokenFunctions[array[i]]\n            ? formatTokenFunctions[array[i]]\n            : removeFormattingTokens(array[i]);\n    }\n    return (/**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} isUTC\n     * @param {?=} offset\n     * @return {?}\n     */\n    function (date, locale, isUTC, offset = 0) {\n        /** @type {?} */\n        let output = '';\n        for (let j = 0; j < length; j++) {\n            output += isFunction(formatArr[j])\n                ? ((/** @type {?} */ (formatArr[j]))).call(null, date, { format, locale, isUTC, offset })\n                : formatArr[j];\n        }\n        return output;\n    });\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @return {?}\n */\nfunction createUTCDate(y, m, d) {\n    /** @type {?} */\n    const date = new Date(Date.UTC.apply(null, arguments));\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @param {?=} h\n * @param {?=} M\n * @param {?=} s\n * @param {?=} ms\n * @return {?}\n */\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n    /** @type {?} */\n    const date = new Date(y, m, d, h, M, s, ms);\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getHours(date, isUTC = false) {\n    return isUTC ? date.getUTCHours() : date.getHours();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getMinutes(date, isUTC = false) {\n    return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getSeconds(date, isUTC = false) {\n    return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getMilliseconds(date, isUTC = false) {\n    return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getTime(date) {\n    return date.getTime();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDay(date, isUTC = false) {\n    return isUTC ? date.getUTCDay() : date.getDay();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDate(date, isUTC = false) {\n    return isUTC ? date.getUTCDate() : date.getDate();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getMonth(date, isUTC = false) {\n    return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getFullYear(date, isUTC = false) {\n    return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction unix(date) {\n    return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getFirstDayOfMonth(date) {\n    return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\n/**\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n    return date.getDay() === firstDayOfWeek;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction isSameMonth(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction isSameYear(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return getFullYear(date1) === getFullYear(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction isSameDay(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return (isSameYear(date1, date2) &&\n        isSameMonth(date1, date2) &&\n        getDate(date1) === getDate(date2));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst match1 = /\\d/;\n//       0 - 9\n/** @type {?} */\nconst match2 = /\\d\\d/;\n//      00 - 99\n/** @type {?} */\nconst match3 = /\\d{3}/;\n//     000 - 999\n/** @type {?} */\nconst match4 = /\\d{4}/;\n//    0000 - 9999\n/** @type {?} */\nconst match6 = /[+-]?\\d{6}/;\n// -999999 - 999999\n/** @type {?} */\nconst match1to2 = /\\d\\d?/;\n//       0 - 99\n/** @type {?} */\nconst match3to4 = /\\d\\d\\d\\d?/;\n//     999 - 9999\n/** @type {?} */\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/;\n//   99999 - 999999\n/** @type {?} */\nconst match1to3 = /\\d{1,3}/;\n//       0 - 999\n/** @type {?} */\nconst match1to4 = /\\d{1,4}/;\n//       0 - 9999\n/** @type {?} */\nconst match1to6 = /[+-]?\\d{1,6}/;\n// -999999 - 999999\n/** @type {?} */\nconst matchUnsigned = /\\d+/;\n//       0 - inf\n/** @type {?} */\nconst matchSigned = /[+-]?\\d+/;\n// +00:00 -00:00 +0000 -0000 or Z\n/** @type {?} */\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi;\n// +00 -00 +00:00 -00:00 +0000 -0000 or Z\n/** @type {?} */\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/;\n// 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\n/** @type {?} */\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n/** @type {?} */\nconst regexes = {};\n/**\n * @param {?} token\n * @param {?} regex\n * @param {?=} strictRegex\n * @return {?}\n */\nfunction addRegexToken(token, regex, strictRegex) {\n    if (isFunction(regex)) {\n        regexes[token] = regex;\n        return;\n    }\n    regexes[token] = (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    });\n}\n/**\n * @param {?} token\n * @param {?} locale\n * @return {?}\n */\nfunction getParseRegexForToken(token, locale) {\n    /** @type {?} */\n    const _strict = false;\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](_strict, locale);\n}\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n/**\n * @param {?} str\n * @return {?}\n */\nfunction unescapeFormat(str) {\n    // tslint:disable-next-line\n    return regexEscape(str\n        .replace('\\\\', '')\n        .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (/**\n     * @param {?} matched\n     * @param {?} p1\n     * @param {?} p2\n     * @param {?} p3\n     * @param {?} p4\n     * @return {?}\n     */\n    (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)));\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction regexEscape(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst tokens = {};\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\nfunction addParseToken(token, callback) {\n    /** @type {?} */\n    const _token = isString(token) ? [token] : token;\n    /** @type {?} */\n    let func = callback;\n    if (isNumber(callback)) {\n        func = (/**\n         * @param {?} input\n         * @param {?} array\n         * @param {?} config\n         * @return {?}\n         */\n        function (input, array, config) {\n            array[callback] = toInt(input);\n            return config;\n        });\n    }\n    if (isArray(_token) && isFunction(func)) {\n        /** @type {?} */\n        let i;\n        for (i = 0; i < _token.length; i++) {\n            tokens[_token[i]] = func;\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\nfunction addWeekParseToken(token, callback) {\n    addParseToken(token, (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @param {?} _token\n     * @return {?}\n     */\n    function (input, array, config, _token) {\n        config._w = config._w || {};\n        return callback(input, config._w, config, _token);\n    }));\n}\n/**\n * @param {?} token\n * @param {?} input\n * @param {?} config\n * @return {?}\n */\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initDayOfMonth() {\n    // FORMATTING\n    addFormatToken('D', ['DD', 2, false], 'Do', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getDate(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('date', 'D');\n    // PARSING\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n    }));\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty: false,\n        unusedTokens: [],\n        unusedInput: [],\n        overflow: -2,\n        charsLeftOver: 0,\n        nullInput: false,\n        invalidMonth: null,\n        invalidFormat: false,\n        userInvalidated: false,\n        iso: false,\n        parsedDateParts: [],\n        meridiem: null,\n        rfc2822: false,\n        weekdayMismatch: false\n    };\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction getParsingFlags(config) {\n    if (config._pf == null) {\n        config._pf = defaultParsingFlags();\n    }\n    return config._pf;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\nfunction getYear(date, opts) {\n    return getFullYear(date, opts.isUTC).toString();\n}\n/**\n * @return {?}\n */\nfunction initYear() {\n    addFormatToken('Y', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const y = getFullYear(date, opts.isUTC);\n        return y <= 9999 ? y.toString(10) : `+${y}`;\n    }));\n    addFormatToken(null, ['YY', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getFullYear(date, opts.isUTC) % 100).toString(10);\n    }));\n    addFormatToken(null, ['YYYY', 4, false], null, getYear);\n    addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n    addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n    // ALIASES\n    addUnitAlias('year', 'y');\n    // PARSING\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n        return config;\n    }));\n    addParseToken('YY', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[YEAR] = parseTwoDigitYear(input);\n        return config;\n    }));\n    addParseToken('Y', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[YEAR] = parseInt(input, 10);\n        return config;\n    }));\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction parseTwoDigitYear(input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: this is duplicate, source in date-getters.ts\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\nfunction daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    /** @type {?} */\n    const modMonth = mod(month, 12);\n    /** @type {?} */\n    const _year = year + (month - modMonth) / 12;\n    return modMonth === 1\n        ? isLeapYear(_year) ? 29 : 28\n        : (31 - modMonth % 7 % 2);\n}\n/**\n * @return {?}\n */\nfunction initMonth() {\n    // FORMATTING\n    addFormatToken('M', ['MM', 2, false], 'Mo', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMonth(date, opts.isUTC) + 1).toString(10);\n    }));\n    addFormatToken('MMM', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('MMMM', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.months(date, opts.format, opts.isUTC);\n    }));\n    // ALIASES\n    addUnitAlias('month', 'M');\n    // PARSING\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    }));\n    addRegexToken('MMMM', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    }));\n    addParseToken(['M', 'MM'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[MONTH] = toInt(input) - 1;\n        return config;\n    }));\n    addParseToken(['MMM', 'MMMM'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, array, config, token) {\n        /** @type {?} */\n        const month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        }\n        else {\n            getParsingFlags(config).invalidMonth = !!input;\n        }\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst defaultTimeUnit = {\n    year: 0,\n    month: 0,\n    day: 0,\n    hour: 0,\n    minute: 0,\n    seconds: 0\n};\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\nfunction shiftDate(date, unit) {\n    /** @type {?} */\n    const _unit = Object.assign({}, defaultTimeUnit, unit);\n    /** @type {?} */\n    const year = date.getFullYear() + (_unit.year || 0);\n    /** @type {?} */\n    const month = date.getMonth() + (_unit.month || 0);\n    /** @type {?} */\n    let day = date.getDate() + (_unit.day || 0);\n    if (_unit.month && !_unit.day) {\n        day = Math.min(day, daysInMonth(year, month));\n    }\n    return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\nfunction setFullDate(date, unit) {\n    return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n    getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\n/**\n * @param {?} def\n * @param {?=} num\n * @return {?}\n */\nfunction getNum(def, num) {\n    return isNumber(num) ? num : def;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setMonth(date, value, isUTC) {\n    /** @type {?} */\n    const dayOfMonth = Math.min(getDate(date), daysInMonth(getFullYear(date), value));\n    isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setHours(date, value, isUTC) {\n    isUTC ? date.setUTCHours(value) : date.setHours(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setMinutes(date, value, isUTC) {\n    isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setSeconds(date, value, isUTC) {\n    isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setMilliseconds(date, value, isUTC) {\n    isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setDate(date, value, isUTC) {\n    isUTC ? date.setUTCDate(value) : date.setDate(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @return {?}\n */\nfunction setTime(date, value) {\n    date.setTime(value);\n    return date;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\n/**\n * @param {?} date\n * @return {?}\n */\nfunction cloneDate(date) {\n    return new Date(date.getTime());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\nfunction startOf(date, unit, isUTC) {\n    /** @type {?} */\n    const _date = cloneDate(date);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (unit) {\n        case 'year':\n            setMonth(_date, 0, isUTC);\n        /* falls through */\n        case 'quarter':\n        case 'month':\n            setDate(_date, 1, isUTC);\n        /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            setHours(_date, 0, isUTC);\n        /* falls through */\n        case 'hours':\n            setMinutes(_date, 0, isUTC);\n        /* falls through */\n        case 'minutes':\n            setSeconds(_date, 0, isUTC);\n        /* falls through */\n        case 'seconds':\n            setMilliseconds(_date, 0, isUTC);\n    }\n    // weeks are a special case\n    if (unit === 'week') {\n        setLocaleDayOfWeek(_date, 0, { isUTC });\n    }\n    if (unit === 'isoWeek') {\n        setISODayOfWeek(_date, 1);\n    }\n    // quarters are also special\n    if (unit === 'quarter') {\n        setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n    }\n    return _date;\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\nfunction endOf(date, unit, isUTC) {\n    /** @type {?} */\n    let _unit = unit;\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (_unit === 'date') {\n        _unit = 'day';\n    }\n    /** @type {?} */\n    const start = startOf(date, _unit, isUTC);\n    /** @type {?} */\n    const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n    /** @type {?} */\n    const res = subtract(_step, 1, 'milliseconds', isUTC);\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initDayOfYear() {\n    // FORMATTING\n    addFormatToken('DDD', ['DDDD', 3, false], 'DDDo', (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return getDayOfYear(date)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('dayOfYear', 'DDD');\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._dayOfYear = toInt(input);\n        return config;\n    }));\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDayOfYear(date, isUTC) {\n    /** @type {?} */\n    const date1 = +startOf(date, 'day', isUTC);\n    /** @type {?} */\n    const date2 = +startOf(date, 'year', isUTC);\n    /** @type {?} */\n    const someDate = date1 - date2;\n    /** @type {?} */\n    const oneDay = 1000 * 60 * 60 * 24;\n    return Math.round(someDate / oneDay) + 1;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\nfunction firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    /** @type {?} */\n    const fwd = dow - doy + 7;\n    // first-week day local weekday -- which local weekday is fwd\n    /** @type {?} */\n    const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n    return -fwdlw + fwd - 1;\n}\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n/**\n * @param {?} year\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    /** @type {?} */\n    const localWeekday = (7 + weekday - dow) % 7;\n    /** @type {?} */\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    /** @type {?} */\n    const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n    /** @type {?} */\n    let resYear;\n    /** @type {?} */\n    let resDayOfYear;\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    }\n    else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    }\n    else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n/**\n * @param {?} date\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\nfunction weekOfYear(date, dow, doy, isUTC) {\n    /** @type {?} */\n    const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n    /** @type {?} */\n    const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n    /** @type {?} */\n    let resWeek;\n    /** @type {?} */\n    let resYear;\n    if (week < 1) {\n        resYear = getFullYear(date, isUTC) - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    }\n    else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n        resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n        resYear = getFullYear(date, isUTC) + 1;\n    }\n    else {\n        resYear = getFullYear(date, isUTC);\n        resWeek = week;\n    }\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\nfunction weeksInYear(year, dow, doy) {\n    /** @type {?} */\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    /** @type {?} */\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n/** @type {?} */\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n/** @type {?} */\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n/** @type {?} */\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n/** @type {?} */\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n/** @type {?} */\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n/** @type {?} */\nconst defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n/** @type {?} */\nconst defaultOrdinal = '%d';\n/** @type {?} */\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n/** @type {?} */\nconst defaultMonthsShortRegex = matchWord;\n/** @type {?} */\nconst defaultMonthsRegex = matchWord;\nclass Locale {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        if (!!config) {\n            this.set(config);\n        }\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    set(config) {\n        /** @type {?} */\n        let confKey;\n        for (confKey in config) {\n            if (!config.hasOwnProperty(confKey)) {\n                continue;\n            }\n            /** @type {?} */\n            const prop = config[(/** @type {?} */ (confKey))];\n            /** @type {?} */\n            const key = (/** @type {?} */ ((isFunction(prop) ? confKey : `_${confKey}`)));\n            this[key] = (/** @type {?} */ (prop));\n        }\n        this._config = config;\n    }\n    /**\n     * @param {?} key\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    calendar(key, date, now) {\n        /** @type {?} */\n        const output = this._calendar[key] || this._calendar.sameElse;\n        return isFunction(output) ? output.call(null, date, now) : output;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    longDateFormat(key) {\n        /** @type {?} */\n        const format = this._longDateFormat[key];\n        /** @type {?} */\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (/**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            return val.slice(1);\n        }));\n        return this._longDateFormat[key];\n    }\n    /**\n     * @return {?}\n     */\n    get invalidDate() {\n        return this._invalidDate;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set invalidDate(val) {\n        this._invalidDate = val;\n    }\n    /**\n     * @param {?} num\n     * @param {?=} token\n     * @return {?}\n     */\n    ordinal(num, token) {\n        return this._ordinal.replace('%d', num.toString(10));\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    preparse(str) {\n        return str;\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    postformat(str) {\n        return str;\n    }\n    /**\n     * @param {?} num\n     * @param {?} withoutSuffix\n     * @param {?} str\n     * @param {?} isFuture\n     * @return {?}\n     */\n    relativeTime(num, withoutSuffix, str, isFuture) {\n        /** @type {?} */\n        const output = this._relativeTime[str];\n        return (isFunction(output)) ?\n            output(num, withoutSuffix, str, isFuture) :\n            output.replace(/%d/i, num.toString(10));\n    }\n    /**\n     * @param {?} diff\n     * @param {?} output\n     * @return {?}\n     */\n    pastFuture(diff, output) {\n        /** @type {?} */\n        const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    months(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._months)\n                ? this._months\n                : this._months.standalone;\n        }\n        if (isArray(this._months)) {\n            return this._months[getMonth(date, isUTC)];\n        }\n        /** @type {?} */\n        const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n            ? 'format'\n            : 'standalone';\n        return this._months[key][getMonth(date, isUTC)];\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort.standalone;\n        }\n        if (isArray(this._monthsShort)) {\n            return this._monthsShort[getMonth(date, isUTC)];\n        }\n        /** @type {?} */\n        const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n        return this._monthsShort[key][getMonth(date, isUTC)];\n    }\n    /**\n     * @param {?} monthName\n     * @param {?=} format\n     * @param {?=} strict\n     * @return {?}\n     */\n    monthsParse(monthName, format, strict) {\n        /** @type {?} */\n        let date;\n        /** @type {?} */\n        let regex;\n        if (this._monthsParseExact) {\n            return this.handleMonthStrictParse(monthName, format, strict);\n        }\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(Date.UTC(2000, i));\n            if (strict && !this._longMonthsParse[i]) {\n                /** @type {?} */\n                const _months = this.months(date, '', true).replace('.', '');\n                /** @type {?} */\n                const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n                this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n                this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && ((/** @type {?} */ (this._longMonthsParse[i]))).test(monthName)) {\n                return i;\n            }\n            if (strict && format === 'MMM' && ((/** @type {?} */ (this._shortMonthsParse[i]))).test(monthName)) {\n                return i;\n            }\n            if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n    monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            }\n            return this._monthsRegex;\n        }\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n    monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            }\n            return this._monthsShortRegex;\n        }\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n    /**\n     * Week\n     * @param {?} date\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    week(date, isUTC) {\n        return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n    }\n    /**\n     * @return {?}\n     */\n    firstDayOfWeek() {\n        return this._week.dow;\n    }\n    /**\n     * @return {?}\n     */\n    firstDayOfYear() {\n        return this._week.doy;\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    weekdays(date, format, isUTC) {\n        if (!date) {\n            return isArray(this._weekdays)\n                ? this._weekdays\n                : this._weekdays.standalone;\n        }\n        if (isArray(this._weekdays)) {\n            return this._weekdays[getDay(date, isUTC)];\n        }\n        /** @type {?} */\n        const _key = this._weekdays.isFormat.test(format)\n            ? 'format'\n            : 'standalone';\n        return this._weekdays[_key][getDay(date, isUTC)];\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    weekdaysMin(date, format, isUTC) {\n        return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    weekdaysShort(date, format, isUTC) {\n        return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n    }\n    // proto.weekdaysParse  =        localeWeekdaysParse;\n    /**\n     * @param {?=} weekdayName\n     * @param {?=} format\n     * @param {?=} strict\n     * @return {?}\n     */\n    weekdaysParse(weekdayName, format, strict) {\n        /** @type {?} */\n        let i;\n        /** @type {?} */\n        let regex;\n        if (this._weekdaysParseExact) {\n            return this.handleWeekStrictParse(weekdayName, format, strict);\n        }\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // fix: here is the issue\n            /** @type {?} */\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            if (!isArray(this._fullWeekdaysParse)\n                || !isArray(this._shortWeekdaysParse)\n                || !isArray(this._minWeekdaysParse)\n                || !isArray(this._weekdaysParse)) {\n                return;\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n    // proto.weekdaysRegex       =        weekdaysRegex;\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n    weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            }\n            else {\n                return this._weekdaysRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = matchWord;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n    // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n    // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n    /**\n     * @param {?=} isStrict\n     * @return {?}\n     */\n    weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            }\n            else {\n                return this._weekdaysShortRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = matchWord;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n    /**\n     * @param {?=} isStrict\n     * @return {?}\n     */\n    weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            }\n            else {\n                return this._weekdaysMinRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = matchWord;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return input.toLowerCase().charAt(0) === 'p';\n    }\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        }\n        return isLower ? 'am' : 'AM';\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    formatLongDate(key) {\n        this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n        /** @type {?} */\n        const format = this._longDateFormat[key];\n        /** @type {?} */\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => {\n            return val.slice(1);\n        }));\n        return this._longDateFormat[key];\n    }\n    /**\n     * @private\n     * @param {?} monthName\n     * @param {?} format\n     * @param {?=} strict\n     * @return {?}\n     */\n    handleMonthStrictParse(monthName, format, strict) {\n        /** @type {?} */\n        const llc = monthName.toLocaleLowerCase();\n        /** @type {?} */\n        let i;\n        /** @type {?} */\n        let ii;\n        /** @type {?} */\n        let mom;\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = new Date(2000, i);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n        if (strict) {\n            if (format === 'MMM') {\n                ii = ((/** @type {?} */ (this._shortMonthsParse))).indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            ii = ((/** @type {?} */ (this._longMonthsParse))).indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        if (format === 'MMM') {\n            ii = ((/** @type {?} */ (this._shortMonthsParse))).indexOf(llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = ((/** @type {?} */ (this._longMonthsParse))).indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        ii = ((/** @type {?} */ (this._longMonthsParse))).indexOf(llc);\n        if (ii !== -1) {\n            return ii;\n        }\n        ii = ((/** @type {?} */ (this._shortMonthsParse))).indexOf(llc);\n        return ii !== -1 ? ii : null;\n    }\n    /**\n     * @private\n     * @param {?} weekdayName\n     * @param {?} format\n     * @param {?} strict\n     * @return {?}\n     */\n    handleWeekStrictParse(weekdayName, format, strict) {\n        /** @type {?} */\n        let ii;\n        /** @type {?} */\n        const llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n            /** @type {?} */\n            let i;\n            for (i = 0; i < 7; ++i) {\n                /** @type {?} */\n                const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n                this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n            }\n        }\n        if (!isArray(this._weekdaysParse)\n            || !isArray(this._shortWeekdaysParse)\n            || !isArray(this._minWeekdaysParse)) {\n            return;\n        }\n        if (strict) {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n        else {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    computeMonthsParse() {\n        /** @type {?} */\n        const shortPieces = [];\n        /** @type {?} */\n        const longPieces = [];\n        /** @type {?} */\n        const mixedPieces = [];\n        /** @type {?} */\n        let date;\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(2000, i);\n            shortPieces.push(this.monthsShort(date, ''));\n            longPieces.push(this.months(date, ''));\n            mixedPieces.push(this.months(date, ''));\n            mixedPieces.push(this.monthsShort(date, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    computeWeekdaysParse() {\n        /** @type {?} */\n        const minPieces = [];\n        /** @type {?} */\n        const shortPieces = [];\n        /** @type {?} */\n        const longPieces = [];\n        /** @type {?} */\n        const mixedPieces = [];\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // let mom = createUTC([2000, 1]).day(i);\n            /** @type {?} */\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            /** @type {?} */\n            const minp = this.weekdaysMin(date);\n            /** @type {?} */\n            const shortp = this.weekdaysShort(date);\n            /** @type {?} */\n            const longp = this.weekdays(date);\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n        this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n        this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n    }\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction cmpLenRev(a, b) {\n    return b.length - a.length;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst defaultInvalidDate = 'Invalid date';\n/** @type {?} */\nconst defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n/** @type {?} */\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n/** @type {?} */\nconst defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n};\n/** @type {?} */\nconst baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} array1\n * @param {?} array2\n * @param {?} dontConvert\n * @return {?}\n */\nfunction compareArrays(array1, array2, dontConvert) {\n    /** @type {?} */\n    const len = Math.min(array1.length, array2.length);\n    /** @type {?} */\n    const lengthDiff = Math.abs(array1.length - array2.length);\n    /** @type {?} */\n    let diffs = 0;\n    /** @type {?} */\n    let i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i])\n            || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n/**\n * @return {?}\n */\nfunction initWeek() {\n    addFormatToken('w', ['ww', 2, false], 'wo', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getWeek(date, opts.locale)\n            .toString(10);\n    }));\n    addFormatToken('W', ['WW', 2, false], 'Wo', (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return getISOWeek(date)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n    // PARSING\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n        return config;\n    }));\n    // export function getSetWeek (input) {\n    //   var week = this.localeData().week(this);\n    //   return input == null ? week : this.add((input - week) * 7, 'd');\n    // }\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getWeek(date, locale = getLocale(), isUTC) {\n    return locale.week(date, isUTC);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getISOWeek(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n/**\n * @return {?}\n */\nfunction initWeekYear() {\n    addFormatToken(null, ['gg', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        // return this.weekYear() % 100;\n        return (getWeekYear(date, opts.locale) % 100).toString();\n    }));\n    addFormatToken(null, ['GG', 2, false], null, (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        // return this.isoWeekYear() % 100;\n        return (getISOWeekYear(date) % 100).toString();\n    }));\n    addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n    addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n    // ALIASES\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n    // PARSING\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n        return config;\n    }));\n    addWeekParseToken(['gg', 'GG'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token] = parseTwoDigitYear(input);\n        return config;\n    }));\n}\n/**\n * @param {?} token\n * @param {?} getter\n * @return {?}\n */\nfunction addWeekYearFormatToken(token, getter) {\n    addFormatToken(null, [token, token.length, false], null, getter);\n}\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\nfunction _getWeekYearFormatCb(date, opts) {\n    return getWeekYear(date, opts.locale).toString();\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction _getISOWeekYearFormatCb(date) {\n    return getISOWeekYear(date).toString();\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n    return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getISOWeekYear(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).year;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: add support for timezones\n/**\n * @return {?}\n */\nfunction initTimezone() {\n    // FORMATTING\n    addFormatToken('z', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.isUTC ? 'UTC' : '';\n    }));\n    addFormatToken('zz', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.isUTC ? 'Coordinated Universal Time' : '';\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initTimestamp() {\n    // FORMATTING\n    addFormatToken('X', null, null, (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return unix(date)\n            .toString(10);\n    }));\n    addFormatToken('x', null, null, (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.valueOf()\n            .toString(10);\n    }));\n    // PARSING\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n        return config;\n    }));\n    addParseToken('x', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._d = new Date(toInt(input));\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initSecond() {\n    // FORMATTING\n    addFormatToken('s', ['ss', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getSeconds(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('second', 's');\n    // PARSING\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initQuarter() {\n    // FORMATTING\n    addFormatToken('Q', null, 'Qo', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getQuarter(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('quarter', 'Q');\n    // PARSING\n    addRegexToken('Q', match1);\n    addParseToken('Q', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n        return config;\n    }));\n}\n// MOMENTS\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getQuarter(date, isUTC = false) {\n    return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} token\n * @param {?} separator\n * @return {?}\n */\nfunction addOffsetFormatToken(token, separator) {\n    addFormatToken(token, null, null, (/**\n     * @param {?} date\n     * @param {?} config\n     * @return {?}\n     */\n    function (date, config) {\n        /** @type {?} */\n        let offset = getUTCOffset(date, { _isUTC: config.isUTC, _offset: config.offset });\n        /** @type {?} */\n        let sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    }));\n}\n/**\n * @return {?}\n */\nfunction initOffset() {\n    addOffsetFormatToken('Z', ':');\n    addOffsetFormatToken('ZZ', '');\n    // PARSING\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n        return config;\n    }));\n}\n// HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\n/** @type {?} */\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n/**\n * @param {?} matcher\n * @param {?} str\n * @return {?}\n */\nfunction offsetFromString(matcher, str) {\n    /** @type {?} */\n    const matches = (str || '').match(matcher);\n    if (matches === null) {\n        return null;\n    }\n    /** @type {?} */\n    const chunk = matches[matches.length - 1];\n    /** @type {?} */\n    const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n    /** @type {?} */\n    const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n    /** @type {?} */\n    const _min = parts[0] === '+' ? minutes : -minutes;\n    return minutes === 0 ? 0 : _min;\n}\n// Return a moment from input, that is local/utc/zone equivalent to model.\n/**\n * @param {?} input\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\nfunction cloneWithOffset(input, date, config = {}) {\n    if (!config._isUTC) {\n        return input;\n    }\n    /** @type {?} */\n    const res = cloneDate(date);\n    // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n    /** @type {?} */\n    const offsetDiff = (config._offset || 0) * 60000;\n    /** @type {?} */\n    const diff = input.valueOf() - res.valueOf() + offsetDiff;\n    // Use low-level api, because this fn is low-level api.\n    res.setTime(res.valueOf() + diff);\n    // todo: add timezone handling\n    // hooks.updateOffset(res, false);\n    return res;\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getDateOffset(date) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n// HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\n/**\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\nfunction getUTCOffset(date, config = {}) {\n    /** @type {?} */\n    const _offset = config._offset || 0;\n    return config._isUTC ? _offset : getDateOffset(date);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initMinute() {\n    // FORMATTING\n    addFormatToken('m', ['mm', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getMinutes(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('minute', 'm');\n    // PARSING\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initMillisecond() {\n    addFormatToken('S', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n    }));\n    addFormatToken(null, ['SS', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n    }));\n    addFormatToken(null, ['SSS', 3, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC)).toString(10);\n    }));\n    addFormatToken(null, ['SSSS', 4, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n    }));\n    addFormatToken(null, ['SSSSS', 5, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSS', 6, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSSS', 7, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSSSS', 8, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSSSSS', 9, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('millisecond', 'ms');\n    // PARSING\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n    /** @type {?} */\n    let token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n    /**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function parseMs(input, array, config) {\n        array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n        return config;\n    }\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initHour() {\n    // FORMATTING\n    // FORMATTING\n    /**\n     * @param {?} date\n     * @param {?} isUTC\n     * @return {?}\n     */\n    function hFormat(date, isUTC) {\n        return getHours(date, isUTC) % 12 || 12;\n    }\n    /**\n     * @param {?} date\n     * @param {?} isUTC\n     * @return {?}\n     */\n    function kFormat(date, isUTC) {\n        return getHours(date, isUTC) || 24;\n    }\n    addFormatToken('H', ['HH', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getHours(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('h', ['hh', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return hFormat(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('k', ['kk', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return kFormat(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('hmm', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _h = hFormat(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_h}${_mm}`;\n    }));\n    addFormatToken('hmmss', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _h = hFormat(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        /** @type {?} */\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_h}${_mm}${_ss}`;\n    }));\n    addFormatToken('Hmm', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _H = getHours(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_H}${_mm}`;\n    }));\n    addFormatToken('Hmmss', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _H = getHours(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        /** @type {?} */\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_H}${_mm}${_ss}`;\n    }));\n    /**\n     * @param {?} token\n     * @param {?} lowercase\n     * @return {?}\n     */\n    function meridiem(token, lowercase) {\n        addFormatToken(token, null, null, (/**\n         * @param {?} date\n         * @param {?} opts\n         * @return {?}\n         */\n        function (date, opts) {\n            return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n        }));\n    }\n    meridiem('a', true);\n    meridiem('A', false);\n    // ALIASES\n    addUnitAlias('hour', 'h');\n    // PARSING\n    /**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n        return config;\n    }));\n    addParseToken(['a', 'A'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n        return config;\n    }));\n    addParseToken(['h', 'hh'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n        return config;\n    }));\n    addParseToken('hmm', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    }));\n    addParseToken('hmmss', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos1 = input.length - 4;\n        /** @type {?} */\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    }));\n    addParseToken('Hmm', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        return config;\n    }));\n    addParseToken('Hmmss', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos1 = input.length - 4;\n        /** @type {?} */\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst locales = {};\n/** @type {?} */\nconst localeFamilies = {};\n/** @type {?} */\nlet globalLocale;\n/**\n * @param {?} key\n * @return {?}\n */\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\n/**\n * @param {?} names\n * @return {?}\n */\nfunction chooseLocale(names) {\n    /** @type {?} */\n    let next;\n    /** @type {?} */\n    let locale;\n    /** @type {?} */\n    let i = 0;\n    while (i < names.length) {\n        /** @type {?} */\n        const split = normalizeLocale(names[i]).split('-');\n        /** @type {?} */\n        let j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                // the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n/**\n * @param {?} parentConfig\n * @param {?} childConfig\n * @return {?}\n */\nfunction mergeConfigs(parentConfig, childConfig) {\n    /** @type {?} */\n    const res = Object.assign({}, parentConfig);\n    for (const childProp in childConfig) {\n        if (!hasOwnProp(childConfig, childProp)) {\n            continue;\n        }\n        if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n            res[(/** @type {?} */ (childProp))] = {};\n            Object.assign(res[childProp], parentConfig[childProp]);\n            Object.assign(res[childProp], childConfig[childProp]);\n        }\n        else if (childConfig[childProp] != null) {\n            res[(/** @type {?} */ (childProp))] = childConfig[childProp];\n        }\n        else {\n            delete res[(/** @type {?} */ (childProp))];\n        }\n    }\n    for (const parentProp in parentConfig) {\n        if (hasOwnProp(parentConfig, parentProp) &&\n            !hasOwnProp(childConfig, parentProp) &&\n            isObject(parentConfig[(/** @type {?} */ (parentProp))])) {\n            // make sure changes to properties don't modify parent config\n            res[(/** @type {?} */ (parentProp))] = Object.assign({}, res[(/** @type {?} */ (parentProp))]);\n        }\n    }\n    return res;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction loadLocale(name) {\n    // no way!\n    /* var oldLocale = null;\n     // TODO: Find a better way to register and load all the locales in Node\n     if (!locales[name] && (typeof module !== 'undefined') &&\n       module && module.exports) {\n       try {\n         oldLocale = globalLocale._abbr;\n         var aliasedRequire = require;\n         aliasedRequire('./locale/' + name);\n         getSetGlobalLocale(oldLocale);\n       } catch (e) {}\n     }*/\n    if (!locales[name]) {\n        // tslint:disable-next-line\n        console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n        // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    }\n    return locales[name];\n}\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\n/**\n * @param {?=} key\n * @param {?=} values\n * @return {?}\n */\nfunction getSetGlobalLocale(key, values) {\n    /** @type {?} */\n    let data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else if (isString(key)) {\n            data = defineLocale(key, values);\n        }\n        if (data) {\n            globalLocale = data;\n        }\n    }\n    return globalLocale && globalLocale._abbr;\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\nfunction defineLocale(name, config) {\n    if (config === null) {\n        // useful for testing\n        delete locales[name];\n        globalLocale = getLocale('en');\n        return null;\n    }\n    if (!config) {\n        return;\n    }\n    /** @type {?} */\n    let parentConfig = baseConfig;\n    config.abbr = name;\n    if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n            parentConfig = locales[config.parentLocale]._config;\n        }\n        else {\n            if (!localeFamilies[config.parentLocale]) {\n                localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({ name, config });\n            return null;\n        }\n    }\n    locales[name] = new Locale(mergeConfigs(parentConfig, config));\n    if (localeFamilies[name]) {\n        localeFamilies[name].forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        function (x) {\n            defineLocale(x.name, x.config);\n        }));\n    }\n    // backwards compat for now: also set the locale\n    // make sure we set the locale AFTER all child locales have been\n    // created, so we won't end up with the child locale set.\n    getSetGlobalLocale(name);\n    return locales[name];\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\nfunction updateLocale(name, config) {\n    /** @type {?} */\n    let _config = config;\n    if (_config != null) {\n        /** @type {?} */\n        let parentConfig = baseConfig;\n        // MERGE\n        /** @type {?} */\n        const tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        _config = mergeConfigs(parentConfig, _config);\n        /** @type {?} */\n        const locale = new Locale(_config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    }\n    else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            }\n            else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n// returns locale data\n/**\n * @param {?=} key\n * @return {?}\n */\nfunction getLocale(key) {\n    setDefaultLocale();\n    if (!key) {\n        return globalLocale;\n    }\n    // let locale;\n    /** @type {?} */\n    const _key = isArray(key) ? key : [key];\n    return chooseLocale(_key);\n}\n/**\n * @return {?}\n */\nfunction listLocales() {\n    return Object.keys(locales);\n}\n/**\n * @return {?}\n */\nfunction setDefaultLocale() {\n    if (locales[`en`]) {\n        return undefined;\n    }\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        ordinal(num) {\n            /** @type {?} */\n            const b = num % 10;\n            /** @type {?} */\n            const output = toInt((num % 100) / 10) === 1\n                ? 'th'\n                : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n            return num + output;\n        }\n    });\n    initWeek();\n    initWeekYear();\n    initYear();\n    initTimezone();\n    initTimestamp();\n    initSecond();\n    initQuarter();\n    initOffset();\n    initMonth();\n    initMinute();\n    initMillisecond();\n    initHour();\n    initDayOfYear();\n    initDayOfWeek();\n    initDayOfMonth();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\nconst ɵ0 = /**\n * @param {?} mem\n * @param {?} order\n * @return {?}\n */\n(mem, order) => {\n    mem[order] = true;\n    return mem;\n};\n/** @type {?} */\nconst orderingHash = ordering.reduce((ɵ0), {});\n/**\n * @param {?} duration\n * @return {?}\n */\nfunction isDurationValid(duration) {\n    /** @type {?} */\n    const durationKeys = Object.keys(duration);\n    if (durationKeys\n        .some((/**\n     * @param {?} key\n     * @return {?}\n     */\n    (key) => {\n        return (key in orderingHash)\n            && duration[key] === null\n            || isNaN(duration[key]);\n    }))) {\n        return false;\n    }\n    // for (let key in duration) {\n    //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n    //     return false;\n    //   }\n    // }\n    /** @type {?} */\n    let unitHasDecimal = false;\n    for (let i = 0; i < ordering.length; ++i) {\n        if (duration[ordering[i]]) {\n            // only allow non-integers for smallest unit\n            if (unitHasDecimal) {\n                return false;\n            }\n            if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} number\n * @return {?}\n */\nfunction absCeil(number) {\n    return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} dur\n * @return {?}\n */\nfunction bubble(dur) {\n    /** @type {?} */\n    let milliseconds = dur._milliseconds;\n    /** @type {?} */\n    let days = dur._days;\n    /** @type {?} */\n    let months = dur._months;\n    /** @type {?} */\n    const data = dur._data;\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n        (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n    /** @type {?} */\n    const seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    /** @type {?} */\n    const minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    /** @type {?} */\n    const hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24);\n    // convert days to months\n    /** @type {?} */\n    const monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n    // 12 months -> 1 year\n    /** @type {?} */\n    const years = absFloor(months / 12);\n    months %= 12;\n    data.day = days;\n    data.month = months;\n    data.year = years;\n    return dur;\n}\n/**\n * @param {?} day\n * @return {?}\n */\nfunction daysToMonths(day) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return day * 4800 / 146097;\n}\n/**\n * @param {?} month\n * @return {?}\n */\nfunction monthsToDays(month) {\n    // the reverse of daysToMonths\n    return month * 146097 / 4800;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet round = Math.round;\n/** @type {?} */\nconst thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n};\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n/**\n * @param {?} str\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} isFuture\n * @param {?} locale\n * @return {?}\n */\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n/**\n * @param {?} posNegDuration\n * @param {?} withoutSuffix\n * @param {?} locale\n * @return {?}\n */\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n    /** @type {?} */\n    const duration = createDuration(posNegDuration).abs();\n    /** @type {?} */\n    const seconds = round(duration.as('s'));\n    /** @type {?} */\n    const minutes = round(duration.as('m'));\n    /** @type {?} */\n    const hours = round(duration.as('h'));\n    /** @type {?} */\n    const days = round(duration.as('d'));\n    /** @type {?} */\n    const months = round(duration.as('M'));\n    /** @type {?} */\n    const years = round(duration.as('y'));\n    /** @type {?} */\n    const a = seconds <= thresholds.ss && ['s', seconds] ||\n        seconds < thresholds.s && ['ss', seconds] ||\n        minutes <= 1 && ['m'] ||\n        minutes < thresholds.m && ['mm', minutes] ||\n        hours <= 1 && ['h'] ||\n        hours < thresholds.h && ['hh', hours] ||\n        days <= 1 && ['d'] ||\n        days < thresholds.d && ['dd', days] ||\n        months <= 1 && ['M'] ||\n        months < thresholds.M && ['MM', months] ||\n        years <= 1 && ['y'] || ['yy', years];\n    /** @type {?} */\n    const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n    // a[2] = withoutSuffix;\n    // a[3] = +posNegDuration > 0;\n    // a[4] = locale;\n    return substituteTimeAgo.apply(null, b);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Duration {\n    /**\n     * @param {?} duration\n     * @param {?=} config\n     */\n    constructor(duration, config = {}) {\n        this._data = {};\n        this._locale = getLocale();\n        this._locale = config && config._locale || getLocale();\n        // const normalizedInput = normalizeObjectUnits(duration);\n        /** @type {?} */\n        const normalizedInput = duration;\n        /** @type {?} */\n        const years = normalizedInput.year || 0;\n        /** @type {?} */\n        const quarters = normalizedInput.quarter || 0;\n        /** @type {?} */\n        const months = normalizedInput.month || 0;\n        /** @type {?} */\n        const weeks = normalizedInput.week || 0;\n        /** @type {?} */\n        const days = normalizedInput.day || 0;\n        /** @type {?} */\n        const hours = normalizedInput.hours || 0;\n        /** @type {?} */\n        const minutes = normalizedInput.minutes || 0;\n        /** @type {?} */\n        const seconds = normalizedInput.seconds || 0;\n        /** @type {?} */\n        const milliseconds = normalizedInput.milliseconds || 0;\n        this._isValid = isDurationValid(normalizedInput);\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1000 +\n            minutes * 60 * 1000 + // 1000 * 60\n            hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n        // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n        // this._data = {};\n        // this._locale = getLocale();\n        // this._bubble();\n        return bubble(this);\n    }\n    /**\n     * @return {?}\n     */\n    isValid() {\n        return this._isValid;\n    }\n    /**\n     * @param {?=} withSuffix\n     * @return {?}\n     */\n    humanize(withSuffix) {\n        // throw new Error(`TODO: implement`);\n        if (!this.isValid()) {\n            return this.localeData().invalidDate;\n        }\n        /** @type {?} */\n        const locale = this.localeData();\n        /** @type {?} */\n        let output = relativeTime(this, !withSuffix, locale);\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n        return locale.postformat(output);\n    }\n    /**\n     * @return {?}\n     */\n    localeData() {\n        return this._locale;\n    }\n    /**\n     * @param {?=} localeKey\n     * @return {?}\n     */\n    locale(localeKey) {\n        if (!localeKey) {\n            return this._locale._abbr;\n        }\n        this._locale = getLocale(localeKey) || this._locale;\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    abs() {\n        /** @type {?} */\n        const mathAbs = Math.abs;\n        /** @type {?} */\n        const data = this._data;\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.month = mathAbs(data.month);\n        data.year = mathAbs(data.year);\n        return this;\n    }\n    /**\n     * @param {?} _units\n     * @return {?}\n     */\n    as(_units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        /** @type {?} */\n        let days;\n        /** @type {?} */\n        let months;\n        /** @type {?} */\n        const milliseconds = this._milliseconds;\n        /** @type {?} */\n        const units = normalizeUnits(_units);\n        if (units === 'month' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        }\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week':\n                return days / 7 + milliseconds / 6048e5;\n            case 'day':\n                return days + milliseconds / 864e5;\n            case 'hours':\n                return days * 24 + milliseconds / 36e5;\n            case 'minutes':\n                return days * 1440 + milliseconds / 6e4;\n            case 'seconds':\n                return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'milliseconds':\n                return Math.floor(days * 864e5) + milliseconds;\n            default:\n                throw new Error(`Unknown unit ${units}`);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    valueOf() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6);\n    }\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isDuration(obj) {\n    return obj instanceof Duration;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction isValid(config) {\n    if (config._isValid == null) {\n        /** @type {?} */\n        const flags = getParsingFlags(config);\n        /** @type {?} */\n        const parsedParts = Array.prototype.some.call(flags.parsedDateParts, (/**\n         * @param {?} i\n         * @return {?}\n         */\n        function (i) {\n            return i != null;\n        }));\n        /** @type {?} */\n        let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n        if (config._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n        if (Object.isFrozen == null || !Object.isFrozen(config)) {\n            config._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return config._isValid;\n}\n/**\n * @param {?} config\n * @param {?=} flags\n * @return {?}\n */\nfunction createInvalid(config, flags) {\n    config._d = new Date(NaN);\n    Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n    return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction markInvalid(config) {\n    config._isValid = false;\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\n/** @type {?} */\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n// tslint:disable-next-line\n/** @type {?} */\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n/** @type {?} */\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n/** @type {?} */\nconst isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n    ['YYYYMMDD', /\\d{8}/, true],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/, true]\n];\n// iso time formats and regexes\n/** @type {?} */\nconst isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n/** @type {?} */\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n/** @type {?} */\nconst obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\n/** @type {?} */\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n// date from iso format\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromISO(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    /** @type {?} */\n    const input = config._i;\n    /** @type {?} */\n    const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n    /** @type {?} */\n    let allowTime;\n    /** @type {?} */\n    let dateFormat;\n    /** @type {?} */\n    let timeFormat;\n    /** @type {?} */\n    let tzFormat;\n    if (!match) {\n        config._isValid = false;\n        return config;\n    }\n    // getParsingFlags(config).iso = true;\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let l;\n    for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n            dateFormat = isoDates[i][0];\n            allowTime = isoDates[i][2] !== false;\n            break;\n        }\n    }\n    if (dateFormat == null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n            if (isoTimes[i][1].exec(match[3])) {\n                // match[2] should be 'T' or space\n                timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                break;\n            }\n        }\n        if (timeFormat == null) {\n            config._isValid = false;\n            return config;\n        }\n    }\n    if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n            tzFormat = 'Z';\n        }\n        else {\n            config._isValid = false;\n            return config;\n        }\n    }\n    config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n    return configFromStringAndFormat(config);\n}\n// tslint:disable-next-line\n/**\n * @param {?} yearStr\n * @param {?} monthStr\n * @param {?} dayStr\n * @param {?} hourStr\n * @param {?} minuteStr\n * @param {?} secondStr\n * @return {?}\n */\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    /** @type {?} */\n    const result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n    return result;\n}\n/**\n * @param {?} yearStr\n * @return {?}\n */\nfunction untruncateYear(yearStr) {\n    /** @type {?} */\n    const year = parseInt(yearStr, 10);\n    return year <= 49 ? year + 2000 : year;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction preprocessRFC2822(str) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return str\n        .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n        .replace(/(\\s\\s+)/g, ' ').trim();\n}\n/**\n * @param {?} weekdayStr\n * @param {?} parsedInput\n * @param {?} config\n * @return {?}\n */\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        /** @type {?} */\n        const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n        /** @type {?} */\n        const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {?} obsOffset\n * @param {?} militaryOffset\n * @param {?} numOffset\n * @return {?}\n */\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    }\n    else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    }\n    else {\n        /** @type {?} */\n        const hm = parseInt(numOffset, 10);\n        /** @type {?} */\n        const m = hm % 100;\n        /** @type {?} */\n        const h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n// date and time from ref 2822 format\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromRFC2822(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    /** @type {?} */\n    const match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (!match) {\n        return markInvalid(config);\n    }\n    /** @type {?} */\n    const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n    if (!checkWeekday(match[1], parsedArray, config)) {\n        return config;\n    }\n    config._a = parsedArray;\n    config._tzm = calculateOffset(match[8], match[9], match[10]);\n    config._d = createUTCDate.apply(null, config._a);\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    getParsingFlags(config).rfc2822 = true;\n    return config;\n}\n// date from iso format or fallback\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromString(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    /** @type {?} */\n    const matched = aspNetJsonRegex.exec(config._i);\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return config;\n    }\n    // todo: update logic processing\n    // isISO -> configFromISO\n    // isRFC -> configFromRFC\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    // Final attempt, use Input Fallback\n    // hooks.createFromInputFallback(config);\n    return createInvalid(config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n    /** @type {?} */\n    const _locale = getLocale(locale || 'en');\n    if (!_locale) {\n        throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n    }\n    /** @type {?} */\n    const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n    /** @type {?} */\n    const output = formatMoment(date, _format, _locale, isUTC, offset);\n    if (!output) {\n        return output;\n    }\n    return _locale.postformat(output);\n}\n// format date using native date object\n/**\n * @param {?} date\n * @param {?} _format\n * @param {?} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n    if (!isDateValid(date)) {\n        return locale.invalidDate;\n    }\n    /** @type {?} */\n    const format = expandFormat(_format, locale);\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](date, locale, isUTC, offset);\n}\n/**\n * @param {?} _format\n * @param {?} locale\n * @return {?}\n */\nfunction expandFormat(_format, locale) {\n    /** @type {?} */\n    let format = _format;\n    /** @type {?} */\n    let i = 5;\n    /** @type {?} */\n    const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n    /** @type {?} */\n    const replaceLongDateFormatTokens = (/**\n     * @param {?} input\n     * @return {?}\n     */\n    (input) => {\n        return locale.formatLongDate(input) || input;\n    });\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n    return format;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Pick the first defined of two or three arguments.\n/**\n * @template T\n * @param {?=} a\n * @param {?=} b\n * @param {?=} c\n * @return {?}\n */\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction currentDateArray(config) {\n    /** @type {?} */\n    const nowValue = new Date();\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromArray(config) {\n    /** @type {?} */\n    const input = [];\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let date;\n    /** @type {?} */\n    let currentDate;\n    /** @type {?} */\n    let expectedWeekday;\n    /** @type {?} */\n    let yearToUse;\n    if (config._d) {\n        return config;\n    }\n    currentDate = currentDateArray(config);\n    // compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n    // if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n        date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n        config._a[MINUTE] === 0 &&\n        config._a[SECOND] === 0 &&\n        config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n    return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction dayOfYearFromWeekInfo(config) {\n    /** @type {?} */\n    let w;\n    /** @type {?} */\n    let weekYear;\n    /** @type {?} */\n    let week;\n    /** @type {?} */\n    let weekday;\n    /** @type {?} */\n    let dow;\n    /** @type {?} */\n    let doy;\n    /** @type {?} */\n    let temp;\n    /** @type {?} */\n    let weekdayOverflow;\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    }\n    else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n        /** @type {?} */\n        const curWeek = weekOfYear(new Date(), dow, doy);\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    }\n    else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    }\n    else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction checkOverflow(config) {\n    /** @type {?} */\n    let overflow;\n    /** @type {?} */\n    const a = config._a;\n    if (a && getParsingFlags(config).overflow === -2) {\n        // todo: fix this sh*t\n        overflow =\n            a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n                a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                    a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                        a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n                            a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                                    -1;\n        if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n        getParsingFlags(config).overflow = overflow;\n    }\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\n/** @type {?} */\nconst ISO_8601 = 'ISO_8601';\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\n/** @type {?} */\nconst RFC_2822 = 'RFC_2822';\n// date from string and format string\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === ISO_8601) {\n        return configFromISO(config);\n    }\n    if (config._f === RFC_2822) {\n        return configFromRFC2822(config);\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n    if (isArray(config._f) || (!config._i && config._i !== 0)) {\n        return config;\n    }\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    /** @type {?} */\n    let input = config._i.toString();\n    /** @type {?} */\n    let totalParsedInputLength = 0;\n    /** @type {?} */\n    const inputLength = input.length;\n    /** @type {?} */\n    const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let token;\n    /** @type {?} */\n    let parsedInput;\n    /** @type {?} */\n    let skipped;\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n        if (parsedInput) {\n            skipped = input.substr(0, input.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n    if (input.length > 0) {\n        getParsingFlags(config).unusedInput.push(input);\n    }\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = void 0;\n    }\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    return checkOverflow(config);\n}\n/**\n * @param {?} locale\n * @param {?} _hour\n * @param {?} meridiem\n * @return {?}\n */\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n    /** @type {?} */\n    let hour = _hour;\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    }\n    if (locale.isPM == null) {\n        // this is not supposed to happen\n        return hour;\n    }\n    // Fallback\n    /** @type {?} */\n    const isPm = locale.isPM(meridiem);\n    if (isPm && hour < 12) {\n        hour += 12;\n    }\n    if (!isPm && hour === 12) {\n        hour = 0;\n    }\n    return hour;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// date from string and array of format strings\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromStringAndArray(config) {\n    /** @type {?} */\n    let tempConfig;\n    /** @type {?} */\n    let bestMoment;\n    /** @type {?} */\n    let scoreToBeat;\n    /** @type {?} */\n    let currentScore;\n    if (!config._f || config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        return createInvalid(config);\n    }\n    /** @type {?} */\n    let i;\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = Object.assign({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n        // or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n        getParsingFlags(tempConfig).score = currentScore;\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n    return Object.assign(config, bestMoment || tempConfig);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromObject(config) {\n    if (config._d) {\n        return config;\n    }\n    /** @type {?} */\n    const input = config._i;\n    if (isObject(input)) {\n        /** @type {?} */\n        const i = normalizeObjectUnits((/** @type {?} */ (input)));\n        config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n            // todo: obsolete -> remove it\n            .map((/**\n         * @param {?} obj\n         * @return {?}\n         */\n        obj => isString(obj) ? parseInt(obj, 10) : obj));\n    }\n    return configFromArray(config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createFromConfig(config) {\n    /** @type {?} */\n    const res = checkOverflow(prepareConfig(config));\n    // todo: remove, in moment.js it's never called cuz of moment constructor\n    res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n    if (!isValid(Object.assign({}, res, { _isValid: null }))) {\n        res._d = new Date(NaN);\n    }\n    // todo: update offset\n    /*if (res._nextDay) {\n      // Adding is smart enough around DST\n      res._d = add(res._d, 1, 'day');\n      res._nextDay = undefined;\n    }*/\n    return res;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction prepareConfig(config) {\n    /** @type {?} */\n    let input = config._i;\n    /** @type {?} */\n    const format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid(config, { nullInput: true });\n    }\n    if (isString(input)) {\n        config._i = input = config._locale.preparse(input);\n    }\n    if (isDate(input)) {\n        config._d = cloneDate(input);\n        return config;\n    }\n    // todo: add check for recursion\n    if (isArray(format)) {\n        configFromStringAndArray(config);\n    }\n    else if (format) {\n        configFromStringAndFormat(config);\n    }\n    else {\n        configFromInput(config);\n    }\n    if (!isValid(config)) {\n        config._d = null;\n    }\n    return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromInput(config) {\n    /** @type {?} */\n    const input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date();\n    }\n    else if (isDate(input)) {\n        config._d = cloneDate(input);\n    }\n    else if (isString(input)) {\n        configFromString(config);\n    }\n    else if (isArray(input) && input.length) {\n        /** @type {?} */\n        const _arr = input.slice(0);\n        config._a = _arr.map((/**\n         * @param {?} obj\n         * @return {?}\n         */\n        obj => isString(obj) ? parseInt(obj, 10) : obj));\n        configFromArray(config);\n    }\n    else if (isObject(input)) {\n        configFromObject(config);\n    }\n    else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    }\n    else {\n        //   hooks.createFromInputFallback(config);\n        return createInvalid(config);\n    }\n    return config;\n}\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n    /** @type {?} */\n    const config = {};\n    /** @type {?} */\n    let _input = input;\n    // params switch -> skip; test it well\n    // if (localeKey === true || localeKey === false) {\n    //     strict = localeKey;\n    //     localeKey = undefined;\n    // }\n    // todo: fail fast and return not valid date\n    if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n        _input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    // config._isAMomentObject = true;\n    config._useUTC = config._isUTC = isUTC;\n    config._l = localeKey;\n    config._i = _input;\n    config._f = format;\n    config._strict = strict;\n    return createFromConfig(config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n    if (isDate(input)) {\n        return input;\n    }\n    /** @type {?} */\n    const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n    return config._d;\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction utcAsLocal(date) {\n    if (!(date instanceof Date)) {\n        return null;\n    }\n    return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} num\n * @return {?}\n */\nfunction absRound(num) {\n    return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isAfter(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() > date2.valueOf();\n    }\n    return date2.valueOf() < startOf(date1, units).valueOf();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isBefore(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() < date2.valueOf();\n    }\n    return endOf(date1, units).valueOf() < date2.valueOf();\n}\n/**\n * @param {?} date\n * @param {?} daysDisabled\n * @return {?}\n */\nfunction isDisabledDay(date, daysDisabled) {\n    if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n        return false;\n    }\n    return daysDisabled.some((/**\n     * @param {?} day\n     * @return {?}\n     */\n    (day) => day === date.getDay()));\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isSame(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() === date2.valueOf();\n    }\n    /** @type {?} */\n    const inputMs = date2.valueOf();\n    return (startOf(date1, units).valueOf() <= inputMs &&\n        inputMs <= endOf(date1, units).valueOf());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\n/** @type {?} */\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * @param {?=} input\n * @param {?=} key\n * @param {?=} config\n * @return {?}\n */\nfunction createDuration(input, key, config = {}) {\n    /** @type {?} */\n    const duration = convertDuration(input, key);\n    // matching against regexp is expensive, do it on demand\n    return new Duration(duration, config);\n}\n/**\n * @param {?} input\n * @param {?} key\n * @return {?}\n */\nfunction convertDuration(input, key) {\n    // checks for null or undefined\n    if (input == null) {\n        return {};\n    }\n    if (isDuration(input)) {\n        return {\n            milliseconds: input._milliseconds,\n            day: input._days,\n            month: input._months\n        };\n    }\n    if (isNumber(input)) {\n        // duration = {};\n        return key ? { [key]: input } : { milliseconds: input };\n    }\n    if (isString(input)) {\n        /** @type {?} */\n        let match = aspNetRegex.exec(input);\n        if (match) {\n            /** @type {?} */\n            const sign = (match[1] === '-') ? -1 : 1;\n            return {\n                year: 0,\n                day: toInt(match[DATE]) * sign,\n                hours: toInt(match[HOUR]) * sign,\n                minutes: toInt(match[MINUTE]) * sign,\n                seconds: toInt(match[SECOND]) * sign,\n                // the millisecond decimal point is included in the match\n                milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n            };\n        }\n        match = isoRegex.exec(input);\n        if (match) {\n            /** @type {?} */\n            const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            return {\n                year: parseIso(match[2], sign),\n                month: parseIso(match[3], sign),\n                week: parseIso(match[4], sign),\n                day: parseIso(match[5], sign),\n                hours: parseIso(match[6], sign),\n                minutes: parseIso(match[7], sign),\n                seconds: parseIso(match[8], sign)\n            };\n        }\n    }\n    if (isObject(input) && ('from' in input || 'to' in input)) {\n        /** @type {?} */\n        const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n        return {\n            milliseconds: diffRes.milliseconds,\n            month: diffRes.months\n        };\n    }\n    return input;\n}\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n/**\n * @param {?} inp\n * @param {?} sign\n * @return {?}\n */\nfunction parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    /** @type {?} */\n    const res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction positiveMomentsDifference(base, other) {\n    /** @type {?} */\n    const res = { milliseconds: 0, months: 0 };\n    res.months = getMonth(other) - getMonth(base) +\n        (getFullYear(other) - getFullYear(base)) * 12;\n    /** @type {?} */\n    const _basePlus = add(cloneDate(base), res.months, 'month');\n    if (isAfter(_basePlus, other)) {\n        --res.months;\n    }\n    res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n    return res;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction momentsDifference(base, other) {\n    if (!(isDateValid(base) && isDateValid(other))) {\n        return { milliseconds: 0, months: 0 };\n    }\n    /** @type {?} */\n    let res;\n    /** @type {?} */\n    const _other = cloneWithOffset(other, base, { _offset: base.getTimezoneOffset() });\n    if (isBefore(base, _other)) {\n        res = positiveMomentsDifference(base, _other);\n    }\n    else {\n        res = positiveMomentsDifference(_other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\nfunction add(date, val, period, isUTC) {\n    /** @type {?} */\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, 1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\nfunction subtract(date, val, period, isUTC) {\n    /** @type {?} */\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, -1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} duration\n * @param {?} isAdding\n * @param {?=} isUTC\n * @return {?}\n */\nfunction addSubtract(date, duration, isAdding, isUTC) {\n    /** @type {?} */\n    const milliseconds = duration._milliseconds;\n    /** @type {?} */\n    const days = absRound(duration._days);\n    /** @type {?} */\n    const months = absRound(duration._months);\n    // todo: add timezones support\n    // const _updateOffset = updateOffset == null ? true : updateOffset;\n    if (months) {\n        setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n    }\n    if (days) {\n        setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n    }\n    if (milliseconds) {\n        setTime(date, getTime(date) + milliseconds * isAdding);\n    }\n    return cloneDate(date);\n    // todo: add timezones support\n    // if (_updateOffset) {\n    //   hooks.updateOffset(date, days || months);\n    // }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initDayOfWeek() {\n    // FORMATTING\n    addFormatToken('d', null, 'do', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getDay(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('dd', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('ddd', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('dddd', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('e', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n            .toString(10);\n        // return getDay(date, opts.isUTC).toString(10);\n    }));\n    addFormatToken('E', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getISODayOfWeek(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n    // PARSING\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    }));\n    addRegexToken('ddd', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    }));\n    addRegexToken('dddd', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    }));\n    addWeekParseToken(['dd', 'ddd', 'dddd'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        /** @type {?} */\n        const weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        }\n        else {\n            getParsingFlags(config).invalidWeekday = !!input;\n        }\n        return config;\n    }));\n    addWeekParseToken(['d', 'e', 'E'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token] = toInt(input);\n        return config;\n    }));\n}\n// HELPERS\n/**\n * @param {?} input\n * @param {?} locale\n * @return {?}\n */\nfunction parseWeekday(input, locale) {\n    if (!isString(input)) {\n        return input;\n    }\n    /** @type {?} */\n    const _num = parseInt(input, 10);\n    if (!isNaN(_num)) {\n        return _num;\n    }\n    /** @type {?} */\n    const _weekDay = locale.weekdaysParse(input);\n    if (isNumber(_weekDay)) {\n        return _weekDay;\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\nfunction parseIsoWeekday(input, locale = getLocale()) {\n    if (isString(input)) {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNumber(input) && isNaN(input) ? null : input;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n    /** @type {?} */\n    const day = getDay(date, isUTC);\n    /** @type {?} */\n    const _input = parseWeekday(input, locale);\n    return add(date, _input - day, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDayOfWeek(date, isUTC) {\n    return getDay(date, isUTC);\n}\n/**\n * ****************************************\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n// todo: utc\n// getSetLocaleDayOfWeek\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n    return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n    /** @type {?} */\n    const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n    return add(date, input - weekday, 'day');\n}\n// getSetISODayOfWeek\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getISODayOfWeek(date, isUTC) {\n    return getDay(date, isUTC) || 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\nfunction setISODayOfWeek(date, input, opts = {}) {\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n    /** @type {?} */\n    const weekday = parseIsoWeekday(input, opts.locale);\n    return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n/** @type {?} */\nconst symbolMap = {\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩',\n    0: '٠'\n};\n/** @type {?} */\nconst numberMap = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n};\n/** @type {?} */\nconst pluralForm = (/**\n * @param {?} num\n * @return {?}\n */\nfunction (num) {\n    return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n});\n/** @type {?} */\nconst plurals = {\n    s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\n/** @type {?} */\nconst pluralize = (/**\n * @param {?} u\n * @return {?}\n */\nfunction (u) {\n    return (/**\n     * @param {?} num\n     * @param {?} withoutSuffix\n     * @return {?}\n     */\n    function (num, withoutSuffix) {\n        /** @type {?} */\n        const f = pluralForm(num);\n        /** @type {?} */\n        let str = plurals[u][pluralForm(num)];\n        if (f === 2) {\n            str = str[withoutSuffix ? 0 : 1];\n        }\n        return ((/** @type {?} */ (str))).replace(/%d/i, num.toString());\n    });\n});\n/** @type {?} */\nconst months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر'\n];\n/** @type {?} */\nconst arLocale = {\n    abbr: 'ar',\n    months,\n    monthsShort: months,\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'D/\\u200FM/\\u200FYYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return 'م' === input;\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        }\n        else {\n            return 'م';\n        }\n    },\n    calendar: {\n        sameDay: '[اليوم عند الساعة] LT',\n        nextDay: '[غدًا عند الساعة] LT',\n        nextWeek: 'dddd [عند الساعة] LT',\n        lastDay: '[أمس عند الساعة] LT',\n        lastWeek: 'dddd [عند الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'بعد %s',\n        past: 'منذ %s',\n        s: pluralize('s'),\n        ss: pluralize('s'),\n        m: pluralize('m'),\n        mm: pluralize('m'),\n        h: pluralize('h'),\n        hh: pluralize('h'),\n        d: pluralize('d'),\n        dd: pluralize('d'),\n        M: pluralize('M'),\n        MM: pluralize('M'),\n        y: pluralize('y'),\n        yy: pluralize('y')\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    preparse(str) {\n        return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return numberMap[match];\n        })).replace(/،/g, ',');\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    postformat(str) {\n        return str.replace(/\\d/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return symbolMap[match];\n        })).replace(/,/g, '،');\n    },\n    week: {\n        dow: 6,\n        // Saturday is the first day of the week.\n        doy: 12 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\nconst ɵ0$1 = /**\n * @param {?} d\n * @return {?}\n */\nfunction (d) {\n    switch (d) {\n        case 0:\n        case 3:\n        case 6:\n            return '[В изминалата] dddd [в] LT';\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n            return '[В изминалия] dddd [в] LT';\n    }\n};\n/** @type {?} */\nconst bgLocale = {\n    abbr: 'bg',\n    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'D.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Днес в] LT',\n        nextDay: '[Утре в] LT',\n        nextWeek: 'dddd [в] LT',\n        lastDay: '[Вчера в] LT',\n        lastWeek: (ɵ0$1),\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'след %s',\n        past: 'преди %s',\n        s: 'няколко секунди',\n        ss: '%d секунди',\n        m: 'минута',\n        mm: '%d минути',\n        h: 'час',\n        hh: '%d часа',\n        d: 'ден',\n        dd: '%d дни',\n        M: 'месец',\n        MM: '%d месеца',\n        y: 'година',\n        yy: '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal: (/**\n     * @param {?} _num\n     * @return {?}\n     */\n    function (_num) {\n        /** @type {?} */\n        const number = Number(_num);\n        /** @type {?} */\n        let lastDigit = number % 10;\n        /** @type {?} */\n        let last2Digits = number % 100;\n        if (number === 0) {\n            return number + '-ев';\n        }\n        else if (last2Digits === 0) {\n            return number + '-ен';\n        }\n        else if (last2Digits > 10 && last2Digits < 20) {\n            return number + '-ти';\n        }\n        else if (lastDigit === 1) {\n            return number + '-ви';\n        }\n        else if (lastDigit === 2) {\n            return number + '-ри';\n        }\n        else if (lastDigit === 7 || lastDigit === 8) {\n            return number + '-ми';\n        }\n        else {\n            return number + '-ти';\n        }\n    }),\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n/** @type {?} */\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_');\n/** @type {?} */\nlet monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n/** @type {?} */\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\n/** @type {?} */\nlet monthsRegex = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n/** @type {?} */\nconst caLocale = {\n    abbr: 'ca',\n    months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort[getMonth(date, isUTC)];\n        }\n        return monthsShortDot[getMonth(date, isUTC)];\n    },\n    monthsRegex,\n    monthsShortRegex: monthsRegex,\n    monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n    monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n    monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n    weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n    weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fa %s',\n        s: 'uns segons',\n        ss: '%d segons',\n        m: 'un minut',\n        mm: '%d minuts',\n        h: 'una hora',\n        hh: '%d hores',\n        d: 'un dia',\n        dd: '%d dies',\n        M: 'un mes',\n        MM: '%d mesos',\n        y: 'un any',\n        yy: '%d anys'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        const output = (num > 4) ? 'é' :\n            (num === 1 || num === 3) ? 'r' :\n                (num === 2) ? 'n' :\n                    (num === 4) ? 't' : 'é';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n/** @type {?} */\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\n/** @type {?} */\nconst monthsShort$1 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\nfunction plural(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'sekundy' : 'sekund');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'minuty' : 'minut');\n            }\n            else {\n                return result + 'minutami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'hodiny' : 'hodin');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'dny' : 'dní');\n            }\n            else {\n                return result + 'dny';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'měsíce' : 'měsíců');\n            }\n            else {\n                return result + 'měsíci';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'roky' : 'let');\n            }\n            else {\n                return result + 'lety';\n            }\n        // break;\n    }\n}\nconst ɵ0$2 = /**\n * @param {?} months\n * @param {?} monthsShort\n * @return {?}\n */\nfunction (months, monthsShort) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let _monthsParse = [];\n    for (i = 0; i < 12; i++) {\n        // use custom parser to solve problem with July (červenec)\n        _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n    return _monthsParse;\n}, ɵ1 = /**\n * @param {?} monthsShort\n * @return {?}\n */\nfunction (monthsShort) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let _shortMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n        _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n    return _shortMonthsParse;\n}, ɵ2 = /**\n * @param {?} months\n * @return {?}\n */\nfunction (months) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let _longMonthsParse = [];\n    for (i = 0; i < 12; i++) {\n        _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n    return _longMonthsParse;\n};\n/** @type {?} */\nconst csLocale = {\n    abbr: 'cs',\n    months: months$1,\n    monthsShort: monthsShort$1,\n    monthsParse: ((ɵ0$2)(months$1, monthsShort$1)),\n    shortMonthsParse: ((ɵ1)(monthsShort$1)),\n    longMonthsParse: ((ɵ2)(months$1)),\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes v] LT',\n        nextDay: '[zítra v] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n            }\n        },\n        lastDay: '[včera v] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: 'před %s',\n        s: translate,\n        ss: translate,\n        m: translate,\n        mm: translate,\n        h: translate,\n        hh: translate,\n        d: translate,\n        dd: translate,\n        M: translate,\n        MM: translate,\n        y: translate,\n        yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n/** @type {?} */\nconst daLocale = {\n    abbr: 'da',\n    months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n    weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n    weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'på dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[i] dddd[s kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'få sekunder',\n        m: 'et minut',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dage',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'et år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction processRelativeTime(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [num + ' Tage', num + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [num + ' Monate', num + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [num + ' Jahre', num + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\n/** @type {?} */\nconst deLocale = {\n    abbr: 'de',\n    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: 'vor %s',\n        s: 'ein paar Sekunden',\n        ss: '%d Sekunden',\n        m: processRelativeTime,\n        mm: '%d Minuten',\n        h: processRelativeTime,\n        hh: '%d Stunden',\n        d: processRelativeTime,\n        dd: processRelativeTime,\n        M: processRelativeTime,\n        MM: processRelativeTime,\n        y: processRelativeTime,\n        yy: processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n/** @type {?} */\nconst enGbLocale = {\n    abbr: 'en-gb',\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        const b = num % 10;\n        /** @type {?} */\n        const output = (~~(num % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                    (b === 3) ? 'rd' : 'th';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n/** @type {?} */\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\nlet monthsParse$1 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\nlet monthsRegex$1 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\nconst esDoLocale = {\n    abbr: 'es-do',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$2[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$1,\n    monthsShortRegex: monthsRegex$1,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$1,\n    longMonthsParse: monthsParse$1,\n    shortMonthsParse: monthsParse$1,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY h:mm A',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n/** @type {?} */\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\nlet monthsParse$2 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\nlet monthsRegex$2 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\nconst esLocale = {\n    abbr: 'es',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$2;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$3[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$2[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$2,\n    monthsShortRegex: monthsRegex$2,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$2,\n    longMonthsParse: monthsParse$2,\n    shortMonthsParse: monthsParse$2,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n/** @type {?} */\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\nlet monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\nconst esUsLocale = {\n    abbr: 'es-us',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$3;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$4[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$3[getMonth(date, isUTC)];\n        }\n    },\n    monthsParseExact: true,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM [de] D [de] YYYY',\n        LLL: 'MMMM [de] D [de] YYYY h:mm A',\n        LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 0,\n        // Sunday is the first day of the week.\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n/** @type {?} */\nconst processRelativeTime$1 = (/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction (num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const format = {\n        s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n        ss: [num + 'sekundi', num + 'sekundit'],\n        m: ['ühe minuti', 'üks minut'],\n        mm: [num + ' minuti', num + ' minutit'],\n        h: ['ühe tunni', 'tund aega', 'üks tund'],\n        hh: [num + ' tunni', num + ' tundi'],\n        d: ['ühe päeva', 'üks päev'],\n        M: ['kuu aja', 'kuu aega', 'üks kuu'],\n        MM: [num + ' kuu', num + ' kuud'],\n        y: ['ühe aasta', 'aasta', 'üks aasta'],\n        yy: [num + ' aasta', num + ' aastat']\n    };\n    if (withoutSuffix) {\n        return format[key][2] ? format[key][2] : format[key][1];\n    }\n    return isFuture ? format[key][0] : format[key][1];\n});\n/** @type {?} */\nconst etLocale = {\n    abbr: 'et',\n    months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Täna,] LT',\n        nextDay: '[Homme,] LT',\n        nextWeek: '[Järgmine] dddd LT',\n        lastDay: '[Eile,] LT',\n        lastWeek: '[Eelmine] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s pärast',\n        past: '%s tagasi',\n        s: processRelativeTime$1,\n        ss: processRelativeTime$1,\n        m: processRelativeTime$1,\n        mm: processRelativeTime$1,\n        h: processRelativeTime$1,\n        hh: processRelativeTime$1,\n        d: processRelativeTime$1,\n        dd: '%d päeva',\n        M: processRelativeTime$1,\n        MM: processRelativeTime$1,\n        y: processRelativeTime$1,\n        yy: processRelativeTime$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n/** @type {?} */\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');\n/** @type {?} */\nvar numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n];\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$1(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    var result = '';\n    switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'ss':\n            return isFuture ? 'sekunnin' : 'sekuntia';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n    }\n    result = verbalNumber(num, isFuture) + ' ' + result;\n    return result;\n}\n/**\n * @param {?} num\n * @param {?} isFuture\n * @return {?}\n */\nfunction verbalNumber(num, isFuture) {\n    return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\n/** @type {?} */\nconst fiLocale = {\n    abbr: 'fi',\n    months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n    monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n    weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n    weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD.MM.YYYY',\n        LL: 'Do MMMM[ta] YYYY',\n        LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n        LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n        l: 'D.M.YYYY',\n        ll: 'Do MMM YYYY',\n        lll: 'Do MMM YYYY, [klo] HH.mm',\n        llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n    },\n    calendar: {\n        sameDay: '[tänään] [klo] LT',\n        nextDay: '[huomenna] [klo] LT',\n        nextWeek: 'dddd [klo] LT',\n        lastDay: '[eilen] [klo] LT',\n        lastWeek: '[viime] dddd[na] [klo] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s päästä',\n        past: '%s sitten',\n        s: translate$1,\n        ss: translate$1,\n        m: translate$1,\n        mm: translate$1,\n        h: translate$1,\n        hh: translate$1,\n        d: translate$1,\n        dd: translate$1,\n        M: translate$1,\n        MM: translate$1,\n        y: translate$1,\n        yy: translate$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n/** @type {?} */\nconst frLocale = {\n    abbr: 'fr',\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Aujourd’hui à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dans %s',\n        past: 'il y a %s',\n        s: 'quelques secondes',\n        ss: '%d secondes',\n        m: 'une minute',\n        mm: '%d minutes',\n        h: 'une heure',\n        hh: '%d heures',\n        d: 'un jour',\n        dd: '%d jours',\n        M: 'un mois',\n        MM: '%d mois',\n        y: 'un an',\n        yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            // TODO: Return 'e' when day of month > 1. Move this case inside\n            // block for masculine words below.\n            // See https://github.com/moment/moment/issues/3375\n            case 'D':\n                return num + (num === 1 ? 'er' : '');\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n                return num + (num === 1 ? 'er' : 'e');\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return num + (num === 1 ? 're' : 'e');\n        }\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\n/** @type {?} */\nlet monthsShortDot$4 = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_');\n/** @type {?} */\nlet monthsShort$5 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\n/** @type {?} */\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\n/** @type {?} */\nlet monthsRegex$3 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\nconst glLocale = {\n    abbr: 'gl',\n    months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$4;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$5[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$4[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$3,\n    monthsShortRegex: monthsRegex$3,\n    monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n    monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$3,\n    longMonthsParse: monthsParse$3,\n    shortMonthsParse: monthsParse$3,\n    weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoxe á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañan á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[onte á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[o] dddd [pasado á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fai %s',\n        s: 'uns segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'unha hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n/** @type {?} */\nconst heLocale = {\n    abbr: 'he',\n    months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n    monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n    weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n    weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n    weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [ב]MMMM YYYY',\n        LLL: 'D [ב]MMMM YYYY HH:mm',\n        LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n        l: 'D/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[היום ב־]LT',\n        nextDay: '[מחר ב־]LT',\n        nextWeek: 'dddd [בשעה] LT',\n        lastDay: '[אתמול ב־]LT',\n        lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'בעוד %s',\n        past: 'לפני %s',\n        s: 'מספר שניות',\n        ss: '%d שניות',\n        m: 'דקה',\n        mm: '%d דקות',\n        h: 'שעה',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        hh(num) {\n            if (num === 2) {\n                return 'שעתיים';\n            }\n            return num + ' שעות';\n        },\n        d: 'יום',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        dd(num) {\n            if (num === 2) {\n                return 'יומיים';\n            }\n            return num + ' ימים';\n        },\n        M: 'חודש',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        MM(num) {\n            if (num === 2) {\n                return 'חודשיים';\n            }\n            return num + ' חודשים';\n        },\n        y: 'שנה',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        yy(num) {\n            if (num === 2) {\n                return 'שנתיים';\n            }\n            else if (num % 10 === 0 && num !== 10) {\n                return num + ' שנה';\n            }\n            return num + ' שנים';\n        }\n    },\n    meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 5) {\n            return 'לפנות בוקר';\n        }\n        else if (hour < 10) {\n            return 'בבוקר';\n        }\n        else if (hour < 12) {\n            return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n        }\n        else if (hour < 18) {\n            return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n        }\n        else {\n            return 'בערב';\n        }\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n/** @type {?} */\nlet symbolMap$1 = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n};\n/** @type {?} */\nlet numberMap$1 = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n};\n/** @type {?} */\nconst hiLocale = {\n    abbr: 'hi',\n    months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n    monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm बजे',\n        LTS: 'A h:mm:ss बजे',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY, A h:mm बजे',\n        LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n    },\n    calendar: {\n        sameDay: '[आज] LT',\n        nextDay: '[कल] LT',\n        nextWeek: 'dddd, LT',\n        lastDay: '[कल] LT',\n        lastWeek: '[पिछले] dddd, LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s में',\n        past: '%s पहले',\n        s: 'कुछ ही क्षण',\n        ss: '%d सेकंड',\n        m: 'एक मिनट',\n        mm: '%d मिनट',\n        h: 'एक घंटा',\n        hh: '%d घंटे',\n        d: 'एक दिन',\n        dd: '%d दिन',\n        M: 'एक महीने',\n        MM: '%d महीने',\n        y: 'एक वर्ष',\n        yy: '%d वर्ष'\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    preparse(str) {\n        return str.replace(/[१२३४५६७८९०]/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return numberMap$1[match];\n        }));\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    postformat(str) {\n        return str.replace(/\\d/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return symbolMap$1[match];\n        }));\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n    /**\n     * @param {?} hour\n     * @param {?} meridiem\n     * @return {?}\n     */\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात') {\n            return hour < 4 ? hour : hour + 12;\n        }\n        else if (meridiem === 'सुबह') {\n            return hour;\n        }\n        else if (meridiem === 'दोपहर') {\n            return hour >= 10 ? hour : hour + 12;\n        }\n        else if (meridiem === 'शाम') {\n            return hour + 12;\n        }\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'रात';\n        }\n        else if (hour < 10) {\n            return 'सुबह';\n        }\n        else if (hour < 17) {\n            return 'दोपहर';\n        }\n        else if (hour < 20) {\n            return 'शाम';\n        }\n        else {\n            return 'रात';\n        }\n    },\n    week: {\n        dow: 0,\n        // Sunday is the first day of the week.\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n/** @type {?} */\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'ss':\n            return num + ((isFuture || withoutSuffix) ? ' másodperc' : ' másodperce');\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n    }\n    return '';\n}\n/**\n * @param {?} date\n * @param {?} isFuture\n * @return {?}\n */\nfunction week(date, isFuture) {\n    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n/** @type {?} */\nconst huLocale = {\n    abbr: 'hu',\n    months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n    monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n    weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n    weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n    weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'YYYY.MM.DD.',\n        LL: 'YYYY. MMMM D.',\n        LLL: 'YYYY. MMMM D. H:mm',\n        LLLL: 'YYYY. MMMM D., dddd H:mm'\n    },\n    meridiemParse: /de|du/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return input.charAt(1).toLowerCase() === 'u';\n    },\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower === true ? 'de' : 'DE';\n        }\n        else {\n            return isLower === true ? 'du' : 'DU';\n        }\n    },\n    calendar: {\n        sameDay: '[ma] LT[-kor]',\n        nextDay: '[holnap] LT[-kor]',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return week(date, true);\n        },\n        lastDay: '[tegnap] LT[-kor]',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return week(date, false);\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s múlva',\n        past: '%s',\n        s: translate$2,\n        ss: translate$2,\n        m: translate$2,\n        mm: translate$2,\n        h: translate$2,\n        hh: translate$2,\n        d: translate$2,\n        dd: translate$2,\n        M: translate$2,\n        MM: translate$2,\n        y: translate$2,\n        yy: translate$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n/** @type {?} */\nconst hrLocale = {\n    abbr: 'hr',\n    months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n    monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n    weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n    weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n    weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Danas u] LT',\n        nextDay: '[Sutra u] LT',\n        nextWeek: 'dddd [u] LT',\n        lastDay: '[Jučer u] LT',\n        lastWeek: '[Zadnji] dddd [u] LT',\n        sameElse: 'L'\n    },\n    invalidDate: 'Neispravan datum',\n    relativeTime: {\n        future: 'za %s',\n        past: '%s prije',\n        s: 'nekoliko sekundi',\n        ss: '%d sekundi',\n        m: 'minuta',\n        mm: '%d minuta',\n        h: 'sat',\n        hh: '%d sati',\n        d: 'dan',\n        dd: '%d dana',\n        M: 'mjesec',\n        MM: '%d mjeseci',\n        y: 'godina',\n        yy: '%d godina'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        const b = num % 10;\n        /** @type {?} */\n        const output = (~~(num % 100 / 10) === 1) ? '.' :\n            (b === 1) ? '.' :\n                (b === 2) ? '.' :\n                    (b === 3) ? '.' : '.';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n/** @type {?} */\nconst idLocale = {\n    abbr: 'id',\n    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n    weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n    weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [pukul] HH.mm',\n        LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|siang|sore|malam/,\n    /**\n     * @param {?} hour\n     * @param {?} meridiem\n     * @return {?}\n     */\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'pagi') {\n            return hour;\n        }\n        else if (meridiem === 'siang') {\n            return hour >= 11 ? hour : hour + 12;\n        }\n        else if (meridiem === 'sore' || meridiem === 'malam') {\n            return hour + 12;\n        }\n    },\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'pagi';\n        }\n        else if (hours < 15) {\n            return 'siang';\n        }\n        else if (hours < 19) {\n            return 'sore';\n        }\n        else {\n            return 'malam';\n        }\n    },\n    calendar: {\n        sameDay: '[Hari ini pukul] LT',\n        nextDay: '[Besok pukul] LT',\n        nextWeek: 'dddd [pukul] LT',\n        lastDay: '[Kemarin pukul] LT',\n        lastWeek: 'dddd [lalu pukul] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dalam %s',\n        past: '%s yang lalu',\n        s: 'beberapa detik',\n        ss: '%d detik',\n        m: 'semenit',\n        mm: '%d menit',\n        h: 'sejam',\n        hh: '%d jam',\n        d: 'sehari',\n        dd: '%d hari',\n        M: 'sebulan',\n        MM: '%d bulan',\n        y: 'setahun',\n        yy: '%d tahun'\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n/** @type {?} */\nconst itLocale = {\n    abbr: 'it',\n    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        future(num) {\n            return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n        },\n        past: '%s fa',\n        s: 'alcuni secondi',\n        ss: '%d secondi',\n        m: 'un minuto',\n        mm: '%d minuti',\n        h: 'un\\'ora',\n        hh: '%d ore',\n        d: 'un giorno',\n        dd: '%d giorni',\n        M: 'un mese',\n        MM: '%d mesi',\n        y: 'un anno',\n        yy: '%d anni'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n/** @type {?} */\nconst jaLocale = {\n    abbr: 'ja',\n    months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n    weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n    weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日 HH:mm',\n        LLLL: 'YYYY年M月D日 HH:mm dddd',\n        l: 'YYYY/MM/DD',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日 HH:mm dddd'\n    },\n    meridiemParse: /午前|午後/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return input === '午後';\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return '午前';\n        }\n        else {\n            return '午後';\n        }\n    },\n    calendar: {\n        sameDay: '[今日] LT',\n        nextDay: '[明日] LT',\n        nextWeek: '[来週]dddd LT',\n        lastDay: '[昨日] LT',\n        lastWeek: '[前週]dddd LT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}日/,\n    /**\n     * @param {?} num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            default:\n                return num.toString(10);\n        }\n    },\n    relativeTime: {\n        future: '%s後',\n        past: '%s前',\n        s: '数秒',\n        ss: '%d秒',\n        m: '1分',\n        mm: '%d分',\n        h: '1時間',\n        hh: '%d時間',\n        d: '1日',\n        dd: '%d日',\n        M: '1ヶ月',\n        MM: '%dヶ月',\n        y: '1年',\n        yy: '%d年'\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n/** @type {?} */\nconst koLocale = {\n    abbr: 'ko',\n    months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n    weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n    weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm',\n        LTS: 'A h:mm:ss',\n        L: 'YYYY.MM.DD',\n        LL: 'YYYY년 MMMM D일',\n        LLL: 'YYYY년 MMMM D일 A h:mm',\n        LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n        l: 'YYYY.MM.DD',\n        ll: 'YYYY년 MMMM D일',\n        lll: 'YYYY년 MMMM D일 A h:mm',\n        llll: 'YYYY년 MMMM D일 dddd A h:mm'\n    },\n    calendar: {\n        sameDay: '오늘 LT',\n        nextDay: '내일 LT',\n        nextWeek: 'dddd LT',\n        lastDay: '어제 LT',\n        lastWeek: '지난주 dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s 후',\n        past: '%s 전',\n        s: '몇 초',\n        ss: '%d초',\n        m: '1분',\n        mm: '%d분',\n        h: '한 시간',\n        hh: '%d시간',\n        d: '하루',\n        dd: '%d일',\n        M: '한 달',\n        MM: '%d달',\n        y: '일 년',\n        yy: '%d년'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n    ordinal: (/**\n     * @param {?} num\n     * @param {?} period\n     * @return {?}\n     */\n    function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '일';\n            case 'M':\n                return num + '월';\n            case 'w':\n            case 'W':\n                return num + '주';\n            default:\n                return num.toString(10);\n        }\n    }),\n    meridiemParse: /오전|오후/,\n    isPM: (/**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return token === '오후';\n    }),\n    meridiem: (/**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isUpper\n     * @return {?}\n     */\n    function (hour, minute, isUpper) {\n        return hour < 12 ? '오전' : '오후';\n    })\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n/** @type {?} */\nconst units = {\n    ss: 'sekundė_sekundžių_sekundes',\n    m: 'minutė_minutės_minutę',\n    mm: 'minutės_minučių_minutes',\n    h: 'valanda_valandos_valandą',\n    hh: 'valandos_valandų_valandas',\n    d: 'diena_dienos_dieną',\n    dd: 'dienos_dienų_dienas',\n    M: 'mėnuo_mėnesio_mėnesį',\n    MM: 'mėnesiai_mėnesių_mėnesius',\n    y: 'metai_metų_metus',\n    yy: 'metai_metų_metus'\n};\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n    if (withoutSuffix) {\n        return 'kelios sekundės';\n    }\n    else {\n        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n    }\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\n/**\n * @param {?} num\n * @return {?}\n */\nfunction special(num) {\n    return num % 10 === 0 || (num > 10 && num < 20);\n}\n/**\n * @param {?} key\n * @return {?}\n */\nfunction forms(key) {\n    return ((/** @type {?} */ (units)))[key].split('_');\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    let result = num + ' ';\n    if (num === 1) {\n        return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n    }\n    else if (withoutSuffix) {\n        return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n    }\n    else {\n        if (isFuture) {\n            return result + forms(key)[1];\n        }\n        else {\n            return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n        }\n    }\n}\n/** @type {?} */\nconst ltLocale = {\n    abbr: 'lt',\n    months: {\n        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n        isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n    },\n    monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n    weekdays: {\n        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n        isFormat: /dddd HH:mm/\n    },\n    weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n    weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY [m.] MMMM D [d.]',\n        LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n        l: 'YYYY-MM-DD',\n        ll: 'YYYY [m.] MMMM D [d.]',\n        lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n    },\n    calendar: {\n        sameDay: '[Šiandien] LT',\n        nextDay: '[Rytoj] LT',\n        nextWeek: 'dddd LT',\n        lastDay: '[Vakar] LT',\n        lastWeek: '[Praėjusį] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'po %s',\n        past: 'prieš %s',\n        s: translateSeconds,\n        ss: translate$3,\n        m: translateSingular,\n        mm: translate$3,\n        h: translateSingular,\n        hh: translate$3,\n        d: translateSingular,\n        dd: translate$3,\n        M: translateSingular,\n        MM: translate$3,\n        y: translateSingular,\n        yy: translate$3\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    ordinal(num) {\n        return num + '-oji';\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n/** @type {?} */\nconst lvLocale = {\n    abbr: 'lv',\n    months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n    weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n    weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'pēc %s',\n        past: 'pirms %s',\n        s: 'dažām sekundēm',\n        ss: '%d sekundēm',\n        m: 'minūtes',\n        mm: '%d minūtēm',\n        h: 'stundas',\n        hh: '%d stundām',\n        d: 'dienas',\n        dd: '%d dienām',\n        M: 'mēneša',\n        MM: '%d mēnešiem',\n        y: 'gada',\n        yy: '%d gadiem'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    ordinal(num) {\n        return num + '.';\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n        case 'ss':\n            return num + (withoutSuffix ? ' секунд' : ' секундын');\n        case 'm':\n        case 'mm':\n            return num + (withoutSuffix ? ' минут' : ' минутын');\n        case 'h':\n        case 'hh':\n            return num + (withoutSuffix ? ' цаг' : ' цагийн');\n        case 'd':\n        case 'dd':\n            return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n        case 'M':\n        case 'MM':\n            return num + (withoutSuffix ? ' сар' : ' сарын');\n        case 'y':\n        case 'yy':\n            return num + (withoutSuffix ? ' жил' : ' жилийн');\n        default:\n            return num.toString(10);\n    }\n}\n/** @type {?} */\nconst mnLocale = {\n    abbr: 'mn',\n    months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n    monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n    weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n    weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY оны MMMMын D',\n        LLL: 'YYYY оны MMMMын D HH:mm',\n        LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n    },\n    meridiemParse: /ҮӨ|ҮХ/i,\n    isPM: (/**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        return input === 'ҮХ';\n    }),\n    meridiem: (/**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ҮӨ';\n        }\n        else {\n            return 'ҮХ';\n        }\n    }),\n    calendar: {\n        sameDay: '[Өнөөдөр] LT',\n        nextDay: '[Маргааш] LT',\n        nextWeek: '[Ирэх] dddd LT',\n        lastDay: '[Өчигдөр] LT',\n        lastWeek: '[Өнгөрсөн] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s дараа',\n        past: '%s өмнө',\n        s: translate$4,\n        ss: translate$4,\n        m: translate$4,\n        mm: translate$4,\n        h: translate$4,\n        hh: translate$4,\n        d: translate$4,\n        dd: translate$4,\n        M: translate$4,\n        MM: translate$4,\n        y: translate$4,\n        yy: translate$4\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n    ordinal: (/**\n     * @param {?} num\n     * @param {?} period\n     * @return {?}\n     */\n    function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + ' өдөр';\n            default:\n                return num.toString(10);\n        }\n    })\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n/** @type {?} */\nconst nbLocale = {\n    abbr: 'nb',\n    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[forrige] dddd [kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'noen sekunder',\n        ss: '%d sekunder',\n        m: 'ett minutt',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dager',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n/** @type {?} */\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\nlet monthsParse$4 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\nlet monthsRegex$4 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\nconst nlBeLocale = {\n    abbr: 'nl-be',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$4,\n    monthsShortRegex: monthsRegex$4,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$4,\n    longMonthsParse: monthsParse$4,\n    shortMonthsParse: monthsParse$4,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n/** @type {?} */\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\nlet monthsParse$5 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\nlet monthsRegex$5 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\nconst nlLocale = {\n    abbr: 'nl',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$5,\n    monthsShortRegex: monthsRegex$5,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$5,\n    longMonthsParse: monthsParse$5,\n    shortMonthsParse: monthsParse$5,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD-MM-YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n/** @type {?} */\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\n/** @type {?} */\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\nfunction plural$1(num) {\n    return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction translate$5(num, withoutSuffix, key) {\n    /** @type {?} */\n    let result = num + ' ';\n    switch (key) {\n        case 'ss':\n            return result + (plural$1(num) ? 'sekundy' : 'sekund');\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural$1(num) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix ? 'godzina' : 'godzinę';\n        case 'hh':\n            return result + (plural$1(num) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural$1(num) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural$1(num) ? 'lata' : 'lat');\n    }\n}\n/** @type {?} */\nconst plLocale = {\n    abbr: 'pl',\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    months(date, format, isUTC) {\n        if (!date) {\n            return monthsNominative;\n        }\n        else if (format === '') {\n            // Hack: if format empty we know this is used to generate\n            // RegExp by moment. Give then back both valid forms of months\n            // in RegExp ready format.\n            return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n        }\n        else if (/D MMMM/.test(format)) {\n            return monthsSubjective[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsNominative[getMonth(date, isUTC)];\n        }\n    },\n    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Dziś o] LT',\n        nextDay: '[Jutro o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W niedzielę o] LT';\n                case 2:\n                    return '[We wtorek o] LT';\n                case 3:\n                    return '[W środę o] LT';\n                case 5:\n                    return '[W piątek o] LT';\n                case 6:\n                    return '[W sobotę o] LT';\n                default:\n                    return '[W] dddd [o] LT';\n            }\n        },\n        lastDay: '[Wczoraj o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 4:\n                    return '[W zeszłą czwartek o] LT';\n                case 5:\n                    return '[W zeszłą piątek o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: '%s temu',\n        s: 'kilka sekund',\n        ss: translate$5,\n        m: translate$5,\n        mm: translate$5,\n        h: translate$5,\n        hh: translate$5,\n        d: '1 dzień',\n        dd: '%d dni',\n        M: 'miesiąc',\n        MM: translate$5,\n        y: 'rok',\n        yy: translate$5\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n/** @type {?} */\nconst ptBrLocale = {\n    abbr: 'pt-br',\n    months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n    weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n    weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hoje às] LT',\n        nextDay: '[Amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        lastDay: '[Ontem às] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n                '[Último] dddd [às] LT' : // Saturday + Sunday\n                '[Última] dddd [às] LT'; // Monday - Friday\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'em %s',\n        past: '%s atrás',\n        s: 'poucos segundos',\n        ss: '%d segundos',\n        m: 'um minuto',\n        mm: '%d minutos',\n        h: 'uma hora',\n        hh: '%d horas',\n        d: 'um dia',\n        dd: '%d dias',\n        M: 'um mês',\n        MM: '%d meses',\n        y: 'um ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n    /** @type {?} */\n    let format = {\n        ss: 'secunde',\n        mm: 'minute',\n        hh: 'ore',\n        dd: 'zile',\n        MM: 'luni',\n        yy: 'ani'\n    };\n    /** @type {?} */\n    let separator = ' ';\n    if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n        separator = ' de ';\n    }\n    return num + separator + format[key];\n}\n/** @type {?} */\nconst roLocale = {\n    abbr: 'ro',\n    months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n    monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n    weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n    weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[azi la] LT',\n        nextDay: '[mâine la] LT',\n        nextWeek: 'dddd [la] LT',\n        lastDay: '[ieri la] LT',\n        lastWeek: '[fosta] dddd [la] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'peste %s',\n        past: '%s în urmă',\n        s: 'câteva secunde',\n        ss: relativeTimeWithPlural,\n        m: 'un minut',\n        mm: relativeTimeWithPlural,\n        h: 'o oră',\n        hh: relativeTimeWithPlural,\n        d: 'o zi',\n        dd: relativeTimeWithPlural,\n        M: 'o lună',\n        MM: relativeTimeWithPlural,\n        y: 'un an',\n        yy: relativeTimeWithPlural\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\nfunction plural$2(word, num) {\n    /** @type {?} */\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n    /** @type {?} */\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n        mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n        hh: 'час_часа_часов',\n        dd: 'день_дня_дней',\n        MM: 'месяц_месяца_месяцев',\n        yy: 'год_года_лет'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'минута' : 'минуту';\n    }\n    return num + ' ' + plural$2(format[key], +num);\n}\n/** @type {?} */\nlet monthsParse$6 = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n/** @type {?} */\nconst ruLocale = {\n    abbr: 'ru',\n    months: {\n        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n    },\n    monthsShort: {\n        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n    },\n    weekdays: {\n        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n        isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n    },\n    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse: monthsParse$6,\n    longMonthsParse: monthsParse$6,\n    shortMonthsParse: monthsParse$6,\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // копия предыдущего\n    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // полные названия с падежами\n    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n    // Выражение, которое соотвествует только сокращённым формам\n    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY г.',\n        LLL: 'D MMMM YYYY г., H:mm',\n        LLLL: 'dddd, D MMMM YYYY г., H:mm'\n    },\n    calendar: {\n        sameDay: '[Сегодня в] LT',\n        nextDay: '[Завтра в] LT',\n        lastDay: '[Вчера в] LT',\n        /**\n         * @param {?} date\n         * @param {?} now\n         * @return {?}\n         */\n        nextWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В следующее] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        /**\n         * @param {?} date\n         * @param {?} now\n         * @return {?}\n         */\n        lastWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'через %s',\n        past: '%s назад',\n        s: 'несколько секунд',\n        ss: relativeTimeWithPlural$1,\n        m: relativeTimeWithPlural$1,\n        mm: relativeTimeWithPlural$1,\n        h: 'час',\n        hh: relativeTimeWithPlural$1,\n        d: 'день',\n        dd: relativeTimeWithPlural$1,\n        M: 'месяц',\n        MM: relativeTimeWithPlural$1,\n        y: 'год',\n        yy: relativeTimeWithPlural$1\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^(дня|вечера)$/.test(input);\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночи';\n        }\n        else if (hour < 12) {\n            return 'утра';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечера';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            case 'w':\n            case 'W':\n                return num + '-я';\n            default:\n                return num.toString(10);\n        }\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\n/** @type {?} */\nconst months$2 = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\n/** @type {?} */\nconst monthsShort$6 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\nfunction plural$3(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'sekundy' : 'sekúnd');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'minúty' : 'minút');\n            }\n            else {\n                return result + 'minútami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'hodiny' : 'hodín');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'dni' : 'dní');\n            }\n            else {\n                return result + 'dňami';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'mesiace' : 'mesiacov');\n            }\n            else {\n                return result + 'mesiacmi';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'roky' : 'rokov');\n            }\n            else {\n                return result + 'rokmi';\n            }\n        // break;\n    }\n}\n/** @type {?} */\nconst skLocale = {\n    abbr: 'sk',\n    months: months$2,\n    monthsShort: monthsShort$6,\n    weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n    weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n    weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes o] LT',\n        nextDay: '[zajtra o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n            }\n        },\n        lastDay: '[včera o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'o %s',\n        past: 'pred %s',\n        s: translate$6,\n        ss: translate$6,\n        m: translate$6,\n        mm: translate$6,\n        h: translate$6,\n        hh: translate$6,\n        d: translate$6,\n        dd: translate$6,\n        M: translate$6,\n        MM: translate$6,\n        y: translate$6,\n        yy: translate$6\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n/**\n * @param {?} number\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    var result = number + ' ';\n    switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n        case 'ss':\n            if (number === 1) {\n                result += withoutSuffix ? 'sekundo' : 'sekundi';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n            }\n            return result;\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += withoutSuffix ? 'minuta' : 'minuto';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += withoutSuffix ? 'ura' : 'uro';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'uri' : 'urama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'ure' : 'urami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'ur' : 'urami';\n            }\n            return result;\n        case 'd':\n            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n        case 'dd':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n            }\n            return result;\n        case 'M':\n            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n        case 'MM':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n            }\n            return result;\n        case 'y':\n            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n        case 'yy':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'leto' : 'letom';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'leta' : 'leti';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'let' : 'leti';\n            }\n            return result;\n    }\n}\n/** @type {?} */\nconst slLocale = {\n    abbr: 'sl',\n    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[danes ob] LT',\n        nextDay: '[jutri ob] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n            }\n        },\n        lastDay: '[včeraj ob] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[prejšnjo] [nedeljo] [ob] LT';\n                case 3:\n                    return '[prejšnjo] [sredo] [ob] LT';\n                case 6:\n                    return '[prejšnjo] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'čez %s',\n        past: 'pred %s',\n        s: processRelativeTime$2,\n        ss: processRelativeTime$2,\n        m: processRelativeTime$2,\n        mm: processRelativeTime$2,\n        h: processRelativeTime$2,\n        hh: processRelativeTime$2,\n        d: processRelativeTime$2,\n        dd: processRelativeTime$2,\n        M: processRelativeTime$2,\n        MM: processRelativeTime$2,\n        y: processRelativeTime$2,\n        yy: processRelativeTime$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n/** @type {?} */\nconst svLocale = {\n    abbr: 'sv',\n    months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n    weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n    weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Idag] LT',\n        nextDay: '[Imorgon] LT',\n        lastDay: '[Igår] LT',\n        nextWeek: '[På] dddd LT',\n        lastWeek: '[I] dddd[s] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: 'för %s sedan',\n        s: 'några sekunder',\n        ss: '%d sekunder',\n        m: 'en minut',\n        mm: '%d minuter',\n        h: 'en timme',\n        hh: '%d timmar',\n        d: 'en dag',\n        dd: '%d dagar',\n        M: 'en månad',\n        MM: '%d månader',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        let b = num % 10;\n        /** @type {?} */\n        let output = (~~(num % 100 / 10) === 1) ? 'e' :\n            (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                    (b === 3) ? 'e' : 'e';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n/** @type {?} */\nconst thLocale = {\n    abbr: 'th',\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    // yes, three characters difference\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY เวลา H:mm',\n        LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return input === 'หลังเที่ยง';\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        }\n        else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar: {\n        sameDay: '[วันนี้ เวลา] LT',\n        nextDay: '[พรุ่งนี้ เวลา] LT',\n        nextWeek: 'dddd[หน้า เวลา] LT',\n        lastDay: '[เมื่อวานนี้ เวลา] LT',\n        lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'อีก %s',\n        past: '%sที่แล้ว',\n        s: 'ไม่กี่วินาที',\n        ss: '%d วินาที',\n        m: '1 นาที',\n        mm: '%d นาที',\n        h: '1 ชั่วโมง',\n        hh: '%d ชั่วโมง',\n        d: '1 วัน',\n        dd: '%d วัน',\n        M: '1 เดือน',\n        MM: '%d เดือน',\n        y: '1 ปี',\n        yy: '%d ปี'\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n/** @type {?} */\nlet suffixes = {\n    1: '\\'inci',\n    5: '\\'inci',\n    8: '\\'inci',\n    70: '\\'inci',\n    80: '\\'inci',\n    2: '\\'nci',\n    7: '\\'nci',\n    20: '\\'nci',\n    50: '\\'nci',\n    3: '\\'üncü',\n    4: '\\'üncü',\n    100: '\\'üncü',\n    6: '\\'ncı',\n    9: '\\'uncu',\n    10: '\\'uncu',\n    30: '\\'uncu',\n    60: '\\'ıncı',\n    90: '\\'ıncı'\n};\n/** @type {?} */\nconst trLocale = {\n    abbr: 'tr',\n    months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n    monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n    weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n    weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n    weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[bugün saat] LT',\n        nextDay: '[yarın saat] LT',\n        nextWeek: '[gelecek] dddd [saat] LT',\n        lastDay: '[dün] LT',\n        lastWeek: '[geçen] dddd [saat] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s sonra',\n        past: '%s önce',\n        s: 'birkaç saniye',\n        ss: '%d saniye',\n        m: 'bir dakika',\n        mm: '%d dakika',\n        h: 'bir saat',\n        hh: '%d saat',\n        d: 'bir gün',\n        dd: '%d gün',\n        M: 'bir ay',\n        MM: '%d ay',\n        y: 'bir yıl',\n        yy: '%d yıl'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        if (num === 0) { // special case for zero\n            return num + '\\'ıncı';\n        }\n        /** @type {?} */\n        let a = num % 10;\n        /** @type {?} */\n        let b = num % 100 - a;\n        /** @type {?} */\n        let c = num >= 100 ? 100 : null;\n        return num + (suffixes[a] || suffixes[b] || suffixes[c]);\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\nfunction plural$4(word, num) {\n    /** @type {?} */\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n    /** @type {?} */\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n        mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n        hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n        dd: 'день_дні_днів',\n        MM: 'місяць_місяці_місяців',\n        yy: 'рік_роки_років'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвилина' : 'хвилину';\n    }\n    if (key === 'h') {\n        return withoutSuffix ? 'година' : 'годину';\n    }\n    return num + ' ' + plural$4(format[key], +num);\n}\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} isUTC\n * @return {?}\n */\nfunction weekdaysCaseReplace(date, format, isUTC) {\n    /** @type {?} */\n    let weekdays = {\n        nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n        accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n        genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n    };\n    if (!date) {\n        return weekdays.nominative;\n    }\n    /** @type {?} */\n    let nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n        'accusative' :\n        ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n            'genitive' :\n            'nominative');\n    return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction processHoursFunction(str) {\n    return (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n    });\n}\n/** @type {?} */\nconst ukLocale = {\n    abbr: 'uk',\n    months: {\n        format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n        standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY р.',\n        LLL: 'D MMMM YYYY р., HH:mm',\n        LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n    },\n    calendar: {\n        sameDay: processHoursFunction('[Сьогодні '),\n        nextDay: processHoursFunction('[Завтра '),\n        lastDay: processHoursFunction('[Вчора '),\n        nextWeek: processHoursFunction('[У] dddd ['),\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [')(date);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [')(date);\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'за %s',\n        past: '%s тому',\n        s: 'декілька секунд',\n        ss: relativeTimeWithPlural$2,\n        m: relativeTimeWithPlural$2,\n        mm: relativeTimeWithPlural$2,\n        h: 'годину',\n        hh: relativeTimeWithPlural$2,\n        d: 'день',\n        dd: relativeTimeWithPlural$2,\n        M: 'місяць',\n        MM: relativeTimeWithPlural$2,\n        y: 'рік',\n        yy: relativeTimeWithPlural$2\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^(дня|вечора)$/.test(input);\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночі';\n        }\n        else if (hour < 12) {\n            return 'ранку';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечора';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            default:\n                return num.toString();\n        }\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n/** @type {?} */\nconst viLocale = {\n    abbr: 'vi',\n    months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n    monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n    weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysParseExact: true,\n    meridiemParse: /sa|ch/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^ch$/i.test(input);\n    },\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower ? 'sa' : 'SA';\n        }\n        else {\n            return isLower ? 'ch' : 'CH';\n        }\n    },\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM [năm] YYYY',\n        LLL: 'D MMMM [năm] YYYY HH:mm',\n        LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n        l: 'DD/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hôm nay lúc] LT',\n        nextDay: '[Ngày mai lúc] LT',\n        nextWeek: 'dddd [tuần tới lúc] LT',\n        lastDay: '[Hôm qua lúc] LT',\n        lastWeek: 'dddd [tuần trước lúc] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s tới',\n        past: '%s trước',\n        s: 'vài giây',\n        ss: '%d giây',\n        m: 'một phút',\n        mm: '%d phút',\n        h: 'một giờ',\n        hh: '%d giờ',\n        d: 'một ngày',\n        dd: '%d ngày',\n        M: 'một tháng',\n        MM: '%d tháng',\n        y: 'một năm',\n        yy: '%d năm'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        return '' + _num;\n    },\n    week: {\n        dow: 1,\n        // Thứ Hai là ngày đầu tuần.\n        doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n/** @type {?} */\nconst zhCnLocale = {\n    abbr: 'zh-cn',\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日Ah点mm分',\n        LLLL: 'YYYY年M月D日ddddAh点mm分',\n        l: 'YYYY/M/D',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    /**\n     * @param {?} hour\n     * @param {?} meridiem\n     * @return {?}\n     */\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' ||\n            meridiem === '上午') {\n            return hour;\n        }\n        else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        }\n        else {\n            // '中午'\n            return hour >= 11 ? hour : hour + 12;\n        }\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        /** @type {?} */\n        let hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        }\n        else if (hm < 900) {\n            return '早上';\n        }\n        else if (hm < 1130) {\n            return '上午';\n        }\n        else if (hm < 1230) {\n            return '中午';\n        }\n        else if (hm < 1800) {\n            return '下午';\n        }\n        else {\n            return '晚上';\n        }\n    },\n    calendar: {\n        sameDay: '[今天]LT',\n        nextDay: '[明天]LT',\n        nextWeek: '[下]ddddLT',\n        lastDay: '[昨天]LT',\n        lastWeek: '[上]ddddLT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            case 'M':\n                return num + '月';\n            case 'w':\n            case 'W':\n                return num + '周';\n            default:\n                return num.toString();\n        }\n    },\n    relativeTime: {\n        future: '%s内',\n        past: '%s前',\n        s: '几秒',\n        ss: '%d 秒',\n        m: '1 分钟',\n        mm: '%d 分钟',\n        h: '1 小时',\n        hh: '%d 小时',\n        d: '1 天',\n        dd: '%d 天',\n        M: '1 个月',\n        MM: '%d 个月',\n        y: '1 年',\n        yy: '%d 年'\n    },\n    week: {\n        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, startOf, subtract, svLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale, createDate as ɵa };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}