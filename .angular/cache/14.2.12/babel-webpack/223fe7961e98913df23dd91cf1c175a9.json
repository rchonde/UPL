{"ast":null,"code":"/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Component } from \"../../core/Component\";\nimport { DataItem } from \"../../core/DataItem\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { TextLink } from \"../../core/elements/TextLink\";\nimport { Triangle } from \"../../core/elements/Triangle\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { percent } from \"../../core/utils/Percent\";\nimport * as $iter from \"../../core/utils/Iterator\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar NavigationBarDataItem =\n/** @class */\nfunction (_super) {\n  __extends(NavigationBarDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function NavigationBarDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"NavigationBarDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(NavigationBarDataItem.prototype, \"name\", {\n    /**\r\n     * @return Name\r\n     */\n    get: function () {\n      return this.properties[\"name\"];\n    },\n\n    /**\r\n     * Name of the navigation bar item.\r\n     *\r\n     * @param value  Name\r\n     */\n    set: function (value) {\n      this.setProperty(\"name\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return NavigationBarDataItem;\n}(DataItem);\n\nexport { NavigationBarDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\n\nvar NavigationBar =\n/** @class */\nfunction (_super) {\n  __extends(NavigationBar, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function NavigationBar() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"NavigationBar\";\n    var interfaceColors = new InterfaceColorSet();\n    var textLink = new TextLink();\n    textLink.valign = \"middle\";\n    textLink.paddingTop = 8;\n    textLink.paddingBottom = 8;\n    _this.paddingBottom = 2;\n    _this.links = new ListTemplate(textLink);\n\n    _this._disposers.push(new ListDisposer(_this.links));\n\n    _this._disposers.push(textLink);\n\n    _this._linksIterator = new $iter.ListIterator(_this.links, function () {\n      return _this.links.create();\n    });\n    _this._linksIterator.createNewItems = true;\n    var triangle = new Triangle();\n    triangle.direction = \"right\";\n    triangle.width = 8;\n    triangle.height = 12;\n    triangle.fill = interfaceColors.getFor(\"alternativeBackground\");\n    triangle.fillOpacity = 0.5;\n    triangle.valign = \"middle\";\n    triangle.marginLeft = 10;\n    triangle.marginRight = 10;\n    _this.separators = new ListTemplate(triangle);\n\n    _this._disposers.push(new ListDisposer(_this.separators));\n\n    _this._disposers.push(triangle);\n\n    var activeLink = new TextLink();\n    _this.activeLink = activeLink;\n    activeLink.copyFrom(textLink);\n    activeLink.valign = \"middle\";\n    activeLink.fontWeight = \"bold\";\n    _this.width = percent(100);\n    _this.layout = \"grid\";\n    _this.dataFields.name = \"name\"; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Completely redraws the navigation bar.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  NavigationBar.prototype.validateDataElements = function () {\n    this.removeChildren();\n\n    this._linksIterator.reset();\n\n    _super.prototype.validateDataElements.call(this); //@todo: dispose\n\n  };\n  /**\r\n   * Creates a visual element for a data item (nav item).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  NavigationBar.prototype.validateDataElement = function (dataItem) {\n    _super.prototype.validateDataElement.call(this, dataItem);\n\n    var textLink;\n\n    if (dataItem.index < this.dataItems.length - 1) {\n      textLink = this._linksIterator.getLast();\n      textLink.parent = this;\n      var separator = this.separators.create();\n      separator.parent = this;\n      separator.valign = \"middle\";\n    } else {\n      textLink = this.activeLink;\n      textLink.events.copyFrom(this.links.template.events);\n      textLink.hide(0);\n      textLink.show();\n      textLink.parent = this;\n    }\n\n    textLink.dataItem = dataItem;\n    textLink.text = dataItem.name;\n    textLink.validate();\n  };\n\n  return NavigationBar;\n}(Component);\n\nexport { NavigationBar };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"NavigationBar\"] = NavigationBar;\nregistry.registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;","map":{"version":3,"names":["__extends","Component","DataItem","ListTemplate","ListDisposer","TextLink","Triangle","registry","InterfaceColorSet","percent","$iter","NavigationBarDataItem","_super","_this","call","className","applyTheme","Object","defineProperty","prototype","get","properties","set","value","setProperty","enumerable","configurable","NavigationBar","interfaceColors","textLink","valign","paddingTop","paddingBottom","links","_disposers","push","_linksIterator","ListIterator","create","createNewItems","triangle","direction","width","height","fill","getFor","fillOpacity","marginLeft","marginRight","separators","activeLink","copyFrom","fontWeight","layout","dataFields","name","validateDataElements","removeChildren","reset","validateDataElement","dataItem","index","dataItems","length","getLast","parent","separator","events","template","hide","show","text","validate","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js"],"sourcesContent":["/**\r\n * Functionality for drawing simple NavigationBar.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { TextLink } from \"../../core/elements/TextLink\";\r\nimport { Triangle } from \"../../core/elements/Triangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[NavigationBar]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar NavigationBarDataItem = /** @class */ (function (_super) {\r\n    __extends(NavigationBarDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBarDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"NavigationBarDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(NavigationBarDataItem.prototype, \"name\", {\r\n        /**\r\n         * @return Name\r\n         */\r\n        get: function () {\r\n            return this.properties[\"name\"];\r\n        },\r\n        /**\r\n         * Name of the navigation bar item.\r\n         *\r\n         * @param value  Name\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"name\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return NavigationBarDataItem;\r\n}(DataItem));\r\nexport { NavigationBarDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * NavigationBar class can be used to create a multi-level breadcrumb-style\r\n * navigation control.\r\n *\r\n * @see {@link INavigationBarEvents} for a list of available events\r\n * @see {@link INavigationBarAdapters} for a list of available Adapters\r\n * @todo Implement better\r\n * @important\r\n */\r\nvar NavigationBar = /** @class */ (function (_super) {\r\n    __extends(NavigationBar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function NavigationBar() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"NavigationBar\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var textLink = new TextLink();\r\n        textLink.valign = \"middle\";\r\n        textLink.paddingTop = 8;\r\n        textLink.paddingBottom = 8;\r\n        _this.paddingBottom = 2;\r\n        _this.links = new ListTemplate(textLink);\r\n        _this._disposers.push(new ListDisposer(_this.links));\r\n        _this._disposers.push(textLink);\r\n        _this._linksIterator = new $iter.ListIterator(_this.links, function () { return _this.links.create(); });\r\n        _this._linksIterator.createNewItems = true;\r\n        var triangle = new Triangle();\r\n        triangle.direction = \"right\";\r\n        triangle.width = 8;\r\n        triangle.height = 12;\r\n        triangle.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        triangle.fillOpacity = 0.5;\r\n        triangle.valign = \"middle\";\r\n        triangle.marginLeft = 10;\r\n        triangle.marginRight = 10;\r\n        _this.separators = new ListTemplate(triangle);\r\n        _this._disposers.push(new ListDisposer(_this.separators));\r\n        _this._disposers.push(triangle);\r\n        var activeLink = new TextLink();\r\n        _this.activeLink = activeLink;\r\n        activeLink.copyFrom(textLink);\r\n        activeLink.valign = \"middle\";\r\n        activeLink.fontWeight = \"bold\";\r\n        _this.width = percent(100);\r\n        _this.layout = \"grid\";\r\n        _this.dataFields.name = \"name\";\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Completely redraws the navigation bar.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    NavigationBar.prototype.validateDataElements = function () {\r\n        this.removeChildren();\r\n        this._linksIterator.reset();\r\n        _super.prototype.validateDataElements.call(this);\r\n        //@todo: dispose\r\n    };\r\n    /**\r\n     * Creates a visual element for a data item (nav item).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    NavigationBar.prototype.validateDataElement = function (dataItem) {\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        var textLink;\r\n        if (dataItem.index < this.dataItems.length - 1) {\r\n            textLink = this._linksIterator.getLast();\r\n            textLink.parent = this;\r\n            var separator = this.separators.create();\r\n            separator.parent = this;\r\n            separator.valign = \"middle\";\r\n        }\r\n        else {\r\n            textLink = this.activeLink;\r\n            textLink.events.copyFrom(this.links.template.events);\r\n            textLink.hide(0);\r\n            textLink.show();\r\n            textLink.parent = this;\r\n        }\r\n        textLink.dataItem = dataItem;\r\n        textLink.text = dataItem.name;\r\n        textLink.validate();\r\n    };\r\n    return NavigationBar;\r\n}(Component));\r\nexport { NavigationBar };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"NavigationBar\"] = NavigationBar;\r\nregistry.registeredClasses[\"NavigationBarDataItem\"] = NavigationBarDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}