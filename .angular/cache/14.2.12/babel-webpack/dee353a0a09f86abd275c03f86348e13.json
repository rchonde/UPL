{"ast":null,"code":"/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Column } from \"./Column\";\nimport { Line } from \"../../core/elements/Line\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar Candlestick =\n/** @class */\nfunction (_super) {\n  __extends(Candlestick, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Candlestick() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Candlestick\";\n    _this.layout = \"none\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Candlestick.prototype.createAssets = function () {\n    _super.prototype.createAssets.call(this);\n\n    this.lowLine = this.createChild(Line);\n    this.lowLine.shouldClone = false;\n    this.highLine = this.createChild(Line);\n    this.highLine.shouldClone = false;\n  };\n  /**\r\n   * Copies all parameters from another [[Candlestick]].\r\n   *\r\n   * @param source Source Candlestick\r\n   */\n\n\n  Candlestick.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.lowLine) {\n      this.lowLine.copyFrom(source.lowLine);\n    }\n\n    if (this.highLine) {\n      this.highLine.copyFrom(source.highLine);\n    }\n  };\n\n  return Candlestick;\n}(Column);\n\nexport { Candlestick };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;","map":{"version":3,"names":["__extends","Column","Line","registry","Candlestick","_super","_this","call","className","layout","prototype","createAssets","lowLine","createChild","shouldClone","highLine","copyFrom","source","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js"],"sourcesContent":["/**\r\n * Module that defines everything related to building Candlesticks.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Line } from \"../../core/elements/Line\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Candlesticks.\r\n *\r\n * @see {@link ICandlestickEvents} for a list of available events\r\n * @see {@link ICandlestickAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Candlestick = /** @class */ (function (_super) {\r\n    __extends(Candlestick, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Candlestick() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Candlestick\";\r\n        _this.layout = \"none\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Candlestick.prototype.createAssets = function () {\r\n        _super.prototype.createAssets.call(this);\r\n        this.lowLine = this.createChild(Line);\r\n        this.lowLine.shouldClone = false;\r\n        this.highLine = this.createChild(Line);\r\n        this.highLine.shouldClone = false;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Candlestick]].\r\n     *\r\n     * @param source Source Candlestick\r\n     */\r\n    Candlestick.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.lowLine) {\r\n            this.lowLine.copyFrom(source.lowLine);\r\n        }\r\n        if (this.highLine) {\r\n            this.highLine.copyFrom(source.highLine);\r\n        }\r\n    };\r\n    return Candlestick;\r\n}(Column));\r\nexport { Candlestick };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Candlestick\"] = Candlestick;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,IAAT,QAAqB,0BAArB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC/CL,SAAS,CAACI,WAAD,EAAcC,MAAd,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,WAAT,GAAuB;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,aAAlB;IACAF,KAAK,CAACG,MAAN,GAAe,MAAf;IACA,OAAOH,KAAP;EACH;EACD;AACJ;AACA;;;EACIF,WAAW,CAACM,SAAZ,CAAsBC,YAAtB,GAAqC,YAAY;IAC7CN,MAAM,CAACK,SAAP,CAAiBC,YAAjB,CAA8BJ,IAA9B,CAAmC,IAAnC;;IACA,KAAKK,OAAL,GAAe,KAAKC,WAAL,CAAiBX,IAAjB,CAAf;IACA,KAAKU,OAAL,CAAaE,WAAb,GAA2B,KAA3B;IACA,KAAKC,QAAL,GAAgB,KAAKF,WAAL,CAAiBX,IAAjB,CAAhB;IACA,KAAKa,QAAL,CAAcD,WAAd,GAA4B,KAA5B;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;;;EACIV,WAAW,CAACM,SAAZ,CAAsBM,QAAtB,GAAiC,UAAUC,MAAV,EAAkB;IAC/CZ,MAAM,CAACK,SAAP,CAAiBM,QAAjB,CAA0BT,IAA1B,CAA+B,IAA/B,EAAqCU,MAArC;;IACA,IAAI,KAAKL,OAAT,EAAkB;MACd,KAAKA,OAAL,CAAaI,QAAb,CAAsBC,MAAM,CAACL,OAA7B;IACH;;IACD,IAAI,KAAKG,QAAT,EAAmB;MACf,KAAKA,QAAL,CAAcC,QAAd,CAAuBC,MAAM,CAACF,QAA9B;IACH;EACJ,CARD;;EASA,OAAOX,WAAP;AACH,CApCgC,CAoC/BH,MApC+B,CAAjC;;AAqCA,SAASG,WAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,QAAQ,CAACe,iBAAT,CAA2B,aAA3B,IAA4Cd,WAA5C"},"metadata":{},"sourceType":"module"}