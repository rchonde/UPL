{"ast":null,"code":"import { FocusMonitor, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\n\nfunction MatMenu_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event));\n    })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\"));\n    })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r4._onAnimationStart($event));\n    })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event));\n    });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n  }\n}\n\nconst matMenuAnimations = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [state('void', style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n    opacity: 1,\n    transform: 'scale(1)'\n  }))), transition('* => void', animate('100ms 25ms linear', style({\n    opacity: 0\n  })))]),\n\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [// TODO(crisbeto): this is inside the `transformMenu`\n  // now. Remove next time we do breaking changes.\n  state('showing', style({\n    opacity: 1\n  })), transition('void => *', [style({\n    opacity: 0\n  }), animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')])])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\n\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\n\nconst transformMenu = matMenuAnimations.transformMenu;\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\n\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\n\nclass MatMenuContent {\n  constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n    this._template = _template;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._appRef = _appRef;\n    this._injector = _injector;\n    this._viewContainerRef = _viewContainerRef;\n    this._document = _document;\n    this._changeDetectorRef = _changeDetectorRef;\n    /** Emits when the menu content has been attached. */\n\n    this._attached = new Subject();\n  }\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n\n\n  attach(context = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n\n    this.detach();\n\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n    }\n\n    const element = this._template.elementRef.nativeElement; // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n\n    element.parentNode.insertBefore(this._outlet.outletElement, element); // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n    // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n    // @breaking-change 9.0.0 Make change detector ref required\n\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._portal.attach(this._outlet, context);\n\n    this._attached.next();\n  }\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n\n\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n\n}\n\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) {\n  return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nMatMenuContent.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuContent,\n  selectors: [[\"ng-template\", \"matMenuContent\", \"\"]],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_MENU_CONTENT,\n    useExisting: MatMenuContent\n  }])]\n});\n\nMatMenuContent.ctorParameters = () => [{\n  type: TemplateRef\n}, {\n  type: ComponentFactoryResolver\n}, {\n  type: ApplicationRef\n}, {\n  type: Injector\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: ChangeDetectorRef\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n    type: Directive,\n    args: [{\n      selector: 'ng-template[matMenuContent]',\n      providers: [{\n        provide: MAT_MENU_CONTENT,\n        useExisting: MatMenuContent\n      }]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ApplicationRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\n\n\nfunction throwMatMenuMissingError() {\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\n\n\nfunction throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\n\n\nfunction throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\n\n\nfunction throwMatMenuRecursiveError() {\n  throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` + `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\n\n\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n\n/** @docs-private */\n\nclass MatMenuItemBase {}\n\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\n\n\nclass MatMenuItem extends _MatMenuItemMixinBase {\n  constructor(_elementRef,\n  /**\n   * @deprecated `_document` parameter is no longer being used and will be removed.\n   * @breaking-change 12.0.0\n   */\n  _document, _focusMonitor, _parentMenu) {\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    super();\n    this._elementRef = _elementRef;\n    this._focusMonitor = _focusMonitor;\n    this._parentMenu = _parentMenu;\n    /** ARIA role for the menu item. */\n\n    this.role = 'menuitem';\n    /** Stream that emits when the menu item is hovered. */\n\n    this._hovered = new Subject();\n    /** Stream that emits when the menu item is focused. */\n\n    this._focused = new Subject();\n    /** Whether the menu item is highlighted. */\n\n    this._highlighted = false;\n    /** Whether the menu item acts as a trigger for a sub-menu. */\n\n    this._triggersSubmenu = false;\n\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(this);\n    }\n  }\n  /** Focuses the menu item. */\n\n\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    } else {\n      this._getHostElement().focus(options);\n    }\n\n    this._focused.next(this);\n  }\n\n  ngAfterViewInit() {\n    if (this._focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      this._focusMonitor.monitor(this._elementRef, false);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n\n    this._hovered.complete();\n\n    this._focused.complete();\n  }\n  /** Used to set the `tabindex`. */\n\n\n  _getTabIndex() {\n    return this.disabled ? '-1' : '0';\n  }\n  /** Returns the host DOM element. */\n\n\n  _getHostElement() {\n    return this._elementRef.nativeElement;\n  }\n  /** Prevents the default element actions if it is disabled. */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _checkDisabled(event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n  /** Emits to the hover stream. */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n  /** Gets the label to be used when determining whether the option should be focused. */\n\n\n  getLabel() {\n    var _a, _b;\n\n    const clone = this._elementRef.nativeElement.cloneNode(true);\n\n    const icons = clone.querySelectorAll('mat-icon, .material-icons'); // Strip away icons so they don't show up in the text.\n\n    for (let i = 0; i < icons.length; i++) {\n      const icon = icons[i];\n      (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n    }\n\n    return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n  }\n\n}\n\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) {\n  return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8));\n};\n\nMatMenuItem.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenuItem,\n  selectors: [[\"\", \"mat-menu-item\", \"\"]],\n  hostAttrs: [1, \"mat-focus-indicator\"],\n  hostVars: 10,\n  hostBindings: function MatMenuItem_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) {\n        return ctx._checkDisabled($event);\n      })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() {\n        return ctx._handleMouseEnter();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n      ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    disableRipple: \"disableRipple\",\n    role: \"role\"\n  },\n  exportAs: [\"matMenuItem\"],\n  features: [ɵngcc0.ɵɵInheritDefinitionFeature],\n  attrs: _c0,\n  ngContentSelectors: _c1,\n  decls: 2,\n  vars: 2,\n  consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]],\n  template: function MatMenuItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵprojection(0);\n      ɵngcc0.ɵɵelement(1, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    }\n  },\n  dependencies: [ɵngcc2.MatRipple],\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nMatMenuItem.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [DOCUMENT]\n  }]\n}, {\n  type: FocusMonitor\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_PANEL]\n  }, {\n    type: Optional\n  }]\n}];\n\nMatMenuItem.propDecorators = {\n  role: [{\n    type: Input\n  }],\n  _checkDisabled: [{\n    type: HostListener,\n    args: ['click', ['$event']]\n  }],\n  _handleMouseEnter: [{\n    type: HostListener,\n    args: ['mouseenter']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n    type: Component,\n    args: [{\n      selector: '[mat-menu-item]',\n      exportAs: 'matMenuItem',\n      inputs: ['disabled', 'disableRipple'],\n      host: {\n        '[attr.role]': 'role',\n        '[class.mat-menu-item]': 'true',\n        '[class.mat-menu-item-highlighted]': '_highlighted',\n        '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.disabled]': 'disabled || null',\n        'class': 'mat-focus-indicator'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }];\n  }, {\n    role: [{\n      type: Input\n    }],\n\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }],\n\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token to be used to override the default options for `mat-menu`. */\n\n\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n  providedIn: 'root',\n  factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\n\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop'\n  };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\n\n\nconst MAT_MENU_BASE_ELEVATION = 4;\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\n\nclass _MatMenuBase {\n  constructor(_elementRef, _ngZone, _defaultOptions) {\n    this._elementRef = _elementRef;\n    this._ngZone = _ngZone;\n    this._defaultOptions = _defaultOptions;\n    this._xPosition = this._defaultOptions.xPosition;\n    this._yPosition = this._defaultOptions.yPosition;\n    /** Only the direct descendant menu items. */\n\n    this._directDescendantItems = new QueryList();\n    /** Subscription to tab events on the menu panel */\n\n    this._tabSubscription = Subscription.EMPTY;\n    /** Config object to be passed into the menu's ngClass */\n\n    this._classList = {};\n    /** Current state of the panel animation. */\n\n    this._panelAnimationState = 'void';\n    /** Emits whenever an animation on the menu completes. */\n\n    this._animationDone = new Subject();\n    /** Class or list of classes to be added to the overlay panel. */\n\n    this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n    /** Class to be added to the backdrop element. */\n\n    this.backdropClass = this._defaultOptions.backdropClass;\n    this._overlapTrigger = this._defaultOptions.overlapTrigger;\n    this._hasBackdrop = this._defaultOptions.hasBackdrop;\n    /** Event emitted when the menu is closed. */\n\n    this.closed = new EventEmitter();\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * @breaking-change 8.0.0\n     */\n\n    this.close = this.closed;\n    this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n  }\n  /** Position of the menu in the X axis. */\n\n\n  get xPosition() {\n    return this._xPosition;\n  }\n\n  set xPosition(value) {\n    if (value !== 'before' && value !== 'after' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionX();\n    }\n\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n  /** Position of the menu in the Y axis. */\n\n\n  get yPosition() {\n    return this._yPosition;\n  }\n\n  set yPosition(value) {\n    if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuInvalidPositionY();\n    }\n\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n  /** Whether the menu should overlap its trigger. */\n\n\n  get overlapTrigger() {\n    return this._overlapTrigger;\n  }\n\n  set overlapTrigger(value) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  /** Whether the menu has a backdrop. */\n\n\n  get hasBackdrop() {\n    return this._hasBackdrop;\n  }\n\n  set hasBackdrop(value) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n\n\n  set panelClass(classes) {\n    const previousPanelClass = this._previousPanelClass;\n\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach(className => {\n        this._classList[className] = false;\n      });\n    }\n\n    this._previousPanelClass = classes;\n\n    if (classes && classes.length) {\n      classes.split(' ').forEach(className => {\n        this._classList[className] = true;\n      });\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n\n\n  get classList() {\n    return this.panelClass;\n  }\n\n  set classList(classes) {\n    this.panelClass = classes;\n  }\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit() {\n    this._updateDirectDescendants();\n\n    this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead().withHomeAndEnd();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab')); // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n    // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n    // is internal and we know that it gets completed on destroy.\n\n    this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n  }\n\n  ngOnDestroy() {\n    this._directDescendantItems.destroy();\n\n    this._tabSubscription.unsubscribe();\n\n    this.closed.complete();\n  }\n  /** Stream that emits whenever the hovered menu item changes. */\n\n\n  _hovered() {\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\n    const itemChanges = this._directDescendantItems.changes;\n    return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map(item => item._hovered))));\n  }\n  /*\n   * Registers a menu item with the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n\n\n  addItem(_item) {}\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n\n\n  removeItem(_item) {}\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n\n\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n\n        break;\n\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n\n        break;\n\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n\n        manager.onKeydown(event);\n    }\n  }\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n\n\n  focusFirstItem(origin = 'program') {\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => this._focusFirstItem(origin));\n    } else {\n      this._focusFirstItem(origin);\n    }\n  }\n  /**\n   * Actual implementation that focuses the first item. Needs to be separated\n   * out so we don't repeat the same logic in the public `focusFirstItem` method.\n   */\n\n\n  _focusFirstItem(origin) {\n    const manager = this._keyManager;\n    manager.setFocusOrigin(origin).setFirstItemActive(); // If there's no active item at this point, it means that all the items are disabled.\n    // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n    // give _some_ feedback to screen readers.\n\n    if (!manager.activeItem && this._directDescendantItems.length) {\n      let element = this._directDescendantItems.first._getHostElement().parentElement; // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n      // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n      // because the panel is inside an `ng-template`. We work around it by starting from one of\n      // the items and walking up the DOM.\n\n\n      while (element) {\n        if (element.getAttribute('role') === 'menu') {\n          element.focus();\n          break;\n        } else {\n          element = element.parentElement;\n        }\n      }\n    }\n  }\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n\n\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n\n\n  setElevation(depth) {\n    // The elevation starts at the base and increases by one for each level.\n    // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n    const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n    const newElevation = `mat-elevation-z${elevation}`;\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n\n\n  setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n  }\n  /** Starts the enter animation. */\n\n\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n  /** Resets the panel animation to its initial state. */\n\n\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n  /** Callback that is invoked when the panel animation completes. */\n\n\n  _onAnimationDone(event) {\n    this._animationDone.next(event);\n\n    this._isAnimating = false;\n  }\n\n  _onAnimationStart(event) {\n    this._isAnimating = true; // Scroll the content element to the top as soon as the animation starts. This is necessary,\n    // because we move focus to the first item while it's still being animated, which can throw\n    // the browser off when it determines the scroll position. Alternatively we can move focus\n    // when the animation is done, however moving focus asynchronously will interrupt screen\n    // readers which are in the process of reading out the menu already. We take the `element`\n    // from the `event` since we can't use a `ViewChild` to access the pane.\n\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n  /**\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\n   * items that are part of child menus, and using a custom way of registering items is unreliable\n   * when it comes to maintaining the item order.\n   */\n\n\n  _updateDirectDescendants() {\n    this._allItems.changes.pipe(startWith(this._allItems)).subscribe(items => {\n      this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n\n      this._directDescendantItems.notifyOnChanges();\n    });\n  }\n\n}\n\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) {\n  return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\n\n_MatMenuBase.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: _MatMenuBase,\n  contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  viewQuery: function _MatMenuBase_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    }\n  },\n  inputs: {\n    backdropClass: \"backdropClass\",\n    xPosition: \"xPosition\",\n    yPosition: \"yPosition\",\n    overlapTrigger: \"overlapTrigger\",\n    hasBackdrop: \"hasBackdrop\",\n    panelClass: [\"class\", \"panelClass\"],\n    classList: \"classList\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"]\n  },\n  outputs: {\n    closed: \"closed\",\n    close: \"close\"\n  }\n});\n\n_MatMenuBase.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_DEFAULT_OPTIONS]\n  }]\n}];\n\n_MatMenuBase.propDecorators = {\n  _allItems: [{\n    type: ContentChildren,\n    args: [MatMenuItem, {\n      descendants: true\n    }]\n  }],\n  backdropClass: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }],\n  ariaDescribedby: [{\n    type: Input,\n    args: ['aria-describedby']\n  }],\n  xPosition: [{\n    type: Input\n  }],\n  yPosition: [{\n    type: Input\n  }],\n  templateRef: [{\n    type: ViewChild,\n    args: [TemplateRef]\n  }],\n  items: [{\n    type: ContentChildren,\n    args: [MatMenuItem, {\n      descendants: false\n    }]\n  }],\n  lazyContent: [{\n    type: ContentChild,\n    args: [MAT_MENU_CONTENT]\n  }],\n  overlapTrigger: [{\n    type: Input\n  }],\n  hasBackdrop: [{\n    type: Input\n  }],\n  panelClass: [{\n    type: Input,\n    args: ['class']\n  }],\n  classList: [{\n    type: Input\n  }],\n  closed: [{\n    type: Output\n  }],\n  close: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, {\n    backdropClass: [{\n      type: Input\n    }],\n    closed: [{\n      type: Output\n    }],\n    close: [{\n      type: Output\n    }],\n    xPosition: [{\n      type: Input\n    }],\n    yPosition: [{\n      type: Input\n    }],\n    overlapTrigger: [{\n      type: Input\n    }],\n    hasBackdrop: [{\n      type: Input\n    }],\n    panelClass: [{\n      type: Input,\n      args: ['class']\n    }],\n    classList: [{\n      type: Input\n    }],\n    _allItems: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: true\n      }]\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    templateRef: [{\n      type: ViewChild,\n      args: [TemplateRef]\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [MatMenuItem, {\n        descendants: false\n      }]\n    }],\n    lazyContent: [{\n      type: ContentChild,\n      args: [MAT_MENU_CONTENT]\n    }]\n  });\n})();\n/** @docs-public MatMenu */\n\n\nclass MatMenu extends _MatMenuBase {\n  constructor(elementRef, ngZone, defaultOptions) {\n    super(elementRef, ngZone, defaultOptions);\n  }\n\n}\n\nMatMenu.ɵfac = function MatMenu_Factory(t) {\n  return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS));\n};\n\nMatMenu.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: MatMenu,\n  selectors: [[\"mat-menu\"]],\n  hostVars: 3,\n  hostBindings: function MatMenu_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n    }\n  },\n  exportAs: [\"matMenu\"],\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: MAT_MENU_PANEL,\n    useExisting: MatMenu\n  }]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]],\n  template: function MatMenu_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    }\n  },\n  dependencies: [ɵngcc3.NgClass],\n  styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"],\n  encapsulation: 2,\n  data: {\n    animation: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems]\n  },\n  changeDetection: 0\n});\n\nMatMenu.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: NgZone\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_DEFAULT_OPTIONS]\n  }]\n}];\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n    type: Component,\n    args: [{\n      selector: 'mat-menu',\n      template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matMenu',\n      host: {\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null'\n      },\n      animations: [matMenuAnimations.transformMenu, matMenuAnimations.fadeInItems],\n      providers: [{\n        provide: MAT_MENU_PANEL,\n        useExisting: MatMenu\n      }],\n      styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.NgZone\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_DEFAULT_OPTIONS]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Injection token that determines the scroll handling while the menu is open. */\n\n\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\n\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\n\n\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY\n};\n/** Default top padding of the menu panel. */\n\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\n\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({\n  passive: true\n}); // TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n\n/** Directive applied to an element that should trigger a `mat-menu`. */\n\nclass MatMenuTrigger {\n  constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n  // tslint:disable-next-line: lightweight-tokens\n  _menuItemInstance, _dir, // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n  // @breaking-change 8.0.0\n  _focusMonitor) {\n    this._overlay = _overlay;\n    this._element = _element;\n    this._viewContainerRef = _viewContainerRef;\n    this._menuItemInstance = _menuItemInstance;\n    this._dir = _dir;\n    this._focusMonitor = _focusMonitor;\n    this._overlayRef = null;\n    this._menuOpen = false;\n    this._closingActionsSubscription = Subscription.EMPTY;\n    this._hoverSubscription = Subscription.EMPTY;\n    this._menuCloseSubscription = Subscription.EMPTY;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     */\n\n    this._handleTouchStart = event => {\n      if (!isFakeTouchstartFromScreenReader(event)) {\n        this._openedBy = 'touch';\n      }\n    }; // Tracking input type is necessary so it's possible to only auto-focus\n    // the first item of the list when the menu is opened via the keyboard\n\n\n    this._openedBy = undefined;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     */\n\n    this.restoreFocus = true;\n    /** Event emitted when the associated menu is opened. */\n\n    this.menuOpened = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onMenuOpen = this.menuOpened;\n    /** Event emitted when the associated menu is closed. */\n\n    this.menuClosed = new EventEmitter();\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * @breaking-change 8.0.0\n     */\n    // tslint:disable-next-line:no-output-on-prefix\n\n    this.onMenuClose = this.menuClosed;\n    this._scrollStrategy = scrollStrategy;\n    this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n  }\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n\n\n  get _deprecatedMatMenuTriggerFor() {\n    return this.menu;\n  }\n\n  set _deprecatedMatMenuTriggerFor(v) {\n    this.menu = v;\n  }\n  /** References the menu instance that the trigger is associated with. */\n\n\n  get menu() {\n    return this._menu;\n  }\n\n  set menu(menu) {\n    if (menu === this._menu) {\n      return;\n    }\n\n    this._menu = menu;\n\n    this._menuCloseSubscription.unsubscribe();\n\n    if (menu) {\n      if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwMatMenuRecursiveError();\n      }\n\n      this._menuCloseSubscription = menu.close.subscribe(reason => {\n        this._destroyMenu(reason); // If a click closed the menu, we should close the entire chain of nested menus.\n\n\n        if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n          this._parentMaterialMenu.closed.emit(reason);\n        }\n      });\n    }\n  }\n\n  ngAfterContentInit() {\n    this._checkMenu();\n\n    this._handleHover();\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n\n      this._overlayRef = null;\n    }\n\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n\n    this._menuCloseSubscription.unsubscribe();\n\n    this._closingActionsSubscription.unsubscribe();\n\n    this._hoverSubscription.unsubscribe();\n  }\n  /** Whether the menu is open. */\n\n\n  get menuOpen() {\n    return this._menuOpen;\n  }\n  /** The text direction of the containing app. */\n\n\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n\n\n  triggersSubmenu() {\n    return !!(this._menuItemInstance && this._parentMaterialMenu);\n  }\n  /** Toggles the menu between the open and closed states. */\n\n\n  toggleMenu() {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n  /** Opens the menu. */\n\n\n  openMenu() {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._checkMenu();\n\n    const overlayRef = this._createOverlay();\n\n    const overlayConfig = overlayRef.getConfig();\n\n    this._setPosition(overlayConfig.positionStrategy);\n\n    overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop;\n    overlayRef.attach(this._getPortal());\n\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n\n    this._initMenu();\n\n    if (this.menu instanceof _MatMenuBase) {\n      this.menu._startAnimation();\n    }\n  }\n  /** Closes the menu. */\n\n\n  closeMenu() {\n    this.menu.close.emit();\n  }\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n\n\n  focus(origin, options) {\n    if (this._focusMonitor && origin) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n  /** Closes the menu and does the necessary cleanup. */\n\n\n  _destroyMenu(reason) {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n\n    const menu = this.menu;\n\n    this._closingActionsSubscription.unsubscribe();\n\n    this._overlayRef.detach(); // Always restore focus if the user is navigating using the keyboard or the menu was opened\n    // programmatically. We don't restore for non-root triggers, because it can prevent focus\n    // from making it back to the root trigger when closing a long chain of menus by clicking\n    // on the backdrop.\n\n\n    if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n      this.focus(this._openedBy);\n    }\n\n    this._openedBy = undefined;\n\n    if (menu instanceof _MatMenuBase) {\n      menu._resetAnimation();\n\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone.pipe(filter(event => event.toState === 'void'), take(1), // Interrupt if the content got re-attached.\n        takeUntil(menu.lazyContent._attached)).subscribe({\n          next: () => menu.lazyContent.detach(),\n          // No matter whether the content got re-attached, reset the menu.\n          complete: () => this._setIsMenuOpen(false)\n        });\n      } else {\n        this._setIsMenuOpen(false);\n      }\n    } else {\n      this._setIsMenuOpen(false);\n\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n  }\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n\n\n  _initMenu() {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n    this.menu.direction = this.dir;\n\n    this._setMenuElevation();\n\n    this.menu.focusFirstItem(this._openedBy || 'program');\n\n    this._setIsMenuOpen(true);\n  }\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n\n\n  _setMenuElevation() {\n    if (this.menu.setElevation) {\n      let depth = 0;\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  } // set state rather than toggle to support triggers sharing a menu\n\n\n  _setIsMenuOpen(isOpen) {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   */\n\n\n  _checkMenu() {\n    if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatMenuMissingError();\n    }\n  }\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n\n\n  _createOverlay() {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig();\n\n      this._subscribeToPositions(config.positionStrategy);\n\n      this._overlayRef = this._overlay.create(config); // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n\n      this._overlayRef.keydownEvents().subscribe();\n    }\n\n    return this._overlayRef;\n  }\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n\n\n  _getOverlayConfig() {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position().flexibleConnectedTo(this._element).withLockedPosition().withGrowAfterOpen().withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      panelClass: this.menu.overlayPanelClass,\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n\n\n  _subscribeToPositions(position) {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n        this.menu.setPositionClasses(posX, posY);\n      });\n    }\n  }\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n\n\n  _setPosition(positionStrategy) {\n    let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n    let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    positionStrategy.withPositions([{\n      originX,\n      originY,\n      overlayX,\n      overlayY,\n      offsetY\n    }, {\n      originX: originFallbackX,\n      originY,\n      overlayX: overlayFallbackX,\n      overlayY,\n      offsetY\n    }, {\n      originX,\n      originY: originFallbackY,\n      overlayX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }, {\n      originX: originFallbackX,\n      originY: originFallbackY,\n      overlayX: overlayFallbackX,\n      overlayY: overlayFallbackY,\n      offsetY: -offsetY\n    }]);\n  }\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n\n\n  _menuClosingActions() {\n    const backdrop = this._overlayRef.backdropClick();\n\n    const detachments = this._overlayRef.detachments();\n\n    const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n    const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n  /** Handles mouse presses on the trigger. */\n\n\n  _handleMousedown(event) {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : undefined; // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n  /** Handles key presses on the trigger. */\n\n\n  _handleKeydown(event) {\n    const keyCode = event.keyCode; // Pressing enter on the trigger will trigger the click handler later.\n\n    if (keyCode === ENTER || keyCode === SPACE) {\n      this._openedBy = 'keyboard';\n    }\n\n    if (this.triggersSubmenu() && (keyCode === RIGHT_ARROW && this.dir === 'ltr' || keyCode === LEFT_ARROW && this.dir === 'rtl')) {\n      this._openedBy = 'keyboard';\n      this.openMenu();\n    }\n  }\n  /** Handles click events on the trigger. */\n\n\n  _handleClick(event) {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n  /** Handles the cases where the user hovers over the trigger. */\n\n\n  _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n      return;\n    }\n\n    this._hoverSubscription = this._parentMaterialMenu._hovered() // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n    // with different data and triggers), we have to delay it by a tick to ensure that\n    // it won't be closed immediately after it is opened.\n    .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler)).subscribe(() => {\n      this._openedBy = 'mouse'; // If the same menu is used between multiple triggers, it might still be animating\n      // while the new trigger tries to re-open it. Wait for the animation to finish\n      // before doing so. Also interrupt if the user moves to another item.\n\n      if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n        // We need the `delay(0)` here in order to avoid\n        // 'changed after checked' errors in some cases. See #12194.\n        this.menu._animationDone.pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered())).subscribe(() => this.openMenu());\n      } else {\n        this.openMenu();\n      }\n    });\n  }\n  /** Gets the portal that should be attached to the overlay. */\n\n\n  _getPortal() {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n    }\n\n    return this._portal;\n  }\n\n}\n\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) {\n  return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor));\n};\n\nMatMenuTrigger.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n  type: MatMenuTrigger,\n  selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]],\n  hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"],\n  hostVars: 2,\n  hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) {\n        return ctx._handleMousedown($event);\n      })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) {\n        return ctx._handleKeydown($event);\n      })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) {\n        return ctx._handleClick($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    }\n  },\n  inputs: {\n    restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"],\n    _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"],\n    menu: [\"matMenuTriggerFor\", \"menu\"],\n    menuData: [\"matMenuTriggerData\", \"menuData\"]\n  },\n  outputs: {\n    menuOpened: \"menuOpened\",\n    onMenuOpen: \"onMenuOpen\",\n    menuClosed: \"menuClosed\",\n    onMenuClose: \"onMenuClose\"\n  },\n  exportAs: [\"matMenuTrigger\"]\n});\n\nMatMenuTrigger.ctorParameters = () => [{\n  type: Overlay\n}, {\n  type: ElementRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_SCROLL_STRATEGY]\n  }]\n}, {\n  type: undefined,\n  decorators: [{\n    type: Inject,\n    args: [MAT_MENU_PANEL]\n  }, {\n    type: Optional\n  }]\n}, {\n  type: MatMenuItem,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }]\n}, {\n  type: Directionality,\n  decorators: [{\n    type: Optional\n  }]\n}, {\n  type: FocusMonitor\n}];\n\nMatMenuTrigger.propDecorators = {\n  _deprecatedMatMenuTriggerFor: [{\n    type: Input,\n    args: ['mat-menu-trigger-for']\n  }],\n  menu: [{\n    type: Input,\n    args: ['matMenuTriggerFor']\n  }],\n  menuData: [{\n    type: Input,\n    args: ['matMenuTriggerData']\n  }],\n  restoreFocus: [{\n    type: Input,\n    args: ['matMenuTriggerRestoreFocus']\n  }],\n  menuOpened: [{\n    type: Output\n  }],\n  onMenuOpen: [{\n    type: Output\n  }],\n  menuClosed: [{\n    type: Output\n  }],\n  onMenuClose: [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n    type: Directive,\n    args: [{\n      selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n      host: {\n        'class': 'mat-menu-trigger',\n        'aria-haspopup': 'true',\n        '[attr.aria-expanded]': 'menuOpen || null',\n        '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n        '(mousedown)': '_handleMousedown($event)',\n        '(keydown)': '_handleKeydown($event)',\n        '(click)': '_handleClick($event)'\n      },\n      exportAs: 'matMenuTrigger'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc4.Overlay\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_SCROLL_STRATEGY]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [MAT_MENU_PANEL]\n      }, {\n        type: Optional\n      }]\n    }, {\n      type: MatMenuItem,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Self\n      }]\n    }, {\n      type: ɵngcc5.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc1.FocusMonitor\n    }];\n  }, {\n    restoreFocus: [{\n      type: Input,\n      args: ['matMenuTriggerRestoreFocus']\n    }],\n    menuOpened: [{\n      type: Output\n    }],\n    onMenuOpen: [{\n      type: Output\n    }],\n    menuClosed: [{\n      type: Output\n    }],\n    onMenuClose: [{\n      type: Output\n    }],\n    _deprecatedMatMenuTriggerFor: [{\n      type: Input,\n      args: ['mat-menu-trigger-for']\n    }],\n    menu: [{\n      type: Input,\n      args: ['matMenuTriggerFor']\n    }],\n    menuData: [{\n      type: Input,\n      args: ['matMenuTriggerData']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n\n\nclass _MatMenuDirectivesModule {}\n\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) {\n  return new (t || _MatMenuDirectivesModule)();\n};\n\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: _MatMenuDirectivesModule\n});\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [MatCommonModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n    type: NgModule,\n    args: [{\n      exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n      declarations: [MatMenuTrigger, MatMenuContent],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, {\n    declarations: function () {\n      return [MatMenuTrigger, MatMenuContent];\n    },\n    exports: function () {\n      return [MatMenuTrigger, MatMenuContent, MatCommonModule];\n    }\n  });\n})();\n\nclass MatMenuModule {}\n\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) {\n  return new (t || MatMenuModule)();\n};\n\nMatMenuModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n  type: MatMenuModule\n});\nMatMenuModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER],\n  imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule, CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule],\n      exports: [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n      declarations: [MatMenu, MatMenuItem],\n      providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, {\n    declarations: function () {\n      return [MatMenu, MatMenuItem];\n    },\n    imports: function () {\n      return [CommonModule, MatCommonModule, MatRippleModule, OverlayModule, _MatMenuDirectivesModule];\n    },\n    exports: function () {\n      return [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule];\n    }\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };","map":{"version":3,"names":["FocusMonitor","FocusKeyManager","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","coerceBooleanProperty","UP_ARROW","DOWN_ARROW","RIGHT_ARROW","LEFT_ARROW","ESCAPE","hasModifierKey","ENTER","SPACE","InjectionToken","Directive","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","Inject","ChangeDetectorRef","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","Optional","Input","HostListener","QueryList","EventEmitter","NgZone","ContentChildren","ViewChild","ContentChild","Output","Self","NgModule","Subject","Subscription","merge","of","asapScheduler","startWith","switchMap","take","filter","takeUntil","delay","trigger","state","style","transition","animate","TemplatePortal","DomPortalOutlet","DOCUMENT","CommonModule","mixinDisableRipple","mixinDisabled","MatCommonModule","MatRippleModule","Directionality","Overlay","OverlayConfig","OverlayModule","normalizePassiveListenerOptions","CdkScrollableModule","ɵngcc0","ɵngcc1","ɵngcc2","ɵngcc3","ɵngcc4","ɵngcc5","_c0","_c1","MatMenu_ng_template_0_Template","rf","ctx","_r2","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","MatMenu_ng_template_0_Template_div_keydown_0_listener","$event","ɵɵrestoreView","ctx_r1","ɵɵnextContext","ɵɵresetView","_handleKeydown","MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","emit","MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_onAnimationStart","MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ɵɵprojection","ɵɵelementEnd","ctx_r0","ɵɵproperty","panelId","_classList","_panelAnimationState","ɵɵattribute","ariaLabel","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MAT_MENU_CONTENT","MatMenuContent","constructor","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","_attached","attach","context","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","next","isAttached","ngOnDestroy","dispose","ɵfac","MatMenuContent_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","type","selectors","features","ɵɵProvidersFeature","provide","useExisting","ctorParameters","undefined","decorators","args","ngDevMode","ɵsetClassMetadata","selector","providers","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","throwMatMenuRecursiveError","MAT_MENU_PANEL","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_elementRef","_focusMonitor","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","addItem","focus","origin","options","focusVia","_getHostElement","ngAfterViewInit","monitor","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","_a","_b","clone","cloneNode","icons","querySelectorAll","i","length","icon","removeChild","textContent","trim","MatMenuItem_Factory","ɵcmp","ɵɵdefineComponent","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","MatMenuItem_mouseenter_HostBindingHandler","toString","ɵɵclassProp","inputs","disableRipple","exportAs","ɵɵInheritDefinitionFeature","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","ɵɵprojectionDef","ɵɵelement","ɵɵadvance","dependencies","MatRipple","encapsulation","changeDetection","propDecorators","host","OnPush","None","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MAT_MENU_BASE_ELEVATION","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_animationDone","overlayPanelClass","_overlapTrigger","_hasBackdrop","hasBackdrop","close","value","setPositionClasses","panelClass","classes","previousPanelClass","_previousPanelClass","split","forEach","className","classList","ngOnInit","ngAfterContentInit","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","tabOut","subscribe","changes","pipe","items","map","item","focusedItem","updateActiveItem","destroy","unsubscribe","itemChanges","_item","keyCode","manager","parentMenu","direction","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","_focusFirstItem","setFirstItemActive","activeItem","first","parentElement","getAttribute","resetActiveItem","setActiveItem","setElevation","depth","elevation","Math","min","newElevation","customElevation","Object","keys","find","c","startsWith","_previousElevation","posX","posY","_startAnimation","_resetAnimation","_isAnimating","toState","activeItemIndex","scrollTop","_allItems","reset","notifyOnChanges","_MatMenuBase_Factory","contentQueries","_MatMenuBase_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","viewQuery","_MatMenuBase_Query","ɵɵviewQuery","templateRef","outputs","descendants","MatMenu","ngZone","defaultOptions","MatMenu_Factory","MatMenu_HostBindings","MatMenu_Template","ɵɵtemplate","NgClass","styles","data","animation","animations","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","_scrollStrategy","_parentMaterialMenu","addEventListener","triggersSubmenu","_deprecatedMatMenuTriggerFor","menu","v","_menu","reason","_destroyMenu","_checkMenu","_handleHover","removeEventListener","menuOpen","dir","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","_getPortal","menuData","_menuClosingActions","_initMenu","_setIsMenuOpen","_setMenuElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withGrowAfterOpen","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","_handleMousedown","button","_handleClick","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_MatMenuDirectivesModule","_MatMenuDirectivesModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","ngJitMode","ɵɵsetNgModuleScope","MatMenuModule","MatMenuModule_Factory","ɵangular_material_src_material_menu_menu_a","ɵangular_material_src_material_menu_menu_b","ɵangular_material_src_material_menu_menu_c"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js"],"sourcesContent":["import { FocusMonitor, FocusKeyManager, isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, RIGHT_ARROW, LEFT_ARROW, ESCAPE, hasModifierKey, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r1._handleKeydown($event)); })(\"click\", function MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r3.closed.emit(\"click\")); })(\"@transformMenu.start\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r4._onAnimationStart($event)); })(\"@transformMenu.done\", function MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ɵngcc0.ɵɵresetView(ctx_r5._onAnimationDone($event)); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd()();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n            opacity: 1,\n            transform: 'scale(1)'\n        }))),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatMenuContent`. It serves\n * as alternative token to the actual `MatMenuContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_MENU_CONTENT = new InjectionToken('MatMenuContent');\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Emits when the menu content has been attached. */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        element.parentNode.insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }])] });\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]',\n                providers: [{ provide: MAT_MENU_CONTENT, useExisting: MatMenuContent }]\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when a menu is assigned\n * to a trigger that is placed inside the same menu.\n * @docs-private\n */\nfunction throwMatMenuRecursiveError() {\n    throw Error(`matMenuTriggerFor: menu cannot contain its own trigger. Assign a menu that is ` +\n        `not a parent of the trigger or move the trigger outside of the menu.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {\n}\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    constructor(_elementRef, \n    /**\n     * @deprecated `_document` parameter is no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /** ARIA role for the menu item. */\n        this.role = 'menuitem';\n        /** Stream that emits when the menu item is hovered. */\n        this._hovered = new Subject();\n        /** Stream that emits when the menu item is focused. */\n        this._focused = new Subject();\n        /** Whether the menu item is highlighted. */\n        this._highlighted = false;\n        /** Whether the menu item acts as a trigger for a sub-menu. */\n        this._triggersSubmenu = false;\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n    }\n    /** Focuses the menu item. */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    ngAfterViewInit() {\n        if (this._focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            this._focusMonitor.monitor(this._elementRef, false);\n        }\n    }\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /** Used to set the `tabindex`. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Returns the host DOM element. */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        var _a, _b;\n        const clone = this._elementRef.nativeElement.cloneNode(true);\n        const icons = clone.querySelectorAll('mat-icon, .material-icons');\n        // Strip away icons so they don't show up in the text.\n        for (let i = 0; i < icons.length; i++) {\n            const icon = icons[i];\n            (_a = icon.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(icon);\n        }\n        return ((_b = clone.textContent) === null || _b === void 0 ? void 0 : _b.trim()) || '';\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, dependencies: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], \n    /** Prevents the default element actions if it is disabled. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], \n    /** Emits to the hover stream. */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-menu`. */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\nlet menuPanelUid = 0;\n/** Base class with all of the `MatMenu` functionality. */\nclass _MatMenuBase {\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /** Only the direct descendant menu items. */\n        this._directDescendantItems = new QueryList();\n        /** Subscription to tab events on the menu panel */\n        this._tabSubscription = Subscription.EMPTY;\n        /** Config object to be passed into the menu's ngClass */\n        this._classList = {};\n        /** Current state of the panel animation. */\n        this._panelAnimationState = 'void';\n        /** Emits whenever an animation on the menu completes. */\n        this._animationDone = new Subject();\n        /** Class or list of classes to be added to the overlay panel. */\n        this.overlayPanelClass = this._defaultOptions.overlayPanelClass || '';\n        /** Class to be added to the backdrop element. */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /** Event emitted when the menu is closed. */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * @breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /** Position of the menu in the X axis. */\n    get xPosition() { return this._xPosition; }\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /** Position of the menu in the Y axis. */\n    get yPosition() { return this._yPosition; }\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /** Whether the menu should overlap its trigger. */\n    get overlapTrigger() { return this._overlapTrigger; }\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /** Whether the menu has a backdrop. */\n    get hasBackdrop() { return this._hasBackdrop; }\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param classes list of class names\n     */\n    set panelClass(classes) {\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((className) => {\n                this._classList[className] = false;\n            });\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((className) => {\n                this._classList[className] = true;\n            });\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * @breaking-change 8.0.0\n     */\n    get classList() { return this.panelClass; }\n    set classList(classes) { this.panelClass = classes; }\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd();\n        this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n        // If a user manually (programmatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._focused)))).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n    }\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /** Stream that emits whenever the hovered menu item changes. */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        const itemChanges = this._directDescendantItems.changes;\n        return itemChanges.pipe(startWith(this._directDescendantItems), switchMap(items => merge(...items.map((item) => item._hovered))));\n    }\n    /*\n     * Registers a menu item with the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * @docs-private\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 9.0.0\n     */\n    removeItem(_item) { }\n    /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param origin Action from which the focus originated. Used to set the correct styling.\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable\n                .pipe(take(1))\n                .subscribe(() => this._focusFirstItem(origin));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     */\n    _focusFirstItem(origin) {\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param depth Number of parent menus that come before the menu.\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        const newElevation = `mat-elevation-z${elevation}`;\n        const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * @param posX Position of the menu along the x axis.\n     * @param posY Position of the menu along the y axis.\n     * @docs-private\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /** Starts the enter animation. */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /** Resets the panel animation to its initial state. */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /** Callback that is invoked when the panel animation completes. */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((items) => {\n            this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n            this._directDescendantItems.notifyOnChanges();\n        });\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_MENU_CONTENT, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MAT_MENU_CONTENT,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MAT_MENU_CONTENT]\n        }] }); })();\n/** @docs-public MatMenu */\nclass MatMenu extends _MatMenuBase {\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return new (t || MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\nMatMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatMenu, selectors: [[\"mat-menu\"]], hostVars: 3, hostBindings: function MatMenu_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n    } }, exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, dependencies: [ɵngcc3.NgClass], styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\nMatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Component,\n        args: [{ selector: 'mat-menu', template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, exportAs: 'matMenu', host: {\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null'\n                }, animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ], providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                ], styles: [\"mat-menu{display:none}.mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item{margin-top:1px}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"] }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that determines the scroll handling while the menu is open. */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/** @docs-private */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/** Default top padding of the menu panel. */\nconst MENU_PANEL_TOP_PADDING = 8;\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/** Directive applied to an element that should trigger a `mat-menu`. */\nclass MatMenuTrigger {\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, parentMenu, \n    // `MatMenuTrigger` is commonly used in combination with a `MatMenuItem`.\n    // tslint:disable-next-line: lightweight-tokens\n    _menuItemInstance, _dir, \n    // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n    // @breaking-change 8.0.0\n    _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (event) => {\n            if (!isFakeTouchstartFromScreenReader(event)) {\n                this._openedBy = 'touch';\n            }\n        };\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = undefined;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /** Event emitted when the associated menu is opened. */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /** Event emitted when the associated menu is closed. */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * @breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        this._scrollStrategy = scrollStrategy;\n        this._parentMaterialMenu = parentMenu instanceof _MatMenuBase ? parentMenu : undefined;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n    }\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /** References the menu instance that the trigger is associated with. */\n    get menu() { return this._menu; }\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            if (menu === this._parentMaterialMenu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throwMatMenuRecursiveError();\n            }\n            this._menuCloseSubscription = menu.close.subscribe((reason) => {\n                this._destroyMenu(reason);\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMaterialMenu) {\n                    this._parentMaterialMenu.closed.emit(reason);\n                }\n            });\n        }\n    }\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /** Whether the menu is open. */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /** The text direction of the containing app. */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the menu triggers a sub-menu or a top-level one. */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMaterialMenu);\n    }\n    /** Toggles the menu between the open and closed states. */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /** Opens the menu. */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        const overlayRef = this._createOverlay();\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition(overlayConfig.positionStrategy);\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n        this._initMenu();\n        if (this.menu instanceof _MatMenuBase) {\n            this.menu._startAnimation();\n        }\n    }\n    /** Closes the menu. */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param origin Source of the menu trigger's focus.\n     */\n    focus(origin, options) {\n        if (this._focusMonitor && origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /** Closes the menu and does the necessary cleanup. */\n    _destroyMenu(reason) {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        // Always restore focus if the user is navigating using the keyboard or the menu was opened\n        // programmatically. We don't restore for non-root triggers, because it can prevent focus\n        // from making it back to the root trigger when closing a long chain of menus by clicking\n        // on the backdrop.\n        if (this.restoreFocus && (reason === 'keydown' || !this._openedBy || !this.triggersSubmenu())) {\n            this.focus(this._openedBy);\n        }\n        this._openedBy = undefined;\n        if (menu instanceof _MatMenuBase) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter(event => event.toState === 'void'), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: () => menu.lazyContent.detach(),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: () => this._setIsMenuOpen(false)\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMaterialMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this.menu.focusFirstItem(this._openedBy || 'program');\n        this._setIsMenuOpen(true);\n    }\n    /** Updates the menu elevation based on the amount of parent menus that it has. */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            let depth = 0;\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     */\n    _checkMenu() {\n        if (!this.menu && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions(config.positionStrategy);\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @returns OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withGrowAfterOpen()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            panelClass: this.menu.overlayPanelClass,\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe(change => {\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                this.menu.setPositionClasses(posX, posY);\n            });\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @param positionStrategy Strategy whose position to update.\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /** Returns a stream that emits whenever an action that should close the menu occurs. */\n    _menuClosingActions() {\n        const backdrop = this._overlayRef.backdropClick();\n        const detachments = this._overlayRef.detachments();\n        const parentClose = this._parentMaterialMenu ? this._parentMaterialMenu.closed : of();\n        const hover = this._parentMaterialMenu ? this._parentMaterialMenu._hovered().pipe(filter(active => active !== this._menuItemInstance), filter(() => this._menuOpen)) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /** Handles mouse presses on the trigger. */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : undefined;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /** Handles key presses on the trigger. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Pressing enter on the trigger will trigger the click handler later.\n        if (keyCode === ENTER || keyCode === SPACE) {\n            this._openedBy = 'keyboard';\n        }\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this._openedBy = 'keyboard';\n            this.openMenu();\n        }\n    }\n    /** Handles click events on the trigger. */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /** Handles the cases where the user hovers over the trigger. */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu() || !this._parentMaterialMenu) {\n            return;\n        }\n        this._hoverSubscription = this._parentMaterialMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter(active => active === this._menuItemInstance && !active.disabled), delay(0, asapScheduler))\n            .subscribe(() => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof _MatMenuBase && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMaterialMenu._hovered()))\n                    .subscribe(() => this.openMenu());\n            }\n            else {\n                this.openMenu();\n            }\n        });\n    }\n    /** Gets the portal that should be attached to the overlay. */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵfac = function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); };\n_MatMenuDirectivesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger, MatMenuContent]; }, exports: function () { return [MatMenuTrigger, MatMenuContent, MatCommonModule]; } }); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵfac = function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); };\nMatMenuModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule, CdkScrollableModule, MatCommonModule, _MatMenuDirectivesModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [MatMenu, MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule, _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule, MatMenu, MatMenuItem, _MatMenuDirectivesModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_CONTENT, MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}