{"ast":null,"code":"/**\r\n * A collection of universal utility functions.\r\n */\nimport { Percent } from \"./Percent\";\nimport { isSafari } from \"./Browser\";\nimport * as $math from \"../utils/Math\";\nimport * as $type from \"../utils/Type\";\nimport * as $string from \"./String\";\nimport * as $strings from \"./Strings\";\nimport * as $object from \"./Object\";\nimport * as $array from \"./Array\";\n/**\r\n * ============================================================================\r\n * MISC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Marks a value as being used (e.g. because the value has side effects).\r\n */\n\nexport function used(value) {}\n/**\r\n * Copies all properties of one object to the other, omitting undefined.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\n\nexport function copyProperties(source, target) {\n  $object.each(source, function (key, value) {\n    // only if value is set\n    if ($type.hasValue(value)) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n/**\r\n * Removes target from url\r\n */\n\nexport function stripHash(url) {\n  return /^[^#]*/.exec(url)[0];\n}\nexport function getBaseURI() {\n  var url = \"#\"; // Needed until https://bugs.webkit.org/show_bug.cgi?id=189499 is fixed\n\n  if (isSafari()) {\n    var baseURI = document.baseURI;\n\n    if (baseURI) {\n      baseURI = stripHash(baseURI);\n      var loc = stripHash(location.href);\n\n      if (baseURI !== loc) {\n        url = loc + url;\n      }\n    }\n  }\n\n  return url;\n}\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\n\nexport function softCopyProperties(source, target) {\n  $object.each(source, function (key, value) {\n    // only if value is set\n    if ($type.hasValue(value) && !$type.hasValue(target[key])) {\n      target[key] = value;\n    }\n  });\n  return target;\n}\n/**\r\n * Copies all properties of one object to the other.\r\n *\r\n * @param source     Source object\r\n * @param recipient  Target object\r\n * @return Updated target object\r\n */\n\nexport function copy(source, target) {\n  $object.each(source, function (key, value) {\n    target[key] = value;\n  });\n  return target;\n}\n/**\r\n * Checks if value is not empty (undefined or zero-length string).\r\n *\r\n * @param value  Value to check\r\n * @return `true` if value is not \"empty\"\r\n */\n\nexport function isNotEmpty(value) {\n  return $type.hasValue(value) && value.toString() !== \"\";\n}\n/**\r\n * [relativeToValue description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent  [description]\r\n * @param full     [description]\r\n * @return [description]\r\n */\n\nexport function relativeToValue(percent, full) {\n  if ($type.isNumber(percent)) {\n    return percent;\n  } else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\n    return full * percent.value;\n  } else {\n    return 0;\n  }\n}\n/**\r\n * [relativeRadiusToValue description]\r\n *\r\n * Differs from relativeToValue so that if a value is negative, it subtracts\r\n * it from full value.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent             [description]\r\n * @param full                [description]\r\n * @param subtractIfNegative  [description]\r\n * @return [description]\r\n */\n\nexport function relativeRadiusToValue(percent, full, subtractIfNegative) {\n  var value;\n\n  if ($type.isNumber(percent)) {\n    value = percent;\n\n    if (value < 0) {\n      if (subtractIfNegative) {\n        value = full + value;\n      } else {\n        value = full - value;\n      }\n    }\n  } else if (percent != null && $type.isNumber(percent.value)) {\n    value = full * percent.value;\n  }\n\n  return value;\n}\n/**\r\n * [valueToRelative description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param value  [description]\r\n * @param full   [description]\r\n * @return [description]\r\n */\n\nexport function valueToRelative(value, full) {\n  if (value instanceof Percent) {\n    return value.value;\n  } else {\n    return value / full;\n  }\n}\n/**\r\n * Returns pixel ratio of the current screen (used on retina displays).\r\n *\r\n * @return Pixel ratio\r\n */\n\nexport function getPixelRatio() {\n  var ratio = window.devicePixelRatio || 1;\n  return ratio;\n}\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Converts camelCased text to dashed version:\r\n * (\"thisIsString\" > \"this-is-string\")\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\n\nexport function camelToDashed(str) {\n  return str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n}\n/**\r\n * Converts tring to uppercase.\r\n *\r\n * @param str  String to convert\r\n * @return uppercased string\r\n * @todo Maybe make it better\r\n */\n\nexport function capitalize(str) {\n  var arr = str.split(\"\");\n  arr[0] = arr[0].toUpperCase();\n  return arr.join(\"\");\n}\n/**\r\n * Converts any value into its string representation.\r\n *\r\n * @param value  Value\r\n * @return String represantation of the value\r\n */\n\nexport function stringify(value) {\n  return JSON.stringify(value);\n}\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\n\nexport function escapeForRgex(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\r\n * Splits the text into multiple lines, respecting maximum character count.\r\n * Prioretizes splitting on spaces and punctuation. Falls back on splitting\r\n * mid-word if there's no other option.\r\n *\r\n * @param text      Text\r\n * @param maxChars  Maximum number of characters per line\r\n * @return An array of split text\r\n */\n\nexport function splitTextByCharCount(text, maxChars, fullWords, rtl, fullWordFallback) {\n  // Maybe the text fits?\n  if (text.length <= maxChars) {\n    return [text];\n  } // Init result\n\n\n  var res = []; // Split by words or by charts\n\n  if (fullWords) {\n    // Split by words first\n    // Split by spacing\n    var currentIndex = -1; //let tmpText = text.replace(/([,;:!?\\\\\\/\\.]+[\\s]+|[\\s])/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\n\n    var tmpText = text.replace(/([,;:!?\\\\\\/]+|[\\s])/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\n    var words = tmpText.split($strings.PLACEHOLDER); // Glue end-of-word punctuation to the word itself\n\n    for (var i = 1; i < words.length; i++) {\n      var word = words[i];\n\n      if ((word == \".\" || word == \",\") && words[i - 1].match(/[\\w]+$/)) {\n        words[i - 1] += word;\n        words[i] = \"\";\n      }\n    } // Process each word\n\n\n    for (var i = 0; i < words.length; i++) {\n      // Get word and symbol count\n      var word = words[i];\n      var wordLength = word.length; // Ignore empty words\n\n      if (wordLength === 0) {\n        continue;\n      } // Check word length\n\n\n      if (wordLength > maxChars && (fullWords !== true || fullWordFallback != false)) {\n        //if (wordLength > maxChars) {\n        // A single word is longer than allowed symbol count\n        // Break it up\n        if (rtl) {\n          word = reverseString(word);\n        }\n\n        var parts = word.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\")); // TODO is this correct ?\n\n        if (parts) {\n          if (rtl) {\n            for (var x = 0; x < parts.length; x++) {\n              parts[x] = reverseString(parts[x]);\n            } //parts.reverse();\n\n          }\n\n          res = res.concat(parts);\n        }\n      } else {\n        // Init current line\n        if (currentIndex === -1) {\n          res.push(\"\");\n          currentIndex = 0;\n        } // Check if we need to break into another line\n\n\n        if (res[currentIndex].length + wordLength + 1 > maxChars && res[currentIndex] !== \"\") {\n          res.push(\"\");\n          currentIndex++;\n        } // Add word\n\n\n        res[currentIndex] += word;\n      } // Update index\n\n\n      currentIndex = res.length - 1;\n    }\n  } else {\n    // Splitting by anywhere (living la vida facil)\n    var parts = text.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\n\n    if (parts) {\n      if (rtl) {\n        for (var x = 0; x < parts.length; x++) {\n          if (!rtl) {\n            parts[x] = reverseString(parts[x]);\n          }\n        }\n      }\n\n      res = parts;\n    }\n  } // Do we have only one word that does not fit?\n  // Since fullWords is set and we can't split the word, we end up with empty\n  // set.\n\n\n  if (res.length == 1 && fullWords && fullWordFallback && res[0].length > maxChars) {\n    res = [];\n  }\n\n  return res;\n}\n/**\r\n * Truncates the text to certain character count.\r\n *\r\n * Will add ellipsis if the string is truncated. Optionally, can truncate on\r\n * full words only.\r\n *\r\n * For RTL support, pass in the fifth parameter as `true`.\r\n *\r\n * @param text       Input text\r\n * @param maxChars   Maximum character count of output\r\n * @param ellipsis   Ellipsis string, i.e. \"...\"\r\n * @param fullWords  If `true`, will not break mid-word, unless there's a single word and it does not with into `maxChars`\r\n * @param rtl        Is this an RTL text?\r\n * @return Truncated text\r\n */\n\nexport function truncateWithEllipsis(text, maxChars, ellipsis, fullWords, rtl) {\n  if (text.length <= maxChars) {\n    return text;\n  } // Calc max chars\n\n\n  maxChars -= ellipsis.length;\n\n  if (maxChars < 1) {\n    maxChars = 1; //ellipsis = \"\";\n  } // Get lines\n\n\n  var lines = splitTextByCharCount(text, maxChars, fullWords, rtl); // Use first line\n\n  return (lines[0] || \"\") + ellipsis;\n}\n/**\r\n * Removes whitespace from beginning and end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\n\nexport function trim(str) {\n  return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\n}\n;\n/**\r\n * Removes whitespace from end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\n\nexport function rtrim(str) {\n  return str.replace(/[\\s\\uFEFF\\xA0]+$/g, \"\");\n}\n;\n/**\r\n * Removes whitespace from beginning of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\n\nexport function ltrim(str) {\n  return str.replace(/^[\\s\\uFEFF\\xA0]+/g, \"\");\n}\n;\n/**\r\n * Reverses string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\n\nexport function reverseString(str) {\n  return str.split(\"\").reverse().join(\"\");\n}\n/**\r\n * Removes quotes from the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\n\nexport function unquote(str) {\n  var res = str.trim();\n  res = str.replace(/^'(.*)'$/, \"$1\");\n\n  if (res == str) {\n    res = str.replace(/^\"(.*)\"$/, \"$1\");\n  }\n\n  return res;\n}\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\n\nexport function padString(value, len, char) {\n  if (len === void 0) {\n    len = 0;\n  }\n\n  if (char === void 0) {\n    char = \"0\";\n  }\n\n  if (typeof value !== \"string\") {\n    value = value.toString();\n  }\n\n  return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\n}\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\n\nexport function getFormat(format) {\n  // Undefined?\n  if (typeof format === \"undefined\") {\n    return $strings.STRING;\n  } // Cleanup and lowercase format\n\n\n  format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\"); // Remove style tags\n\n  format = format.replace(/\\[[^\\]]+\\]/, \"\"); // Trim\n\n  format = format.trim(); // Check for any explicit format hints (i.e. /Date)\n\n  var hints = format.match(/\\/(date|number|duration)$/);\n\n  if (hints) {\n    return hints[1];\n  } // Check for explicit hints\n\n\n  if (format === $strings.NUMBER) {\n    return $strings.NUMBER;\n  }\n\n  if (format === $strings.DATE) {\n    return $strings.DATE;\n  }\n\n  if (format === $strings.DURATION) {\n    return $strings.DURATION;\n  } // Detect number formatting symbols\n\n\n  if (format.match(/[#0]/)) {\n    return $strings.NUMBER;\n  } // Detect date formatting symbols\n\n\n  if (format.match(/[ymwdhnsqaxkzgtei]/)) {\n    return $strings.DATE;\n  } // Nothing? Let's display as string\n\n\n  return $strings.STRING;\n}\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\n\nexport function cleanFormat(format) {\n  return format.replace(/\\/(date|number|duration)$/i, \"\");\n}\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\n\nexport function stripTags(text) {\n  return text ? text.replace(/<[^>]*>/g, \"\") : text;\n}\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\n\nexport function plainText(text) {\n  return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\n}\n/**\r\n * ============================================================================\r\n * TYPE CONVERSION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\n\nexport function numberToString(value) {\n  // TODO handle Infinity and -Infinity\n  if ($type.isNaN(value)) {\n    return \"NaN\";\n  }\n\n  if (value === Infinity) {\n    return \"Infinity\";\n  }\n\n  if (value === -Infinity) {\n    return \"-Infinity\";\n  } // Negative 0\n\n\n  if (value === 0 && 1 / value === -Infinity) {\n    return \"-0\";\n  } // Preserve negative and deal with absoute values\n\n\n  var negative = value < 0;\n  value = Math.abs(value); // TODO test this\n\n  var parsed = $type.getValue(/^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value));\n  var digits = parsed[1];\n  var decimals = parsed[2] || \"\";\n  var res; // Leave the nummber as it is if it does not use exponents\n\n  if (parsed[3] == null) {\n    res = decimals === \"\" ? digits : digits + \".\" + decimals;\n  } else {\n    var exponent = +parsed[3]; // Deal with decimals\n\n    if (value < 1) {\n      var zeros = exponent - 1;\n      res = \"0.\" + $string.repeat(\"0\", zeros) + digits + decimals; // Deal with integers\n    } else {\n      var zeros = exponent - decimals.length;\n\n      if (zeros === 0) {\n        res = digits + decimals;\n      } else if (zeros < 0) {\n        res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\n      } else {\n        res = digits + decimals + $string.repeat(\"0\", zeros);\n      }\n    }\n  }\n\n  return negative ? \"-\" + res : res;\n}\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\n\nexport function anyToDate(value) {\n  if ($type.isDate(value)) {\n    // TODO maybe don't create a new Date ?\n    var date = new Date(value); // This is needed because IE does not copy over milliseconds\n\n    date.setMilliseconds(value.getMilliseconds());\n    return date;\n  } else if ($type.isNumber(value)) {\n    return new Date(value);\n  } else {\n    // Try converting to number (assuming timestamp)\n    var num = Number(value);\n\n    if (!$type.isNumber(num)) {\n      return new Date(value);\n    } else {\n      return new Date(num);\n    }\n  }\n}\n/**\r\n * Tries converting any value to a number.\r\n *\r\n * @param value  Source value\r\n * @return Number\r\n */\n\nexport function anyToNumber(value) {\n  if ($type.isDate(value)) {\n    return value.getTime();\n  } else if ($type.isNumber(value)) {\n    return value;\n  } else if ($type.isString(value)) {\n    // Try converting to number (assuming timestamp)\n    var num = Number(value);\n\n    if (!$type.isNumber(num)) {\n      // Failing\n      return undefined;\n    } else {\n      return num;\n    }\n  }\n}\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\n\nexport function getYearDay(date, utc) {\n  if (utc === void 0) {\n    utc = false;\n  }\n\n  var start = new Date(date.getFullYear(), 0, 0);\n  var diff = date.getTime() - start.getTime() + (start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000;\n  var oneDay = 1000 * 60 * 60 * 24;\n  return Math.floor(diff / oneDay);\n}\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\n\nexport function getWeek(date, _utc) {\n  if (_utc === void 0) {\n    _utc = false;\n  }\n\n  var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\n  var day = d.getUTCDay() || 7;\n  d.setUTCDate(d.getUTCDate() + 4 - day);\n  var firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\n  return Math.ceil(((d.getTime() - firstDay.getTime()) / 86400000 + 1) / 7);\n}\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\n\nexport function getMonthWeek(date, utc) {\n  if (utc === void 0) {\n    utc = false;\n  }\n\n  var firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\n  var currentWeek = getWeek(date, utc);\n\n  if (currentWeek == 1) {\n    currentWeek = 53;\n  }\n\n  return currentWeek - firstWeek + 1;\n}\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\n\nexport function getDayFromWeek(week, year, weekday, utc) {\n  if (weekday === void 0) {\n    weekday = 1;\n  }\n\n  if (utc === void 0) {\n    utc = false;\n  }\n\n  var date = new Date(year, 0, 4, 0, 0, 0, 0);\n\n  if (utc) {\n    date.setUTCFullYear(year);\n  }\n\n  var day = week * 7 + weekday - ((date.getDay() || 7) + 3);\n  return day;\n}\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\n\nexport function get12Hours(hours, base) {\n  if (hours > 12) {\n    hours -= 12;\n  } else if (hours === 0) {\n    hours = 12;\n  }\n\n  return $type.hasValue(base) ? hours + (base - 1) : hours;\n}\n/**\r\n * Returns a string name of the tome zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\n\nexport function getTimeZone(date, long, savings, utc) {\n  if (long === void 0) {\n    long = false;\n  }\n\n  if (savings === void 0) {\n    savings = false;\n  }\n\n  if (utc === void 0) {\n    utc = false;\n  }\n\n  if (utc) {\n    return long ? \"Coordinated Universal Time\" : \"UTC\";\n  }\n\n  var wotz = date.toLocaleString(\"UTC\");\n  var wtz = date.toLocaleString(\"UTC\", {\n    timeZoneName: long ? \"long\" : \"short\"\n  }).substr(wotz.length); //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\n\n  if (savings === false) {\n    wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\n  }\n\n  return wtz;\n}\n/**\r\n * ============================================================================\r\n * NUMBER-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Returns a random number between `from` and `to`.\r\n *\r\n * @param from  From number\r\n * @param to    To number\r\n * @return Random number\r\n */\n\nexport function random(from, to) {\n  return Math.floor(Math.random() * (to - from)) + from;\n}\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\n\nexport function fitNumber(value, min, max) {\n  if (value > max) {\n    return max;\n  } else if (value < min) {\n    return min;\n  }\n\n  return value;\n}\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * If the value is does not fit withing specified range, it \"wraps\" around the\r\n * values.\r\n *\r\n * For example, if we have input value 10 with min set at 1 and max set at 8,\r\n * the value will not fit. The remainder that does not fit (2) will be added\r\n * to `min`, resulting in 3.\r\n *\r\n * The output of regular `fitNumber()` would return 8 instead.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\n\nexport function fitNumberRelative(value, min, max) {\n  var gap = max - min;\n\n  if (value > max) {\n    value = min + (value - gap * Math.floor(value / gap));\n  } else if (value < min) {\n    value = min + (value - gap * Math.floor(value / gap));\n  }\n\n  return value;\n}\n/**\r\n * ============================================================================\r\n * SPRITE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Converts SVG element coordinates to coordinates within specific [[Sprite]].\r\n *\r\n * @param point   SVG coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\n\nexport function svgPointToSprite(point, sprite) {\n  var x = point.x;\n  var y = point.y;\n  var sprites = [];\n\n  if (sprite) {\n    while ($type.hasValue(sprite.parent)) {\n      sprites.push(sprite);\n      sprite = sprite.parent;\n    }\n\n    sprites.reverse();\n\n    for (var i = 0; i < sprites.length; i++) {\n      var sprite_1 = sprites[i];\n      var angle = sprite_1.rotation;\n      var relativeX = x - sprite_1.pixelX - sprite_1.ex;\n      var relativeY = y - sprite_1.pixelY - sprite_1.ey;\n\n      if (sprite_1.dx) {\n        x -= sprite_1.dx;\n      }\n\n      if (sprite_1.dy) {\n        y -= sprite_1.dy;\n      }\n\n      var scale = sprite_1.scale; // this handles nonscaling\n\n      if (sprite_1.group) {\n        scale = sprite_1.group.scale;\n      }\n\n      x = ($math.cos(-angle) * relativeX - $math.sin(-angle) * relativeY) / scale - sprite_1.pixelPaddingLeft;\n      y = ($math.cos(-angle) * relativeY + $math.sin(-angle) * relativeX) / scale - sprite_1.pixelPaddingTop;\n    }\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\r\n * Converts coordinates within [[Sprite]] to coordinates relative to the whole\r\n * SVG element.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return SVG coordinates\r\n */\n\nexport function spritePointToSvg(point, sprite) {\n  var x = point.x;\n  var y = point.y;\n\n  if (sprite) {\n    while ($type.hasValue(sprite.parent)) {\n      var angle = sprite.rotation;\n      x += sprite.pixelPaddingLeft + sprite.ex;\n      y += sprite.pixelPaddingTop + sprite.ey;\n      var scale = sprite.scale; // this handles nonscaling\n\n      if (sprite.group) {\n        scale = sprite.group.scale;\n      }\n\n      var relativeX = sprite.pixelX + (x * $math.cos(angle) - y * $math.sin(angle)) * scale;\n      var relativeY = sprite.pixelY + (x * $math.sin(angle) + y * $math.cos(angle)) * scale;\n\n      if (sprite.dx) {\n        relativeX += sprite.dx;\n      }\n\n      if (sprite.dy) {\n        relativeY += sprite.dy;\n      }\n\n      x = relativeX;\n      y = relativeY;\n      sprite = sprite.parent;\n    }\n  }\n\n  return {\n    x: x,\n    y: y\n  };\n}\n/**\r\n * Converts coordinates of one sprite to another.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @param toSprite  Sprite\r\n * @return converted coordinates\r\n */\n\nexport function spritePointToSprite(point, sprite, toSprite) {\n  return svgPointToSprite(spritePointToSvg(point, sprite), toSprite);\n}\n/**\r\n * Converts a rectangle expressed in SVG element coordinates to coordinates\r\n * within specific [[Sprite]].\r\n *\r\n * @param rect    SVG rectangle\r\n * @param sprite  Sprite\r\n * @return Sprite rectangle\r\n */\n\nexport function svgRectToSprite(rect, sprite) {\n  var p1 = svgPointToSprite(rect, sprite);\n  var p2 = svgPointToSprite({\n    x: rect.x + rect.width,\n    y: rect.y + rect.height\n  }, sprite);\n  return {\n    x: p1.x,\n    y: p1.y,\n    width: p2.x - p1.x,\n    height: p2.y - p1.y\n  };\n}\n/**\r\n * Converts a rectangle expressed in [[Sprite]] coordinates to SVG coordinates.\r\n *\r\n * @param rect    Sprite rectangle\r\n * @param sprite  Sprite\r\n * @return SVG rectangle\r\n */\n\nexport function spriteRectToSvg(rect, sprite) {\n  var p1 = spritePointToSvg(rect, sprite);\n  var p2 = spritePointToSvg({\n    x: rect.x + rect.width,\n    y: rect.y + rect.height\n  }, sprite);\n  return {\n    x: p1.x,\n    y: p1.y,\n    width: p2.x - p1.x,\n    height: p2.y - p1.y\n  };\n}\n/**\r\n * Converts global document-wide coordinates to coordinates within SVG element.\r\n *\r\n * @param point         Global coordinates\r\n * @param svgContainer  SVG element\r\n * @return SVG coordinates\r\n */\n\nexport function documentPointToSvg(point, svgContainer, cssScale) {\n  try {\n    var bbox = svgContainer.getBoundingClientRect();\n\n    if (!$type.isNumber(cssScale)) {\n      cssScale = 1;\n    }\n\n    return {\n      \"x\": (point.x - bbox.left) / cssScale,\n      \"y\": (point.y - bbox.top) / cssScale\n    };\n  } catch (e) {\n    return point;\n  }\n}\n/**\r\n * Converts SVG coordinates to global document-wide coordinates.\r\n *\r\n * @param point         SVG coordinates\r\n * @param svgContainer  SVG element\r\n * @return Global coordinates\r\n */\n\nexport function svgPointToDocument(point, svgContainer) {\n  try {\n    var bbox = svgContainer.getBoundingClientRect();\n    return {\n      \"x\": point.x + bbox.left,\n      \"y\": point.y + bbox.top\n    };\n  } catch (e) {\n    return point;\n  }\n}\n/**\r\n * Converts document-wide global coordinates to coordinates within specific\r\n * [[Sprite]].\r\n *\r\n * @param point   Global coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\n\nexport function documentPointToSprite(point, sprite) {\n  if (sprite && sprite.htmlContainer) {\n    var svgPoint = documentPointToSvg(point, $type.getValue(sprite.htmlContainer), sprite.svgContainer.cssScale);\n    return svgPointToSprite(svgPoint, sprite);\n  } else {\n    return point;\n  }\n}\n/**\r\n * Converts coordinates within [[Sprite]] to global document coordinates.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return Global coordinates\r\n */\n\nexport function spritePointToDocument(point, sprite) {\n  if (sprite && sprite.htmlContainer) {\n    var svgPoint = spritePointToSvg(point, sprite);\n    return svgPointToDocument(svgPoint, $type.getValue(sprite.htmlContainer));\n  } else {\n    return point;\n  }\n}\n/**\r\n * ============================================================================\r\n * DEPRECATED FUNCTIONS\r\n * @todo Review and remove\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Returns element's width.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Width (px)\r\n * @deprecated Not used anywhere\r\n */\n\nexport function width(element) {\n  var cs = getComputedStyle(element);\n  var paddingX = parseFloat(cs.paddingLeft) + parseFloat(cs.paddingRight);\n  var borderX = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth);\n  return element.clientWidth - paddingX - borderX;\n}\n/**\r\n * Returns element's height.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Height (px)\r\n * @deprecated Not used anywhere\r\n */\n\nexport function height(element) {\n  var cs = getComputedStyle(element);\n  var paddingY = parseFloat(cs.paddingTop) + parseFloat(cs.paddingBottom);\n  var borderY = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth);\n  return element.clientHeight - paddingY - borderY;\n}\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\n\nexport function decimalPlaces(number) {\n  var match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n  if (!match) {\n    return 0;\n  }\n\n  return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\n}\nvar urlRegexp = /^([a-zA-Z][a-zA-Z0-9\\+\\.\\-]*:)?(?:(\\/\\/)([^\\@]+\\@)?([^\\/\\?\\#\\:]*)(\\:[0-9]+)?)?([^\\?\\#]*)(\\?[^\\#]*)?(\\#.*)?$/;\n/**\r\n * Parses a URL\r\n *\r\n * @ignore Exclude from docs\r\n */\n// TODO test this\n\nexport function parseUrl(url) {\n  var match = urlRegexp.exec(url);\n  return {\n    protocol: match && match[1] || \"\",\n    separator: match && match[2] || \"\",\n    authority: match && match[3] || \"\",\n    domain: match && match[4] || \"\",\n    port: match && match[5] || \"\",\n    path: match && match[6] || \"\",\n    query: match && match[7] || \"\",\n    hash: match && match[8] || \"\"\n  };\n}\n/**\r\n * Serializes a Url into a string\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nexport function serializeUrl(url) {\n  return url.protocol + url.separator + url.authority + url.domain + url.port + url.path + url.query + url.hash;\n}\n/**\r\n * Checks whether a Url is relative or not\r\n *\r\n * @ignore Exclude from docs\r\n */\n// TODO is this correct ?\n\nfunction isRelativeUrl(url) {\n  return url.protocol === \"\" && url.separator === \"\" && url.authority === \"\" && url.domain === \"\" && url.port === \"\";\n}\n/**\r\n * Joins together two URLs, resolving relative URLs correctly\r\n *\r\n * @ignore Exclude from docs\r\n */\n// TODO test this\n\n\nexport function joinUrl(left, right) {\n  var parsedLeft = parseUrl(left);\n  var parsedRight = parseUrl(right);\n\n  if (isRelativeUrl(parsedLeft)) {\n    throw new Error(\"Left URL is not absolute\");\n  }\n\n  if (isRelativeUrl(parsedRight)) {\n    // TODO is this correct ?\n    if (parsedRight.path !== \"\") {\n      if (parsedRight.path[0] === \"/\") {\n        parsedLeft.path = parsedRight.path; // TODO is this correct ?\n      } else {\n        var leftPath = parsedLeft.path.split(/\\//);\n        var rightPath = parsedRight.path.split(/\\//); // TODO is this correct ?\n\n        if (leftPath.length === 0) {\n          if (rightPath.length !== 0) {\n            leftPath.push(\"\");\n          }\n        } else if (leftPath.length > 1) {\n          leftPath.pop();\n        }\n\n        $array.pushAll(leftPath, rightPath);\n        parsedLeft.path = leftPath.join(\"/\");\n\n        if (parsedLeft.path !== \"\" && parsedLeft.path[0] !== \"/\") {\n          throw new Error(\"URL path must start with /\");\n        }\n      }\n    } // TODO is this correct ?\n\n\n    parsedLeft.query = parsedRight.query;\n    parsedLeft.hash = parsedRight.hash;\n    return serializeUrl(parsedLeft);\n  } else {\n    return serializeUrl(parsedRight);\n  }\n}\n/**\r\n * Detects MSIE.\r\n *\r\n * @return Is IE?\r\n */\n\nexport function isIE() {\n  return !!window.MSInputMethodContext && !!document.documentMode;\n}","map":{"version":3,"names":["Percent","isSafari","$math","$type","$string","$strings","$object","$array","used","value","copyProperties","source","target","each","key","hasValue","stripHash","url","exec","getBaseURI","baseURI","document","loc","location","href","softCopyProperties","copy","isNotEmpty","toString","relativeToValue","percent","full","isNumber","relativeRadiusToValue","subtractIfNegative","valueToRelative","getPixelRatio","ratio","window","devicePixelRatio","camelToDashed","str","replace","toLowerCase","capitalize","arr","split","toUpperCase","join","stringify","JSON","escapeForRgex","splitTextByCharCount","text","maxChars","fullWords","rtl","fullWordFallback","length","res","currentIndex","tmpText","PLACEHOLDER","words","i","word","match","wordLength","reverseString","parts","RegExp","x","concat","push","truncateWithEllipsis","ellipsis","lines","trim","rtrim","ltrim","reverse","unquote","padString","len","char","Array","getFormat","format","STRING","hints","NUMBER","DATE","DURATION","cleanFormat","stripTags","plainText","numberToString","isNaN","Infinity","negative","Math","abs","parsed","getValue","digits","decimals","exponent","zeros","repeat","slice","anyToDate","isDate","date","Date","setMilliseconds","getMilliseconds","num","Number","anyToNumber","getTime","isString","undefined","getYearDay","utc","start","getFullYear","diff","getTimezoneOffset","oneDay","floor","getWeek","_utc","d","UTC","getMonth","getDate","day","getUTCDay","setUTCDate","getUTCDate","firstDay","getUTCFullYear","ceil","getMonthWeek","firstWeek","currentWeek","getDayFromWeek","week","year","weekday","setUTCFullYear","getDay","get12Hours","hours","base","getTimeZone","long","savings","wotz","toLocaleString","wtz","timeZoneName","substr","random","from","to","fitNumber","min","max","fitNumberRelative","gap","svgPointToSprite","point","sprite","y","sprites","parent","sprite_1","angle","rotation","relativeX","pixelX","ex","relativeY","pixelY","ey","dx","dy","scale","group","cos","sin","pixelPaddingLeft","pixelPaddingTop","spritePointToSvg","spritePointToSprite","toSprite","svgRectToSprite","rect","p1","p2","width","height","spriteRectToSvg","documentPointToSvg","svgContainer","cssScale","bbox","getBoundingClientRect","left","top","e","svgPointToDocument","documentPointToSprite","htmlContainer","svgPoint","spritePointToDocument","element","cs","getComputedStyle","paddingX","parseFloat","paddingLeft","paddingRight","borderX","borderLeftWidth","borderRightWidth","clientWidth","paddingY","paddingTop","paddingBottom","borderY","borderTopWidth","borderBottomWidth","clientHeight","decimalPlaces","number","urlRegexp","parseUrl","protocol","separator","authority","domain","port","path","query","hash","serializeUrl","isRelativeUrl","joinUrl","right","parsedLeft","parsedRight","Error","leftPath","rightPath","pop","pushAll","isIE","MSInputMethodContext","documentMode"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js"],"sourcesContent":["/**\r\n * A collection of universal utility functions.\r\n */\r\nimport { Percent } from \"./Percent\";\r\nimport { isSafari } from \"./Browser\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $string from \"./String\";\r\nimport * as $strings from \"./Strings\";\r\nimport * as $object from \"./Object\";\r\nimport * as $array from \"./Array\";\r\n/**\r\n * ============================================================================\r\n * MISC FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Marks a value as being used (e.g. because the value has side effects).\r\n */\r\nexport function used(value) { }\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function copyProperties(source, target) {\r\n    $object.each(source, function (key, value) {\r\n        // only if value is set\r\n        if ($type.hasValue(value)) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Removes target from url\r\n */\r\nexport function stripHash(url) {\r\n    return /^[^#]*/.exec(url)[0];\r\n}\r\nexport function getBaseURI() {\r\n    var url = \"#\";\r\n    // Needed until https://bugs.webkit.org/show_bug.cgi?id=189499 is fixed\r\n    if (isSafari()) {\r\n        var baseURI = document.baseURI;\r\n        if (baseURI) {\r\n            baseURI = stripHash(baseURI);\r\n            var loc = stripHash(location.href);\r\n            if (baseURI !== loc) {\r\n                url = loc + url;\r\n            }\r\n        }\r\n    }\r\n    return url;\r\n}\r\n/**\r\n * Copies all properties of one object to the other, omitting undefined, but only if property in target object doesn't have a value set.\r\n *\r\n * @param fromObject  Source object\r\n * @param toObject    Target object\r\n * @return Updated target object\r\n * @todo Maybe consolidate with utils.copy?\r\n */\r\nexport function softCopyProperties(source, target) {\r\n    $object.each(source, function (key, value) {\r\n        // only if value is set\r\n        if ($type.hasValue(value) && !($type.hasValue(target[key]))) {\r\n            target[key] = value;\r\n        }\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Copies all properties of one object to the other.\r\n *\r\n * @param source     Source object\r\n * @param recipient  Target object\r\n * @return Updated target object\r\n */\r\nexport function copy(source, target) {\r\n    $object.each(source, function (key, value) {\r\n        target[key] = value;\r\n    });\r\n    return target;\r\n}\r\n/**\r\n * Checks if value is not empty (undefined or zero-length string).\r\n *\r\n * @param value  Value to check\r\n * @return `true` if value is not \"empty\"\r\n */\r\nexport function isNotEmpty(value) {\r\n    return $type.hasValue(value) && (value.toString() !== \"\");\r\n}\r\n/**\r\n * [relativeToValue description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent  [description]\r\n * @param full     [description]\r\n * @return [description]\r\n */\r\nexport function relativeToValue(percent, full) {\r\n    if ($type.isNumber(percent)) {\r\n        return percent;\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value) && $type.isNumber(full)) {\r\n        return full * percent.value;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\n/**\r\n * [relativeRadiusToValue description]\r\n *\r\n * Differs from relativeToValue so that if a value is negative, it subtracts\r\n * it from full value.\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param percent             [description]\r\n * @param full                [description]\r\n * @param subtractIfNegative  [description]\r\n * @return [description]\r\n */\r\nexport function relativeRadiusToValue(percent, full, subtractIfNegative) {\r\n    var value;\r\n    if ($type.isNumber(percent)) {\r\n        value = percent;\r\n        if (value < 0) {\r\n            if (subtractIfNegative) {\r\n                value = full + value;\r\n            }\r\n            else {\r\n                value = full - value;\r\n            }\r\n        }\r\n    }\r\n    else if (percent != null && $type.isNumber(percent.value)) {\r\n        value = full * percent.value;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * [valueToRelative description]\r\n *\r\n * @ignore Exclude from docs\r\n * @todo Description\r\n * @param value  [description]\r\n * @param full   [description]\r\n * @return [description]\r\n */\r\nexport function valueToRelative(value, full) {\r\n    if (value instanceof Percent) {\r\n        return value.value;\r\n    }\r\n    else {\r\n        return value / full;\r\n    }\r\n}\r\n/**\r\n * Returns pixel ratio of the current screen (used on retina displays).\r\n *\r\n * @return Pixel ratio\r\n */\r\nexport function getPixelRatio() {\r\n    var ratio = window.devicePixelRatio || 1;\r\n    return ratio;\r\n}\r\n/**\r\n * ============================================================================\r\n * STRING FORMATTING FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts camelCased text to dashed version:\r\n * (\"thisIsString\" > \"this-is-string\")\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function camelToDashed(str) {\r\n    return str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n/**\r\n * Converts tring to uppercase.\r\n *\r\n * @param str  String to convert\r\n * @return uppercased string\r\n * @todo Maybe make it better\r\n */\r\nexport function capitalize(str) {\r\n    var arr = str.split(\"\");\r\n    arr[0] = arr[0].toUpperCase();\r\n    return arr.join(\"\");\r\n}\r\n/**\r\n * Converts any value into its string representation.\r\n *\r\n * @param value  Value\r\n * @return String represantation of the value\r\n */\r\nexport function stringify(value) {\r\n    return JSON.stringify(value);\r\n}\r\n/**\r\n * Escapes string so it can safely be used in a Regex.\r\n *\r\n * @param value  Unsescaped string\r\n * @return Escaped string\r\n */\r\nexport function escapeForRgex(value) {\r\n    return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n}\r\n/**\r\n * Splits the text into multiple lines, respecting maximum character count.\r\n * Prioretizes splitting on spaces and punctuation. Falls back on splitting\r\n * mid-word if there's no other option.\r\n *\r\n * @param text      Text\r\n * @param maxChars  Maximum number of characters per line\r\n * @return An array of split text\r\n */\r\nexport function splitTextByCharCount(text, maxChars, fullWords, rtl, fullWordFallback) {\r\n    // Maybe the text fits?\r\n    if (text.length <= maxChars) {\r\n        return [text];\r\n    }\r\n    // Init result\r\n    var res = [];\r\n    // Split by words or by charts\r\n    if (fullWords) {\r\n        // Split by words first\r\n        // Split by spacing\r\n        var currentIndex = -1;\r\n        //let tmpText = text.replace(/([,;:!?\\\\\\/\\.]+[\\s]+|[\\s])/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\r\n        var tmpText = text.replace(/([,;:!?\\\\\\/]+|[\\s])/g, $strings.PLACEHOLDER + \"$1\" + $strings.PLACEHOLDER);\r\n        var words = tmpText.split($strings.PLACEHOLDER);\r\n        // Glue end-of-word punctuation to the word itself\r\n        for (var i = 1; i < words.length; i++) {\r\n            var word = words[i];\r\n            if ((word == \".\" || word == \",\") && words[i - 1].match(/[\\w]+$/)) {\r\n                words[i - 1] += word;\r\n                words[i] = \"\";\r\n            }\r\n        }\r\n        // Process each word\r\n        for (var i = 0; i < words.length; i++) {\r\n            // Get word and symbol count\r\n            var word = words[i];\r\n            var wordLength = word.length;\r\n            // Ignore empty words\r\n            if (wordLength === 0) {\r\n                continue;\r\n            }\r\n            // Check word length\r\n            if ((wordLength > maxChars) && (fullWords !== true || fullWordFallback != false)) {\r\n                //if (wordLength > maxChars) {\r\n                // A single word is longer than allowed symbol count\r\n                // Break it up\r\n                if (rtl) {\r\n                    word = reverseString(word);\r\n                }\r\n                var parts = word.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n                // TODO is this correct ?\r\n                if (parts) {\r\n                    if (rtl) {\r\n                        for (var x = 0; x < parts.length; x++) {\r\n                            parts[x] = reverseString(parts[x]);\r\n                        }\r\n                        //parts.reverse();\r\n                    }\r\n                    res = res.concat(parts);\r\n                }\r\n            }\r\n            else {\r\n                // Init current line\r\n                if (currentIndex === -1) {\r\n                    res.push(\"\");\r\n                    currentIndex = 0;\r\n                }\r\n                // Check if we need to break into another line\r\n                if (((res[currentIndex].length + wordLength + 1) > maxChars) && res[currentIndex] !== \"\") {\r\n                    res.push(\"\");\r\n                    currentIndex++;\r\n                }\r\n                // Add word\r\n                res[currentIndex] += word;\r\n            }\r\n            // Update index\r\n            currentIndex = res.length - 1;\r\n        }\r\n    }\r\n    else {\r\n        // Splitting by anywhere (living la vida facil)\r\n        var parts = text.match(new RegExp(\".{1,\" + maxChars + \"}\", \"g\"));\r\n        if (parts) {\r\n            if (rtl) {\r\n                for (var x = 0; x < parts.length; x++) {\r\n                    if (!rtl) {\r\n                        parts[x] = reverseString(parts[x]);\r\n                    }\r\n                }\r\n            }\r\n            res = parts;\r\n        }\r\n    }\r\n    // Do we have only one word that does not fit?\r\n    // Since fullWords is set and we can't split the word, we end up with empty\r\n    // set.\r\n    if (res.length == 1 && fullWords && fullWordFallback && (res[0].length > maxChars)) {\r\n        res = [];\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Truncates the text to certain character count.\r\n *\r\n * Will add ellipsis if the string is truncated. Optionally, can truncate on\r\n * full words only.\r\n *\r\n * For RTL support, pass in the fifth parameter as `true`.\r\n *\r\n * @param text       Input text\r\n * @param maxChars   Maximum character count of output\r\n * @param ellipsis   Ellipsis string, i.e. \"...\"\r\n * @param fullWords  If `true`, will not break mid-word, unless there's a single word and it does not with into `maxChars`\r\n * @param rtl        Is this an RTL text?\r\n * @return Truncated text\r\n */\r\nexport function truncateWithEllipsis(text, maxChars, ellipsis, fullWords, rtl) {\r\n    if (text.length <= maxChars) {\r\n        return text;\r\n    }\r\n    // Calc max chars\r\n    maxChars -= ellipsis.length;\r\n    if (maxChars < 1) {\r\n        maxChars = 1;\r\n        //ellipsis = \"\";\r\n    }\r\n    // Get lines\r\n    var lines = splitTextByCharCount(text, maxChars, fullWords, rtl);\r\n    // Use first line\r\n    return (lines[0] || \"\") + ellipsis;\r\n}\r\n/**\r\n * Removes whitespace from beginning and end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function trim(str) {\r\n    return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n}\r\n;\r\n/**\r\n * Removes whitespace from end of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function rtrim(str) {\r\n    return str.replace(/[\\s\\uFEFF\\xA0]+$/g, \"\");\r\n}\r\n;\r\n/**\r\n * Removes whitespace from beginning of the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function ltrim(str) {\r\n    return str.replace(/^[\\s\\uFEFF\\xA0]+/g, \"\");\r\n}\r\n;\r\n/**\r\n * Reverses string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function reverseString(str) {\r\n    return str.split(\"\").reverse().join(\"\");\r\n}\r\n/**\r\n * Removes quotes from the string.\r\n *\r\n * @param str  Input\r\n * @return Output\r\n */\r\nexport function unquote(str) {\r\n    var res = str.trim();\r\n    res = str.replace(/^'(.*)'$/, \"$1\");\r\n    if (res == str) {\r\n        res = str.replace(/^\"(.*)\"$/, \"$1\");\r\n    }\r\n    return res;\r\n}\r\n/**\r\n * Pads a string with additional characters to certain length.\r\n *\r\n * @param value  A numeric value\r\n * @param len    Result string length in characters\r\n * @param char   A character to use for padding\r\n * @return Padded value as string\r\n */\r\nexport function padString(value, len, char) {\r\n    if (len === void 0) { len = 0; }\r\n    if (char === void 0) { char = \"0\"; }\r\n    if (typeof value !== \"string\") {\r\n        value = value.toString();\r\n    }\r\n    return len > value.length ? Array(len - value.length + 1).join(char) + value : value;\r\n}\r\n/**\r\n * Tries to determine format type.\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format string\r\n * @return Format type (\"string\" | \"number\" | \"date\" | \"duration\")\r\n */\r\nexport function getFormat(format) {\r\n    // Undefined?\r\n    if (typeof format === \"undefined\") {\r\n        return $strings.STRING;\r\n    }\r\n    // Cleanup and lowercase format\r\n    format = format.toLowerCase().replace(/^\\[[^\\]]*\\]/, \"\");\r\n    // Remove style tags\r\n    format = format.replace(/\\[[^\\]]+\\]/, \"\");\r\n    // Trim\r\n    format = format.trim();\r\n    // Check for any explicit format hints (i.e. /Date)\r\n    var hints = format.match(/\\/(date|number|duration)$/);\r\n    if (hints) {\r\n        return hints[1];\r\n    }\r\n    // Check for explicit hints\r\n    if (format === $strings.NUMBER) {\r\n        return $strings.NUMBER;\r\n    }\r\n    if (format === $strings.DATE) {\r\n        return $strings.DATE;\r\n    }\r\n    if (format === $strings.DURATION) {\r\n        return $strings.DURATION;\r\n    }\r\n    // Detect number formatting symbols\r\n    if (format.match(/[#0]/)) {\r\n        return $strings.NUMBER;\r\n    }\r\n    // Detect date formatting symbols\r\n    if (format.match(/[ymwdhnsqaxkzgtei]/)) {\r\n        return $strings.DATE;\r\n    }\r\n    // Nothing? Let's display as string\r\n    return $strings.STRING;\r\n}\r\n/**\r\n * Cleans up format:\r\n * * Strips out formatter hints\r\n *\r\n * @ignore Exclude from docs\r\n * @param format  Format\r\n * @return Cleaned format\r\n */\r\nexport function cleanFormat(format) {\r\n    return format.replace(/\\/(date|number|duration)$/i, \"\");\r\n}\r\n/**\r\n * Strips all tags from the string.\r\n *\r\n * @param text  Source string\r\n * @return String without tags\r\n */\r\nexport function stripTags(text) {\r\n    return text ? text.replace(/<[^>]*>/g, \"\") : text;\r\n}\r\n/**\r\n * Removes new lines and tags from a string.\r\n *\r\n * @param text  String to conver\r\n * @return Converted string\r\n */\r\nexport function plainText(text) {\r\n    return text ? stripTags((\"\" + text).replace(/[\\n\\r]+/g, \". \")) : text;\r\n}\r\n/**\r\n * ============================================================================\r\n * TYPE CONVERSION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts numeric value into string. Deals with large or small numbers that\r\n * would otherwise use exponents.\r\n *\r\n * @param value  Numeric value\r\n * @return Numeric value as string\r\n */\r\nexport function numberToString(value) {\r\n    // TODO handle Infinity and -Infinity\r\n    if ($type.isNaN(value)) {\r\n        return \"NaN\";\r\n    }\r\n    if (value === Infinity) {\r\n        return \"Infinity\";\r\n    }\r\n    if (value === -Infinity) {\r\n        return \"-Infinity\";\r\n    }\r\n    // Negative 0\r\n    if ((value === 0) && (1 / value === -Infinity)) {\r\n        return \"-0\";\r\n    }\r\n    // Preserve negative and deal with absoute values\r\n    var negative = value < 0;\r\n    value = Math.abs(value);\r\n    // TODO test this\r\n    var parsed = $type.getValue(/^([0-9]+)(?:\\.([0-9]+))?(?:e[\\+\\-]([0-9]+))?$/.exec(\"\" + value));\r\n    var digits = parsed[1];\r\n    var decimals = parsed[2] || \"\";\r\n    var res;\r\n    // Leave the nummber as it is if it does not use exponents\r\n    if (parsed[3] == null) {\r\n        res = (decimals === \"\" ? digits : digits + \".\" + decimals);\r\n    }\r\n    else {\r\n        var exponent = +parsed[3];\r\n        // Deal with decimals\r\n        if (value < 1) {\r\n            var zeros = exponent - 1;\r\n            res = \"0.\" + $string.repeat(\"0\", zeros) + digits + decimals;\r\n            // Deal with integers\r\n        }\r\n        else {\r\n            var zeros = exponent - decimals.length;\r\n            if (zeros === 0) {\r\n                res = digits + decimals;\r\n            }\r\n            else if (zeros < 0) {\r\n                res = digits + decimals.slice(0, zeros) + \".\" + decimals.slice(zeros);\r\n            }\r\n            else {\r\n                res = digits + decimals + $string.repeat(\"0\", zeros);\r\n            }\r\n        }\r\n    }\r\n    return negative ? \"-\" + res : res;\r\n}\r\n/**\r\n * Converts anything to Date object.\r\n *\r\n * @param value  A value of any type\r\n * @return Date object representing a value\r\n */\r\nexport function anyToDate(value) {\r\n    if ($type.isDate(value)) {\r\n        // TODO maybe don't create a new Date ?\r\n        var date = new Date(value);\r\n        // This is needed because IE does not copy over milliseconds\r\n        date.setMilliseconds(value.getMilliseconds());\r\n        return date;\r\n    }\r\n    else if ($type.isNumber(value)) {\r\n        return new Date(value);\r\n    }\r\n    else {\r\n        // Try converting to number (assuming timestamp)\r\n        var num = Number(value);\r\n        if (!$type.isNumber(num)) {\r\n            return new Date(value);\r\n        }\r\n        else {\r\n            return new Date(num);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Tries converting any value to a number.\r\n *\r\n * @param value  Source value\r\n * @return Number\r\n */\r\nexport function anyToNumber(value) {\r\n    if ($type.isDate(value)) {\r\n        return value.getTime();\r\n    }\r\n    else if ($type.isNumber(value)) {\r\n        return value;\r\n    }\r\n    else if ($type.isString(value)) {\r\n        // Try converting to number (assuming timestamp)\r\n        var num = Number(value);\r\n        if (!$type.isNumber(num)) {\r\n            // Failing\r\n            return undefined;\r\n        }\r\n        else {\r\n            return num;\r\n        }\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * DATE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a year day.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Year day\r\n * @todo Account for UTC\r\n */\r\nexport function getYearDay(date, utc) {\r\n    if (utc === void 0) { utc = false; }\r\n    var start = new Date(date.getFullYear(), 0, 0);\r\n    var diff = (date.getTime() - start.getTime()) + ((start.getTimezoneOffset() - date.getTimezoneOffset()) * 60 * 1000);\r\n    var oneDay = 1000 * 60 * 60 * 24;\r\n    return Math.floor(diff / oneDay);\r\n}\r\n/**\r\n * Returns week number for a given date.\r\n *\r\n * @param date  Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number\r\n * @todo Account for UTC\r\n */\r\nexport function getWeek(date, _utc) {\r\n    if (_utc === void 0) { _utc = false; }\r\n    var d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));\r\n    var day = d.getUTCDay() || 7;\r\n    d.setUTCDate(d.getUTCDate() + 4 - day);\r\n    var firstDay = new Date(Date.UTC(d.getUTCFullYear(), 0, 1));\r\n    return Math.ceil((((d.getTime() - firstDay.getTime()) / 86400000) + 1) / 7);\r\n}\r\n/**\r\n * Returns a week number in the month.\r\n *\r\n * @param date  Source Date\r\n * @param utc   Assume UTC dates?\r\n * @return Week number in month\r\n */\r\nexport function getMonthWeek(date, utc) {\r\n    if (utc === void 0) { utc = false; }\r\n    var firstWeek = getWeek(new Date(date.getFullYear(), date.getMonth(), 1), utc);\r\n    var currentWeek = getWeek(date, utc);\r\n    if (currentWeek == 1) {\r\n        currentWeek = 53;\r\n    }\r\n    return currentWeek - firstWeek + 1;\r\n}\r\n/**\r\n * Returns a year day out of the given week number.\r\n *\r\n * @param week     Week\r\n * @param year     Year\r\n * @param weekday  Weekday\r\n * @param utc      Assume UTC dates\r\n * @return Day in a year\r\n */\r\nexport function getDayFromWeek(week, year, weekday, utc) {\r\n    if (weekday === void 0) { weekday = 1; }\r\n    if (utc === void 0) { utc = false; }\r\n    var date = new Date(year, 0, 4, 0, 0, 0, 0);\r\n    if (utc) {\r\n        date.setUTCFullYear(year);\r\n    }\r\n    var day = week * 7 + weekday - ((date.getDay() || 7) + 3);\r\n    return day;\r\n}\r\n/**\r\n * Returns 12-hour representation out of the 24-hour hours.\r\n *\r\n * @param hours  24-hour number\r\n * @return 12-hour number\r\n */\r\nexport function get12Hours(hours, base) {\r\n    if (hours > 12) {\r\n        hours -= 12;\r\n    }\r\n    else if (hours === 0) {\r\n        hours = 12;\r\n    }\r\n    return $type.hasValue(base) ? hours + (base - 1) : hours;\r\n}\r\n/**\r\n * Returns a string name of the tome zone.\r\n *\r\n * @param date     Date object\r\n * @param long     Should return long (\"Pacific Standard Time\") or short abbreviation (\"PST\")\r\n * @param savings  Include information if it's in daylight savings mode\r\n * @param utc      Assume UTC dates\r\n * @return Time zone name\r\n */\r\nexport function getTimeZone(date, long, savings, utc) {\r\n    if (long === void 0) { long = false; }\r\n    if (savings === void 0) { savings = false; }\r\n    if (utc === void 0) { utc = false; }\r\n    if (utc) {\r\n        return long ? \"Coordinated Universal Time\" : \"UTC\";\r\n    }\r\n    var wotz = date.toLocaleString(\"UTC\");\r\n    var wtz = date.toLocaleString(\"UTC\", { timeZoneName: long ? \"long\" : \"short\" }).substr(wotz.length);\r\n    //wtz = wtz.replace(/[+-]+[0-9]+$/, \"\");\r\n    if (savings === false) {\r\n        wtz = wtz.replace(/ (standard|daylight|summer|winter) /i, \" \");\r\n    }\r\n    return wtz;\r\n}\r\n/**\r\n * ============================================================================\r\n * NUMBER-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns a random number between `from` and `to`.\r\n *\r\n * @param from  From number\r\n * @param to    To number\r\n * @return Random number\r\n */\r\nexport function random(from, to) {\r\n    return Math.floor(Math.random() * (to - from)) + from;\r\n}\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\r\nexport function fitNumber(value, min, max) {\r\n    if (value > max) {\r\n        return max;\r\n    }\r\n    else if (value < min) {\r\n        return min;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Fits the number into specific `min` and `max` bounds.\r\n *\r\n * If the value is does not fit withing specified range, it \"wraps\" around the\r\n * values.\r\n *\r\n * For example, if we have input value 10 with min set at 1 and max set at 8,\r\n * the value will not fit. The remainder that does not fit (2) will be added\r\n * to `min`, resulting in 3.\r\n *\r\n * The output of regular `fitNumber()` would return 8 instead.\r\n *\r\n * @param value  Input value\r\n * @param min    Minimum value\r\n * @param max    Maximum value\r\n * @return Possibly adjusted value\r\n */\r\nexport function fitNumberRelative(value, min, max) {\r\n    var gap = max - min;\r\n    if (value > max) {\r\n        value = min + (value - gap * Math.floor(value / gap));\r\n    }\r\n    else if (value < min) {\r\n        value = min + (value - gap * Math.floor(value / gap));\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * ============================================================================\r\n * SPRITE-RELATED FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Converts SVG element coordinates to coordinates within specific [[Sprite]].\r\n *\r\n * @param point   SVG coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\r\nexport function svgPointToSprite(point, sprite) {\r\n    var x = point.x;\r\n    var y = point.y;\r\n    var sprites = [];\r\n    if (sprite) {\r\n        while ($type.hasValue(sprite.parent)) {\r\n            sprites.push(sprite);\r\n            sprite = sprite.parent;\r\n        }\r\n        sprites.reverse();\r\n        for (var i = 0; i < sprites.length; i++) {\r\n            var sprite_1 = sprites[i];\r\n            var angle = sprite_1.rotation;\r\n            var relativeX = x - sprite_1.pixelX - sprite_1.ex;\r\n            var relativeY = y - sprite_1.pixelY - sprite_1.ey;\r\n            if (sprite_1.dx) {\r\n                x -= sprite_1.dx;\r\n            }\r\n            if (sprite_1.dy) {\r\n                y -= sprite_1.dy;\r\n            }\r\n            var scale = sprite_1.scale;\r\n            // this handles nonscaling\r\n            if (sprite_1.group) {\r\n                scale = sprite_1.group.scale;\r\n            }\r\n            x = ($math.cos(-angle) * relativeX - $math.sin(-angle) * relativeY) / scale - sprite_1.pixelPaddingLeft;\r\n            y = ($math.cos(-angle) * relativeY + $math.sin(-angle) * relativeX) / scale - sprite_1.pixelPaddingTop;\r\n        }\r\n    }\r\n    return { x: x, y: y };\r\n}\r\n/**\r\n * Converts coordinates within [[Sprite]] to coordinates relative to the whole\r\n * SVG element.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return SVG coordinates\r\n */\r\nexport function spritePointToSvg(point, sprite) {\r\n    var x = point.x;\r\n    var y = point.y;\r\n    if (sprite) {\r\n        while ($type.hasValue(sprite.parent)) {\r\n            var angle = sprite.rotation;\r\n            x += sprite.pixelPaddingLeft + sprite.ex;\r\n            y += sprite.pixelPaddingTop + sprite.ey;\r\n            var scale = sprite.scale;\r\n            // this handles nonscaling\r\n            if (sprite.group) {\r\n                scale = sprite.group.scale;\r\n            }\r\n            var relativeX = sprite.pixelX + ((x * $math.cos(angle) - y * $math.sin(angle))) * scale;\r\n            var relativeY = sprite.pixelY + ((x * $math.sin(angle) + y * $math.cos(angle))) * scale;\r\n            if (sprite.dx) {\r\n                relativeX += sprite.dx;\r\n            }\r\n            if (sprite.dy) {\r\n                relativeY += sprite.dy;\r\n            }\r\n            x = relativeX;\r\n            y = relativeY;\r\n            sprite = sprite.parent;\r\n        }\r\n    }\r\n    return { x: x, y: y };\r\n}\r\n/**\r\n * Converts coordinates of one sprite to another.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @param toSprite  Sprite\r\n * @return converted coordinates\r\n */\r\nexport function spritePointToSprite(point, sprite, toSprite) {\r\n    return svgPointToSprite(spritePointToSvg(point, sprite), toSprite);\r\n}\r\n/**\r\n * Converts a rectangle expressed in SVG element coordinates to coordinates\r\n * within specific [[Sprite]].\r\n *\r\n * @param rect    SVG rectangle\r\n * @param sprite  Sprite\r\n * @return Sprite rectangle\r\n */\r\nexport function svgRectToSprite(rect, sprite) {\r\n    var p1 = svgPointToSprite(rect, sprite);\r\n    var p2 = svgPointToSprite({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n    return { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n/**\r\n * Converts a rectangle expressed in [[Sprite]] coordinates to SVG coordinates.\r\n *\r\n * @param rect    Sprite rectangle\r\n * @param sprite  Sprite\r\n * @return SVG rectangle\r\n */\r\nexport function spriteRectToSvg(rect, sprite) {\r\n    var p1 = spritePointToSvg(rect, sprite);\r\n    var p2 = spritePointToSvg({ x: rect.x + rect.width, y: rect.y + rect.height }, sprite);\r\n    return { x: p1.x, y: p1.y, width: p2.x - p1.x, height: p2.y - p1.y };\r\n}\r\n/**\r\n * Converts global document-wide coordinates to coordinates within SVG element.\r\n *\r\n * @param point         Global coordinates\r\n * @param svgContainer  SVG element\r\n * @return SVG coordinates\r\n */\r\nexport function documentPointToSvg(point, svgContainer, cssScale) {\r\n    try {\r\n        var bbox = svgContainer.getBoundingClientRect();\r\n        if (!$type.isNumber(cssScale)) {\r\n            cssScale = 1;\r\n        }\r\n        return {\r\n            \"x\": (point.x - bbox.left) / cssScale,\r\n            \"y\": (point.y - bbox.top) / cssScale\r\n        };\r\n    }\r\n    catch (e) {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * Converts SVG coordinates to global document-wide coordinates.\r\n *\r\n * @param point         SVG coordinates\r\n * @param svgContainer  SVG element\r\n * @return Global coordinates\r\n */\r\nexport function svgPointToDocument(point, svgContainer) {\r\n    try {\r\n        var bbox = svgContainer.getBoundingClientRect();\r\n        return {\r\n            \"x\": point.x + bbox.left,\r\n            \"y\": point.y + bbox.top\r\n        };\r\n    }\r\n    catch (e) {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * Converts document-wide global coordinates to coordinates within specific\r\n * [[Sprite]].\r\n *\r\n * @param point   Global coordinates\r\n * @param sprite  Sprite\r\n * @return Sprite coordinates\r\n */\r\nexport function documentPointToSprite(point, sprite) {\r\n    if (sprite && sprite.htmlContainer) {\r\n        var svgPoint = documentPointToSvg(point, $type.getValue(sprite.htmlContainer), sprite.svgContainer.cssScale);\r\n        return svgPointToSprite(svgPoint, sprite);\r\n    }\r\n    else {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * Converts coordinates within [[Sprite]] to global document coordinates.\r\n *\r\n * @param point   Sprite coordinates\r\n * @param sprite  Sprite\r\n * @return Global coordinates\r\n */\r\nexport function spritePointToDocument(point, sprite) {\r\n    if (sprite && sprite.htmlContainer) {\r\n        var svgPoint = spritePointToSvg(point, sprite);\r\n        return svgPointToDocument(svgPoint, $type.getValue(sprite.htmlContainer));\r\n    }\r\n    else {\r\n        return point;\r\n    }\r\n}\r\n/**\r\n * ============================================================================\r\n * DEPRECATED FUNCTIONS\r\n * @todo Review and remove\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Returns element's width.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Width (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function width(element) {\r\n    var cs = getComputedStyle(element);\r\n    var paddingX = parseFloat(cs.paddingLeft) + parseFloat(cs.paddingRight);\r\n    var borderX = parseFloat(cs.borderLeftWidth) + parseFloat(cs.borderRightWidth);\r\n    return element.clientWidth - paddingX - borderX;\r\n}\r\n/**\r\n * Returns element's height.\r\n *\r\n * @ignore Exclude from docs\r\n * @param element  Element\r\n * @return Height (px)\r\n * @deprecated Not used anywhere\r\n */\r\nexport function height(element) {\r\n    var cs = getComputedStyle(element);\r\n    var paddingY = parseFloat(cs.paddingTop) + parseFloat(cs.paddingBottom);\r\n    var borderY = parseFloat(cs.borderTopWidth) + parseFloat(cs.borderBottomWidth);\r\n    return element.clientHeight - paddingY - borderY;\r\n}\r\n/**\r\n * Returns number of decimals\r\n *\r\n * @ignore Exclude from docs\r\n * @param number  Input number\r\n * @return Number of decimals\r\n */\r\nexport function decimalPlaces(number) {\r\n    var match = ('' + number).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n    if (!match) {\r\n        return 0;\r\n    }\r\n    return Math.max(0, (match[1] ? match[1].length : 0) - (match[2] ? +match[2] : 0));\r\n}\r\nvar urlRegexp = /^([a-zA-Z][a-zA-Z0-9\\+\\.\\-]*:)?(?:(\\/\\/)([^\\@]+\\@)?([^\\/\\?\\#\\:]*)(\\:[0-9]+)?)?([^\\?\\#]*)(\\?[^\\#]*)?(\\#.*)?$/;\r\n/**\r\n * Parses a URL\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function parseUrl(url) {\r\n    var match = urlRegexp.exec(url);\r\n    return {\r\n        protocol: (match && match[1]) || \"\",\r\n        separator: (match && match[2]) || \"\",\r\n        authority: (match && match[3]) || \"\",\r\n        domain: (match && match[4]) || \"\",\r\n        port: (match && match[5]) || \"\",\r\n        path: (match && match[6]) || \"\",\r\n        query: (match && match[7]) || \"\",\r\n        hash: (match && match[8]) || \"\"\r\n    };\r\n}\r\n/**\r\n * Serializes a Url into a string\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nexport function serializeUrl(url) {\r\n    return url.protocol + url.separator + url.authority + url.domain + url.port + url.path + url.query + url.hash;\r\n}\r\n/**\r\n * Checks whether a Url is relative or not\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO is this correct ?\r\nfunction isRelativeUrl(url) {\r\n    return url.protocol === \"\" &&\r\n        url.separator === \"\" &&\r\n        url.authority === \"\" &&\r\n        url.domain === \"\" &&\r\n        url.port === \"\";\r\n}\r\n/**\r\n * Joins together two URLs, resolving relative URLs correctly\r\n *\r\n * @ignore Exclude from docs\r\n */\r\n// TODO test this\r\nexport function joinUrl(left, right) {\r\n    var parsedLeft = parseUrl(left);\r\n    var parsedRight = parseUrl(right);\r\n    if (isRelativeUrl(parsedLeft)) {\r\n        throw new Error(\"Left URL is not absolute\");\r\n    }\r\n    if (isRelativeUrl(parsedRight)) {\r\n        // TODO is this correct ?\r\n        if (parsedRight.path !== \"\") {\r\n            if (parsedRight.path[0] === \"/\") {\r\n                parsedLeft.path = parsedRight.path;\r\n                // TODO is this correct ?\r\n            }\r\n            else {\r\n                var leftPath = parsedLeft.path.split(/\\//);\r\n                var rightPath = parsedRight.path.split(/\\//);\r\n                // TODO is this correct ?\r\n                if (leftPath.length === 0) {\r\n                    if (rightPath.length !== 0) {\r\n                        leftPath.push(\"\");\r\n                    }\r\n                }\r\n                else if (leftPath.length > 1) {\r\n                    leftPath.pop();\r\n                }\r\n                $array.pushAll(leftPath, rightPath);\r\n                parsedLeft.path = leftPath.join(\"/\");\r\n                if (parsedLeft.path !== \"\" && parsedLeft.path[0] !== \"/\") {\r\n                    throw new Error(\"URL path must start with /\");\r\n                }\r\n            }\r\n        }\r\n        // TODO is this correct ?\r\n        parsedLeft.query = parsedRight.query;\r\n        parsedLeft.hash = parsedRight.hash;\r\n        return serializeUrl(parsedLeft);\r\n    }\r\n    else {\r\n        return serializeUrl(parsedRight);\r\n    }\r\n}\r\n/**\r\n * Detects MSIE.\r\n *\r\n * @return Is IE?\r\n */\r\nexport function isIE() {\r\n    return !!window.MSInputMethodContext && !!document.documentMode;\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}