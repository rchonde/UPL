{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Bullet } from \"./Bullet\";\nimport { Label } from \"../../core/elements/Label\";\nimport { registry } from \"../../core/Registry\";\nimport { color } from \"../../core/utils/Color\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar LabelBullet =\n/** @class */\nfunction (_super) {\n  __extends(LabelBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function LabelBullet() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"LabelBullet\";\n\n    var label = _this.createChild(Label);\n\n    label.shouldClone = false;\n    label.verticalCenter = \"middle\";\n    label.horizontalCenter = \"middle\";\n    label.truncate = true;\n    label.hideOversized = false;\n    label.maxWidth = 500;\n    label.maxHeight = 500;\n    label.stroke = color();\n    label.strokeOpacity = 0;\n    label.fill = new InterfaceColorSet().getFor(\"text\");\n\n    _this.events.on(\"maxsizechanged\", _this.handleMaxSize, _this, false);\n\n    _this.label = label; // not good, as lineSeries will have labels somewhere in the middle.\n    //this.locationX = 0.5;\n    //this.locationY = 0.5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  LabelBullet.prototype.handleMaxSize = function () {\n    this.label.maxWidth = this.maxWidth;\n    this.label.maxHeight = this.maxHeight;\n  };\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[LabelBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n\n\n  LabelBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.label.copyFrom(source.label);\n  };\n\n  return LabelBullet;\n}(Bullet);\n\nexport { LabelBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;","map":{"version":3,"names":["__extends","Bullet","Label","registry","color","InterfaceColorSet","LabelBullet","_super","_this","call","className","label","createChild","shouldClone","verticalCenter","horizontalCenter","truncate","hideOversized","maxWidth","maxHeight","stroke","strokeOpacity","fill","getFor","events","on","handleMaxSize","applyTheme","prototype","copyFrom","source","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar LabelBullet = /** @class */ (function (_super) {\r\n    __extends(LabelBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function LabelBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"LabelBullet\";\r\n        var label = _this.createChild(Label);\r\n        label.shouldClone = false;\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.truncate = true;\r\n        label.hideOversized = false;\r\n        label.maxWidth = 500;\r\n        label.maxHeight = 500;\r\n        label.stroke = color();\r\n        label.strokeOpacity = 0;\r\n        label.fill = new InterfaceColorSet().getFor(\"text\");\r\n        _this.events.on(\"maxsizechanged\", _this.handleMaxSize, _this, false);\r\n        _this.label = label;\r\n        // not good, as lineSeries will have labels somewhere in the middle.\r\n        //this.locationX = 0.5;\r\n        //this.locationY = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    LabelBullet.prototype.handleMaxSize = function () {\r\n        this.label.maxWidth = this.maxWidth;\r\n        this.label.maxHeight = this.maxHeight;\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[LabelBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    LabelBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.label.copyFrom(source.label);\r\n    };\r\n    return LabelBullet;\r\n}(Bullet));\r\nexport { LabelBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LabelBullet\"] = LabelBullet;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,KAAT,QAAsB,wBAAtB;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC/CP,SAAS,CAACM,WAAD,EAAcC,MAAd,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,WAAT,GAAuB;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,aAAlB;;IACA,IAAIC,KAAK,GAAGH,KAAK,CAACI,WAAN,CAAkBV,KAAlB,CAAZ;;IACAS,KAAK,CAACE,WAAN,GAAoB,KAApB;IACAF,KAAK,CAACG,cAAN,GAAuB,QAAvB;IACAH,KAAK,CAACI,gBAAN,GAAyB,QAAzB;IACAJ,KAAK,CAACK,QAAN,GAAiB,IAAjB;IACAL,KAAK,CAACM,aAAN,GAAsB,KAAtB;IACAN,KAAK,CAACO,QAAN,GAAiB,GAAjB;IACAP,KAAK,CAACQ,SAAN,GAAkB,GAAlB;IACAR,KAAK,CAACS,MAAN,GAAehB,KAAK,EAApB;IACAO,KAAK,CAACU,aAAN,GAAsB,CAAtB;IACAV,KAAK,CAACW,IAAN,GAAa,IAAIjB,iBAAJ,GAAwBkB,MAAxB,CAA+B,MAA/B,CAAb;;IACAf,KAAK,CAACgB,MAAN,CAAaC,EAAb,CAAgB,gBAAhB,EAAkCjB,KAAK,CAACkB,aAAxC,EAAuDlB,KAAvD,EAA8D,KAA9D;;IACAA,KAAK,CAACG,KAAN,GAAcA,KAAd,CAfmB,CAgBnB;IACA;IACA;;IACAH,KAAK,CAACmB,UAAN;;IACA,OAAOnB,KAAP;EACH;;EACDF,WAAW,CAACsB,SAAZ,CAAsBF,aAAtB,GAAsC,YAAY;IAC9C,KAAKf,KAAL,CAAWO,QAAX,GAAsB,KAAKA,QAA3B;IACA,KAAKP,KAAL,CAAWQ,SAAX,GAAuB,KAAKA,SAA5B;EACH,CAHD;EAIA;AACJ;AACA;AACA;AACA;AACA;;;EACIb,WAAW,CAACsB,SAAZ,CAAsBC,QAAtB,GAAiC,UAAUC,MAAV,EAAkB;IAC/CvB,MAAM,CAACqB,SAAP,CAAiBC,QAAjB,CAA0BpB,IAA1B,CAA+B,IAA/B,EAAqCqB,MAArC;;IACA,KAAKnB,KAAL,CAAWkB,QAAX,CAAoBC,MAAM,CAACnB,KAA3B;EACH,CAHD;;EAIA,OAAOL,WAAP;AACH,CA1CgC,CA0C/BL,MA1C+B,CAAjC;;AA2CA,SAASK,WAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,QAAQ,CAAC4B,iBAAT,CAA2B,aAA3B,IAA4CzB,WAA5C"},"metadata":{},"sourceType":"module"}