{"ast":null,"code":"/**\r\n * Base class for all Axis\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Component } from \"../../core/Component\";\nimport { Container } from \"../../core/Container\";\nimport { DataItem } from \"../../core/DataItem\";\nimport { AxisBreak } from \"./AxisBreak\";\nimport { Label } from \"../../core/elements/Label\";\nimport { Tooltip } from \"../../core/elements/Tooltip\";\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $number from \"../../core/utils/Number\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $type from \"../../core/utils/Type\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar AxisDataItem =\n/** @class */\nfunction (_super) {\n  __extends(AxisDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function AxisDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"AxisDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(AxisDataItem.prototype, \"grid\", {\n    /**\r\n     * @return Grid element\r\n     */\n    get: function () {\n      if (!this._grid) {\n        var component_1 = this.component;\n\n        if (component_1) {\n          var template = void 0;\n          var grid_1;\n\n          if (this.isRange) {\n            template = component_1.axisRanges.template.grid;\n\n            if (template.disabled) {\n              return;\n            } else {\n              grid_1 = template.clone();\n            }\n          } else {\n            template = component_1.renderer.grid.template;\n\n            if (template.disabled) {\n              return;\n            } else {\n              grid_1 = component_1.renderer.grid.create();\n\n              this._disposers.push(new Disposer(function () {\n                component_1.renderer.grid.removeValue(grid_1);\n              }));\n            }\n          }\n\n          this.grid = grid_1;\n          grid_1.shouldClone = false;\n\n          this._disposers.push(grid_1);\n\n          grid_1.axis = this.component;\n        }\n      }\n\n      return this._grid;\n    },\n\n    /**\r\n     * A [[Grid]] element associated with this data item.\r\n     *\r\n     * If there is no grid element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param grid  Grid element\r\n     */\n    set: function (grid) {\n      if (this._grid && this._grid != grid) {\n        $array.remove(this.sprites, this._grid);\n        this._grid.dataItem = undefined;\n      }\n\n      if (grid) {\n        if (grid.dataItem && grid.dataItem != this) {\n          $array.remove(grid.dataItem.sprites, grid);\n          grid.dataItem.grid = undefined;\n        }\n\n        this.addSprite(grid);\n      }\n\n      this._grid = grid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"tick\", {\n    /**\r\n     * @return Tick element\r\n     */\n    get: function () {\n      if (!this._tick) {\n        var component_2 = this.component;\n\n        if (component_2) {\n          var template = void 0;\n          var tick_1;\n\n          if (this.isRange) {\n            template = component_2.axisRanges.template.tick;\n\n            if (template.disabled) {\n              return;\n            } else {\n              tick_1 = template.clone();\n            }\n          } else {\n            template = component_2.renderer.ticks.template;\n\n            if (template.disabled) {\n              return;\n            } else {\n              tick_1 = component_2.renderer.ticks.create();\n\n              this._disposers.push(new Disposer(function () {\n                component_2.renderer.ticks.removeValue(tick_1);\n              }));\n            }\n          }\n\n          this.tick = tick_1;\n          tick_1.axis = this.component;\n          tick_1.shouldClone = false;\n\n          this._disposers.push(tick_1);\n        }\n      }\n\n      return this._tick;\n    },\n\n    /**\r\n     * An [[AxisTick]] element associated with this data item.\r\n     *\r\n     * If there is no tick element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param tick  Tick element\r\n     */\n    set: function (tick) {\n      if (this._tick && this._tick != tick) {\n        $array.remove(this.sprites, this._tick);\n        this._tick.dataItem = undefined;\n      }\n\n      if (tick) {\n        if (tick.dataItem && tick.dataItem != this) {\n          $array.remove(tick.dataItem.sprites, tick);\n          tick.dataItem.tick = undefined;\n        }\n\n        this.addSprite(tick);\n      }\n\n      this._tick = tick;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"label\", {\n    /**\r\n     * @return Label element\r\n     */\n    get: function () {\n      if (!this._label) {\n        var component_3 = this.component;\n\n        if (component_3) {\n          var template = void 0;\n          var label_1;\n\n          if (this.isRange) {\n            template = component_3.axisRanges.template.label;\n\n            if (template.disabled) {\n              return;\n            } else {\n              label_1 = template.clone();\n            }\n          } else {\n            template = component_3.renderer.labels.template;\n\n            if (template.disabled) {\n              return;\n            } else {\n              label_1 = component_3.renderer.labels.create();\n\n              this._disposers.push(new Disposer(function () {\n                component_3.renderer.labels.removeValue(label_1);\n              }));\n            }\n          }\n\n          this._disposers.push(label_1);\n\n          this.label = label_1;\n          label_1.shouldClone = false;\n          label_1.axis = this.component;\n          label_1.virtualParent = component_3;\n        }\n      }\n\n      return this._label;\n    },\n\n    /**\r\n     * An [[AxisLabel]] element associated with this data item.\r\n     *\r\n     * If there is no label element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param label Label element\r\n     */\n    set: function (label) {\n      if (this._label && this._label != label) {\n        $array.remove(this.sprites, this._label);\n        this._label.dataItem = undefined;\n      }\n\n      if (label) {\n        if (label.dataItem && label.dataItem != this) {\n          $array.remove(label.dataItem.sprites, label);\n          label.dataItem.label = undefined;\n        }\n\n        this.addSprite(label);\n      }\n\n      this._label = label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"axisFill\", {\n    /**\r\n     * @return Label element\r\n     */\n    get: function () {\n      if (!this._axisFill) {\n        var component_4 = this.component;\n\n        if (component_4) {\n          var template = void 0;\n          var axisFill_1;\n\n          if (this.isRange) {\n            template = component_4.axisRanges.template.axisFill;\n\n            if (!this.isTemplate && template.disabled) {\n              return;\n            } else {\n              axisFill_1 = template.clone();\n            }\n          } else {\n            template = component_4.renderer.axisFills.template;\n\n            if (template.disabled) {\n              return;\n            } else {\n              axisFill_1 = component_4.renderer.axisFills.create();\n\n              this._disposers.push(new Disposer(function () {\n                component_4.renderer.axisFills.removeValue(axisFill_1);\n              }));\n            }\n          }\n\n          this.axisFill = axisFill_1;\n          axisFill_1.shouldClone = false;\n\n          this._disposers.push(axisFill_1);\n        }\n      }\n\n      return this._axisFill;\n    },\n\n    /**\r\n     * An [[AxisFill]] associated element with this data item.\r\n     *\r\n     * If there is no fill element associated with data item, a new one is\r\n     * created and returned.\r\n     *\r\n     * @param label Label element\r\n     */\n    set: function (axisFill) {\n      if (this._axisFill && this._axisFill != axisFill) {\n        $array.remove(this.sprites, this._axisFill);\n        this._axisFill.dataItem = undefined;\n      }\n\n      if (axisFill) {\n        if (axisFill.dataItem && axisFill.dataItem != this) {\n          $array.remove(axisFill.dataItem.sprites, axisFill);\n          axisFill.dataItem.axisFill = undefined;\n        }\n\n        axisFill.axis = this.component;\n        this.addSprite(axisFill);\n      }\n\n      this._axisFill = axisFill;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"text\", {\n    /**\r\n     * @return Text label\r\n     */\n    get: function () {\n      return this._text;\n    },\n\n    /**\r\n     * Text to be used as data item's label.\r\n     *\r\n     * @param text Text label\r\n     */\n    set: function (text) {\n      this._text = text;\n\n      if (this._label) {\n        // do not use getter, it will create unwanted instances!\n        this._label.text = text;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"mask\", {\n    /**\r\n     * Data item's mask.\r\n     *\r\n     * @return Mask\r\n     */\n    get: function () {\n      return this._mask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"contents\", {\n    /**\r\n     * Returns a [[Container]] to place all visual elements, related to data item\r\n     * in.\r\n     *\r\n     * If there is no Container, a new one is created.\r\n     *\r\n     * @return Contents container\r\n     */\n    get: function () {\n      if (!this._contents) {\n        var contents = new Container();\n        this.addSprite(contents);\n        contents.isMeasured = false;\n        this._contents = contents;\n        var component = this.component;\n\n        if (component) {\n          var mask = component.renderer.createFill(this.component);\n          mask.disabled = false;\n          mask.axis = component;\n          this.addSprite(mask);\n          this._mask = mask;\n          contents.mask = mask;\n        }\n      }\n\n      return this._contents;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisDataItem.prototype, \"axisBreak\", {\n    /**\r\n     * @return Axis break\r\n     */\n    get: function () {\n      return this._axisBreak;\n    },\n\n    /**\r\n     * An [[AxisBreak]] this data item falls within.\r\n     *\r\n     * @param axisBreak Axis break\r\n     */\n    set: function (axisBreak) {\n      if (this._axisBreak) {\n        this._axisBreak.dataItems.removeValue(this);\n      }\n\n      if (axisBreak) {\n        axisBreak.dataItems.push(this);\n      }\n\n      this._axisBreak = axisBreak;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Re-draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  AxisDataItem.prototype.validate = function () {\n    if (this.component) {\n      this.component.validateDataElement(this);\n    }\n  };\n  /**\r\n   * Appends data item's elements to the parent [[Container]].\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  AxisDataItem.prototype.appendChildren = function () {\n    if (this.component) {\n      this.component.appendDataItem(this);\n    }\n  };\n  /**\r\n   * Checks if data item has particular property set.\r\n   *\r\n   * @param prop  Property name\r\n   * @return Property set?\r\n   */\n\n\n  AxisDataItem.prototype.hasProperty = function (prop) {\n    return prop == \"component\" ? true : _super.prototype.hasProperty.call(this, prop);\n  };\n  /**\r\n   * Copies all parameters from another [[AxisDataItem]].\r\n   *\r\n   * @param source Source AxisDataItem\r\n   */\n\n\n  AxisDataItem.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.text = source.text;\n\n    if (source.bullet) {\n      this.bullet = source.bullet.clone();\n    }\n\n    this.minPosition = source.minPosition;\n    this.maxPosition = source.maxPosition;\n  };\n  /**\r\n   * Sets visibility of the Data Item.\r\n   *\r\n   * @param value Data Item\r\n   */\n\n\n  AxisDataItem.prototype.setVisibility = function (value, noChangeValues) {\n    _super.prototype.setVisibility.call(this, value, noChangeValues);\n\n    if (this._contents) {\n      this._contents.visible = value;\n    }\n  };\n\n  Object.defineProperty(AxisDataItem.prototype, \"bullet\", {\n    /**\r\n     * @return Bullet\r\n     */\n    get: function () {\n      return this._bullet;\n    },\n\n    /**\r\n     * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n     * bullet in the middle of the cell, or specific value.\r\n     *\r\n     * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n     * instead. It has a `location` property which can be used to indicate\r\n     * precise relative location within cell/range.\r\n     *\r\n     * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n     * into it.\r\n     *\r\n     * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n     * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n     * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n     *\r\n     * ```TypeScript\r\n     * let range = dateAxis.axisRanges.create();\r\n     * range.date = new Date(2018, 0, 5);\r\n     *\r\n     * let flag = new am4plugins_bullets.FlagBullet();\r\n     * flag.label.text = \"Hello\";\r\n     *\r\n     * range.bullet = flag;\r\n     * ```\r\n     * ```JavaScript\r\n     * var range = dateAxis.axisRanges.create();\r\n     * range.date = new Date(2018, 0, 5);\r\n     *\r\n     * var flag = new am4plugins_bullets.FlagBullet();\r\n     * flag.label.text = \"Hello\";\r\n     *\r\n     * range.bullet = flag;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     \"type\": \"DateAxis\",\r\n     *     // ...\r\n     *     \"axisRanges\": [{\r\n     *       \"date\": new Date(2018, 0, 5),\r\n     *       \"bullet: {\r\n     *         \"type\": \"FlagBullet\",\r\n     *         \"label\": {\r\n     *           \"text\": \"Hello\"\r\n     *         }\r\n     *       }\r\n     *     }]\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @since 4.5.9\r\n     * @param  value  Bullet\r\n     */\n    set: function (value) {\n      if (this._bullet && this._bullet != value) {\n        $array.remove(this.sprites, this._bullet);\n        this._bullet.dataItem = undefined;\n      }\n\n      this._bullet = value;\n\n      if (value) {\n        this.addSprite(value);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return AxisDataItem;\n}(DataItem);\n\nexport { AxisDataItem };\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\n\nexport var AxisItemLocation;\n\n(function (AxisItemLocation) {\n  AxisItemLocation[AxisItemLocation[\"Start\"] = 0] = \"Start\";\n  AxisItemLocation[AxisItemLocation[\"Middle\"] = 0.5] = \"Middle\";\n  AxisItemLocation[AxisItemLocation[\"End\"] = 1] = \"End\";\n})(AxisItemLocation || (AxisItemLocation = {}));\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\n\n\nvar Axis =\n/** @class */\nfunction (_super) {\n  __extends(Axis, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Axis() {\n    var _this = // Init\n    _super.call(this) || this;\n    /**\r\n     * Number of Grid elements on the axis.\r\n     */\n\n\n    _this._gridCount = 10;\n    /**\r\n     * A list of [[XYSeries]] that are using this Axis.\r\n     */\n\n    _this._series = new List();\n    /**\r\n     * Specifies if axis should be automatically disposed when removing from\r\n     * chart's axis list.\r\n     *\r\n     * @default true\r\n     */\n\n    _this.autoDispose = true;\n    /**\r\n     * @ignore\r\n     */\n\n    _this._axisItemCount = 0;\n\n    if (_this.constructor === Axis) {\n      throw new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\n    }\n\n    _this.hideTooltipWhileZooming = true;\n    _this.minWidth = 0.0001;\n    _this.minHeight = 0.0001;\n    _this.className = \"Axis\";\n    _this.shouldClone = false;\n\n    _this.setPropertyValue(\"cursorTooltipEnabled\", true);\n\n    _this.toggleZoomOutButton = true;\n    _this.zoomable = true;\n    var interfaceColors = new InterfaceColorSet(); // Create title\n\n    _this.title = new Label();\n    _this.title.shouldClone = false;\n\n    _this._disposers.push(_this.title);\n\n    _this.setPropertyValue(\"startLocation\", 0);\n\n    _this.setPropertyValue(\"endLocation\", 1); // Data item iterator\n\n\n    _this._dataItemsIterator = new $iter.ListIterator(_this.dataItems, function () {\n      return _this.dataItems.create();\n    });\n    _this._dataItemsIterator.createNewItems = true; // Create tooltip\n\n    var tooltip = new Tooltip();\n\n    _this._disposers.push(tooltip);\n\n    tooltip.label.padding(5, 10, 5, 10);\n    tooltip.background.pointerLength = 5;\n    tooltip.fitPointerToBounds = true;\n    tooltip.background.filters.clear(); // Set virtual parentfor the tooltip so that it can properly inheirt\n    // formatters from the axis.\n\n    tooltip.virtualParent = _this; // Create background element for the tooltip\n\n    var background = tooltip.background;\n    background.cornerRadius = 0;\n    background.fill = interfaceColors.getFor(\"alternativeBackground\");\n    background.stroke = background.fill;\n    background.strokeWidth = 1;\n    background.fillOpacity = 1;\n    tooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\n    _this.tooltip = tooltip; // Accessibility\n\n    _this.readerHidden = true;\n\n    _this.events.on(\"rangechangestarted\", function () {\n      _this.series.each(function (series) {\n        if (series.hideTooltipWhileZooming) {\n          series.tooltip.hide();\n          series.tooltip.preventShow = true;\n        }\n      });\n\n      if (_this.hideTooltipWhileZooming) {\n        _this.tooltip.hide();\n\n        _this.tooltip.preventShow = true;\n      }\n    }, undefined, false);\n\n    _this.events.on(\"rangechangeended\", function () {\n      _this.series.each(function (series) {\n        if (series.hideTooltipWhileZooming) {\n          series.tooltip.hide();\n          series.tooltip.preventShow = false;\n        }\n      });\n\n      if (_this.hideTooltipWhileZooming) {\n        _this.tooltip.hide();\n\n        _this.tooltip.preventShow = false;\n      }\n    }, undefined, false);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Holds reference to a function that accepts a DataItem and its index as\r\n   * parameters.\r\n   *\r\n   * It can either return a fill opacity for a fill, or manipulate data item\r\n   * directly, to create various highlighting scenarios.\r\n   *\r\n   * For example, you can set it up to highlight only weekends on a\r\n   * [[DateAxis]].\r\n   */\n\n\n  Axis.prototype.fillRule = function (dataItem, index) {\n    if (!$type.isNumber(index)) {\n      index = dataItem.index;\n    }\n\n    if (index / 2 == Math.round(index / 2)) {\n      dataItem.axisFill.__disabled = true;\n      dataItem.axisFill.opacity = 0;\n    } else {\n      dataItem.axisFill.opacity = 1;\n      dataItem.axisFill.__disabled = false;\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  Axis.prototype.createDataItem = function () {\n    return new AxisDataItem();\n  };\n  /**\r\n   * Invalidates layout.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.invalidateLayout = function () {\n    _super.prototype.invalidateLayout.call(this); // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\n\n\n    $iter.each(this.series.iterator(), function (series) {\n      series.invalidateLayout();\n    });\n  };\n  /**\r\n   * Invalidates series of this axis.\r\n   */\n\n\n  Axis.prototype.invalidateSeries = function () {\n    // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\n    $iter.each(this.series.iterator(), function (series) {\n      series.invalidate();\n    });\n  };\n  /**\r\n   * Override to cancel super call for data element validation.\r\n   * @ignore\r\n   */\n\n\n  Axis.prototype.validateDataElements = function () {\n    this._axisItemCount = 0;\n\n    if (this.ghostLabel) {\n      this.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\n      this.ghostLabel.validate();\n    }\n  };\n  /**\r\n   * Recalculates the number of grid items on the axis.\r\n   */\n\n\n  Axis.prototype.updateGridCount = function () {\n    if (this.renderer) {\n      var gridCount = this.axisLength / this.renderer.minGridDistance;\n\n      if (gridCount != this._gridCount) {\n        this._gridCount = gridCount;\n        this.clearCache();\n      }\n    }\n  };\n  /**\r\n   * Redraws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.validateLayout = function () {\n    this.axisFullLength = this.axisLength / (this.end - this.start);\n\n    _super.prototype.validateLayout.call(this);\n\n    this.updateGridCount();\n    var renderer = this.renderer;\n\n    if (renderer) {\n      renderer.updateAxisLine();\n      renderer.updateTooltip();\n      renderer.updateBaseGridElement();\n    }\n\n    if (this._prevLength != this.axisLength) {\n      this.dispatchImmediately(\"lengthchanged\");\n      this._prevLength = this.axisLength;\n    }\n  };\n  /**\r\n   * Initializes Axis' renderer.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.initRenderer = function () {};\n  /**\r\n   * Adds a data item to the Axis.\r\n   *\r\n   * @param dataItem Data item\r\n   */\n\n\n  Axis.prototype.appendDataItem = function (dataItem) {\n    var renderer = this.renderer;\n    var tick = dataItem.tick;\n\n    if (tick) {\n      if (tick.above) {\n        tick.parent = renderer.bulletsContainer;\n      } else {\n        tick.parent = renderer.gridContainer;\n      }\n    }\n\n    if (dataItem.label) {\n      dataItem.label.parent = renderer;\n    }\n\n    var axisFill = dataItem.axisFill;\n\n    if (axisFill) {\n      if (axisFill.above) {\n        axisFill.parent = renderer.bulletsContainer;\n      } else {\n        axisFill.parent = renderer.gridContainer;\n      }\n    }\n\n    var grid = dataItem.grid;\n\n    if (grid) {\n      if (grid.above) {\n        grid.parent = renderer.bulletsContainer;\n      } else {\n        grid.parent = renderer.gridContainer;\n      }\n    }\n\n    if (dataItem.bullet) {\n      dataItem.bullet.parent = renderer.bulletsContainer;\n    }\n  };\n  /**\r\n   * Redraws Axis' related items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    this.validateLayout();\n    this.renderer.updateGridContainer();\n  };\n  /**\r\n   * Redars Axis ranges.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.validateAxisRanges = function () {\n    var _this = this;\n\n    $iter.each(this.axisRanges.iterator(), function (axisRange) {\n      _this.appendDataItem(axisRange);\n\n      _this.validateDataElement(axisRange);\n\n      if (axisRange.grid) {\n        axisRange.grid.validate();\n      }\n\n      if (axisRange.tick) {\n        axisRange.tick.validate();\n      }\n\n      if (axisRange.axisFill) {\n        axisRange.axisFill.validate();\n      }\n\n      if (axisRange.label) {\n        axisRange.label.validate();\n      }\n    });\n  };\n  /**\r\n   * Invalidates all axis breaks, so they are redrawn.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.validateBreaks = function () {\n    if (this._axisBreaks) {\n      $iter.each(this._axisBreaks.iterator(), function (axisBreak) {\n        axisBreak.invalidate();\n      });\n    }\n  };\n  /**\r\n   * Associates an Axis break with this Axis, after it is inserted into\r\n   * `axisBreaks`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event Event\r\n   */\n\n\n  Axis.prototype.processBreak = function (event) {\n    var axisBreak = event.newValue;\n    axisBreak.parent = this.renderer.breakContainer;\n    axisBreak.axis = this;\n  };\n  /**\r\n   * Registers a [[XYSeries]] element with this Axis.\r\n   *\r\n   * Returns a [[Disposer]] for all events, added to Series for watching\r\n   * changes in Axis, and vice versa.\r\n   * @ignore\r\n   * @param series  Series\r\n   * @return Event disposer\r\n   */\n\n\n  Axis.prototype.registerSeries = function (series) {\n    var _this = this;\n\n    this.series.moveValue(series);\n    return new MultiDisposer([new Disposer(function () {\n      _this.series.removeValue(series);\n    }), this.events.on(\"lengthchanged\", series.invalidate, series, false), this.events.on(\"lengthchanged\", series.createMask, series, false), this.events.on(\"startchanged\", series.invalidate, series, false), this.events.on(\"endchanged\", series.invalidate, series, false)]);\n  };\n\n  Object.defineProperty(Axis.prototype, \"renderer\", {\n    /**\r\n     * @return Renderer\r\n     */\n    get: function () {\n      return this._renderer;\n    },\n\n    /**\r\n     * An [[AxisRenderer]] to be used to render this Axis.\r\n     *\r\n     * Please note that most of the settings, related to Axis' appearance are set\r\n     * via its renderer. Not directly on the Axis.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * axis.renderer.inside = true;\r\n     * axis.renderer.minLabelPosition = 0.1;\r\n     * axis.renderer.maxLabelPosition = 0.9;\r\n     * ```\r\n     * ```JavaScript\r\n     * axis.renderer.inside = true;\r\n     * axis.renderer.minLabelPosition = 0.1;\r\n     * axis.renderer.maxLabelPosition = 0.9;\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n     * @param renderer  Renderer\r\n     */\n    set: function (renderer) {\n      if (renderer != this._renderer) {\n        this._renderer = renderer;\n        renderer.chart = this.chart;\n        renderer.axis = this;\n        renderer.parent = this;\n        this.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\n\n        this.initRenderer();\n\n        this._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\n\n        var ghostLabel_1 = this.renderer.labels.create();\n\n        this._disposers.push(ghostLabel_1);\n\n        ghostLabel_1.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\n\n        ghostLabel_1.text = \"L\";\n        ghostLabel_1.parent = this.renderer;\n        ghostLabel_1.shouldClone = false;\n        ghostLabel_1.fillOpacity = 0;\n        ghostLabel_1.opacity = 0;\n        ghostLabel_1.strokeOpacity = 0;\n        ghostLabel_1.interactionsEnabled = false;\n        ghostLabel_1.validate();\n        this.ghostLabel = ghostLabel_1;\n        this.events.on(\"beforedatavalidated\", function () {\n          ghostLabel_1.text = \"L\";\n        }, undefined, false);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Converts a relative position to angle. (for circular axes)\r\n   *\r\n   * @param position Position (0-1)\r\n   * @return Angle\r\n   */\n\n  Axis.prototype.positionToAngle = function (position) {\n    return this.renderer.positionToAngle(position);\n  };\n  /**\r\n   * Converts pixel coordinates to a relative position. (0-1)\r\n   *\r\n   * @param point  Coorinates (px)\r\n   * @return Position (0-1)\r\n   */\n\n\n  Axis.prototype.pointToPosition = function (point) {\n    return this.renderer.pointToPosition(point);\n  };\n  /**\r\n   * Converts relative position to coordinate.\r\n   *\r\n   * @since 4.7.15\r\n   * @param position (0-1)\r\n   * @return coordinate (px)\r\n   */\n\n\n  Axis.prototype.positionToCoordinate = function (position) {\n    return this.renderer.positionToCoordinate(position);\n  };\n  /**\r\n   * [getAnyRangePath description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param start  [description]\r\n   * @param end    [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getAnyRangePath = function (start, end) {\n    return this.renderer.getPositionRangePath(start, end);\n  };\n  /**\r\n   * Converts any positional parameter to a relative position on axis.\r\n   *\r\n   * @todo Description (review)\r\n   * @param value  Pisition\r\n   * @return Position (0-1)\r\n   */\n\n\n  Axis.prototype.anyToPosition = function (value) {\n    return 0;\n  };\n  /**\r\n   * Converts any positional parameter to a relative position on axis.\r\n   *\r\n   * @todo Description (review)\r\n   * @param value  Pisition\r\n   * @return Orientation point\r\n   */\n\n\n  Axis.prototype.anyToPoint = function (value) {\n    return {\n      x: 0,\n      y: 0,\n      angle: 0\n    };\n  };\n  /**\r\n   * [getPositionRangePath description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param startPosition [description]\r\n   * @param endPosition   [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getPositionRangePath = function (startPosition, endPosition) {\n    if (this.renderer) {\n      return this.renderer.getPositionRangePath(startPosition, endPosition);\n    }\n\n    return \"\";\n  };\n\n  Object.defineProperty(Axis.prototype, \"axisLength\", {\n    /**\r\n     * Actual axis length in pixels.\r\n     *\r\n     * @return Axis length (px)\r\n     */\n    get: function () {\n      if (this.renderer) {\n        return this.renderer.axisLength;\n      }\n\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"cursorTooltipEnabled\", {\n    /**\r\n     * @return Display tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorTooltipEnabled\");\n    },\n\n    /**\r\n     * Indicates if axis should display a tooltip for chart's cursor.\r\n     *\r\n     * @param value Display tooltip?\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\n        if (value && this.renderer) {\n          this.renderer.updateTooltip();\n        } else if (this.tooltip) {\n          this.tooltip.hide(0);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"toggleZoomOutButton\", {\n    /**\r\n     * @return Toggle zoom out button?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"toggleZoomOutButton\");\n    },\n\n    /**\r\n     * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n     * and vice versa: when axis is zoomed out completely, zoom out button is\r\n     * hidden.\r\n     *\r\n     * Setting this to `false` will disable this behavior. Zooming in our out\r\n     * this axis will not reveal or hide zoom out button.\r\n     *\r\n     * @default true\r\n     * @since 4.6.2\r\n     * @param  value  Toggle zoom out button?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"toggleZoomOutButton\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   *\r\n   * @see {@link Tooltip}\r\n   */\n\n  Axis.prototype.hideTooltip = function (duration) {\n    _super.prototype.hideTooltip.call(this, duration);\n\n    this._tooltipPosition = undefined;\n  };\n  /**\r\n   * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n   *\r\n   * @param position Position (0-1)\r\n   * @param local or global position\r\n   */\n\n\n  Axis.prototype.showTooltipAtPosition = function (position, local) {\n    var tooltip = this._tooltip;\n\n    if (!tooltip || this.dataItems.length <= 0) {\n      this._tooltipPosition = undefined;\n    } else {\n      if (!local) {\n        position = this.toAxisPosition(position);\n      }\n\n      if (!$type.isNumber(position) || position < this.start || position > this.end) {\n        tooltip.hide(0);\n        this._tooltipPosition = undefined;\n        return;\n      }\n\n      var renderer = this.renderer; //@todo: think of how to solve this better\n\n      if (!tooltip.parent) {\n        tooltip.parent = this.tooltipContainer;\n      }\n\n      var tooltipLocation = renderer.tooltipLocation;\n      var startPosition = this.getCellStartPosition(position);\n      var endPosition = this.getCellEndPosition(position);\n\n      if (this.tooltipPosition == \"fixed\") {\n        position = startPosition + (endPosition - startPosition) * tooltipLocation;\n      }\n\n      position = $math.fitToRange(position, this.start, this.end);\n\n      if (this._tooltipPosition != position) {\n        this._tooltipPosition = position;\n        var tooltipLocation2 = renderer.tooltipLocation2;\n        var startPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\n        var endPoint = renderer.positionToPoint(endPosition, tooltipLocation2); // save values so cursor could use them\n\n        this.currentItemStartPoint = startPoint;\n        this.currentItemEndPoint = endPoint;\n\n        if (renderer.fullWidthTooltip) {\n          tooltip.width = endPoint.x - startPoint.x;\n          tooltip.height = endPoint.y - startPoint.y;\n        }\n\n        var point = renderer.positionToPoint(position, tooltipLocation2);\n        var globalPoint = $utils.spritePointToSvg(point, this.renderer.line);\n        tooltip.text = this.getTooltipText(position);\n\n        if (tooltip.text) {\n          tooltip.delayedPointTo(globalPoint);\n          tooltip.show();\n        }\n      }\n\n      if (!this.cursorTooltipEnabled || this.tooltip.disabled) {\n        tooltip.hide(0);\n      }\n    }\n  };\n  /**\r\n   * Converts relative position (0-1) to Axis position with zoom level and\r\n   * inversed taken into account.\r\n   *\r\n   * @param position Global position (0-1)\r\n   * @return Position within Axis (0-1)\r\n   */\n\n\n  Axis.prototype.toAxisPosition = function (position) {\n    position = this.renderer.toAxisPosition(position);\n\n    if (position == undefined) {\n      return;\n    }\n\n    position = position * (this.end - this.start);\n\n    if (this.renderer.inversed) {\n      position = this.end - position;\n    } else {\n      position = this.start + position;\n    }\n\n    return position;\n  };\n  /**\r\n   * Converts position on the axis with zoom level and\r\n   * inversed taken into account to global position.\r\n   *\r\n   * @param position Axis position (0-1)\r\n   * @return Global position (0-1)\r\n   */\n\n\n  Axis.prototype.toGlobalPosition = function (position) {\n    if (this.renderer.inversed) {\n      position = this.end - position;\n    } else {\n      position = position - this.start;\n    }\n\n    return position / (this.end - this.start);\n  };\n  /**\r\n   * Returns text to be used for cursor's Axis tooltip.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param position  Position coordinate (px)\r\n   * @return Label text\r\n   */\n\n\n  Axis.prototype.getTooltipText = function (position) {\n    return;\n  };\n  /**\r\n   * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n   * place.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param pointerOrientation  Pointer (stem) orientation\r\n   * @param boundingRectangle   A rectangle for tooltip to fit within\r\n   */\n\n\n  Axis.prototype.updateTooltip = function (pointerOrientation, boundingRectangle) {\n    var tooltip = this._tooltip;\n\n    if (tooltip) {\n      tooltip.fixDoc = false;\n      tooltip.pointerOrientation = pointerOrientation;\n      tooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\n    }\n  };\n  /**\r\n   * [roundPosition description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param position  Relative position\r\n   * @param location  Location on axis\r\n   * @return Rounded position\r\n   */\n\n\n  Axis.prototype.roundPosition = function (position, location, axisLocation) {\n    return position;\n  };\n  /**\r\n   * [getCellStartPosition description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param position [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getCellStartPosition = function (position) {\n    return position;\n  };\n  /**\r\n   * [getCellEndPosition description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param position [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getCellEndPosition = function (position) {\n    return position;\n  };\n\n  Object.defineProperty(Axis.prototype, \"axisRanges\", {\n    /**\r\n     * A list of axis ranges for this Axis.\r\n     *\r\n     * @return Axis ranges\r\n     */\n    get: function () {\n      if (!this._axisRanges) {\n        var dataItem = this.createDataItem();\n        dataItem.isRange = true;\n        dataItem.axisFill = this.renderer.axisFills.template.clone();\n        dataItem.grid = this.renderer.grid.template.clone();\n        dataItem.tick = this.renderer.ticks.template.clone();\n        dataItem.label = this.renderer.labels.template.clone();\n        dataItem.isTemplate = true;\n        dataItem.component = this;\n        dataItem.axisFill.disabled = false;\n        dataItem.tick.disabled = false;\n        dataItem.grid.disabled = false;\n        dataItem.label.disabled = false;\n        this._axisRanges = new ListTemplate(dataItem);\n\n        this._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\n\n        this._disposers.push(new ListDisposer(this._axisRanges));\n\n        this._disposers.push(this._axisRanges.template);\n      }\n\n      return this._axisRanges;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Decorates an axis range after it has been added to the axis range list.\r\n   *\r\n   * @param event Event\r\n   */\n\n  Axis.prototype.processAxisRange = function (event) {\n    var axisRange = event.newValue;\n    axisRange.component = this;\n    axisRange.isRange = true;\n  };\n\n  Object.defineProperty(Axis.prototype, \"axisBreaks\", {\n    /**\r\n     * A list of axis breaks on this Axis.\r\n     *\r\n     * @return Axis breaks.\r\n     */\n    get: function () {\n      if (!this._axisBreaks) {\n        this._axisBreaks = new SortedListTemplate(this.createAxisBreak(), function (a, b) {\n          return $number.order(a.adjustedStartValue, b.adjustedStartValue);\n        });\n\n        this._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\n\n        this._disposers.push(new ListDisposer(this._axisBreaks));\n\n        this._disposers.push(this._axisBreaks.template);\n      }\n\n      return this._axisBreaks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a new axis break.\r\n   *\r\n   * @return Axis break\r\n   */\n\n  Axis.prototype.createAxisBreak = function () {\n    return new AxisBreak();\n  };\n\n  Object.defineProperty(Axis.prototype, \"series\", {\n    /**\r\n     * A list of Series currently associated with this Axis.\r\n     *\r\n     * @return Series\r\n     */\n    get: function () {\n      if (!this._series) {\n        this._series = new List();\n      }\n\n      return this._series;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Processes Series' data items.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  Axis.prototype.processSeriesDataItems = function () {};\n  /**\r\n   * Processes Series' single data item.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem Data item\r\n   */\n\n\n  Axis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {};\n  /**\r\n   * Post-processes Serie's data items.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.postProcessSeriesDataItems = function (series) {};\n  /**\r\n   * Post-processes Serie's single data item.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem Data item\r\n   */\n\n\n  Axis.prototype.postProcessSeriesDataItem = function (dataItem) {}; //\n\n  /**\r\n   * Updates Axis based on all Series that might influence it.\r\n   *\r\n   * Called by Series after Series data is validated.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.updateAxisBySeries = function () {};\n  /**\r\n   * Hides unused data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Axis.prototype.hideUnusedDataItems = function () {\n    var _this = this; // hide all unused\n\n\n    var dataItemsIterator = this._dataItemsIterator;\n    dataItemsIterator.createNewItems = false;\n    $iter.each(dataItemsIterator.iterator(), function (dataItem) {\n      _this.validateDataElement(dataItem); // solves shrinking\n\n\n      dataItem.__disabled = true;\n    });\n    dataItemsIterator.clear();\n    dataItemsIterator.createNewItems = true;\n  };\n  /**\r\n   * Returns a Series' data item that corresponds to specific position on Axis.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param series    Series\r\n   * @param position  Position (0-1)\r\n   * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n   * @return Data item\r\n   */\n\n\n  Axis.prototype.getSeriesDataItem = function (series, position, findNearest) {\n    return;\n  };\n  /**\r\n   * Returns an angle that corresponds to specific position on axis.\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem  Data item\r\n   * @param key       ???\r\n   * @param location  Location\r\n   * @param stackKey  ???\r\n   * @return Angle\r\n   */\n\n\n  Axis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getX description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getX = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getX description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getY description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getY = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n  /**\r\n   * [getY description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param dataItem [description]\r\n   * @param key      [description]\r\n   * @param location [description]\r\n   * @param stackKey [description]\r\n   * @return [description]\r\n   */\n\n\n  Axis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\n    return;\n  };\n\n  Object.defineProperty(Axis.prototype, \"basePoint\", {\n    /**\r\n     * Coordinates of the actual axis start.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Base point coordinates\r\n     */\n    get: function () {\n      return {\n        x: 0,\n        y: 0\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * [dataChangeUpdate description]\r\n   *\r\n   * This is a placeholder to override for extending classes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n\n  Axis.prototype.dataChangeUpdate = function () {};\n  /**\r\n   * [dataChangeUpdate description]\r\n   *\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n\n\n  Axis.prototype.seriesDataChangeUpdate = function (series) {};\n  /**\r\n   * Removes axis breaks that fall between `min` and `max` (???)\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   * @param min  Start value\r\n   * @param max  End value\r\n   * @return Spread o\r\n   */\n\n\n  Axis.prototype.adjustDifference = function (min, max) {\n    var difference = max - min;\n\n    if ($type.isNumber(difference)) {\n      if (this._axisBreaks) {\n        $iter.eachContinue(this._axisBreaks.iterator(), function (axisBreak) {\n          var startValue = axisBreak.adjustedStartValue;\n          var endValue = axisBreak.adjustedEndValue;\n\n          if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\n            // breaks are sorted, we don't need go further anymore\n            if (startValue > max) {\n              return false;\n            }\n\n            if (endValue >= min) {\n              if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\n                var breakSize = axisBreak.breakSize;\n                var intersection = $math.intersection({\n                  start: startValue,\n                  end: endValue\n                }, {\n                  start: min,\n                  end: max\n                });\n\n                if (intersection) {\n                  difference -= (intersection.end - intersection.start) * (1 - breakSize);\n                }\n              }\n            }\n\n            return true;\n          }\n        });\n      }\n\n      return difference;\n    }\n  };\n  /**\r\n   * Checks if specific value falls within a break.\r\n   *\r\n   * Returns [[AxisBreak]] the value falls into.\r\n   *\r\n   * @param value  Value to check\r\n   * @return Axis break\r\n   */\n\n\n  Axis.prototype.isInBreak = function (value) {\n    if (this._axisBreaks) {\n      return $iter.find(this._axisBreaks.iterator(), function (axisBreak) {\n        return value >= axisBreak.adjustedStartValue && value <= axisBreak.adjustedEndValue;\n      });\n    }\n  };\n  /**\r\n   * [fixAxisBreaks description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   */\n\n\n  Axis.prototype.fixAxisBreaks = function () {\n    var _this = this;\n\n    if (this._axisBreaks) {\n      var axisBreaks = this._axisBreaks;\n\n      if (axisBreaks.length > 0) {\n        // first make sure that startValue is <= end value\n        // This needs to make a copy of axisBreaks because it mutates the list while traversing\n        // TODO very inefficient\n        $array.each($iter.toArray(axisBreaks.iterator()), function (axisBreak) {\n          var startValue = $math.min(axisBreak.startValue, axisBreak.endValue);\n          var endValue = $math.max(axisBreak.startValue, axisBreak.endValue);\n          axisBreak.adjustedStartValue = startValue;\n          axisBreak.adjustedEndValue = endValue;\n\n          _this._axisBreaks.update(axisBreak);\n        });\n        var firstAxisBreak = axisBreaks.first;\n        var previousEndValue_1 = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue); // process breaks\n        // TODO does this need to call axisBreaks.update ?\n\n        $iter.each(axisBreaks.iterator(), function (axisBreak) {\n          var startValue = axisBreak.adjustedStartValue;\n          var endValue = axisBreak.adjustedEndValue; // breaks can't overlap\n          // if break starts before previous break ends\n\n          if (startValue < previousEndValue_1) {\n            startValue = previousEndValue_1;\n\n            if (endValue < previousEndValue_1) {\n              endValue = previousEndValue_1;\n            }\n          }\n\n          axisBreak.adjustedStartValue = startValue;\n          axisBreak.adjustedEndValue = endValue;\n        });\n      }\n    }\n  };\n\n  Object.defineProperty(Axis.prototype, \"startIndex\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return [description]\r\n     */\n    get: function () {\n      return 0;\n    },\n\n    /**\r\n     * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n     *\r\n     * Yes, also for category axis, this helps to avoid jumping of categories\r\n     * while scrolling and does not do a lot of extra work as we use\r\n     * protected `_startIndex` and `_endIndex` when working with items.\r\n     *\r\n     * @hidden\r\n     */\n\n    /**\r\n     * [startIndex description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {},\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"endIndex\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this.dataItems.length;\n    },\n\n    /**\r\n     * [endIndex description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {},\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a formatted label based on position.\r\n   *\r\n   * Individual axis types should override this method to generate a label\r\n   * that is relevant to axis type.\r\n   *\r\n   * Please note that `position` represents position within axis which may be\r\n   * zoomed and not correspond to Cursor's `position`.\r\n   *\r\n   * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n   *\r\n   * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n   * @param position  Relative position on axis (0-1)\r\n   * @return Position label\r\n   */\n\n  Axis.prototype.getPositionLabel = function (position) {\n    return Math.round(position * 100) + \"%x\";\n  };\n\n  Object.defineProperty(Axis.prototype, \"chart\", {\n    /**\r\n     * @return Chart\r\n     */\n    get: function () {\n      return this._chart;\n    },\n\n    /**\r\n     * A Chart this Axis belongs to.\r\n     *\r\n     * @param value  Chart\r\n     */\n    set: function (value) {\n      this._chart = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a data item for a Series range.\r\n   *\r\n   * @param series  Target Series\r\n   * @return Range data item\r\n   */\n\n  Axis.prototype.createSeriesRange = function (series) {\n    var range = this.axisRanges.create();\n    range.component = this;\n    range.axisFill = this.renderer.axisFills.template.clone();\n    range.axisFill.disabled = false;\n    range.axisFill.fillOpacity = 0;\n    range.grid = this.renderer.grid.template.clone();\n    range.grid.disabled = true;\n    range.tick = this.renderer.ticks.template.clone();\n    range.tick.disabled = true;\n    range.label = this.renderer.labels.template.clone();\n    range.label.disabled = true;\n    range.addDisposer(new Disposer(function () {\n      series.axisRanges.removeValue(range);\n    }));\n    series.axisRanges.push(range);\n    return range;\n  };\n  /**\r\n   * Copies all properties and related data from a different instance of Axis.\r\n   *\r\n   * @param source Source Axis\r\n   */\n\n\n  Axis.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.renderer) {\n      this.renderer.copyFrom(source.renderer);\n    } else {\n      if (source.renderer) {\n        this.renderer = source.renderer.clone();\n\n        this._disposers.push(this.renderer);\n      }\n    }\n\n    if (source.title) {\n      if (!this.title) {\n        this.title = source.title.clone();\n        this.title.parent = this;\n      } else {\n        this.title.copyFrom(source.title);\n      }\n\n      this._disposers.push(this.title);\n    }\n  };\n  /**\r\n   * Resets internal iterator.\r\n   */\n\n\n  Axis.prototype.resetIterators = function () {\n    this._dataItemsIterator.reset();\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n\n  Axis.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up axis ranges\n      if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\n        for (var i = 0, len = config.axisRanges.length; i < len; i++) {\n          var range = config.axisRanges[i]; // If `series` is set, we know it's a series range\n\n          if ($type.hasValue(range[\"series\"])) {\n            if ($type.isString(range[\"series\"])) {\n              if (this.map.hasKey(range[\"series\"])) {\n                //range[\"series\"] = this.map.getKey(range[\"series\"]);\n                config.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\n                delete range[\"series\"];\n                config.axisRanges[i].config = range;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Ordering function used in JSON setup.\r\n   *\r\n   * @param a  Item A\r\n   * @param b  Item B\r\n   * @return Order\r\n   */\n\n\n  Axis.prototype.configOrder = function (a, b) {\n    if (a == b) {\n      return 0;\n    } // last\n    else if (a == \"title\") {\n      return 1;\n    } else if (b == \"title\") {\n      return -1;\n    } // first\n    else if (a == \"component\") {\n      return -1;\n    } else if (b == \"component\") {\n      return 1;\n    } else {\n      return _super.prototype.configOrder.call(this, a, b);\n    }\n  };\n\n  Object.defineProperty(Axis.prototype, \"startLocation\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startLocation\");\n    },\n\n    /**\r\n     * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n     *\r\n     * * 0 - Full first cell is shown.\r\n     * * 0.5 - Half of first cell is shown.\r\n     * * 1 - None of the first cell is visible. (you probably don't want that)\r\n     *\r\n     * @param value Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"startLocation\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"endLocation\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endLocation\");\n    },\n\n    /**\r\n     * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n     *\r\n     * * 0 - None of the last cell is shown. (don't do that)\r\n     * * 0.5 - Half of the last cell is shown.\r\n     * * 1 - Full last cell is shown.\r\n     *\r\n     * @param value Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"endLocation\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Axis.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n\n    if (this.renderer) {\n      this.renderer.gridContainer.disabled = value;\n    }\n\n    return changed;\n  };\n\n  Object.defineProperty(Axis.prototype, \"title\", {\n    /**\r\n     * @return Title label\r\n     */\n    get: function () {\n      return this._title;\n    },\n\n    /**\r\n     * A reference to a [[Label]] element which serves as a title to the axis.\r\n     *\r\n     * When axis is created it aleready has an element, so you can just modify\r\n     * it.\r\n     *\r\n     * Or you can replace it with your own instance of `Label`.\r\n     *\r\n     * @param  value  Title label\r\n     */\n    set: function (value) {\n      if (this._title && this._title != value) {\n        this._title.dispose();\n      }\n\n      if (value) {\n        this._title = value;\n        value.parent = this;\n        value.shouldClone = false;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"hideTooltipWhileZooming\", {\n    /**\r\n     * @return Hide tooltip while zooming?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"hideTooltipWhileZooming\");\n    },\n\n    /**\r\n     * Indicates if axis' tooltip should be hidden while axis range is animating\r\n     * (zooming)\r\n     *\r\n     * @default true\r\n     * @since 4.7.16\r\n     * @param  value  Hide tooltip while zooming?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"hideTooltipWhileZooming\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Axis.prototype, \"zoomable\", {\n    /**\r\n     * @return Zoomable?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"zoomable\");\n    },\n\n    /**\r\n     * Should the axis be zoomed with scrollbar/cursor?\r\n     *\r\n     * @default true\r\n     * @since 4.9.28\r\n     * @param  value  Zoomable?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"zoomable\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Axis;\n}(Component);\n\nexport { Axis };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Axis\"] = Axis;\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\n/**\r\n * Add default responsive rules\r\n */\n\n/**\r\n * Disable axis tooltips.\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.maybeXS,\n  state: function (target, stateId) {\n    if (target instanceof Axis && target.tooltip) {\n      var state = target.states.create(stateId);\n      state.properties.cursorTooltipEnabled = false;\n      return state;\n    }\n\n    return null;\n  }\n});","map":{"version":3,"names":["__extends","Component","Container","DataItem","AxisBreak","Label","Tooltip","SortedListTemplate","List","ListTemplate","ListDisposer","Disposer","MultiDisposer","registry","InterfaceColorSet","$iter","$math","$utils","$number","$array","$type","defaultRules","ResponsiveBreakpoints","AxisDataItem","_super","_this","call","className","applyTheme","Object","defineProperty","prototype","get","_grid","component_1","component","template","grid_1","isRange","axisRanges","grid","disabled","clone","renderer","create","_disposers","push","removeValue","shouldClone","axis","set","remove","sprites","dataItem","undefined","addSprite","enumerable","configurable","_tick","component_2","tick_1","tick","ticks","_label","component_3","label_1","label","labels","virtualParent","_axisFill","component_4","axisFill_1","axisFill","isTemplate","axisFills","_text","text","_mask","_contents","contents","isMeasured","mask","createFill","_axisBreak","axisBreak","dataItems","validate","validateDataElement","appendChildren","appendDataItem","hasProperty","prop","copyFrom","source","bullet","minPosition","maxPosition","setVisibility","value","noChangeValues","visible","_bullet","AxisItemLocation","Axis","_gridCount","_series","autoDispose","_axisItemCount","constructor","Error","hideTooltipWhileZooming","minWidth","minHeight","setPropertyValue","toggleZoomOutButton","zoomable","interfaceColors","title","_dataItemsIterator","ListIterator","createNewItems","tooltip","padding","background","pointerLength","fitPointerToBounds","filters","clear","cornerRadius","fill","getFor","stroke","strokeWidth","fillOpacity","readerHidden","events","on","series","each","hide","preventShow","fillRule","index","isNumber","Math","round","__disabled","opacity","createDataItem","invalidateLayout","iterator","invalidateSeries","invalidate","validateDataElements","ghostLabel","updateLabelElement","start","end","updateGridCount","gridCount","axisLength","minGridDistance","clearCache","validateLayout","axisFullLength","updateAxisLine","updateTooltip","updateBaseGridElement","_prevLength","dispatchImmediately","initRenderer","above","parent","bulletsContainer","gridContainer","updateGridContainer","validateAxisRanges","axisRange","validateBreaks","_axisBreaks","processBreak","event","newValue","breakContainer","registerSeries","moveValue","createMask","_renderer","chart","ghostLabel_1","strokeOpacity","interactionsEnabled","positionToAngle","position","pointToPosition","point","positionToCoordinate","getAnyRangePath","getPositionRangePath","anyToPosition","anyToPoint","x","y","angle","startPosition","endPosition","getPropertyValue","hideTooltip","duration","_tooltipPosition","showTooltipAtPosition","local","_tooltip","length","toAxisPosition","tooltipContainer","tooltipLocation","getCellStartPosition","getCellEndPosition","tooltipPosition","fitToRange","tooltipLocation2","startPoint","positionToPoint","endPoint","currentItemStartPoint","currentItemEndPoint","fullWidthTooltip","width","height","globalPoint","spritePointToSvg","line","getTooltipText","delayedPointTo","show","cursorTooltipEnabled","inversed","toGlobalPosition","pointerOrientation","boundingRectangle","fixDoc","setBounds","spriteRectToSvg","roundPosition","location","axisLocation","_axisRanges","processAxisRange","createAxisBreak","a","b","order","adjustedStartValue","processSeriesDataItems","processSeriesDataItem","axisLetter","postProcessSeriesDataItems","postProcessSeriesDataItem","updateAxisBySeries","hideUnusedDataItems","dataItemsIterator","getSeriesDataItem","findNearest","getAngle","key","stackKey","range","getX","getPositionX","getY","getPositionY","dataChangeUpdate","seriesDataChangeUpdate","adjustDifference","min","max","difference","eachContinue","startValue","endValue","adjustedEndValue","breakSize","intersection","isInBreak","find","fixAxisBreaks","axisBreaks","toArray","update","firstAxisBreak","first","previousEndValue_1","getPositionLabel","_chart","createSeriesRange","addDisposer","resetIterators","reset","processConfig","config","hasValue","isArray","i","len","isString","map","hasKey","getKey","configOrder","setDisabled","changed","_title","dispose","registeredClasses","relevant","maybeXS","state","target","stateId","states","properties"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js"],"sourcesContent":["/**\r\n * Base class for all Axis\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Component } from \"../../core/Component\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { DataItem } from \"../../core/DataItem\";\r\nimport { AxisBreak } from \"./AxisBreak\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Tooltip } from \"../../core/elements/Tooltip\";\r\nimport { SortedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { List, ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Disposer, MultiDisposer } from \"../../core/utils/Disposer\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $number from \"../../core/utils/Number\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Axis]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar AxisDataItem = /** @class */ (function (_super) {\r\n    __extends(AxisDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisDataItem.prototype, \"grid\", {\r\n        /**\r\n         * @return Grid element\r\n         */\r\n        get: function () {\r\n            if (!this._grid) {\r\n                var component_1 = this.component;\r\n                if (component_1) {\r\n                    var template = void 0;\r\n                    var grid_1;\r\n                    if (this.isRange) {\r\n                        template = component_1.axisRanges.template.grid;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            grid_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_1.renderer.grid.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            grid_1 = component_1.renderer.grid.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_1.renderer.grid.removeValue(grid_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.grid = grid_1;\r\n                    grid_1.shouldClone = false;\r\n                    this._disposers.push(grid_1);\r\n                    grid_1.axis = this.component;\r\n                }\r\n            }\r\n            return this._grid;\r\n        },\r\n        /**\r\n         * A [[Grid]] element associated with this data item.\r\n         *\r\n         * If there is no grid element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param grid  Grid element\r\n         */\r\n        set: function (grid) {\r\n            if (this._grid && this._grid != grid) {\r\n                $array.remove(this.sprites, this._grid);\r\n                this._grid.dataItem = undefined;\r\n            }\r\n            if (grid) {\r\n                if (grid.dataItem && grid.dataItem != this) {\r\n                    $array.remove(grid.dataItem.sprites, grid);\r\n                    grid.dataItem.grid = undefined;\r\n                }\r\n                this.addSprite(grid);\r\n            }\r\n            this._grid = grid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"tick\", {\r\n        /**\r\n         * @return Tick element\r\n         */\r\n        get: function () {\r\n            if (!this._tick) {\r\n                var component_2 = this.component;\r\n                if (component_2) {\r\n                    var template = void 0;\r\n                    var tick_1;\r\n                    if (this.isRange) {\r\n                        template = component_2.axisRanges.template.tick;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            tick_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_2.renderer.ticks.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            tick_1 = component_2.renderer.ticks.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_2.renderer.ticks.removeValue(tick_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.tick = tick_1;\r\n                    tick_1.axis = this.component;\r\n                    tick_1.shouldClone = false;\r\n                    this._disposers.push(tick_1);\r\n                }\r\n            }\r\n            return this._tick;\r\n        },\r\n        /**\r\n         * An [[AxisTick]] element associated with this data item.\r\n         *\r\n         * If there is no tick element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param tick  Tick element\r\n         */\r\n        set: function (tick) {\r\n            if (this._tick && this._tick != tick) {\r\n                $array.remove(this.sprites, this._tick);\r\n                this._tick.dataItem = undefined;\r\n            }\r\n            if (tick) {\r\n                if (tick.dataItem && tick.dataItem != this) {\r\n                    $array.remove(tick.dataItem.sprites, tick);\r\n                    tick.dataItem.tick = undefined;\r\n                }\r\n                this.addSprite(tick);\r\n            }\r\n            this._tick = tick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"label\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            if (!this._label) {\r\n                var component_3 = this.component;\r\n                if (component_3) {\r\n                    var template = void 0;\r\n                    var label_1;\r\n                    if (this.isRange) {\r\n                        template = component_3.axisRanges.template.label;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            label_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_3.renderer.labels.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            label_1 = component_3.renderer.labels.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_3.renderer.labels.removeValue(label_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this._disposers.push(label_1);\r\n                    this.label = label_1;\r\n                    label_1.shouldClone = false;\r\n                    label_1.axis = this.component;\r\n                    label_1.virtualParent = component_3;\r\n                }\r\n            }\r\n            return this._label;\r\n        },\r\n        /**\r\n         * An [[AxisLabel]] element associated with this data item.\r\n         *\r\n         * If there is no label element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param label Label element\r\n         */\r\n        set: function (label) {\r\n            if (this._label && this._label != label) {\r\n                $array.remove(this.sprites, this._label);\r\n                this._label.dataItem = undefined;\r\n            }\r\n            if (label) {\r\n                if (label.dataItem && label.dataItem != this) {\r\n                    $array.remove(label.dataItem.sprites, label);\r\n                    label.dataItem.label = undefined;\r\n                }\r\n                this.addSprite(label);\r\n            }\r\n            this._label = label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"axisFill\", {\r\n        /**\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            if (!this._axisFill) {\r\n                var component_4 = this.component;\r\n                if (component_4) {\r\n                    var template = void 0;\r\n                    var axisFill_1;\r\n                    if (this.isRange) {\r\n                        template = component_4.axisRanges.template.axisFill;\r\n                        if (!this.isTemplate && template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            axisFill_1 = template.clone();\r\n                        }\r\n                    }\r\n                    else {\r\n                        template = component_4.renderer.axisFills.template;\r\n                        if (template.disabled) {\r\n                            return;\r\n                        }\r\n                        else {\r\n                            axisFill_1 = component_4.renderer.axisFills.create();\r\n                            this._disposers.push(new Disposer(function () {\r\n                                component_4.renderer.axisFills.removeValue(axisFill_1);\r\n                            }));\r\n                        }\r\n                    }\r\n                    this.axisFill = axisFill_1;\r\n                    axisFill_1.shouldClone = false;\r\n                    this._disposers.push(axisFill_1);\r\n                }\r\n            }\r\n            return this._axisFill;\r\n        },\r\n        /**\r\n         * An [[AxisFill]] associated element with this data item.\r\n         *\r\n         * If there is no fill element associated with data item, a new one is\r\n         * created and returned.\r\n         *\r\n         * @param label Label element\r\n         */\r\n        set: function (axisFill) {\r\n            if (this._axisFill && this._axisFill != axisFill) {\r\n                $array.remove(this.sprites, this._axisFill);\r\n                this._axisFill.dataItem = undefined;\r\n            }\r\n            if (axisFill) {\r\n                if (axisFill.dataItem && axisFill.dataItem != this) {\r\n                    $array.remove(axisFill.dataItem.sprites, axisFill);\r\n                    axisFill.dataItem.axisFill = undefined;\r\n                }\r\n                axisFill.axis = this.component;\r\n                this.addSprite(axisFill);\r\n            }\r\n            this._axisFill = axisFill;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"text\", {\r\n        /**\r\n         * @return Text label\r\n         */\r\n        get: function () {\r\n            return this._text;\r\n        },\r\n        /**\r\n         * Text to be used as data item's label.\r\n         *\r\n         * @param text Text label\r\n         */\r\n        set: function (text) {\r\n            this._text = text;\r\n            if (this._label) { // do not use getter, it will create unwanted instances!\r\n                this._label.text = text;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"mask\", {\r\n        /**\r\n         * Data item's mask.\r\n         *\r\n         * @return Mask\r\n         */\r\n        get: function () {\r\n            return this._mask;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"contents\", {\r\n        /**\r\n         * Returns a [[Container]] to place all visual elements, related to data item\r\n         * in.\r\n         *\r\n         * If there is no Container, a new one is created.\r\n         *\r\n         * @return Contents container\r\n         */\r\n        get: function () {\r\n            if (!this._contents) {\r\n                var contents = new Container();\r\n                this.addSprite(contents);\r\n                contents.isMeasured = false;\r\n                this._contents = contents;\r\n                var component = this.component;\r\n                if (component) {\r\n                    var mask = component.renderer.createFill(this.component);\r\n                    mask.disabled = false;\r\n                    mask.axis = component;\r\n                    this.addSprite(mask);\r\n                    this._mask = mask;\r\n                    contents.mask = mask;\r\n                }\r\n            }\r\n            return this._contents;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisDataItem.prototype, \"axisBreak\", {\r\n        /**\r\n         * @return Axis break\r\n         */\r\n        get: function () {\r\n            return this._axisBreak;\r\n        },\r\n        /**\r\n         * An [[AxisBreak]] this data item falls within.\r\n         *\r\n         * @param axisBreak Axis break\r\n         */\r\n        set: function (axisBreak) {\r\n            if (this._axisBreak) {\r\n                this._axisBreak.dataItems.removeValue(this);\r\n            }\r\n            if (axisBreak) {\r\n                axisBreak.dataItems.push(this);\r\n            }\r\n            this._axisBreak = axisBreak;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Re-draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisDataItem.prototype.validate = function () {\r\n        if (this.component) {\r\n            this.component.validateDataElement(this);\r\n        }\r\n    };\r\n    /**\r\n     * Appends data item's elements to the parent [[Container]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisDataItem.prototype.appendChildren = function () {\r\n        if (this.component) {\r\n            this.component.appendDataItem(this);\r\n        }\r\n    };\r\n    /**\r\n     * Checks if data item has particular property set.\r\n     *\r\n     * @param prop  Property name\r\n     * @return Property set?\r\n     */\r\n    AxisDataItem.prototype.hasProperty = function (prop) {\r\n        return prop == \"component\" ? true : _super.prototype.hasProperty.call(this, prop);\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[AxisDataItem]].\r\n     *\r\n     * @param source Source AxisDataItem\r\n     */\r\n    AxisDataItem.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.text = source.text;\r\n        if (source.bullet) {\r\n            this.bullet = source.bullet.clone();\r\n        }\r\n        this.minPosition = source.minPosition;\r\n        this.maxPosition = source.maxPosition;\r\n    };\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    AxisDataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        _super.prototype.setVisibility.call(this, value, noChangeValues);\r\n        if (this._contents) {\r\n            this._contents.visible = value;\r\n        }\r\n    };\r\n    Object.defineProperty(AxisDataItem.prototype, \"bullet\", {\r\n        /**\r\n         * @return Bullet\r\n         */\r\n        get: function () {\r\n            return this._bullet;\r\n        },\r\n        /**\r\n         * Set it to an instance of any [[Sprite]]. It will be displayed as an axis\r\n         * bullet in the middle of the cell, or specific value.\r\n         *\r\n         * If you need position bullet relatively to the cell, use [[AxisBullet]]\r\n         * instead. It has a `location` property which can be used to indicate\r\n         * precise relative location within cell/range.\r\n         *\r\n         * Also, [[AxisBullet]] is a [[Container]] so you can push any other element\r\n         * into it.\r\n         *\r\n         * NOTE: `location` is relative to the parent axis range's scope, i.e.\r\n         * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`\r\n         * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).\r\n         *\r\n         * ```TypeScript\r\n         * let range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         *\r\n         * let flag = new am4plugins_bullets.FlagBullet();\r\n         * flag.label.text = \"Hello\";\r\n         *\r\n         * range.bullet = flag;\r\n         * ```\r\n         * ```JavaScript\r\n         * var range = dateAxis.axisRanges.create();\r\n         * range.date = new Date(2018, 0, 5);\r\n         *\r\n         * var flag = new am4plugins_bullets.FlagBullet();\r\n         * flag.label.text = \"Hello\";\r\n         *\r\n         * range.bullet = flag;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     // ...\r\n         *     \"axisRanges\": [{\r\n         *       \"date\": new Date(2018, 0, 5),\r\n         *       \"bullet: {\r\n         *         \"type\": \"FlagBullet\",\r\n         *         \"label\": {\r\n         *           \"text\": \"Hello\"\r\n         *         }\r\n         *       }\r\n         *     }]\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.5.9\r\n         * @param  value  Bullet\r\n         */\r\n        set: function (value) {\r\n            if (this._bullet && this._bullet != value) {\r\n                $array.remove(this.sprites, this._bullet);\r\n                this._bullet.dataItem = undefined;\r\n            }\r\n            this._bullet = value;\r\n            if (value) {\r\n                this.addSprite(value);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return AxisDataItem;\r\n}(DataItem));\r\nexport { AxisDataItem };\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines named positions for data item's location within [[Axis]].\r\n */\r\nexport var AxisItemLocation;\r\n(function (AxisItemLocation) {\r\n    AxisItemLocation[AxisItemLocation[\"Start\"] = 0] = \"Start\";\r\n    AxisItemLocation[AxisItemLocation[\"Middle\"] = 0.5] = \"Middle\";\r\n    AxisItemLocation[AxisItemLocation[\"End\"] = 1] = \"End\";\r\n})(AxisItemLocation || (AxisItemLocation = {}));\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all Axis elements.\r\n *\r\n * @see {@link IAxisEvents} for a list of available Events\r\n * @see {@link IAxisAdapters} for a list of available Adapters\r\n */\r\nvar Axis = /** @class */ (function (_super) {\r\n    __extends(Axis, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Axis() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * Number of Grid elements on the axis.\r\n         */\r\n        _this._gridCount = 10;\r\n        /**\r\n         * A list of [[XYSeries]] that are using this Axis.\r\n         */\r\n        _this._series = new List();\r\n        /**\r\n         * Specifies if axis should be automatically disposed when removing from\r\n         * chart's axis list.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.autoDispose = true;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._axisItemCount = 0;\r\n        if (_this.constructor === Axis) {\r\n            throw new Error(\"'Axis' cannot be instantiated directly. Please use a specific axis type.\");\r\n        }\r\n        _this.hideTooltipWhileZooming = true;\r\n        _this.minWidth = 0.0001;\r\n        _this.minHeight = 0.0001;\r\n        _this.className = \"Axis\";\r\n        _this.shouldClone = false;\r\n        _this.setPropertyValue(\"cursorTooltipEnabled\", true);\r\n        _this.toggleZoomOutButton = true;\r\n        _this.zoomable = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        // Create title\r\n        _this.title = new Label();\r\n        _this.title.shouldClone = false;\r\n        _this._disposers.push(_this.title);\r\n        _this.setPropertyValue(\"startLocation\", 0);\r\n        _this.setPropertyValue(\"endLocation\", 1);\r\n        // Data item iterator\r\n        _this._dataItemsIterator = new $iter.ListIterator(_this.dataItems, function () { return _this.dataItems.create(); });\r\n        _this._dataItemsIterator.createNewItems = true;\r\n        // Create tooltip\r\n        var tooltip = new Tooltip();\r\n        _this._disposers.push(tooltip);\r\n        tooltip.label.padding(5, 10, 5, 10);\r\n        tooltip.background.pointerLength = 5;\r\n        tooltip.fitPointerToBounds = true;\r\n        tooltip.background.filters.clear();\r\n        // Set virtual parentfor the tooltip so that it can properly inheirt\r\n        // formatters from the axis.\r\n        tooltip.virtualParent = _this;\r\n        // Create background element for the tooltip\r\n        var background = tooltip.background;\r\n        background.cornerRadius = 0;\r\n        background.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        background.stroke = background.fill;\r\n        background.strokeWidth = 1;\r\n        background.fillOpacity = 1;\r\n        tooltip.label.fill = interfaceColors.getFor(\"alternativeText\");\r\n        _this.tooltip = tooltip;\r\n        // Accessibility\r\n        _this.readerHidden = true;\r\n        _this.events.on(\"rangechangestarted\", function () {\r\n            _this.series.each(function (series) {\r\n                if (series.hideTooltipWhileZooming) {\r\n                    series.tooltip.hide();\r\n                    series.tooltip.preventShow = true;\r\n                }\r\n            });\r\n            if (_this.hideTooltipWhileZooming) {\r\n                _this.tooltip.hide();\r\n                _this.tooltip.preventShow = true;\r\n            }\r\n        }, undefined, false);\r\n        _this.events.on(\"rangechangeended\", function () {\r\n            _this.series.each(function (series) {\r\n                if (series.hideTooltipWhileZooming) {\r\n                    series.tooltip.hide();\r\n                    series.tooltip.preventShow = false;\r\n                }\r\n            });\r\n            if (_this.hideTooltipWhileZooming) {\r\n                _this.tooltip.hide();\r\n                _this.tooltip.preventShow = false;\r\n            }\r\n        }, undefined, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Holds reference to a function that accepts a DataItem and its index as\r\n     * parameters.\r\n     *\r\n     * It can either return a fill opacity for a fill, or manipulate data item\r\n     * directly, to create various highlighting scenarios.\r\n     *\r\n     * For example, you can set it up to highlight only weekends on a\r\n     * [[DateAxis]].\r\n     */\r\n    Axis.prototype.fillRule = function (dataItem, index) {\r\n        if (!$type.isNumber(index)) {\r\n            index = dataItem.index;\r\n        }\r\n        if (index / 2 == Math.round(index / 2)) {\r\n            dataItem.axisFill.__disabled = true;\r\n            dataItem.axisFill.opacity = 0;\r\n        }\r\n        else {\r\n            dataItem.axisFill.opacity = 1;\r\n            dataItem.axisFill.__disabled = false;\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    Axis.prototype.createDataItem = function () {\r\n        return new AxisDataItem();\r\n    };\r\n    /**\r\n     * Invalidates layout.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.invalidateLayout = function () {\r\n        _super.prototype.invalidateLayout.call(this);\r\n        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.invalidateLayout();\r\n        });\r\n    };\r\n    /**\r\n     * Invalidates series of this axis.\r\n     */\r\n    Axis.prototype.invalidateSeries = function () {\r\n        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            series.invalidate();\r\n        });\r\n    };\r\n    /**\r\n     * Override to cancel super call for data element validation.\r\n     * @ignore\r\n     */\r\n    Axis.prototype.validateDataElements = function () {\r\n        this._axisItemCount = 0;\r\n        if (this.ghostLabel) {\r\n            this.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);\r\n            this.ghostLabel.validate();\r\n        }\r\n    };\r\n    /**\r\n     * Recalculates the number of grid items on the axis.\r\n     */\r\n    Axis.prototype.updateGridCount = function () {\r\n        if (this.renderer) {\r\n            var gridCount = this.axisLength / this.renderer.minGridDistance;\r\n            if (gridCount != this._gridCount) {\r\n                this._gridCount = gridCount;\r\n                this.clearCache();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Redraws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateLayout = function () {\r\n        this.axisFullLength = this.axisLength / (this.end - this.start);\r\n        _super.prototype.validateLayout.call(this);\r\n        this.updateGridCount();\r\n        var renderer = this.renderer;\r\n        if (renderer) {\r\n            renderer.updateAxisLine();\r\n            renderer.updateTooltip();\r\n            renderer.updateBaseGridElement();\r\n        }\r\n        if (this._prevLength != this.axisLength) {\r\n            this.dispatchImmediately(\"lengthchanged\");\r\n            this._prevLength = this.axisLength;\r\n        }\r\n    };\r\n    /**\r\n     * Initializes Axis' renderer.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.initRenderer = function () {\r\n    };\r\n    /**\r\n     * Adds a data item to the Axis.\r\n     *\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.appendDataItem = function (dataItem) {\r\n        var renderer = this.renderer;\r\n        var tick = dataItem.tick;\r\n        if (tick) {\r\n            if (tick.above) {\r\n                tick.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                tick.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        if (dataItem.label) {\r\n            dataItem.label.parent = renderer;\r\n        }\r\n        var axisFill = dataItem.axisFill;\r\n        if (axisFill) {\r\n            if (axisFill.above) {\r\n                axisFill.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                axisFill.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        var grid = dataItem.grid;\r\n        if (grid) {\r\n            if (grid.above) {\r\n                grid.parent = renderer.bulletsContainer;\r\n            }\r\n            else {\r\n                grid.parent = renderer.gridContainer;\r\n            }\r\n        }\r\n        if (dataItem.bullet) {\r\n            dataItem.bullet.parent = renderer.bulletsContainer;\r\n        }\r\n    };\r\n    /**\r\n     * Redraws Axis' related items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this.validateLayout();\r\n        this.renderer.updateGridContainer();\r\n    };\r\n    /**\r\n     * Redars Axis ranges.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateAxisRanges = function () {\r\n        var _this = this;\r\n        $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n            _this.appendDataItem(axisRange);\r\n            _this.validateDataElement(axisRange);\r\n            if (axisRange.grid) {\r\n                axisRange.grid.validate();\r\n            }\r\n            if (axisRange.tick) {\r\n                axisRange.tick.validate();\r\n            }\r\n            if (axisRange.axisFill) {\r\n                axisRange.axisFill.validate();\r\n            }\r\n            if (axisRange.label) {\r\n                axisRange.label.validate();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invalidates all axis breaks, so they are redrawn.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.validateBreaks = function () {\r\n        if (this._axisBreaks) {\r\n            $iter.each(this._axisBreaks.iterator(), function (axisBreak) {\r\n                axisBreak.invalidate();\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Associates an Axis break with this Axis, after it is inserted into\r\n     * `axisBreaks`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event Event\r\n     */\r\n    Axis.prototype.processBreak = function (event) {\r\n        var axisBreak = event.newValue;\r\n        axisBreak.parent = this.renderer.breakContainer;\r\n        axisBreak.axis = this;\r\n    };\r\n    /**\r\n     * Registers a [[XYSeries]] element with this Axis.\r\n     *\r\n     * Returns a [[Disposer]] for all events, added to Series for watching\r\n     * changes in Axis, and vice versa.\r\n     * @ignore\r\n     * @param series  Series\r\n     * @return Event disposer\r\n     */\r\n    Axis.prototype.registerSeries = function (series) {\r\n        var _this = this;\r\n        this.series.moveValue(series);\r\n        return new MultiDisposer([\r\n            new Disposer(function () {\r\n                _this.series.removeValue(series);\r\n            }),\r\n            this.events.on(\"lengthchanged\", series.invalidate, series, false),\r\n            this.events.on(\"lengthchanged\", series.createMask, series, false),\r\n            this.events.on(\"startchanged\", series.invalidate, series, false),\r\n            this.events.on(\"endchanged\", series.invalidate, series, false),\r\n        ]);\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"renderer\", {\r\n        /**\r\n         * @return Renderer\r\n         */\r\n        get: function () {\r\n            return this._renderer;\r\n        },\r\n        /**\r\n         * An [[AxisRenderer]] to be used to render this Axis.\r\n         *\r\n         * Please note that most of the settings, related to Axis' appearance are set\r\n         * via its renderer. Not directly on the Axis.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * axis.renderer.inside = true;\r\n         * axis.renderer.minLabelPosition = 0.1;\r\n         * axis.renderer.maxLabelPosition = 0.9;\r\n         * ```\r\n         * ```JavaScript\r\n         * axis.renderer.inside = true;\r\n         * axis.renderer.minLabelPosition = 0.1;\r\n         * axis.renderer.maxLabelPosition = 0.9;\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info\r\n         * @param renderer  Renderer\r\n         */\r\n        set: function (renderer) {\r\n            if (renderer != this._renderer) {\r\n                this._renderer = renderer;\r\n                renderer.chart = this.chart;\r\n                renderer.axis = this;\r\n                renderer.parent = this;\r\n                this.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only\r\n                this.initRenderer();\r\n                this._disposers.push(renderer.gridContainer.events.on(\"maxsizechanged\", this.invalidate, this, false));\r\n                var ghostLabel_1 = this.renderer.labels.create();\r\n                this._disposers.push(ghostLabel_1);\r\n                ghostLabel_1.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail\r\n                ghostLabel_1.text = \"L\";\r\n                ghostLabel_1.parent = this.renderer;\r\n                ghostLabel_1.shouldClone = false;\r\n                ghostLabel_1.fillOpacity = 0;\r\n                ghostLabel_1.opacity = 0;\r\n                ghostLabel_1.strokeOpacity = 0;\r\n                ghostLabel_1.interactionsEnabled = false;\r\n                ghostLabel_1.validate();\r\n                this.ghostLabel = ghostLabel_1;\r\n                this.events.on(\"beforedatavalidated\", function () {\r\n                    ghostLabel_1.text = \"L\";\r\n                }, undefined, false);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts a relative position to angle. (for circular axes)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @return Angle\r\n     */\r\n    Axis.prototype.positionToAngle = function (position) {\r\n        return this.renderer.positionToAngle(position);\r\n    };\r\n    /**\r\n     * Converts pixel coordinates to a relative position. (0-1)\r\n     *\r\n     * @param point  Coorinates (px)\r\n     * @return Position (0-1)\r\n     */\r\n    Axis.prototype.pointToPosition = function (point) {\r\n        return this.renderer.pointToPosition(point);\r\n    };\r\n    /**\r\n     * Converts relative position to coordinate.\r\n     *\r\n     * @since 4.7.15\r\n     * @param position (0-1)\r\n     * @return coordinate (px)\r\n     */\r\n    Axis.prototype.positionToCoordinate = function (position) {\r\n        return this.renderer.positionToCoordinate(position);\r\n    };\r\n    /**\r\n     * [getAnyRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param start  [description]\r\n     * @param end    [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getAnyRangePath = function (start, end) {\r\n        return this.renderer.getPositionRangePath(start, end);\r\n    };\r\n    /**\r\n     * Converts any positional parameter to a relative position on axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @param value  Pisition\r\n     * @return Position (0-1)\r\n     */\r\n    Axis.prototype.anyToPosition = function (value) {\r\n        return 0;\r\n    };\r\n    /**\r\n     * Converts any positional parameter to a relative position on axis.\r\n     *\r\n     * @todo Description (review)\r\n     * @param value  Pisition\r\n     * @return Orientation point\r\n     */\r\n    Axis.prototype.anyToPoint = function (value) {\r\n        return { x: 0, y: 0, angle: 0 };\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition [description]\r\n     * @param endPosition   [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        if (this.renderer) {\r\n            return this.renderer.getPositionRangePath(startPosition, endPosition);\r\n        }\r\n        return \"\";\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisLength\", {\r\n        /**\r\n         * Actual axis length in pixels.\r\n         *\r\n         * @return Axis length (px)\r\n         */\r\n        get: function () {\r\n            if (this.renderer) {\r\n                return this.renderer.axisLength;\r\n            }\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"cursorTooltipEnabled\", {\r\n        /**\r\n         * @return Display tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorTooltipEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if axis should display a tooltip for chart's cursor.\r\n         *\r\n         * @param value Display tooltip?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cursorTooltipEnabled\", value)) {\r\n                if (value && this.renderer) {\r\n                    this.renderer.updateTooltip();\r\n                }\r\n                else if (this.tooltip) {\r\n                    this.tooltip.hide(0);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"toggleZoomOutButton\", {\r\n        /**\r\n         * @return Toggle zoom out button?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"toggleZoomOutButton\");\r\n        },\r\n        /**\r\n         * Normally, when axis is zoomed in, a zoom out button is shown by a chart,\r\n         * and vice versa: when axis is zoomed out completely, zoom out button is\r\n         * hidden.\r\n         *\r\n         * Setting this to `false` will disable this behavior. Zooming in our out\r\n         * this axis will not reveal or hide zoom out button.\r\n         *\r\n         * @default true\r\n         * @since 4.6.2\r\n         * @param  value  Toggle zoom out button?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"toggleZoomOutButton\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    Axis.prototype.hideTooltip = function (duration) {\r\n        _super.prototype.hideTooltip.call(this, duration);\r\n        this._tooltipPosition = undefined;\r\n    };\r\n    /**\r\n     * Shows Axis tooltip at specific relative position within Axis. (0-1)\r\n     *\r\n     * @param position Position (0-1)\r\n     * @param local or global position\r\n     */\r\n    Axis.prototype.showTooltipAtPosition = function (position, local) {\r\n        var tooltip = this._tooltip;\r\n        if (!tooltip || this.dataItems.length <= 0) {\r\n            this._tooltipPosition = undefined;\r\n        }\r\n        else {\r\n            if (!local) {\r\n                position = this.toAxisPosition(position);\r\n            }\r\n            if (!$type.isNumber(position) || position < this.start || position > this.end) {\r\n                tooltip.hide(0);\r\n                this._tooltipPosition = undefined;\r\n                return;\r\n            }\r\n            var renderer = this.renderer;\r\n            //@todo: think of how to solve this better\r\n            if (!tooltip.parent) {\r\n                tooltip.parent = this.tooltipContainer;\r\n            }\r\n            var tooltipLocation = renderer.tooltipLocation;\r\n            var startPosition = this.getCellStartPosition(position);\r\n            var endPosition = this.getCellEndPosition(position);\r\n            if (this.tooltipPosition == \"fixed\") {\r\n                position = startPosition + (endPosition - startPosition) * tooltipLocation;\r\n            }\r\n            position = $math.fitToRange(position, this.start, this.end);\r\n            if (this._tooltipPosition != position) {\r\n                this._tooltipPosition = position;\r\n                var tooltipLocation2 = renderer.tooltipLocation2;\r\n                var startPoint = renderer.positionToPoint(startPosition, tooltipLocation2);\r\n                var endPoint = renderer.positionToPoint(endPosition, tooltipLocation2);\r\n                // save values so cursor could use them\r\n                this.currentItemStartPoint = startPoint;\r\n                this.currentItemEndPoint = endPoint;\r\n                if (renderer.fullWidthTooltip) {\r\n                    tooltip.width = endPoint.x - startPoint.x;\r\n                    tooltip.height = endPoint.y - startPoint.y;\r\n                }\r\n                var point = renderer.positionToPoint(position, tooltipLocation2);\r\n                var globalPoint = $utils.spritePointToSvg(point, this.renderer.line);\r\n                tooltip.text = this.getTooltipText(position);\r\n                if (tooltip.text) {\r\n                    tooltip.delayedPointTo(globalPoint);\r\n                    tooltip.show();\r\n                }\r\n            }\r\n            if (!this.cursorTooltipEnabled || this.tooltip.disabled) {\r\n                tooltip.hide(0);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) to Axis position with zoom level and\r\n     * inversed taken into account.\r\n     *\r\n     * @param position Global position (0-1)\r\n     * @return Position within Axis (0-1)\r\n     */\r\n    Axis.prototype.toAxisPosition = function (position) {\r\n        position = this.renderer.toAxisPosition(position);\r\n        if (position == undefined) {\r\n            return;\r\n        }\r\n        position = position * (this.end - this.start);\r\n        if (this.renderer.inversed) {\r\n            position = this.end - position;\r\n        }\r\n        else {\r\n            position = this.start + position;\r\n        }\r\n        return position;\r\n    };\r\n    /**\r\n     * Converts position on the axis with zoom level and\r\n     * inversed taken into account to global position.\r\n     *\r\n     * @param position Axis position (0-1)\r\n     * @return Global position (0-1)\r\n     */\r\n    Axis.prototype.toGlobalPosition = function (position) {\r\n        if (this.renderer.inversed) {\r\n            position = this.end - position;\r\n        }\r\n        else {\r\n            position = position - this.start;\r\n        }\r\n        return position / (this.end - this.start);\r\n    };\r\n    /**\r\n     * Returns text to be used for cursor's Axis tooltip.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param position  Position coordinate (px)\r\n     * @return Label text\r\n     */\r\n    Axis.prototype.getTooltipText = function (position) {\r\n        return;\r\n    };\r\n    /**\r\n     * Updates Axis' tooltip's position and possibly size, and pointer (stem)\r\n     * place.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pointerOrientation  Pointer (stem) orientation\r\n     * @param boundingRectangle   A rectangle for tooltip to fit within\r\n     */\r\n    Axis.prototype.updateTooltip = function (pointerOrientation, boundingRectangle) {\r\n        var tooltip = this._tooltip;\r\n        if (tooltip) {\r\n            tooltip.fixDoc = false;\r\n            tooltip.pointerOrientation = pointerOrientation;\r\n            tooltip.setBounds($utils.spriteRectToSvg(boundingRectangle, this.renderer.line));\r\n        }\r\n    };\r\n    /**\r\n     * [roundPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position  Relative position\r\n     * @param location  Location on axis\r\n     * @return Rounded position\r\n     */\r\n    Axis.prototype.roundPosition = function (position, location, axisLocation) {\r\n        return position;\r\n    };\r\n    /**\r\n     * [getCellStartPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getCellStartPosition = function (position) {\r\n        return position;\r\n    };\r\n    /**\r\n     * [getCellEndPosition description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param position [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getCellEndPosition = function (position) {\r\n        return position;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisRanges\", {\r\n        /**\r\n         * A list of axis ranges for this Axis.\r\n         *\r\n         * @return Axis ranges\r\n         */\r\n        get: function () {\r\n            if (!this._axisRanges) {\r\n                var dataItem = this.createDataItem();\r\n                dataItem.isRange = true;\r\n                dataItem.axisFill = this.renderer.axisFills.template.clone();\r\n                dataItem.grid = this.renderer.grid.template.clone();\r\n                dataItem.tick = this.renderer.ticks.template.clone();\r\n                dataItem.label = this.renderer.labels.template.clone();\r\n                dataItem.isTemplate = true;\r\n                dataItem.component = this;\r\n                dataItem.axisFill.disabled = false;\r\n                dataItem.tick.disabled = false;\r\n                dataItem.grid.disabled = false;\r\n                dataItem.label.disabled = false;\r\n                this._axisRanges = new ListTemplate(dataItem);\r\n                this._axisRanges.events.on(\"inserted\", this.processAxisRange, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisRanges));\r\n                this._disposers.push(this._axisRanges.template);\r\n            }\r\n            return this._axisRanges;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates an axis range after it has been added to the axis range list.\r\n     *\r\n     * @param event Event\r\n     */\r\n    Axis.prototype.processAxisRange = function (event) {\r\n        var axisRange = event.newValue;\r\n        axisRange.component = this;\r\n        axisRange.isRange = true;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"axisBreaks\", {\r\n        /**\r\n         * A list of axis breaks on this Axis.\r\n         *\r\n         * @return Axis breaks.\r\n         */\r\n        get: function () {\r\n            if (!this._axisBreaks) {\r\n                this._axisBreaks = new SortedListTemplate(this.createAxisBreak(), function (a, b) {\r\n                    return $number.order(a.adjustedStartValue, b.adjustedStartValue);\r\n                });\r\n                this._axisBreaks.events.on(\"inserted\", this.processBreak, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisBreaks));\r\n                this._disposers.push(this._axisBreaks.template);\r\n            }\r\n            return this._axisBreaks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a new axis break.\r\n     *\r\n     * @return Axis break\r\n     */\r\n    Axis.prototype.createAxisBreak = function () {\r\n        return new AxisBreak();\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"series\", {\r\n        /**\r\n         * A list of Series currently associated with this Axis.\r\n         *\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes Series' data items.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.processSeriesDataItems = function () {\r\n    };\r\n    /**\r\n     * Processes Series' single data item.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {\r\n    };\r\n    /**\r\n     * Post-processes Serie's data items.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.postProcessSeriesDataItems = function (series) {\r\n    };\r\n    /**\r\n     * Post-processes Serie's single data item.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem Data item\r\n     */\r\n    Axis.prototype.postProcessSeriesDataItem = function (dataItem) {\r\n    };\r\n    //\r\n    /**\r\n     * Updates Axis based on all Series that might influence it.\r\n     *\r\n     * Called by Series after Series data is validated.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.updateAxisBySeries = function () {\r\n    };\r\n    /**\r\n     * Hides unused data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Axis.prototype.hideUnusedDataItems = function () {\r\n        var _this = this;\r\n        // hide all unused\r\n        var dataItemsIterator = this._dataItemsIterator;\r\n        dataItemsIterator.createNewItems = false;\r\n        $iter.each(dataItemsIterator.iterator(), function (dataItem) {\r\n            _this.validateDataElement(dataItem); // solves shrinking\r\n            dataItem.__disabled = true;\r\n        });\r\n        dataItemsIterator.clear();\r\n        dataItemsIterator.createNewItems = true;\r\n    };\r\n    /**\r\n     * Returns a Series' data item that corresponds to specific position on Axis.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param series    Series\r\n     * @param position  Position (0-1)\r\n     * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position\r\n     * @return Data item\r\n     */\r\n    Axis.prototype.getSeriesDataItem = function (series, position, findNearest) {\r\n        return;\r\n    };\r\n    /**\r\n     * Returns an angle that corresponds to specific position on axis.\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem  Data item\r\n     * @param key       ???\r\n     * @param location  Location\r\n     * @param stackKey  ???\r\n     * @return Angle\r\n     */\r\n    Axis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getX description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getX = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getX description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getY description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getY = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    /**\r\n     * [getY description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param dataItem [description]\r\n     * @param key      [description]\r\n     * @param location [description]\r\n     * @param stackKey [description]\r\n     * @return [description]\r\n     */\r\n    Axis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {\r\n        return;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"basePoint\", {\r\n        /**\r\n         * Coordinates of the actual axis start.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Base point coordinates\r\n         */\r\n        get: function () {\r\n            return { x: 0, y: 0 };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     * This is a placeholder to override for extending classes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.dataChangeUpdate = function () {\r\n    };\r\n    /**\r\n     * [dataChangeUpdate description]\r\n     *\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.seriesDataChangeUpdate = function (series) {\r\n    };\r\n    /**\r\n     * Removes axis breaks that fall between `min` and `max` (???)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     * @param min  Start value\r\n     * @param max  End value\r\n     * @return Spread o\r\n     */\r\n    Axis.prototype.adjustDifference = function (min, max) {\r\n        var difference = max - min;\r\n        if ($type.isNumber(difference)) {\r\n            if (this._axisBreaks) {\r\n                $iter.eachContinue(this._axisBreaks.iterator(), function (axisBreak) {\r\n                    var startValue = axisBreak.adjustedStartValue;\r\n                    var endValue = axisBreak.adjustedEndValue;\r\n                    if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n                        // breaks are sorted, we don't need go further anymore\r\n                        if (startValue > max) {\r\n                            return false;\r\n                        }\r\n                        if (endValue >= min) {\r\n                            if ($type.isNumber(startValue) && $type.isNumber(endValue)) {\r\n                                var breakSize = axisBreak.breakSize;\r\n                                var intersection = $math.intersection({ start: startValue, end: endValue }, { start: min, end: max });\r\n                                if (intersection) {\r\n                                    difference -= (intersection.end - intersection.start) * (1 - breakSize);\r\n                                }\r\n                            }\r\n                        }\r\n                        return true;\r\n                    }\r\n                });\r\n            }\r\n            return difference;\r\n        }\r\n    };\r\n    /**\r\n     * Checks if specific value falls within a break.\r\n     *\r\n     * Returns [[AxisBreak]] the value falls into.\r\n     *\r\n     * @param value  Value to check\r\n     * @return Axis break\r\n     */\r\n    Axis.prototype.isInBreak = function (value) {\r\n        if (this._axisBreaks) {\r\n            return $iter.find(this._axisBreaks.iterator(), function (axisBreak) {\r\n                return value >= axisBreak.adjustedStartValue &&\r\n                    value <= axisBreak.adjustedEndValue;\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * [fixAxisBreaks description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     */\r\n    Axis.prototype.fixAxisBreaks = function () {\r\n        var _this = this;\r\n        if (this._axisBreaks) {\r\n            var axisBreaks = this._axisBreaks;\r\n            if (axisBreaks.length > 0) {\r\n                // first make sure that startValue is <= end value\r\n                // This needs to make a copy of axisBreaks because it mutates the list while traversing\r\n                // TODO very inefficient\r\n                $array.each($iter.toArray(axisBreaks.iterator()), function (axisBreak) {\r\n                    var startValue = $math.min(axisBreak.startValue, axisBreak.endValue);\r\n                    var endValue = $math.max(axisBreak.startValue, axisBreak.endValue);\r\n                    axisBreak.adjustedStartValue = startValue;\r\n                    axisBreak.adjustedEndValue = endValue;\r\n                    _this._axisBreaks.update(axisBreak);\r\n                });\r\n                var firstAxisBreak = axisBreaks.first;\r\n                var previousEndValue_1 = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);\r\n                // process breaks\r\n                // TODO does this need to call axisBreaks.update ?\r\n                $iter.each(axisBreaks.iterator(), function (axisBreak) {\r\n                    var startValue = axisBreak.adjustedStartValue;\r\n                    var endValue = axisBreak.adjustedEndValue;\r\n                    // breaks can't overlap\r\n                    // if break starts before previous break ends\r\n                    if (startValue < previousEndValue_1) {\r\n                        startValue = previousEndValue_1;\r\n                        if (endValue < previousEndValue_1) {\r\n                            endValue = previousEndValue_1;\r\n                        }\r\n                    }\r\n                    axisBreak.adjustedStartValue = startValue;\r\n                    axisBreak.adjustedEndValue = endValue;\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"startIndex\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        /**\r\n         * We need start/end indexes of axes to be 0 - `dataItems.length`.\r\n         *\r\n         * Yes, also for category axis, this helps to avoid jumping of categories\r\n         * while scrolling and does not do a lot of extra work as we use\r\n         * protected `_startIndex` and `_endIndex` when working with items.\r\n         *\r\n         * @hidden\r\n         */\r\n        /**\r\n         * [startIndex description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"endIndex\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.dataItems.length;\r\n        },\r\n        /**\r\n         * [endIndex description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a formatted label based on position.\r\n     *\r\n     * Individual axis types should override this method to generate a label\r\n     * that is relevant to axis type.\r\n     *\r\n     * Please note that `position` represents position within axis which may be\r\n     * zoomed and not correspond to Cursor's `position`.\r\n     *\r\n     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.\r\n     * @param position  Relative position on axis (0-1)\r\n     * @return Position label\r\n     */\r\n    Axis.prototype.getPositionLabel = function (position) {\r\n        return Math.round(position * 100) + \"%x\";\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart;\r\n        },\r\n        /**\r\n         * A Chart this Axis belongs to.\r\n         *\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a data item for a Series range.\r\n     *\r\n     * @param series  Target Series\r\n     * @return Range data item\r\n     */\r\n    Axis.prototype.createSeriesRange = function (series) {\r\n        var range = this.axisRanges.create();\r\n        range.component = this;\r\n        range.axisFill = this.renderer.axisFills.template.clone();\r\n        range.axisFill.disabled = false;\r\n        range.axisFill.fillOpacity = 0;\r\n        range.grid = this.renderer.grid.template.clone();\r\n        range.grid.disabled = true;\r\n        range.tick = this.renderer.ticks.template.clone();\r\n        range.tick.disabled = true;\r\n        range.label = this.renderer.labels.template.clone();\r\n        range.label.disabled = true;\r\n        range.addDisposer(new Disposer(function () {\r\n            series.axisRanges.removeValue(range);\r\n        }));\r\n        series.axisRanges.push(range);\r\n        return range;\r\n    };\r\n    /**\r\n     * Copies all properties and related data from a different instance of Axis.\r\n     *\r\n     * @param source Source Axis\r\n     */\r\n    Axis.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.renderer) {\r\n            this.renderer.copyFrom(source.renderer);\r\n        }\r\n        else {\r\n            if (source.renderer) {\r\n                this.renderer = source.renderer.clone();\r\n                this._disposers.push(this.renderer);\r\n            }\r\n        }\r\n        if (source.title) {\r\n            if (!this.title) {\r\n                this.title = source.title.clone();\r\n                this.title.parent = this;\r\n            }\r\n            else {\r\n                this.title.copyFrom(source.title);\r\n            }\r\n            this._disposers.push(this.title);\r\n        }\r\n    };\r\n    /**\r\n     * Resets internal iterator.\r\n     */\r\n    Axis.prototype.resetIterators = function () {\r\n        this._dataItemsIterator.reset();\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Axis.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up axis ranges\r\n            if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n                for (var i = 0, len = config.axisRanges.length; i < len; i++) {\r\n                    var range = config.axisRanges[i];\r\n                    // If `series` is set, we know it's a series range\r\n                    if ($type.hasValue(range[\"series\"])) {\r\n                        if ($type.isString(range[\"series\"])) {\r\n                            if (this.map.hasKey(range[\"series\"])) {\r\n                                //range[\"series\"] = this.map.getKey(range[\"series\"]);\r\n                                config.axisRanges[i] = this.createSeriesRange(this.map.getKey(range[\"series\"]));\r\n                                delete (range[\"series\"]);\r\n                                config.axisRanges[i].config = range;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Ordering function used in JSON setup.\r\n     *\r\n     * @param a  Item A\r\n     * @param b  Item B\r\n     * @return Order\r\n     */\r\n    Axis.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // last\r\n        else if (a == \"title\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"title\") {\r\n            return -1;\r\n        }\r\n        // first\r\n        else if (a == \"component\") {\r\n            return -1;\r\n        }\r\n        else if (b == \"component\") {\r\n            return 1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"startLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startLocation\");\r\n        },\r\n        /**\r\n         * Axis start location. Works on Date/Category axis, doesn't work on Value axis.\r\n         *\r\n         * * 0 - Full first cell is shown.\r\n         * * 0.5 - Half of first cell is shown.\r\n         * * 1 - None of the first cell is visible. (you probably don't want that)\r\n         *\r\n         * @param value Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"endLocation\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endLocation\");\r\n        },\r\n        /**\r\n         * Axis end location. Works on Date/Category axis, doesn't work on Value axis.\r\n         *\r\n         * * 0 - None of the last cell is shown. (don't do that)\r\n         * * 0.5 - Half of the last cell is shown.\r\n         * * 1 - Full last cell is shown.\r\n         *\r\n         * @param value Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endLocation\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Axis.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.renderer) {\r\n            this.renderer.gridContainer.disabled = value;\r\n        }\r\n        return changed;\r\n    };\r\n    Object.defineProperty(Axis.prototype, \"title\", {\r\n        /**\r\n         * @return Title label\r\n         */\r\n        get: function () {\r\n            return this._title;\r\n        },\r\n        /**\r\n         * A reference to a [[Label]] element which serves as a title to the axis.\r\n         *\r\n         * When axis is created it aleready has an element, so you can just modify\r\n         * it.\r\n         *\r\n         * Or you can replace it with your own instance of `Label`.\r\n         *\r\n         * @param  value  Title label\r\n         */\r\n        set: function (value) {\r\n            if (this._title && this._title != value) {\r\n                this._title.dispose();\r\n            }\r\n            if (value) {\r\n                this._title = value;\r\n                value.parent = this;\r\n                value.shouldClone = false;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"hideTooltipWhileZooming\", {\r\n        /**\r\n         * @return Hide tooltip while zooming?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n        },\r\n        /**\r\n         * Indicates if axis' tooltip should be hidden while axis range is animating\r\n         * (zooming)\r\n         *\r\n         * @default true\r\n         * @since 4.7.16\r\n         * @param  value  Hide tooltip while zooming?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Axis.prototype, \"zoomable\", {\r\n        /**\r\n         * @return Zoomable?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"zoomable\");\r\n        },\r\n        /**\r\n         * Should the axis be zoomed with scrollbar/cursor?\r\n         *\r\n         * @default true\r\n         * @since 4.9.28\r\n         * @param  value  Zoomable?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"zoomable\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Axis;\r\n}(Component));\r\nexport { Axis };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Axis\"] = Axis;\r\nregistry.registeredClasses[\"AxisDataItem\"] = AxisDataItem;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable axis tooltips.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Axis && target.tooltip) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.cursorTooltipEnabled = false;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}