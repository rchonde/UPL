{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/html_editor/modules/widget_collector.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { each } from \"../../../core/utils/iterator\";\nexport default class WidgetCollector {\n  constructor() {\n    this._collection = [];\n  }\n\n  clear() {\n    this._collection = [];\n  }\n\n  add(name, instance) {\n    this._collection.push({\n      name: name,\n      instance: instance\n    });\n  }\n\n  remove(name) {\n    this._collection = this._collection.filter(item => item.name !== name);\n  }\n\n  getByName(widgetName) {\n    var widget = null;\n    each(this._collection, (index, _ref) => {\n      var {\n        name: name,\n        instance: instance\n      } = _ref;\n\n      if (name === widgetName) {\n        widget = instance;\n        return false;\n      }\n    });\n    return widget;\n  }\n\n  each(handler) {\n    this._collection.forEach(_ref2 => {\n      var {\n        name: name,\n        instance: instance\n      } = _ref2;\n      return instance && handler(name, instance);\n    });\n  }\n\n}","map":{"version":3,"names":["each","WidgetCollector","constructor","_collection","clear","add","name","instance","push","remove","filter","item","getByName","widgetName","widget","index","_ref","handler","forEach","_ref2"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/html_editor/modules/widget_collector.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/html_editor/modules/widget_collector.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nexport default class WidgetCollector {\r\n    constructor() {\r\n        this._collection = []\r\n    }\r\n    clear() {\r\n        this._collection = []\r\n    }\r\n    add(name, instance) {\r\n        this._collection.push({\r\n            name: name,\r\n            instance: instance\r\n        })\r\n    }\r\n    remove(name) {\r\n        this._collection = this._collection.filter(item => item.name !== name)\r\n    }\r\n    getByName(widgetName) {\r\n        var widget = null;\r\n        each(this._collection, (index, _ref) => {\r\n            var {\r\n                name: name,\r\n                instance: instance\r\n            } = _ref;\r\n            if (name === widgetName) {\r\n                widget = instance;\r\n                return false\r\n            }\r\n        });\r\n        return widget\r\n    }\r\n    each(handler) {\r\n        this._collection.forEach(_ref2 => {\r\n            var {\r\n                name: name,\r\n                instance: instance\r\n            } = _ref2;\r\n            return instance && handler(name, instance)\r\n        })\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,IADJ,QAEO,8BAFP;AAGA,eAAe,MAAMC,eAAN,CAAsB;EACjCC,WAAW,GAAG;IACV,KAAKC,WAAL,GAAmB,EAAnB;EACH;;EACDC,KAAK,GAAG;IACJ,KAAKD,WAAL,GAAmB,EAAnB;EACH;;EACDE,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiB;IAChB,KAAKJ,WAAL,CAAiBK,IAAjB,CAAsB;MAClBF,IAAI,EAAEA,IADY;MAElBC,QAAQ,EAAEA;IAFQ,CAAtB;EAIH;;EACDE,MAAM,CAACH,IAAD,EAAO;IACT,KAAKH,WAAL,GAAmB,KAAKA,WAAL,CAAiBO,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACL,IAAL,KAAcA,IAA9C,CAAnB;EACH;;EACDM,SAAS,CAACC,UAAD,EAAa;IAClB,IAAIC,MAAM,GAAG,IAAb;IACAd,IAAI,CAAC,KAAKG,WAAN,EAAmB,CAACY,KAAD,EAAQC,IAAR,KAAiB;MACpC,IAAI;QACAV,IAAI,EAAEA,IADN;QAEAC,QAAQ,EAAEA;MAFV,IAGAS,IAHJ;;MAIA,IAAIV,IAAI,KAAKO,UAAb,EAAyB;QACrBC,MAAM,GAAGP,QAAT;QACA,OAAO,KAAP;MACH;IACJ,CATG,CAAJ;IAUA,OAAOO,MAAP;EACH;;EACDd,IAAI,CAACiB,OAAD,EAAU;IACV,KAAKd,WAAL,CAAiBe,OAAjB,CAAyBC,KAAK,IAAI;MAC9B,IAAI;QACAb,IAAI,EAAEA,IADN;QAEAC,QAAQ,EAAEA;MAFV,IAGAY,KAHJ;MAIA,OAAOZ,QAAQ,IAAIU,OAAO,CAACX,IAAD,EAAOC,QAAP,CAA1B;IACH,CAND;EAOH;;AAtCgC"},"metadata":{},"sourceType":"module"}