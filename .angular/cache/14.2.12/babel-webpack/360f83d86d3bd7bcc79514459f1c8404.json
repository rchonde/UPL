{"ast":null,"code":"/**\r\n * A module that defines Text element used to indicate links.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Label } from \"../../core/elements/Label\";\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { registry } from \"../Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a text element with a link.\r\n *\r\n * @see {@link ITextLinkEvents} for a list of available events\r\n * @see {@link ITextLinkAdapters} for a list of available Adapters\r\n */\n\nvar TextLink =\n/** @class */\nfunction (_super) {\n  __extends(TextLink, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function TextLink() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"TextLink\";\n    _this.selectable = true;\n    var interfaceColors = new InterfaceColorSet();\n    _this.fill = interfaceColors.getFor(\"primaryButton\").brighten(0.3);\n\n    var hoverState = _this.states.create(\"hover\");\n\n    hoverState.properties.fill = interfaceColors.getFor(\"primaryButtonHover\").brighten(0.3);\n\n    var downState = _this.states.create(\"down\");\n\n    downState.properties.fill = interfaceColors.getFor(\"primaryButtonDown\").brighten(0.3);\n    _this.cursorOverStyle = MouseCursorStyle.pointer;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return TextLink;\n}(Label);\n\nexport { TextLink };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"TextLink\"] = TextLink;","map":{"version":3,"names":["__extends","Label","MouseCursorStyle","InterfaceColorSet","registry","TextLink","_super","_this","call","className","selectable","interfaceColors","fill","getFor","brighten","hoverState","states","create","properties","downState","cursorOverStyle","pointer","applyTheme","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/elements/TextLink.js"],"sourcesContent":["/**\r\n * A module that defines Text element used to indicate links.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a text element with a link.\r\n *\r\n * @see {@link ITextLinkEvents} for a list of available events\r\n * @see {@link ITextLinkAdapters} for a list of available Adapters\r\n */\r\nvar TextLink = /** @class */ (function (_super) {\r\n    __extends(TextLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function TextLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"TextLink\";\r\n        _this.selectable = true;\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.fill = interfaceColors.getFor(\"primaryButton\").brighten(0.3);\r\n        var hoverState = _this.states.create(\"hover\");\r\n        hoverState.properties.fill = interfaceColors.getFor(\"primaryButtonHover\").brighten(0.3);\r\n        var downState = _this.states.create(\"down\");\r\n        downState.properties.fill = interfaceColors.getFor(\"primaryButtonDown\").brighten(0.3);\r\n        _this.cursorOverStyle = MouseCursorStyle.pointer;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return TextLink;\r\n}(Label));\r\nexport { TextLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"TextLink\"] = TextLink;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,iBAAT,QAAkC,oCAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,QAAQ;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC5CN,SAAS,CAACK,QAAD,EAAWC,MAAX,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,QAAT,GAAoB;IAChB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,UAAlB;IACAF,KAAK,CAACG,UAAN,GAAmB,IAAnB;IACA,IAAIC,eAAe,GAAG,IAAIR,iBAAJ,EAAtB;IACAI,KAAK,CAACK,IAAN,GAAaD,eAAe,CAACE,MAAhB,CAAuB,eAAvB,EAAwCC,QAAxC,CAAiD,GAAjD,CAAb;;IACA,IAAIC,UAAU,GAAGR,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAoB,OAApB,CAAjB;;IACAF,UAAU,CAACG,UAAX,CAAsBN,IAAtB,GAA6BD,eAAe,CAACE,MAAhB,CAAuB,oBAAvB,EAA6CC,QAA7C,CAAsD,GAAtD,CAA7B;;IACA,IAAIK,SAAS,GAAGZ,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAoB,MAApB,CAAhB;;IACAE,SAAS,CAACD,UAAV,CAAqBN,IAArB,GAA4BD,eAAe,CAACE,MAAhB,CAAuB,mBAAvB,EAA4CC,QAA5C,CAAqD,GAArD,CAA5B;IACAP,KAAK,CAACa,eAAN,GAAwBlB,gBAAgB,CAACmB,OAAzC;;IACAd,KAAK,CAACe,UAAN;;IACA,OAAOf,KAAP;EACH;;EACD,OAAOF,QAAP;AACH,CApB6B,CAoB5BJ,KApB4B,CAA9B;;AAqBA,SAASI,QAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,QAAQ,CAACmB,iBAAT,CAA2B,UAA3B,IAAyClB,QAAzC"},"metadata":{},"sourceType":"module"}