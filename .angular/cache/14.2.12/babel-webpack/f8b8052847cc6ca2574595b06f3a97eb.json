{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TargetedEventDispatcher } from \"../utils/EventDispatcher\";\nimport { MultiDisposer, CounterDisposer } from \"../utils/Disposer\";\n/**\r\n * Represents an Event Dispatcher for [[InteractionObject]].\r\n *\r\n * Besides regular [[EventDispatcher]] functionality it adds new events with\r\n * direct application to DOM nodes. Primarily used to handle keyboard events,\r\n * but can turn into something else moving forward.\r\n */\n\nvar InteractionObjectEventDispatcher =\n/** @class */\nfunction (_super) {\n  __extends(InteractionObjectEventDispatcher, _super);\n\n  function InteractionObjectEventDispatcher() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Holds a list of Disposers for DOM events added.\r\n     */\n\n\n    _this._domEvents = {};\n    return _this;\n  }\n  /**\r\n   * Adds a DOM event and returns Disposer.\r\n   *\r\n   * @return Disposer\r\n   */\n\n\n  InteractionObjectEventDispatcher.prototype._addDOMEvent = function (type, key, listener, context) {\n    var _this = this;\n\n    if (!this._domEvents[type]) {\n      var callback_1 = function (e) {\n        listener.call(context, key, e);\n      };\n\n      this.target.element.addEventListener(type, callback_1, false);\n      this._domEvents[type] = new CounterDisposer(function () {\n        delete _this._domEvents[type];\n\n        _this.target.element.removeEventListener(type, callback_1, false);\n      });\n    }\n\n    return this._domEvents[type].increment();\n  };\n\n  InteractionObjectEventDispatcher.prototype._dispatchKeyboardEvent = function (key, ev) {\n    // TODO use this.dispatchImmediately ?\n    if (this.target.events.isEnabled(key)) {\n      this.target.events.dispatchImmediately(key, {\n        type: key,\n        target: this.target,\n        event: ev\n      });\n    }\n  };\n\n  InteractionObjectEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\n    var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\n\n    var disposers = [info.disposer];\n\n    switch (type) {\n      case \"hit\":\n      case \"doublehit\":\n      case \"rightclick\":\n      case \"down\":\n      case \"up\":\n        this.target.clickable = true;\n        break;\n\n      case \"drag\":\n      case \"dragstart\":\n      case \"dragstop\":\n        this.target.draggable = true;\n        break;\n\n      case \"track\":\n        this.target.trackable = true;\n        break;\n\n      case \"resize\":\n        this.target.resizable = true;\n        break;\n\n      case \"swipe\":\n      case \"swipeleft\":\n      case \"swiperight\":\n        this.target.swipeable = true;\n        break;\n\n      case \"wheel\":\n      case \"wheelup\":\n      case \"wheeldown\":\n      case \"wheelleft\":\n      case \"wheelright\":\n        this.target.wheelable = true;\n        break;\n\n      case \"over\":\n      case \"out\":\n        this.target.hoverable = true;\n        break;\n\n      case \"focus\":\n      case \"blur\":\n      case \"focusin\":\n      case \"focusout\":\n        this.target.focusable = true;\n        break;\n\n      case \"keydown\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n\n      case \"keyup\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n\n      case \"keypress\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n\n      case \"input\":\n        disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\n        break;\n    }\n\n    info.disposer = new MultiDisposer(disposers);\n    return info;\n  };\n\n  return InteractionObjectEventDispatcher;\n}(TargetedEventDispatcher);\n\nexport { InteractionObjectEventDispatcher };","map":{"version":3,"names":["__extends","TargetedEventDispatcher","MultiDisposer","CounterDisposer","InteractionObjectEventDispatcher","_super","_this","apply","arguments","_domEvents","prototype","_addDOMEvent","type","key","listener","context","callback_1","e","call","target","element","addEventListener","removeEventListener","increment","_dispatchKeyboardEvent","ev","events","isEnabled","dispatchImmediately","event","_on","once","callback","shouldClone","dispatch","info","disposers","disposer","clickable","draggable","trackable","resizable","swipeable","wheelable","hoverable","focusable","push"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/interaction/InteractionObjectEvents.js"],"sourcesContent":["import { __extends } from \"tslib\";\r\nimport { TargetedEventDispatcher } from \"../utils/EventDispatcher\";\r\nimport { MultiDisposer, CounterDisposer } from \"../utils/Disposer\";\r\n/**\r\n * Represents an Event Dispatcher for [[InteractionObject]].\r\n *\r\n * Besides regular [[EventDispatcher]] functionality it adds new events with\r\n * direct application to DOM nodes. Primarily used to handle keyboard events,\r\n * but can turn into something else moving forward.\r\n */\r\nvar InteractionObjectEventDispatcher = /** @class */ (function (_super) {\r\n    __extends(InteractionObjectEventDispatcher, _super);\r\n    function InteractionObjectEventDispatcher() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Holds a list of Disposers for DOM events added.\r\n         */\r\n        _this._domEvents = {};\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds a DOM event and returns Disposer.\r\n     *\r\n     * @return Disposer\r\n     */\r\n    InteractionObjectEventDispatcher.prototype._addDOMEvent = function (type, key, listener, context) {\r\n        var _this = this;\r\n        if (!this._domEvents[type]) {\r\n            var callback_1 = function (e) {\r\n                listener.call(context, key, e);\r\n            };\r\n            this.target.element.addEventListener(type, callback_1, false);\r\n            this._domEvents[type] = new CounterDisposer(function () {\r\n                delete _this._domEvents[type];\r\n                _this.target.element.removeEventListener(type, callback_1, false);\r\n            });\r\n        }\r\n        return this._domEvents[type].increment();\r\n    };\r\n    InteractionObjectEventDispatcher.prototype._dispatchKeyboardEvent = function (key, ev) {\r\n        // TODO use this.dispatchImmediately ?\r\n        if (this.target.events.isEnabled(key)) {\r\n            this.target.events.dispatchImmediately(key, {\r\n                type: key,\r\n                target: this.target,\r\n                event: ev\r\n            });\r\n        }\r\n    };\r\n    InteractionObjectEventDispatcher.prototype._on = function (once, type, callback, context, shouldClone, dispatch) {\r\n        var info = _super.prototype._on.call(this, once, type, callback, context, shouldClone, dispatch);\r\n        var disposers = [info.disposer];\r\n        switch (type) {\r\n            case \"hit\":\r\n            case \"doublehit\":\r\n            case \"rightclick\":\r\n            case \"down\":\r\n            case \"up\":\r\n                this.target.clickable = true;\r\n                break;\r\n            case \"drag\":\r\n            case \"dragstart\":\r\n            case \"dragstop\":\r\n                this.target.draggable = true;\r\n                break;\r\n            case \"track\":\r\n                this.target.trackable = true;\r\n                break;\r\n            case \"resize\":\r\n                this.target.resizable = true;\r\n                break;\r\n            case \"swipe\":\r\n            case \"swipeleft\":\r\n            case \"swiperight\":\r\n                this.target.swipeable = true;\r\n                break;\r\n            case \"wheel\":\r\n            case \"wheelup\":\r\n            case \"wheeldown\":\r\n            case \"wheelleft\":\r\n            case \"wheelright\":\r\n                this.target.wheelable = true;\r\n                break;\r\n            case \"over\":\r\n            case \"out\":\r\n                this.target.hoverable = true;\r\n                break;\r\n            case \"focus\":\r\n            case \"blur\":\r\n            case \"focusin\":\r\n            case \"focusout\":\r\n                this.target.focusable = true;\r\n                break;\r\n            case \"keydown\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"keyup\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"keypress\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n            case \"input\":\r\n                disposers.push(this._addDOMEvent(type, type, this._dispatchKeyboardEvent, this));\r\n                break;\r\n        }\r\n        info.disposer = new MultiDisposer(disposers);\r\n        return info;\r\n    };\r\n    return InteractionObjectEventDispatcher;\r\n}(TargetedEventDispatcher));\r\nexport { InteractionObjectEventDispatcher };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}