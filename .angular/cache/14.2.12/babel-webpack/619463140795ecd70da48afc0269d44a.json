{"ast":null,"code":"import * as $array from \"./Array\";\nimport * as $log from \"./Log\";\n\nvar Native =\n/** @class */\nfunction () {\n  function Native() {\n    var _this = this;\n\n    this._targets = [];\n    this._observer = new ResizeObserver(function (entries) {\n      $array.each(entries, function (entry) {\n        $array.each(_this._targets, function (x) {\n          if (x.target === entry.target) {\n            x.callback();\n          }\n        });\n      });\n    });\n  }\n\n  Native.prototype.addTarget = function (target, callback) {\n    this._observer.observe(target, {\n      box: \"content-box\"\n    });\n\n    this._targets.push({\n      target: target,\n      callback: callback\n    });\n  };\n\n  Native.prototype.removeTarget = function (target) {\n    this._observer.unobserve(target);\n\n    $array.keepIf(this._targets, function (x) {\n      return x.target !== target;\n    });\n  };\n\n  return Native;\n}();\n\nvar Raf =\n/** @class */\nfunction () {\n  function Raf() {\n    this._targets = [];\n  }\n\n  Raf.prototype.addTarget = function (target, callback) {\n    var _this = this;\n\n    if (this._targets.length === 0) {\n      var lastTime_1 = null;\n\n      var loop_1 = function () {\n        var currentTime = Date.now();\n\n        if (lastTime_1 === null || currentTime > lastTime_1 + Raf.delay) {\n          lastTime_1 = currentTime;\n          $array.each(_this._targets, function (x) {\n            var newSize = x.target.getBoundingClientRect();\n\n            if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\n              x.size = newSize;\n              x.callback();\n            }\n          });\n        }\n\n        _this._timer = requestAnimationFrame(loop_1);\n      };\n\n      this._timer = requestAnimationFrame(loop_1);\n    }\n\n    var size = target.getBoundingClientRect();\n\n    this._targets.push({\n      target: target,\n      callback: callback,\n      size: size\n    });\n  };\n\n  Raf.prototype.removeTarget = function (target) {\n    $array.keepIf(this._targets, function (x) {\n      return x.target !== target;\n    });\n\n    if (this._targets.length === 0) {\n      cancelAnimationFrame(this._timer);\n    }\n  };\n\n  Raf.delay = 200;\n  return Raf;\n}();\n\nvar observer = null;\n\nfunction makeSensor() {\n  if (observer === null) {\n    if (typeof ResizeObserver !== \"undefined\") {\n      observer = new Native();\n    } else {\n      observer = new Raf();\n    }\n  }\n\n  return observer;\n}\n\nvar ResizeSensor =\n/** @class */\nfunction () {\n  function ResizeSensor(element, callback) {\n    this._disposed = false;\n    this._sensor = makeSensor();\n    this._element = element;\n\n    this._sensor.addTarget(element, callback);\n  }\n\n  ResizeSensor.prototype.isDisposed = function () {\n    return this._disposed;\n  };\n\n  ResizeSensor.prototype.dispose = function () {\n    if (!this._disposed) {\n      this._disposed = true;\n\n      this._sensor.removeTarget(this._element);\n    }\n  };\n\n  Object.defineProperty(ResizeSensor.prototype, \"sensor\", {\n    get: function () {\n      return this._sensor;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Deprecated: do not use.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  ResizeSensor.prototype.reset = function () {\n    $log.warn(\"resizeSensor.reset() is no longer needed and can be removed\");\n  };\n\n  return ResizeSensor;\n}();\n\nexport { ResizeSensor };","map":{"version":3,"names":["$array","$log","Native","_this","_targets","_observer","ResizeObserver","entries","each","entry","x","target","callback","prototype","addTarget","observe","box","push","removeTarget","unobserve","keepIf","Raf","length","lastTime_1","loop_1","currentTime","Date","now","delay","newSize","getBoundingClientRect","width","size","height","_timer","requestAnimationFrame","cancelAnimationFrame","observer","makeSensor","ResizeSensor","element","_disposed","_sensor","_element","isDisposed","dispose","Object","defineProperty","get","enumerable","configurable","reset","warn"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/utils/ResizeSensor.js"],"sourcesContent":["import * as $array from \"./Array\";\r\nimport * as $log from \"./Log\";\r\nvar Native = /** @class */ (function () {\r\n    function Native() {\r\n        var _this = this;\r\n        this._targets = [];\r\n        this._observer = new ResizeObserver(function (entries) {\r\n            $array.each(entries, function (entry) {\r\n                $array.each(_this._targets, function (x) {\r\n                    if (x.target === entry.target) {\r\n                        x.callback();\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n    Native.prototype.addTarget = function (target, callback) {\r\n        this._observer.observe(target, { box: \"content-box\" });\r\n        this._targets.push({ target: target, callback: callback });\r\n    };\r\n    Native.prototype.removeTarget = function (target) {\r\n        this._observer.unobserve(target);\r\n        $array.keepIf(this._targets, function (x) {\r\n            return x.target !== target;\r\n        });\r\n    };\r\n    return Native;\r\n}());\r\nvar Raf = /** @class */ (function () {\r\n    function Raf() {\r\n        this._targets = [];\r\n    }\r\n    Raf.prototype.addTarget = function (target, callback) {\r\n        var _this = this;\r\n        if (this._targets.length === 0) {\r\n            var lastTime_1 = null;\r\n            var loop_1 = function () {\r\n                var currentTime = Date.now();\r\n                if (lastTime_1 === null || currentTime > (lastTime_1 + Raf.delay)) {\r\n                    lastTime_1 = currentTime;\r\n                    $array.each(_this._targets, function (x) {\r\n                        var newSize = x.target.getBoundingClientRect();\r\n                        if (newSize.width !== x.size.width || newSize.height !== x.size.height) {\r\n                            x.size = newSize;\r\n                            x.callback();\r\n                        }\r\n                    });\r\n                }\r\n                _this._timer = requestAnimationFrame(loop_1);\r\n            };\r\n            this._timer = requestAnimationFrame(loop_1);\r\n        }\r\n        var size = target.getBoundingClientRect();\r\n        this._targets.push({ target: target, callback: callback, size: size });\r\n    };\r\n    Raf.prototype.removeTarget = function (target) {\r\n        $array.keepIf(this._targets, function (x) {\r\n            return x.target !== target;\r\n        });\r\n        if (this._targets.length === 0) {\r\n            cancelAnimationFrame(this._timer);\r\n        }\r\n    };\r\n    Raf.delay = 200;\r\n    return Raf;\r\n}());\r\nvar observer = null;\r\nfunction makeSensor() {\r\n    if (observer === null) {\r\n        if (typeof ResizeObserver !== \"undefined\") {\r\n            observer = new Native();\r\n        }\r\n        else {\r\n            observer = new Raf();\r\n        }\r\n    }\r\n    return observer;\r\n}\r\nvar ResizeSensor = /** @class */ (function () {\r\n    function ResizeSensor(element, callback) {\r\n        this._disposed = false;\r\n        this._sensor = makeSensor();\r\n        this._element = element;\r\n        this._sensor.addTarget(element, callback);\r\n    }\r\n    ResizeSensor.prototype.isDisposed = function () {\r\n        return this._disposed;\r\n    };\r\n    ResizeSensor.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            this._disposed = true;\r\n            this._sensor.removeTarget(this._element);\r\n        }\r\n    };\r\n    Object.defineProperty(ResizeSensor.prototype, \"sensor\", {\r\n        get: function () {\r\n            return this._sensor;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Deprecated: do not use.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ResizeSensor.prototype.reset = function () {\r\n        $log.warn(\"resizeSensor.reset() is no longer needed and can be removed\");\r\n    };\r\n    return ResizeSensor;\r\n}());\r\nexport { ResizeSensor };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}