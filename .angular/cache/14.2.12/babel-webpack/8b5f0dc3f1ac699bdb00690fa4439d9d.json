{"ast":null,"code":"/**\r\n * 3D column series module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ColumnSeries, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\nimport { Column3D } from \"../elements/Column3D\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\nvar ColumnSeries3DDataItem =\n/** @class */\nfunction (_super) {\n  __extends(ColumnSeries3DDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ColumnSeries3DDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ColumnSeries3DDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return ColumnSeries3DDataItem;\n}(ColumnSeriesDataItem);\n\nexport { ColumnSeries3DDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\n\nvar ColumnSeries3D =\n/** @class */\nfunction (_super) {\n  __extends(ColumnSeries3D, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ColumnSeries3D() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ColumnSeries3D\";\n    _this.columns.template.column3D.applyOnClones = true;\n    _this.columns.template.hiddenState.properties.visible = true;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(ColumnSeries3D.prototype, \"columnsContainer\", {\n    /**\r\n     * @ignore\r\n     */\n    get: function () {\n      var chart = this.chart;\n\n      if (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\n        return chart.columnsContainer;\n      } else {\n        return this._columnsContainer;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n  ColumnSeries3D.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n\n    if (dataItem.column) {\n      dataItem.column.dx = this.dx;\n      dataItem.column.dy = this.dy;\n      dataItem.column.visible = this.visible;\n    }\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  ColumnSeries3D.prototype.validateDataElements = function () {\n    _super.prototype.validateDataElements.call(this);\n\n    if (this.chart) {\n      this.chart.invalidateLayout();\n    }\n  };\n  /**\r\n   * Returns an element to use for 3D bar.\r\n   * @ignore\r\n   * @return Element.\r\n   */\n\n\n  ColumnSeries3D.prototype.createColumnTemplate = function () {\n    return new Column3D();\n  };\n\n  Object.defineProperty(ColumnSeries3D.prototype, \"depth\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Depth (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"depth\");\n    },\n\n    /**\r\n     * Depth (height) of the slices in the series in pixels.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Depth (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"depth\", value, true);\n      var template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\n\n      template.column3D.depth = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries3D.prototype, \"angle\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Angle (0-360)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"angle\");\n    },\n\n    /**\r\n     * Angle of view for the slices in series. (0-360)\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Angle (0-360)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"angle\", value);\n      var template = this.columns.template;\n      template.column3D.angle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ColumnSeries3D;\n}(ColumnSeries);\n\nexport { ColumnSeries3D };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\nregistry.registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;","map":{"version":3,"names":["__extends","ColumnSeries","ColumnSeriesDataItem","Column3D","registry","ColumnSeries3DDataItem","_super","_this","call","className","applyTheme","ColumnSeries3D","columns","template","column3D","applyOnClones","hiddenState","properties","visible","Object","defineProperty","prototype","get","chart","columnsContainer","leftAxesContainer","layout","rightAxesContainer","bottomAxesContainer","topAxesContainer","_columnsContainer","enumerable","configurable","validateDataElementReal","dataItem","column","dx","dy","validateDataElements","invalidateLayout","createColumnTemplate","getPropertyValue","set","value","setPropertyValue","depth","angle","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js"],"sourcesContent":["/**\r\n * 3D column series module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"../series/ColumnSeries\";\r\nimport { Column3D } from \"../elements/Column3D\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\nvar ColumnSeries3DDataItem = /** @class */ (function (_super) {\r\n    __extends(ColumnSeries3DDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3DDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3DDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ColumnSeries3DDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { ColumnSeries3DDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a 3D column graph.\r\n *\r\n * @see {@link IColumnSeries3DEvents} for a list of available Events\r\n * @see {@link IColumnSeries3DAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries3D = /** @class */ (function (_super) {\r\n    __extends(ColumnSeries3D, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries3D() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeries3D\";\r\n        _this.columns.template.column3D.applyOnClones = true;\r\n        _this.columns.template.hiddenState.properties.visible = true;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"columnsContainer\", {\r\n        /**\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            var chart = this.chart;\r\n            if (chart && chart.columnsContainer && chart.leftAxesContainer.layout != \"vertical\" && chart.rightAxesContainer.layout != \"vertical\" && chart.bottomAxesContainer.layout != \"horizontal\" && chart.topAxesContainer.layout != \"horizontal\") {\r\n                return chart.columnsContainer;\r\n            }\r\n            else {\r\n                return this._columnsContainer;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        if (dataItem.column) {\r\n            dataItem.column.dx = this.dx;\r\n            dataItem.column.dy = this.dy;\r\n            dataItem.column.visible = this.visible;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries3D.prototype.validateDataElements = function () {\r\n        _super.prototype.validateDataElements.call(this);\r\n        if (this.chart) {\r\n            this.chart.invalidateLayout();\r\n        }\r\n    };\r\n    /**\r\n     * Returns an element to use for 3D bar.\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ColumnSeries3D.prototype.createColumnTemplate = function () {\r\n        return new Column3D();\r\n    };\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"depth\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Depth (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"depth\");\r\n        },\r\n        /**\r\n         * Depth (height) of the slices in the series in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Depth (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"depth\", value, true);\r\n            var template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?\r\n            template.column3D.depth = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries3D.prototype, \"angle\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Angle (0-360)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"angle\");\r\n        },\r\n        /**\r\n         * Angle of view for the slices in series. (0-360)\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Angle (0-360)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"angle\", value);\r\n            var template = this.columns.template;\r\n            template.column3D.angle = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeries3D;\r\n}(ColumnSeries));\r\nexport { ColumnSeries3D };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries3D\"] = ColumnSeries3D;\r\nregistry.registeredClasses[\"ColumnSeries3DDataItem\"] = ColumnSeries3DDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}