{"ast":null,"code":"import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, Inject, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport DxForm from 'devextreme/ui/form';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiItemComponent, DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\n/**\r\n * The Form UI component represents fields of a data object as a collection of label-editor pairs. These pairs can be arranged in several groups, tabs and columns.\r\n\r\n */\n\nclass DxFormComponent extends DxComponent {\n  constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    this._watcherHelper = _watcherHelper;\n    this._idh = _idh;\n\n    this._createEventEmitters([{\n      subscribe: 'contentReady',\n      emit: 'onContentReady'\n    }, {\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'editorEnterKey',\n      emit: 'onEditorEnterKey'\n    }, {\n      subscribe: 'fieldDataChanged',\n      emit: 'onFieldDataChanged'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      emit: 'accessKeyChange'\n    }, {\n      emit: 'activeStateEnabledChange'\n    }, {\n      emit: 'alignItemLabelsChange'\n    }, {\n      emit: 'alignItemLabelsInAllGroupsChange'\n    }, {\n      emit: 'colCountChange'\n    }, {\n      emit: 'colCountByScreenChange'\n    }, {\n      emit: 'customizeItemChange'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'focusStateEnabledChange'\n    }, {\n      emit: 'formDataChange'\n    }, {\n      emit: 'heightChange'\n    }, {\n      emit: 'hintChange'\n    }, {\n      emit: 'hoverStateEnabledChange'\n    }, {\n      emit: 'itemsChange'\n    }, {\n      emit: 'labelLocationChange'\n    }, {\n      emit: 'labelModeChange'\n    }, {\n      emit: 'minColWidthChange'\n    }, {\n      emit: 'optionalMarkChange'\n    }, {\n      emit: 'readOnlyChange'\n    }, {\n      emit: 'requiredMarkChange'\n    }, {\n      emit: 'requiredMessageChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'screenByWidthChange'\n    }, {\n      emit: 'scrollingEnabledChange'\n    }, {\n      emit: 'showColonAfterLabelChange'\n    }, {\n      emit: 'showOptionalMarkChange'\n    }, {\n      emit: 'showRequiredMarkChange'\n    }, {\n      emit: 'showValidationSummaryChange'\n    }, {\n      emit: 'tabIndexChange'\n    }, {\n      emit: 'validationGroupChange'\n    }, {\n      emit: 'visibleChange'\n    }, {\n      emit: 'widthChange'\n    }]);\n\n    this._idh.setHost(this);\n\n    optionHost.setHost(this);\n  }\n  /**\r\n   * Specifies the shortcut key that sets focus on the UI component.\r\n  \r\n   */\n\n\n  get accessKey() {\n    return this._getOption('accessKey');\n  }\n\n  set accessKey(value) {\n    this._setOption('accessKey', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n  \r\n   */\n\n\n  get activeStateEnabled() {\n    return this._getOption('activeStateEnabled');\n  }\n\n  set activeStateEnabled(value) {\n    this._setOption('activeStateEnabled', value);\n  }\n  /**\r\n   * Specifies whether all item labels are aligned. Applies only to labels outside their editors (see labelMode).\r\n  \r\n   */\n\n\n  get alignItemLabels() {\n    return this._getOption('alignItemLabels');\n  }\n\n  set alignItemLabels(value) {\n    this._setOption('alignItemLabels', value);\n  }\n  /**\r\n   * Specifies whether item labels in all groups are aligned. Applies only to labels outside their editors (see labelMode).\r\n  \r\n   */\n\n\n  get alignItemLabelsInAllGroups() {\n    return this._getOption('alignItemLabelsInAllGroups');\n  }\n\n  set alignItemLabelsInAllGroups(value) {\n    this._setOption('alignItemLabelsInAllGroups', value);\n  }\n  /**\r\n   * The count of columns in the form layout.\r\n  \r\n   */\n\n\n  get colCount() {\n    return this._getOption('colCount');\n  }\n\n  set colCount(value) {\n    this._setOption('colCount', value);\n  }\n  /**\r\n   * Specifies dependency between the screen factor and the count of columns in the form layout.\r\n  \r\n   */\n\n\n  get colCountByScreen() {\n    return this._getOption('colCountByScreen');\n  }\n\n  set colCountByScreen(value) {\n    this._setOption('colCountByScreen', value);\n  }\n  /**\r\n   * Specifies a function that customizes a form item after it has been created.\r\n  \r\n   */\n\n\n  get customizeItem() {\n    return this._getOption('customizeItem');\n  }\n\n  set customizeItem(value) {\n    this._setOption('customizeItem', value);\n  }\n  /**\r\n   * Specifies whether the UI component responds to user interaction.\r\n  \r\n   */\n\n\n  get disabled() {\n    return this._getOption('disabled');\n  }\n\n  set disabled(value) {\n    this._setOption('disabled', value);\n  }\n  /**\r\n   * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n  \r\n   */\n\n\n  get elementAttr() {\n    return this._getOption('elementAttr');\n  }\n\n  set elementAttr(value) {\n    this._setOption('elementAttr', value);\n  }\n  /**\r\n   * Specifies whether the UI component can be focused using keyboard navigation.\r\n  \r\n   */\n\n\n  get focusStateEnabled() {\n    return this._getOption('focusStateEnabled');\n  }\n\n  set focusStateEnabled(value) {\n    this._setOption('focusStateEnabled', value);\n  }\n  /**\r\n   * Provides the Form&apos;s data. Gets updated every time form fields change.\r\n  \r\n   */\n\n\n  get formData() {\n    return this._getOption('formData');\n  }\n\n  set formData(value) {\n    this._setOption('formData', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s height.\r\n  \r\n   */\n\n\n  get height() {\n    return this._getOption('height');\n  }\n\n  set height(value) {\n    this._setOption('height', value);\n  }\n  /**\r\n   * Specifies text for a hint that appears when a user pauses on the UI component.\r\n  \r\n   */\n\n\n  get hint() {\n    return this._getOption('hint');\n  }\n\n  set hint(value) {\n    this._setOption('hint', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its state when a user pauses on it.\r\n  \r\n   */\n\n\n  get hoverStateEnabled() {\n    return this._getOption('hoverStateEnabled');\n  }\n\n  set hoverStateEnabled(value) {\n    this._setOption('hoverStateEnabled', value);\n  }\n  /**\r\n   * Holds an array of form items.\r\n  \r\n   */\n\n\n  get items() {\n    return this._getOption('items');\n  }\n\n  set items(value) {\n    this._setOption('items', value);\n  }\n  /**\r\n   * Specifies the location of a label against the editor. Applies only to labels outside their editors (see labelMode).\r\n  \r\n   */\n\n\n  get labelLocation() {\n    return this._getOption('labelLocation');\n  }\n\n  set labelLocation(value) {\n    this._setOption('labelLocation', value);\n  }\n  /**\r\n   * Specifies a display mode for item labels.\r\n  \r\n   */\n\n\n  get labelMode() {\n    return this._getOption('labelMode');\n  }\n\n  set labelMode(value) {\n    this._setOption('labelMode', value);\n  }\n  /**\r\n   * The minimum column width used for calculating column count in the form layout. Applies only if colCount property is &apos;auto&apos;.\r\n  \r\n   */\n\n\n  get minColWidth() {\n    return this._getOption('minColWidth');\n  }\n\n  set minColWidth(value) {\n    this._setOption('minColWidth', value);\n  }\n  /**\r\n   * The text displayed for optional fields. Applies only if showOptionalMark is true.\r\n  \r\n   */\n\n\n  get optionalMark() {\n    return this._getOption('optionalMark');\n  }\n\n  set optionalMark(value) {\n    this._setOption('optionalMark', value);\n  }\n  /**\r\n   * Specifies whether all editors on the form are read-only. Applies only to non-templated items.\r\n  \r\n   */\n\n\n  get readOnly() {\n    return this._getOption('readOnly');\n  }\n\n  set readOnly(value) {\n    this._setOption('readOnly', value);\n  }\n  /**\r\n   * The text displayed for required fields.\r\n  \r\n   */\n\n\n  get requiredMark() {\n    return this._getOption('requiredMark');\n  }\n\n  set requiredMark(value) {\n    this._setOption('requiredMark', value);\n  }\n  /**\r\n   * Specifies the message that is shown for end-users if a required field value is not specified.\r\n  \r\n   */\n\n\n  get requiredMessage() {\n    return this._getOption('requiredMessage');\n  }\n\n  set requiredMessage(value) {\n    this._setOption('requiredMessage', value);\n  }\n  /**\r\n   * Switches the UI component to a right-to-left representation.\r\n  \r\n   */\n\n\n  get rtlEnabled() {\n    return this._getOption('rtlEnabled');\n  }\n\n  set rtlEnabled(value) {\n    this._setOption('rtlEnabled', value);\n  }\n  /**\r\n   * Specifies a function that categorizes screens by their width.\r\n  \r\n   */\n\n\n  get screenByWidth() {\n    return this._getOption('screenByWidth');\n  }\n\n  set screenByWidth(value) {\n    this._setOption('screenByWidth', value);\n  }\n  /**\r\n   * A Boolean value specifying whether to enable or disable form scrolling.\r\n  \r\n   */\n\n\n  get scrollingEnabled() {\n    return this._getOption('scrollingEnabled');\n  }\n\n  set scrollingEnabled(value) {\n    this._setOption('scrollingEnabled', value);\n  }\n  /**\r\n   * Specifies whether a colon is displayed at the end of form labels. Applies only to labels outside their editors (see labelMode).\r\n  \r\n   */\n\n\n  get showColonAfterLabel() {\n    return this._getOption('showColonAfterLabel');\n  }\n\n  set showColonAfterLabel(value) {\n    this._setOption('showColonAfterLabel', value);\n  }\n  /**\r\n   * Specifies whether or not the optional mark is displayed for optional fields.\r\n  \r\n   */\n\n\n  get showOptionalMark() {\n    return this._getOption('showOptionalMark');\n  }\n\n  set showOptionalMark(value) {\n    this._setOption('showOptionalMark', value);\n  }\n  /**\r\n   * Specifies whether or not the required mark is displayed for required fields.\r\n  \r\n   */\n\n\n  get showRequiredMark() {\n    return this._getOption('showRequiredMark');\n  }\n\n  set showRequiredMark(value) {\n    this._setOption('showRequiredMark', value);\n  }\n  /**\r\n   * Specifies whether or not the total validation summary is displayed on the form.\r\n  \r\n   */\n\n\n  get showValidationSummary() {\n    return this._getOption('showValidationSummary');\n  }\n\n  set showValidationSummary(value) {\n    this._setOption('showValidationSummary', value);\n  }\n  /**\r\n   * Specifies the number of the element when the Tab key is used for navigating.\r\n  \r\n   */\n\n\n  get tabIndex() {\n    return this._getOption('tabIndex');\n  }\n\n  set tabIndex(value) {\n    this._setOption('tabIndex', value);\n  }\n  /**\r\n   * Gives a name to the internal validation group.\r\n  \r\n   */\n\n\n  get validationGroup() {\n    return this._getOption('validationGroup');\n  }\n\n  set validationGroup(value) {\n    this._setOption('validationGroup', value);\n  }\n  /**\r\n   * Specifies whether the UI component is visible.\r\n  \r\n   */\n\n\n  get visible() {\n    return this._getOption('visible');\n  }\n\n  set visible(value) {\n    this._setOption('visible', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s width.\r\n  \r\n   */\n\n\n  get width() {\n    return this._getOption('width');\n  }\n\n  set width(value) {\n    this._setOption('width', value);\n  }\n\n  get itemsChildren() {\n    return this._getOption('items');\n  }\n\n  set itemsChildren(value) {\n    this.setChildren('items', value);\n  }\n\n  _createInstance(element, options) {\n    return new DxForm(element, options);\n  }\n\n  ngOnDestroy() {\n    this._destroyWidget();\n  }\n\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n    this.setupChanges('items', changes);\n  }\n\n  setupChanges(prop, changes) {\n    if (!(prop in this._optionsToUpdate)) {\n      this._idh.setup(prop, changes);\n    }\n  }\n\n  ngDoCheck() {\n    this._idh.doCheck('items');\n\n    this._watcherHelper.checkWatchers();\n\n    super.ngDoCheck();\n    super.clearChangedOptions();\n  }\n\n  _setOption(name, value) {\n    let isSetup = this._idh.setupSingle(name, value);\n\n    let isChanged = this._idh.getChanges(name, value) !== null;\n\n    if (isSetup || isChanged) {\n      super._setOption(name, value);\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nDxFormComponent.ɵfac = function DxFormComponent_Factory(t) {\n  return new (t || DxFormComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n/** @nocollapse */\n\n\nDxFormComponent.ɵcmp =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineComponent({\n  type: DxFormComponent,\n  selectors: [[\"dx-form\"]],\n  contentQueries: function DxFormComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);\n    }\n  },\n  inputs: {\n    accessKey: \"accessKey\",\n    activeStateEnabled: \"activeStateEnabled\",\n    alignItemLabels: \"alignItemLabels\",\n    alignItemLabelsInAllGroups: \"alignItemLabelsInAllGroups\",\n    colCount: \"colCount\",\n    colCountByScreen: \"colCountByScreen\",\n    customizeItem: \"customizeItem\",\n    disabled: \"disabled\",\n    elementAttr: \"elementAttr\",\n    focusStateEnabled: \"focusStateEnabled\",\n    formData: \"formData\",\n    height: \"height\",\n    hint: \"hint\",\n    hoverStateEnabled: \"hoverStateEnabled\",\n    items: \"items\",\n    labelLocation: \"labelLocation\",\n    labelMode: \"labelMode\",\n    minColWidth: \"minColWidth\",\n    optionalMark: \"optionalMark\",\n    readOnly: \"readOnly\",\n    requiredMark: \"requiredMark\",\n    requiredMessage: \"requiredMessage\",\n    rtlEnabled: \"rtlEnabled\",\n    screenByWidth: \"screenByWidth\",\n    scrollingEnabled: \"scrollingEnabled\",\n    showColonAfterLabel: \"showColonAfterLabel\",\n    showOptionalMark: \"showOptionalMark\",\n    showRequiredMark: \"showRequiredMark\",\n    showValidationSummary: \"showValidationSummary\",\n    tabIndex: \"tabIndex\",\n    validationGroup: \"validationGroup\",\n    visible: \"visible\",\n    width: \"width\"\n  },\n  outputs: {\n    onContentReady: \"onContentReady\",\n    onDisposing: \"onDisposing\",\n    onEditorEnterKey: \"onEditorEnterKey\",\n    onFieldDataChanged: \"onFieldDataChanged\",\n    onInitialized: \"onInitialized\",\n    onOptionChanged: \"onOptionChanged\",\n    accessKeyChange: \"accessKeyChange\",\n    activeStateEnabledChange: \"activeStateEnabledChange\",\n    alignItemLabelsChange: \"alignItemLabelsChange\",\n    alignItemLabelsInAllGroupsChange: \"alignItemLabelsInAllGroupsChange\",\n    colCountChange: \"colCountChange\",\n    colCountByScreenChange: \"colCountByScreenChange\",\n    customizeItemChange: \"customizeItemChange\",\n    disabledChange: \"disabledChange\",\n    elementAttrChange: \"elementAttrChange\",\n    focusStateEnabledChange: \"focusStateEnabledChange\",\n    formDataChange: \"formDataChange\",\n    heightChange: \"heightChange\",\n    hintChange: \"hintChange\",\n    hoverStateEnabledChange: \"hoverStateEnabledChange\",\n    itemsChange: \"itemsChange\",\n    labelLocationChange: \"labelLocationChange\",\n    labelModeChange: \"labelModeChange\",\n    minColWidthChange: \"minColWidthChange\",\n    optionalMarkChange: \"optionalMarkChange\",\n    readOnlyChange: \"readOnlyChange\",\n    requiredMarkChange: \"requiredMarkChange\",\n    requiredMessageChange: \"requiredMessageChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    screenByWidthChange: \"screenByWidthChange\",\n    scrollingEnabledChange: \"scrollingEnabledChange\",\n    showColonAfterLabelChange: \"showColonAfterLabelChange\",\n    showOptionalMarkChange: \"showOptionalMarkChange\",\n    showRequiredMarkChange: \"showRequiredMarkChange\",\n    showValidationSummaryChange: \"showValidationSummaryChange\",\n    tabIndexChange: \"tabIndexChange\",\n    validationGroupChange: \"validationGroupChange\",\n    visibleChange: \"visibleChange\",\n    widthChange: \"widthChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxFormComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxFormComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-form',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.DxTemplateHost\n    }, {\n      type: i1.WatcherHelper\n    }, {\n      type: i1.IterableDifferHelper\n    }, {\n      type: i1.NestedOptionHost\n    }, {\n      type: i2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    accessKey: [{\n      type: Input\n    }],\n    activeStateEnabled: [{\n      type: Input\n    }],\n    alignItemLabels: [{\n      type: Input\n    }],\n    alignItemLabelsInAllGroups: [{\n      type: Input\n    }],\n    colCount: [{\n      type: Input\n    }],\n    colCountByScreen: [{\n      type: Input\n    }],\n    customizeItem: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    focusStateEnabled: [{\n      type: Input\n    }],\n    formData: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    hint: [{\n      type: Input\n    }],\n    hoverStateEnabled: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    labelLocation: [{\n      type: Input\n    }],\n    labelMode: [{\n      type: Input\n    }],\n    minColWidth: [{\n      type: Input\n    }],\n    optionalMark: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    requiredMark: [{\n      type: Input\n    }],\n    requiredMessage: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    screenByWidth: [{\n      type: Input\n    }],\n    scrollingEnabled: [{\n      type: Input\n    }],\n    showColonAfterLabel: [{\n      type: Input\n    }],\n    showOptionalMark: [{\n      type: Input\n    }],\n    showRequiredMark: [{\n      type: Input\n    }],\n    showValidationSummary: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    validationGroup: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    onContentReady: [{\n      type: Output\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onEditorEnterKey: [{\n      type: Output\n    }],\n    onFieldDataChanged: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    accessKeyChange: [{\n      type: Output\n    }],\n    activeStateEnabledChange: [{\n      type: Output\n    }],\n    alignItemLabelsChange: [{\n      type: Output\n    }],\n    alignItemLabelsInAllGroupsChange: [{\n      type: Output\n    }],\n    colCountChange: [{\n      type: Output\n    }],\n    colCountByScreenChange: [{\n      type: Output\n    }],\n    customizeItemChange: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    focusStateEnabledChange: [{\n      type: Output\n    }],\n    formDataChange: [{\n      type: Output\n    }],\n    heightChange: [{\n      type: Output\n    }],\n    hintChange: [{\n      type: Output\n    }],\n    hoverStateEnabledChange: [{\n      type: Output\n    }],\n    itemsChange: [{\n      type: Output\n    }],\n    labelLocationChange: [{\n      type: Output\n    }],\n    labelModeChange: [{\n      type: Output\n    }],\n    minColWidthChange: [{\n      type: Output\n    }],\n    optionalMarkChange: [{\n      type: Output\n    }],\n    readOnlyChange: [{\n      type: Output\n    }],\n    requiredMarkChange: [{\n      type: Output\n    }],\n    requiredMessageChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    screenByWidthChange: [{\n      type: Output\n    }],\n    scrollingEnabledChange: [{\n      type: Output\n    }],\n    showColonAfterLabelChange: [{\n      type: Output\n    }],\n    showOptionalMarkChange: [{\n      type: Output\n    }],\n    showRequiredMarkChange: [{\n      type: Output\n    }],\n    showValidationSummaryChange: [{\n      type: Output\n    }],\n    tabIndexChange: [{\n      type: Output\n    }],\n    validationGroupChange: [{\n      type: Output\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    widthChange: [{\n      type: Output\n    }],\n    itemsChildren: [{\n      type: ContentChildren,\n      args: [DxiItemComponent]\n    }]\n  });\n})();\n\nclass DxFormModule {}\n/** @nocollapse */\n\n\nDxFormModule.ɵfac = function DxFormModule_Factory(t) {\n  return new (t || DxFormModule)();\n};\n/** @nocollapse */\n\n\nDxFormModule.ɵmod =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineNgModule({\n  type: DxFormModule\n});\n/** @nocollapse */\n\nDxFormModule.ɵinj =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineInjector({\n  imports: [[DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxFormModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxFormComponent],\n      exports: [DxFormComponent, DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxFormModule, {\n    declarations: [DxFormComponent],\n    imports: [DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n    exports: [DxFormComponent, DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule, DxTemplateModule]\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxFormComponent, DxFormModule };","map":{"version":3,"names":["i2","BrowserTransferStateModule","i0","PLATFORM_ID","Component","Inject","Input","Output","ContentChildren","NgModule","DxForm","i1","DxComponent","DxTemplateHost","WatcherHelper","NestedOptionHost","IterableDifferHelper","DxIntegrationModule","DxTemplateModule","DxiItemComponent","DxoColCountByScreenModule","DxiItemModule","DxoLabelModule","DxiValidationRuleModule","DxoTabPanelOptionsModule","DxiTabModule","DxoButtonOptionsModule","DxFormComponent","constructor","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","_createEventEmitters","subscribe","emit","setHost","accessKey","_getOption","value","_setOption","activeStateEnabled","alignItemLabels","alignItemLabelsInAllGroups","colCount","colCountByScreen","customizeItem","disabled","elementAttr","focusStateEnabled","formData","height","hint","hoverStateEnabled","items","labelLocation","labelMode","minColWidth","optionalMark","readOnly","requiredMark","requiredMessage","rtlEnabled","screenByWidth","scrollingEnabled","showColonAfterLabel","showOptionalMark","showRequiredMark","showValidationSummary","tabIndex","validationGroup","visible","width","itemsChildren","setChildren","_createInstance","element","options","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","name","isSetup","setupSingle","isChanged","getChanges","ɵfac","DxFormComponent_Factory","t","ɵɵdirectiveInject","ElementRef","NgZone","TransferState","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","DxFormComponent_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","inputs","outputs","onContentReady","onDisposing","onEditorEnterKey","onFieldDataChanged","onInitialized","onOptionChanged","accessKeyChange","activeStateEnabledChange","alignItemLabelsChange","alignItemLabelsInAllGroupsChange","colCountChange","colCountByScreenChange","customizeItemChange","disabledChange","elementAttrChange","focusStateEnabledChange","formDataChange","heightChange","hintChange","hoverStateEnabledChange","itemsChange","labelLocationChange","labelModeChange","minColWidthChange","optionalMarkChange","readOnlyChange","requiredMarkChange","requiredMessageChange","rtlEnabledChange","screenByWidthChange","scrollingEnabledChange","showColonAfterLabelChange","showOptionalMarkChange","showRequiredMarkChange","showValidationSummaryChange","tabIndexChange","validationGroupChange","visibleChange","widthChange","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","decls","vars","template","DxFormComponent_Template","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","providers","undefined","decorators","DxFormModule","DxFormModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-form.js"],"sourcesContent":["import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, Inject, Input, Output, ContentChildren, NgModule } from '@angular/core';\nimport DxForm from 'devextreme/ui/form';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiItemComponent, DxoColCountByScreenModule, DxiItemModule, DxoLabelModule, DxiValidationRuleModule, DxoTabPanelOptionsModule, DxiTabModule, DxoButtonOptionsModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\n/**\r\n * The Form UI component represents fields of a data object as a collection of label-editor pairs. These pairs can be arranged in several groups, tabs and columns.\r\n\r\n */\r\nclass DxFormComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._watcherHelper = _watcherHelper;\r\n        this._idh = _idh;\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'editorEnterKey', emit: 'onEditorEnterKey' },\r\n            { subscribe: 'fieldDataChanged', emit: 'onFieldDataChanged' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'alignItemLabelsChange' },\r\n            { emit: 'alignItemLabelsInAllGroupsChange' },\r\n            { emit: 'colCountChange' },\r\n            { emit: 'colCountByScreenChange' },\r\n            { emit: 'customizeItemChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'formDataChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'itemsChange' },\r\n            { emit: 'labelLocationChange' },\r\n            { emit: 'labelModeChange' },\r\n            { emit: 'minColWidthChange' },\r\n            { emit: 'optionalMarkChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'requiredMarkChange' },\r\n            { emit: 'requiredMessageChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'screenByWidthChange' },\r\n            { emit: 'scrollingEnabledChange' },\r\n            { emit: 'showColonAfterLabelChange' },\r\n            { emit: 'showOptionalMarkChange' },\r\n            { emit: 'showRequiredMarkChange' },\r\n            { emit: 'showValidationSummaryChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'validationGroupChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' }\r\n        ]);\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\r\n    get accessKey() {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n    \r\n     */\r\n    get activeStateEnabled() {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies whether all item labels are aligned. Applies only to labels outside their editors (see labelMode).\r\n    \r\n     */\r\n    get alignItemLabels() {\r\n        return this._getOption('alignItemLabels');\r\n    }\r\n    set alignItemLabels(value) {\r\n        this._setOption('alignItemLabels', value);\r\n    }\r\n    /**\r\n     * Specifies whether item labels in all groups are aligned. Applies only to labels outside their editors (see labelMode).\r\n    \r\n     */\r\n    get alignItemLabelsInAllGroups() {\r\n        return this._getOption('alignItemLabelsInAllGroups');\r\n    }\r\n    set alignItemLabelsInAllGroups(value) {\r\n        this._setOption('alignItemLabelsInAllGroups', value);\r\n    }\r\n    /**\r\n     * The count of columns in the form layout.\r\n    \r\n     */\r\n    get colCount() {\r\n        return this._getOption('colCount');\r\n    }\r\n    set colCount(value) {\r\n        this._setOption('colCount', value);\r\n    }\r\n    /**\r\n     * Specifies dependency between the screen factor and the count of columns in the form layout.\r\n    \r\n     */\r\n    get colCountByScreen() {\r\n        return this._getOption('colCountByScreen');\r\n    }\r\n    set colCountByScreen(value) {\r\n        this._setOption('colCountByScreen', value);\r\n    }\r\n    /**\r\n     * Specifies a function that customizes a form item after it has been created.\r\n    \r\n     */\r\n    get customizeItem() {\r\n        return this._getOption('customizeItem');\r\n    }\r\n    set customizeItem(value) {\r\n        this._setOption('customizeItem', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    get disabled() {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value) {\r\n        this._setOption('disabled', value);\r\n    }\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component can be focused using keyboard navigation.\r\n    \r\n     */\r\n    get focusStateEnabled() {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n    /**\r\n     * Provides the Form&apos;s data. Gets updated every time form fields change.\r\n    \r\n     */\r\n    get formData() {\r\n        return this._getOption('formData');\r\n    }\r\n    set formData(value) {\r\n        this._setOption('formData', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    get hint() {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value) {\r\n        this._setOption('hint', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    get hoverStateEnabled() {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n    /**\r\n     * Holds an array of form items.\r\n    \r\n     */\r\n    get items() {\r\n        return this._getOption('items');\r\n    }\r\n    set items(value) {\r\n        this._setOption('items', value);\r\n    }\r\n    /**\r\n     * Specifies the location of a label against the editor. Applies only to labels outside their editors (see labelMode).\r\n    \r\n     */\r\n    get labelLocation() {\r\n        return this._getOption('labelLocation');\r\n    }\r\n    set labelLocation(value) {\r\n        this._setOption('labelLocation', value);\r\n    }\r\n    /**\r\n     * Specifies a display mode for item labels.\r\n    \r\n     */\r\n    get labelMode() {\r\n        return this._getOption('labelMode');\r\n    }\r\n    set labelMode(value) {\r\n        this._setOption('labelMode', value);\r\n    }\r\n    /**\r\n     * The minimum column width used for calculating column count in the form layout. Applies only if colCount property is &apos;auto&apos;.\r\n    \r\n     */\r\n    get minColWidth() {\r\n        return this._getOption('minColWidth');\r\n    }\r\n    set minColWidth(value) {\r\n        this._setOption('minColWidth', value);\r\n    }\r\n    /**\r\n     * The text displayed for optional fields. Applies only if showOptionalMark is true.\r\n    \r\n     */\r\n    get optionalMark() {\r\n        return this._getOption('optionalMark');\r\n    }\r\n    set optionalMark(value) {\r\n        this._setOption('optionalMark', value);\r\n    }\r\n    /**\r\n     * Specifies whether all editors on the form are read-only. Applies only to non-templated items.\r\n    \r\n     */\r\n    get readOnly() {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n    /**\r\n     * The text displayed for required fields.\r\n    \r\n     */\r\n    get requiredMark() {\r\n        return this._getOption('requiredMark');\r\n    }\r\n    set requiredMark(value) {\r\n        this._setOption('requiredMark', value);\r\n    }\r\n    /**\r\n     * Specifies the message that is shown for end-users if a required field value is not specified.\r\n    \r\n     */\r\n    get requiredMessage() {\r\n        return this._getOption('requiredMessage');\r\n    }\r\n    set requiredMessage(value) {\r\n        this._setOption('requiredMessage', value);\r\n    }\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies a function that categorizes screens by their width.\r\n    \r\n     */\r\n    get screenByWidth() {\r\n        return this._getOption('screenByWidth');\r\n    }\r\n    set screenByWidth(value) {\r\n        this._setOption('screenByWidth', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether to enable or disable form scrolling.\r\n    \r\n     */\r\n    get scrollingEnabled() {\r\n        return this._getOption('scrollingEnabled');\r\n    }\r\n    set scrollingEnabled(value) {\r\n        this._setOption('scrollingEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies whether a colon is displayed at the end of form labels. Applies only to labels outside their editors (see labelMode).\r\n    \r\n     */\r\n    get showColonAfterLabel() {\r\n        return this._getOption('showColonAfterLabel');\r\n    }\r\n    set showColonAfterLabel(value) {\r\n        this._setOption('showColonAfterLabel', value);\r\n    }\r\n    /**\r\n     * Specifies whether or not the optional mark is displayed for optional fields.\r\n    \r\n     */\r\n    get showOptionalMark() {\r\n        return this._getOption('showOptionalMark');\r\n    }\r\n    set showOptionalMark(value) {\r\n        this._setOption('showOptionalMark', value);\r\n    }\r\n    /**\r\n     * Specifies whether or not the required mark is displayed for required fields.\r\n    \r\n     */\r\n    get showRequiredMark() {\r\n        return this._getOption('showRequiredMark');\r\n    }\r\n    set showRequiredMark(value) {\r\n        this._setOption('showRequiredMark', value);\r\n    }\r\n    /**\r\n     * Specifies whether or not the total validation summary is displayed on the form.\r\n    \r\n     */\r\n    get showValidationSummary() {\r\n        return this._getOption('showValidationSummary');\r\n    }\r\n    set showValidationSummary(value) {\r\n        this._setOption('showValidationSummary', value);\r\n    }\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n    \r\n     */\r\n    get tabIndex() {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n    /**\r\n     * Gives a name to the internal validation group.\r\n    \r\n     */\r\n    get validationGroup() {\r\n        return this._getOption('validationGroup');\r\n    }\r\n    set validationGroup(value) {\r\n        this._setOption('validationGroup', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component is visible.\r\n    \r\n     */\r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value) {\r\n        this._setOption('visible', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    get itemsChildren() {\r\n        return this._getOption('items');\r\n    }\r\n    set itemsChildren(value) {\r\n        this.setChildren('items', value);\r\n    }\r\n    _createInstance(element, options) {\r\n        return new DxForm(element, options);\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('items', changes);\r\n    }\r\n    setupChanges(prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        this._idh.doCheck('items');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n    _setOption(name, value) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ DxFormComponent.ɵfac = function DxFormComponent_Factory(t) { return new (t || DxFormComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\r\n/** @nocollapse */ DxFormComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxFormComponent, selectors: [[\"dx-form\"]], contentQueries: function DxFormComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        i0.ɵɵcontentQuery(dirIndex, DxiItemComponent, 4);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.itemsChildren = _t);\r\n    } }, inputs: { accessKey: \"accessKey\", activeStateEnabled: \"activeStateEnabled\", alignItemLabels: \"alignItemLabels\", alignItemLabelsInAllGroups: \"alignItemLabelsInAllGroups\", colCount: \"colCount\", colCountByScreen: \"colCountByScreen\", customizeItem: \"customizeItem\", disabled: \"disabled\", elementAttr: \"elementAttr\", focusStateEnabled: \"focusStateEnabled\", formData: \"formData\", height: \"height\", hint: \"hint\", hoverStateEnabled: \"hoverStateEnabled\", items: \"items\", labelLocation: \"labelLocation\", labelMode: \"labelMode\", minColWidth: \"minColWidth\", optionalMark: \"optionalMark\", readOnly: \"readOnly\", requiredMark: \"requiredMark\", requiredMessage: \"requiredMessage\", rtlEnabled: \"rtlEnabled\", screenByWidth: \"screenByWidth\", scrollingEnabled: \"scrollingEnabled\", showColonAfterLabel: \"showColonAfterLabel\", showOptionalMark: \"showOptionalMark\", showRequiredMark: \"showRequiredMark\", showValidationSummary: \"showValidationSummary\", tabIndex: \"tabIndex\", validationGroup: \"validationGroup\", visible: \"visible\", width: \"width\" }, outputs: { onContentReady: \"onContentReady\", onDisposing: \"onDisposing\", onEditorEnterKey: \"onEditorEnterKey\", onFieldDataChanged: \"onFieldDataChanged\", onInitialized: \"onInitialized\", onOptionChanged: \"onOptionChanged\", accessKeyChange: \"accessKeyChange\", activeStateEnabledChange: \"activeStateEnabledChange\", alignItemLabelsChange: \"alignItemLabelsChange\", alignItemLabelsInAllGroupsChange: \"alignItemLabelsInAllGroupsChange\", colCountChange: \"colCountChange\", colCountByScreenChange: \"colCountByScreenChange\", customizeItemChange: \"customizeItemChange\", disabledChange: \"disabledChange\", elementAttrChange: \"elementAttrChange\", focusStateEnabledChange: \"focusStateEnabledChange\", formDataChange: \"formDataChange\", heightChange: \"heightChange\", hintChange: \"hintChange\", hoverStateEnabledChange: \"hoverStateEnabledChange\", itemsChange: \"itemsChange\", labelLocationChange: \"labelLocationChange\", labelModeChange: \"labelModeChange\", minColWidthChange: \"minColWidthChange\", optionalMarkChange: \"optionalMarkChange\", readOnlyChange: \"readOnlyChange\", requiredMarkChange: \"requiredMarkChange\", requiredMessageChange: \"requiredMessageChange\", rtlEnabledChange: \"rtlEnabledChange\", screenByWidthChange: \"screenByWidthChange\", scrollingEnabledChange: \"scrollingEnabledChange\", showColonAfterLabelChange: \"showColonAfterLabelChange\", showOptionalMarkChange: \"showOptionalMarkChange\", showRequiredMarkChange: \"showRequiredMarkChange\", showValidationSummaryChange: \"showValidationSummaryChange\", tabIndexChange: \"tabIndexChange\", validationGroupChange: \"validationGroupChange\", visibleChange: \"visibleChange\", widthChange: \"widthChange\" }, features: [i0.ɵɵProvidersFeature([\r\n            DxTemplateHost,\r\n            WatcherHelper,\r\n            NestedOptionHost,\r\n            IterableDifferHelper\r\n        ]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DxFormComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxFormComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'dx-form',\r\n                template: '',\r\n                providers: [\r\n                    DxTemplateHost,\r\n                    WatcherHelper,\r\n                    NestedOptionHost,\r\n                    IterableDifferHelper\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.DxTemplateHost }, { type: i1.WatcherHelper }, { type: i1.IterableDifferHelper }, { type: i1.NestedOptionHost }, { type: i2.TransferState }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, { accessKey: [{\r\n            type: Input\r\n        }], activeStateEnabled: [{\r\n            type: Input\r\n        }], alignItemLabels: [{\r\n            type: Input\r\n        }], alignItemLabelsInAllGroups: [{\r\n            type: Input\r\n        }], colCount: [{\r\n            type: Input\r\n        }], colCountByScreen: [{\r\n            type: Input\r\n        }], customizeItem: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], elementAttr: [{\r\n            type: Input\r\n        }], focusStateEnabled: [{\r\n            type: Input\r\n        }], formData: [{\r\n            type: Input\r\n        }], height: [{\r\n            type: Input\r\n        }], hint: [{\r\n            type: Input\r\n        }], hoverStateEnabled: [{\r\n            type: Input\r\n        }], items: [{\r\n            type: Input\r\n        }], labelLocation: [{\r\n            type: Input\r\n        }], labelMode: [{\r\n            type: Input\r\n        }], minColWidth: [{\r\n            type: Input\r\n        }], optionalMark: [{\r\n            type: Input\r\n        }], readOnly: [{\r\n            type: Input\r\n        }], requiredMark: [{\r\n            type: Input\r\n        }], requiredMessage: [{\r\n            type: Input\r\n        }], rtlEnabled: [{\r\n            type: Input\r\n        }], screenByWidth: [{\r\n            type: Input\r\n        }], scrollingEnabled: [{\r\n            type: Input\r\n        }], showColonAfterLabel: [{\r\n            type: Input\r\n        }], showOptionalMark: [{\r\n            type: Input\r\n        }], showRequiredMark: [{\r\n            type: Input\r\n        }], showValidationSummary: [{\r\n            type: Input\r\n        }], tabIndex: [{\r\n            type: Input\r\n        }], validationGroup: [{\r\n            type: Input\r\n        }], visible: [{\r\n            type: Input\r\n        }], width: [{\r\n            type: Input\r\n        }], onContentReady: [{\r\n            type: Output\r\n        }], onDisposing: [{\r\n            type: Output\r\n        }], onEditorEnterKey: [{\r\n            type: Output\r\n        }], onFieldDataChanged: [{\r\n            type: Output\r\n        }], onInitialized: [{\r\n            type: Output\r\n        }], onOptionChanged: [{\r\n            type: Output\r\n        }], accessKeyChange: [{\r\n            type: Output\r\n        }], activeStateEnabledChange: [{\r\n            type: Output\r\n        }], alignItemLabelsChange: [{\r\n            type: Output\r\n        }], alignItemLabelsInAllGroupsChange: [{\r\n            type: Output\r\n        }], colCountChange: [{\r\n            type: Output\r\n        }], colCountByScreenChange: [{\r\n            type: Output\r\n        }], customizeItemChange: [{\r\n            type: Output\r\n        }], disabledChange: [{\r\n            type: Output\r\n        }], elementAttrChange: [{\r\n            type: Output\r\n        }], focusStateEnabledChange: [{\r\n            type: Output\r\n        }], formDataChange: [{\r\n            type: Output\r\n        }], heightChange: [{\r\n            type: Output\r\n        }], hintChange: [{\r\n            type: Output\r\n        }], hoverStateEnabledChange: [{\r\n            type: Output\r\n        }], itemsChange: [{\r\n            type: Output\r\n        }], labelLocationChange: [{\r\n            type: Output\r\n        }], labelModeChange: [{\r\n            type: Output\r\n        }], minColWidthChange: [{\r\n            type: Output\r\n        }], optionalMarkChange: [{\r\n            type: Output\r\n        }], readOnlyChange: [{\r\n            type: Output\r\n        }], requiredMarkChange: [{\r\n            type: Output\r\n        }], requiredMessageChange: [{\r\n            type: Output\r\n        }], rtlEnabledChange: [{\r\n            type: Output\r\n        }], screenByWidthChange: [{\r\n            type: Output\r\n        }], scrollingEnabledChange: [{\r\n            type: Output\r\n        }], showColonAfterLabelChange: [{\r\n            type: Output\r\n        }], showOptionalMarkChange: [{\r\n            type: Output\r\n        }], showRequiredMarkChange: [{\r\n            type: Output\r\n        }], showValidationSummaryChange: [{\r\n            type: Output\r\n        }], tabIndexChange: [{\r\n            type: Output\r\n        }], validationGroupChange: [{\r\n            type: Output\r\n        }], visibleChange: [{\r\n            type: Output\r\n        }], widthChange: [{\r\n            type: Output\r\n        }], itemsChildren: [{\r\n            type: ContentChildren,\r\n            args: [DxiItemComponent]\r\n        }] }); })();\r\nclass DxFormModule {\r\n}\r\n/** @nocollapse */ DxFormModule.ɵfac = function DxFormModule_Factory(t) { return new (t || DxFormModule)(); };\r\n/** @nocollapse */ DxFormModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxFormModule });\r\n/** @nocollapse */ DxFormModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[\r\n            DxoColCountByScreenModule,\r\n            DxiItemModule,\r\n            DxoLabelModule,\r\n            DxiValidationRuleModule,\r\n            DxoTabPanelOptionsModule,\r\n            DxiTabModule,\r\n            DxoButtonOptionsModule,\r\n            DxIntegrationModule,\r\n            DxTemplateModule,\r\n            BrowserTransferStateModule\r\n        ], DxoColCountByScreenModule,\r\n        DxiItemModule,\r\n        DxoLabelModule,\r\n        DxiValidationRuleModule,\r\n        DxoTabPanelOptionsModule,\r\n        DxiTabModule,\r\n        DxoButtonOptionsModule,\r\n        DxTemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxFormModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    DxoColCountByScreenModule,\r\n                    DxiItemModule,\r\n                    DxoLabelModule,\r\n                    DxiValidationRuleModule,\r\n                    DxoTabPanelOptionsModule,\r\n                    DxiTabModule,\r\n                    DxoButtonOptionsModule,\r\n                    DxIntegrationModule,\r\n                    DxTemplateModule,\r\n                    BrowserTransferStateModule\r\n                ],\r\n                declarations: [\r\n                    DxFormComponent\r\n                ],\r\n                exports: [\r\n                    DxFormComponent,\r\n                    DxoColCountByScreenModule,\r\n                    DxiItemModule,\r\n                    DxoLabelModule,\r\n                    DxiValidationRuleModule,\r\n                    DxoTabPanelOptionsModule,\r\n                    DxiTabModule,\r\n                    DxoButtonOptionsModule,\r\n                    DxTemplateModule\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxFormModule, { declarations: [DxFormComponent], imports: [DxoColCountByScreenModule,\r\n        DxiItemModule,\r\n        DxoLabelModule,\r\n        DxiValidationRuleModule,\r\n        DxoTabPanelOptionsModule,\r\n        DxiTabModule,\r\n        DxoButtonOptionsModule,\r\n        DxIntegrationModule,\r\n        DxTemplateModule,\r\n        BrowserTransferStateModule], exports: [DxFormComponent, DxoColCountByScreenModule,\r\n        DxiItemModule,\r\n        DxoLabelModule,\r\n        DxiValidationRuleModule,\r\n        DxoTabPanelOptionsModule,\r\n        DxiTabModule,\r\n        DxoButtonOptionsModule,\r\n        DxTemplateModule] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxFormComponent, DxFormModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}