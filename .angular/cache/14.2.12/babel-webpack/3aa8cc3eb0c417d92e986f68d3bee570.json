{"ast":null,"code":"/**\r\n * Axis Label module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Label } from \"../../core/elements/Label\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar AxisLabel =\n/** @class */\nfunction (_super) {\n  __extends(AxisLabel, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function AxisLabel() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"AxisLabel\";\n    _this.isMeasured = false;\n\n    _this.padding(10, 10, 10, 10);\n\n    _this.location = 0.5; //this.nonScaling = true; // not good for perf\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(AxisLabel.prototype, \"location\", {\n    /**\r\n     * @return Location (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"location\");\n    },\n\n    /**\r\n     * Relative location of the label. (0-1)\r\n     *\r\n     * @param value  Location (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"location\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisLabel.prototype, \"inside\", {\n    /**\r\n     * Returns if label is set to be drawn inside axis.\r\n     *\r\n     * @return Inside?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inside\");\n    },\n\n    /**\r\n     * Sets if label should be drawn inside axis.\r\n     *\r\n     * @param value  Inside?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"inside\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  AxisLabel.prototype.setDisabled = function (value) {\n    var changed = _super.prototype.setDisabled.call(this, value);\n\n    if (this.axis) {\n      this.axis.invalidateDataItems();\n    }\n\n    return changed;\n  };\n\n  return AxisLabel;\n}(Label);\n\nexport { AxisLabel };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;","map":{"version":3,"names":["__extends","Label","registry","AxisLabel","_super","_this","call","className","isMeasured","padding","location","applyTheme","Object","defineProperty","prototype","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","setDisabled","changed","axis","invalidateDataItems","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js"],"sourcesContent":["/**\r\n * Axis Label module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Use to create labels on Axis.\r\n *\r\n * @see {@link IAxisLabelEvents} for a list of available events\r\n * @see {@link IAxisLabelAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar AxisLabel = /** @class */ (function (_super) {\r\n    __extends(AxisLabel, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function AxisLabel() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"AxisLabel\";\r\n        _this.isMeasured = false;\r\n        _this.padding(10, 10, 10, 10);\r\n        _this.location = 0.5;\r\n        //this.nonScaling = true; // not good for perf\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisLabel.prototype, \"location\", {\r\n        /**\r\n         * @return Location (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"location\");\r\n        },\r\n        /**\r\n         * Relative location of the label. (0-1)\r\n         *\r\n         * @param value  Location (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"location\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisLabel.prototype, \"inside\", {\r\n        /**\r\n         * Returns if label is set to be drawn inside axis.\r\n         *\r\n         * @return Inside?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inside\");\r\n        },\r\n        /**\r\n         * Sets if label should be drawn inside axis.\r\n         *\r\n         * @param value  Inside?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"inside\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisLabel.prototype.setDisabled = function (value) {\r\n        var changed = _super.prototype.setDisabled.call(this, value);\r\n        if (this.axis) {\r\n            this.axis.invalidateDataItems();\r\n        }\r\n        return changed;\r\n    };\r\n    return AxisLabel;\r\n}(Label));\r\nexport { AxisLabel };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisLabel\"] = AxisLabel;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC7CJ,SAAS,CAACG,SAAD,EAAYC,MAAZ,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,SAAT,GAAqB;IACjB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,WAAlB;IACAF,KAAK,CAACG,UAAN,GAAmB,KAAnB;;IACAH,KAAK,CAACI,OAAN,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B;;IACAJ,KAAK,CAACK,QAAN,GAAiB,GAAjB,CALiB,CAMjB;;IACAL,KAAK,CAACM,UAAN;;IACA,OAAON,KAAP;EACH;;EACDO,MAAM,CAACC,cAAP,CAAsBV,SAAS,CAACW,SAAhC,EAA2C,UAA3C,EAAuD;IACnD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,gBAAL,CAAsB,UAAtB,CAAP;IACH,CANkD;;IAOnD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,KAAKC,gBAAL,CAAsB,UAAtB,EAAkCD,KAAlC,EAAyC,IAAzC;IACH,CAdkD;IAenDE,UAAU,EAAE,IAfuC;IAgBnDC,YAAY,EAAE;EAhBqC,CAAvD;EAkBAT,MAAM,CAACC,cAAP,CAAsBV,SAAS,CAACW,SAAhC,EAA2C,QAA3C,EAAqD;IACjD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,gBAAL,CAAsB,QAAtB,CAAP;IACH,CARgD;;IASjD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,KAAKC,gBAAL,CAAsB,QAAtB,EAAgCD,KAAhC,EAAuC,IAAvC;IACH,CAhBgD;IAiBjDE,UAAU,EAAE,IAjBqC;IAkBjDC,YAAY,EAAE;EAlBmC,CAArD;EAoBA;AACJ;AACA;;EACIlB,SAAS,CAACW,SAAV,CAAoBQ,WAApB,GAAkC,UAAUJ,KAAV,EAAiB;IAC/C,IAAIK,OAAO,GAAGnB,MAAM,CAACU,SAAP,CAAiBQ,WAAjB,CAA6BhB,IAA7B,CAAkC,IAAlC,EAAwCY,KAAxC,CAAd;;IACA,IAAI,KAAKM,IAAT,EAAe;MACX,KAAKA,IAAL,CAAUC,mBAAV;IACH;;IACD,OAAOF,OAAP;EACH,CAND;;EAOA,OAAOpB,SAAP;AACH,CAhE8B,CAgE7BF,KAhE6B,CAA/B;;AAiEA,SAASE,SAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,QAAQ,CAACwB,iBAAT,CAA2B,WAA3B,IAA0CvB,SAA1C"},"metadata":{},"sourceType":"module"}