{"ast":null,"code":"/**\r\n * Rectangular pattern module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Pattern } from \"./Pattern\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Rectangular pattern\r\n */\n\nvar RectPattern =\n/** @class */\nfunction (_super) {\n  __extends(RectPattern, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function RectPattern() {\n    var _this = _super.call(this) || this;\n\n    _this.rectHeight = 1;\n    _this.rectWidth = 1;\n    _this._rect = _this.paper.add(\"rect\");\n\n    _this.addElement(_this._rect);\n\n    return _this;\n  }\n  /**\r\n   * Draws the rectangular element.\r\n   */\n\n\n  RectPattern.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    this.properties[\"rotationX\"] = this.width / 2;\n    this.properties[\"rotationY\"] = this.height / 2;\n\n    if (this._rect) {\n      this._rect.attr({\n        \"width\": this.rectWidth,\n        \"height\": this.rectHeight,\n        \"x\": (this.width - this.rectWidth) / 2,\n        \"y\": (this.height - this.rectHeight) / 2\n      });\n    }\n  };\n\n  Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\n    /**\r\n     * @return Width (px)\r\n     */\n    get: function () {\n      return this.properties[\"rectWidth\"];\n    },\n\n    /**\r\n     * Rectangle width in pixels.\r\n     *\r\n     * @param value Width (px)\r\n     */\n    set: function (value) {\n      this.properties[\"rectWidth\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\n    /**\r\n     * @return Height (px)\r\n     */\n    get: function () {\n      return this.properties[\"rectHeight\"];\n    },\n\n    /**\r\n     * Rectangle height in pixels.\r\n     *\r\n     * @param value Height (px)\r\n     */\n    set: function (value) {\n      this.properties[\"rectHeight\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return RectPattern;\n}(Pattern);\n\nexport { RectPattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;","map":{"version":3,"names":["__extends","Pattern","registry","RectPattern","_super","_this","call","rectHeight","rectWidth","_rect","paper","add","addElement","prototype","draw","properties","width","height","attr","Object","defineProperty","get","set","value","enumerable","configurable","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/RectPattern.js"],"sourcesContent":["/**\r\n * Rectangular pattern module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Pattern } from \"./Pattern\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Rectangular pattern\r\n */\r\nvar RectPattern = /** @class */ (function (_super) {\r\n    __extends(RectPattern, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RectPattern() {\r\n        var _this = _super.call(this) || this;\r\n        _this.rectHeight = 1;\r\n        _this.rectWidth = 1;\r\n        _this._rect = _this.paper.add(\"rect\");\r\n        _this.addElement(_this._rect);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the rectangular element.\r\n     */\r\n    RectPattern.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        this.properties[\"rotationX\"] = this.width / 2;\r\n        this.properties[\"rotationY\"] = this.height / 2;\r\n        if (this._rect) {\r\n            this._rect.attr({ \"width\": this.rectWidth, \"height\": this.rectHeight, \"x\": (this.width - this.rectWidth) / 2, \"y\": (this.height - this.rectHeight) / 2 });\r\n        }\r\n    };\r\n    Object.defineProperty(RectPattern.prototype, \"rectWidth\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectWidth\"];\r\n        },\r\n        /**\r\n         * Rectangle width in pixels.\r\n         *\r\n         * @param value Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectWidth\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RectPattern.prototype, \"rectHeight\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rectHeight\"];\r\n        },\r\n        /**\r\n         * Rectangle height in pixels.\r\n         *\r\n         * @param value Height (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rectHeight\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return RectPattern;\r\n}(Pattern));\r\nexport { RectPattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RectPattern\"] = RectPattern;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC/CJ,SAAS,CAACG,WAAD,EAAcC,MAAd,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,WAAT,GAAuB;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,UAAN,GAAmB,CAAnB;IACAF,KAAK,CAACG,SAAN,GAAkB,CAAlB;IACAH,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CAAd;;IACAN,KAAK,CAACO,UAAN,CAAiBP,KAAK,CAACI,KAAvB;;IACA,OAAOJ,KAAP;EACH;EACD;AACJ;AACA;;;EACIF,WAAW,CAACU,SAAZ,CAAsBC,IAAtB,GAA6B,YAAY;IACrCV,MAAM,CAACS,SAAP,CAAiBC,IAAjB,CAAsBR,IAAtB,CAA2B,IAA3B;;IACA,KAAKS,UAAL,CAAgB,WAAhB,IAA+B,KAAKC,KAAL,GAAa,CAA5C;IACA,KAAKD,UAAL,CAAgB,WAAhB,IAA+B,KAAKE,MAAL,GAAc,CAA7C;;IACA,IAAI,KAAKR,KAAT,EAAgB;MACZ,KAAKA,KAAL,CAAWS,IAAX,CAAgB;QAAE,SAAS,KAAKV,SAAhB;QAA2B,UAAU,KAAKD,UAA1C;QAAsD,KAAK,CAAC,KAAKS,KAAL,GAAa,KAAKR,SAAnB,IAAgC,CAA3F;QAA8F,KAAK,CAAC,KAAKS,MAAL,GAAc,KAAKV,UAApB,IAAkC;MAArI,CAAhB;IACH;EACJ,CAPD;;EAQAY,MAAM,CAACC,cAAP,CAAsBjB,WAAW,CAACU,SAAlC,EAA6C,WAA7C,EAA0D;IACtD;AACR;AACA;IACQQ,GAAG,EAAE,YAAY;MACb,OAAO,KAAKN,UAAL,CAAgB,WAAhB,CAAP;IACH,CANqD;;IAOtD;AACR;AACA;AACA;AACA;IACQO,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,KAAKR,UAAL,CAAgB,WAAhB,IAA+BQ,KAA/B;MACA,KAAKT,IAAL;IACH,CAfqD;IAgBtDU,UAAU,EAAE,IAhB0C;IAiBtDC,YAAY,EAAE;EAjBwC,CAA1D;EAmBAN,MAAM,CAACC,cAAP,CAAsBjB,WAAW,CAACU,SAAlC,EAA6C,YAA7C,EAA2D;IACvD;AACR;AACA;IACQQ,GAAG,EAAE,YAAY;MACb,OAAO,KAAKN,UAAL,CAAgB,YAAhB,CAAP;IACH,CANsD;;IAOvD;AACR;AACA;AACA;AACA;IACQO,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,KAAKR,UAAL,CAAgB,YAAhB,IAAgCQ,KAAhC;MACA,KAAKT,IAAL;IACH,CAfsD;IAgBvDU,UAAU,EAAE,IAhB2C;IAiBvDC,YAAY,EAAE;EAjByC,CAA3D;EAmBA,OAAOtB,WAAP;AACH,CA/DgC,CA+D/BF,OA/D+B,CAAjC;;AAgEA,SAASE,WAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,QAAQ,CAACwB,iBAAT,CAA2B,aAA3B,IAA4CvB,WAA5C"},"metadata":{},"sourceType":"module"}