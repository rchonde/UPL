{"ast":null,"code":"/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { BaseObjectEvents } from \"../Base\";\nimport { registry } from \"../Registry\";\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\n\nvar Validatable =\n/** @class */\nfunction (_super) {\n  __extends(Validatable, _super);\n\n  function Validatable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\r\n     * Is invalid and should be revalidated?\r\n     */\n\n\n    _this._validateDisposer = null;\n    return _this;\n  }\n  /**\r\n   * Invalidates the element, so that it can re-validate/redraw itself in the\r\n   * next cycle.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Validatable.prototype.invalidate = function () {\n    if (this._validateDisposer === null) {\n      this._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\n    }\n  };\n  /**\r\n   * Validates itself.\r\n   *\r\n   * Most probably the extending class will have an overriding `validate()`\r\n   * method which will do actual work, as well as call this method using\r\n   * `super.validate()`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Validatable.prototype.validate = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n\n      this._validateDisposer = null;\n    }\n  };\n\n  Validatable.prototype.dispose = function () {\n    if (this._validateDisposer !== null) {\n      this._validateDisposer.dispose();\n\n      this._validateDisposer = null;\n    }\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return Validatable;\n}(BaseObjectEvents);\n\nexport { Validatable };","map":{"version":3,"names":["__extends","BaseObjectEvents","registry","Validatable","_super","_this","apply","arguments","_validateDisposer","prototype","invalidate","events","on","validate","dispose","call"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/utils/Validatable.js"],"sourcesContent":["/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system beats to revalidate themselves.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObjectEvents } from \"../Base\";\r\nimport { registry } from \"../Registry\";\r\n/**\r\n * This module defines a [[Validatable]] class which can be used by all\r\n * non-[[Sprite]] classes to use system update cycle to revalidate themselves.\r\n *\r\n * @ignore Exclude from docs\r\n */\r\nvar Validatable = /** @class */ (function (_super) {\r\n    __extends(Validatable, _super);\r\n    function Validatable() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Is invalid and should be revalidated?\r\n         */\r\n        _this._validateDisposer = null;\r\n        return _this;\r\n    }\r\n    /**\r\n     * Invalidates the element, so that it can re-validate/redraw itself in the\r\n     * next cycle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Validatable.prototype.invalidate = function () {\r\n        if (this._validateDisposer === null) {\r\n            this._validateDisposer = registry.events.on(\"exitframe\", this.validate, this);\r\n        }\r\n    };\r\n    /**\r\n     * Validates itself.\r\n     *\r\n     * Most probably the extending class will have an overriding `validate()`\r\n     * method which will do actual work, as well as call this method using\r\n     * `super.validate()`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Validatable.prototype.validate = function () {\r\n        if (this._validateDisposer !== null) {\r\n            this._validateDisposer.dispose();\r\n            this._validateDisposer = null;\r\n        }\r\n    };\r\n    Validatable.prototype.dispose = function () {\r\n        if (this._validateDisposer !== null) {\r\n            this._validateDisposer.dispose();\r\n            this._validateDisposer = null;\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return Validatable;\r\n}(BaseObjectEvents));\r\nexport { Validatable };\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC/CJ,SAAS,CAACG,WAAD,EAAcC,MAAd,CAAT;;EACA,SAASD,WAAT,GAAuB;IACnB,IAAIE,KAAK,GAAGD,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACE,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAAhE;IACA;AACR;AACA;;;IACQF,KAAK,CAACG,iBAAN,GAA0B,IAA1B;IACA,OAAOH,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIF,WAAW,CAACM,SAAZ,CAAsBC,UAAtB,GAAmC,YAAY;IAC3C,IAAI,KAAKF,iBAAL,KAA2B,IAA/B,EAAqC;MACjC,KAAKA,iBAAL,GAAyBN,QAAQ,CAACS,MAAT,CAAgBC,EAAhB,CAAmB,WAAnB,EAAgC,KAAKC,QAArC,EAA+C,IAA/C,CAAzB;IACH;EACJ,CAJD;EAKA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACIV,WAAW,CAACM,SAAZ,CAAsBI,QAAtB,GAAiC,YAAY;IACzC,IAAI,KAAKL,iBAAL,KAA2B,IAA/B,EAAqC;MACjC,KAAKA,iBAAL,CAAuBM,OAAvB;;MACA,KAAKN,iBAAL,GAAyB,IAAzB;IACH;EACJ,CALD;;EAMAL,WAAW,CAACM,SAAZ,CAAsBK,OAAtB,GAAgC,YAAY;IACxC,IAAI,KAAKN,iBAAL,KAA2B,IAA/B,EAAqC;MACjC,KAAKA,iBAAL,CAAuBM,OAAvB;;MACA,KAAKN,iBAAL,GAAyB,IAAzB;IACH;;IACDJ,MAAM,CAACK,SAAP,CAAiBK,OAAjB,CAAyBC,IAAzB,CAA8B,IAA9B;EACH,CAND;;EAOA,OAAOZ,WAAP;AACH,CA5CgC,CA4C/BF,gBA5C+B,CAAjC;;AA6CA,SAASE,WAAT"},"metadata":{},"sourceType":"module"}