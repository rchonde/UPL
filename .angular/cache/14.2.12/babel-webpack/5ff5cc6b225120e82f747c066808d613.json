{"ast":null,"code":"/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { List } from \"../../core/utils/List\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { XYChart } from \"../types/XYChart\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { registry } from \"../../core/Registry\";\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $path from \"../../core/rendering/Path\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { color } from \"../../core/utils/Color\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar XYChartScrollbar =\n/** @class */\nfunction (_super) {\n  __extends(XYChartScrollbar, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function XYChartScrollbar() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * A chart element Scrollbar is for.\r\n     */\n\n\n    _this._chart = new MutableValueDisposer();\n    _this.className = \"XYChartScrollbar\";\n    var interfaceColors = new InterfaceColorSet();\n\n    _this.padding(0, 0, 0, 0);\n\n    var scrollbarChart = _this.createChild(XYChart);\n\n    scrollbarChart.shouldClone = false;\n    scrollbarChart.margin(0, 0, 0, 0);\n    scrollbarChart.padding(0, 0, 0, 0);\n    scrollbarChart.interactionsEnabled = false;\n    _this._scrollbarChart = scrollbarChart;\n\n    if (!$utils.isIE()) {\n      var filter = new DesaturateFilter();\n      filter.filterUnits = \"userSpaceOnUse\";\n      scrollbarChart.plotContainer.filters.push(filter);\n    }\n\n    _this._disposers.push(_this._scrollbarChart);\n\n    _this.minHeight = 60;\n    _this.minWidth = 60;\n\n    var unselectedOverlay = _this.createChild(Sprite);\n\n    unselectedOverlay.shouldClone = false;\n    unselectedOverlay.setElement(_this.paper.add(\"path\"));\n    unselectedOverlay.fill = interfaceColors.getFor(\"background\");\n    unselectedOverlay.fillOpacity = 0.8;\n    unselectedOverlay.interactionsEnabled = false;\n    unselectedOverlay.isMeasured = false;\n    unselectedOverlay.toBack();\n    _this._unselectedOverlay = unselectedOverlay;\n\n    _this._disposers.push(_this._unselectedOverlay);\n\n    scrollbarChart.toBack();\n\n    _this.background.cornerRadius(0, 0, 0, 0);\n\n    var thumbBackground = _this.thumb.background;\n    thumbBackground.cornerRadius(0, 0, 0, 0);\n    thumbBackground.fillOpacity = 0;\n    thumbBackground.fill = interfaceColors.getFor(\"background\");\n    var hoverState = thumbBackground.states.getKey(\"hover\");\n\n    if (hoverState) {\n      hoverState.properties.fillOpacity = 0.2;\n    }\n\n    var downState = thumbBackground.states.getKey(\"down\");\n\n    if (downState) {\n      downState.properties.fillOpacity = 0.4;\n    }\n\n    _this._disposers.push(_this._chart);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(XYChartScrollbar.prototype, \"series\", {\n    /**\r\n     * A list of series that are used to draw graph(s) on the scrollbar.\r\n     *\r\n     * @readonly\r\n     * @return Series\r\n     */\n    get: function () {\n      if (!this._series) {\n        this._series = new List();\n\n        this._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\n\n        this._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\n      }\n\n      return this._series;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Decorates a new series when they are pushed into a `series` list.\r\n   *\r\n   * @param event Event\r\n   */\n\n  XYChartScrollbar.prototype.handleSeriesAdded = function (event) {\n    var _this = this;\n\n    var sourceSeries = event.newValue;\n\n    if (!sourceSeries.xAxis || !sourceSeries.yAxis) {\n      return;\n    }\n\n    var scrollbarChart = this.scrollbarChart;\n    scrollbarChart.zoomOutButton.disabled = true;\n    this.chart = sourceSeries.chart;\n    scrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat; // Ensure that scrollbar chart shares the same locale as parent chart\n\n    scrollbarChart.language.locale = this.chart.language.locale;\n    var addXAxis = true;\n    var addYAxis = true; // check if we haven't added clone of x or y axis before\n\n    $iter.each(this.series.iterator(), function (series) {\n      if (series != sourceSeries) {\n        if (series.xAxis == sourceSeries.xAxis && _this.scrollbarChart.xAxes.length > 0) {\n          addXAxis = false;\n        }\n\n        if (series.yAxis == sourceSeries.yAxis && _this.scrollbarChart.yAxes.length > 0) {\n          addYAxis = false;\n        }\n      }\n    });\n    sourceSeries.events.on(\"beforedisposed\", function () {\n      _this.series.removeValue(sourceSeries);\n    });\n    var interfaceColors = new InterfaceColorSet();\n    var series = sourceSeries.clone();\n\n    if (options.onlyShowOnViewport || options.queue) {\n      this.addDisposer(this.chart.events.on(\"removedfromqueue\", function () {\n        scrollbarChart.invalidateData();\n      }));\n    }\n\n    if ($utils.isIE()) {\n      series.stroke = color(\"#aaaaaa\");\n      series.fill = series.stroke;\n      series.propertyFields.fill = undefined;\n      series.propertyFields.stroke = undefined;\n    }\n\n    sourceSeries.scrollbarSeries = series;\n\n    if (addXAxis) {\n      var xAxis = sourceSeries.xAxis.clone();\n      scrollbarChart.xAxes.moveValue(xAxis);\n      xAxis.title.disabled = true;\n      xAxis.rangeChangeDuration = 0; //xAxis.id = sourceSeries.uid;\n\n      var renderer = xAxis.renderer;\n      renderer.ticks.template.disabled = true;\n      renderer.inside = true;\n      renderer.labels.template.inside = true;\n      renderer.line.strokeOpacity = 0;\n      renderer.minLabelPosition = 0.02;\n      renderer.maxLabelPosition = 0.98;\n      renderer.line.disabled = true;\n      renderer.axisFills.template.disabled = true;\n      renderer.baseGrid.disabled = true;\n      renderer.grid.template.strokeOpacity = 0.05;\n      renderer.minWidth = undefined;\n      renderer.minHeight = undefined;\n      renderer.padding(0, 0, 0, 0);\n      renderer.chart = scrollbarChart;\n      renderer.margin(0, 0, 0, 0);\n      xAxis.width = percent(100);\n      var labelsTemplate = renderer.labels.template;\n      labelsTemplate.fillOpacity = 0.5;\n      xAxis.maxZoomCount = undefined;\n      xAxis.minZoomCount = undefined;\n\n      if (xAxis instanceof DateAxis) {\n        var vAxis_1 = xAxis;\n        var sourceAxis = sourceSeries.xAxis;\n        vAxis_1.groupCount = sourceAxis.groupCount * 5;\n        vAxis_1.min = undefined;\n        vAxis_1.max = undefined;\n\n        this._disposers.push(vAxis_1.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_1.clonedFrom.minDefined)) {\n            vAxis_1.min = vAxis_1.clonedFrom.minDefined;\n          }\n\n          if ($type.isNumber(vAxis_1.clonedFrom.maxDefined)) {\n            vAxis_1.max = vAxis_1.clonedFrom.maxDefined;\n          }\n        }, undefined, false));\n      } else if (xAxis instanceof ValueAxis) {\n        var vAxis_2 = xAxis;\n        vAxis_2.min = undefined;\n        vAxis_2.max = undefined;\n\n        if (!$type.isNumber(vAxis_2.clonedFrom.minDefined)) {\n          vAxis_2.min = undefined;\n        }\n\n        if (!$type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\n          vAxis_2.max = undefined;\n        }\n\n        this._disposers.push(vAxis_2.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_2.clonedFrom.minDefined)) {\n            vAxis_2.min = vAxis_2.clonedFrom.min;\n          }\n\n          if ($type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\n            vAxis_2.max = vAxis_2.clonedFrom.max;\n          }\n        }, undefined, false));\n      }\n\n      series.xAxis = xAxis;\n    } else {\n      this.scrollbarChart.xAxes.each(function (xAxis) {\n        if (xAxis.clonedFrom == sourceSeries.xAxis) {\n          series.xAxis = xAxis;\n        }\n      });\n    }\n\n    if (addYAxis) {\n      var yAxis = sourceSeries.yAxis.clone();\n      scrollbarChart.yAxes.moveValue(yAxis);\n      yAxis.title.disabled = true;\n      yAxis.rangeChangeDuration = 0;\n      var renderer = yAxis.renderer;\n      renderer.ticks.template.disabled = true;\n      renderer.inside = true;\n      renderer.labels.template.inside = true;\n      renderer.line.strokeOpacity = 0;\n      renderer.minLabelPosition = 0.02;\n      renderer.maxLabelPosition = 0.98;\n      renderer.line.disabled = true;\n      renderer.axisFills.template.disabled = true;\n      renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\n      renderer.baseGrid.disabled = true;\n      renderer.grid.template.strokeOpacity = 0.05;\n      renderer.minWidth = undefined;\n      renderer.minHeight = undefined;\n      renderer.chart = scrollbarChart;\n      renderer.padding(0, 0, 0, 0);\n      renderer.margin(0, 0, 0, 0);\n      yAxis.height = percent(100);\n      var labelsTemplate = renderer.labels.template;\n      labelsTemplate.fillOpacity = 0.5;\n      series.yAxis = yAxis;\n      yAxis.maxZoomCount = undefined;\n      yAxis.minZoomCount = undefined;\n\n      if (yAxis instanceof DateAxis) {\n        var vAxis_3 = yAxis;\n        vAxis_3.min = undefined;\n        vAxis_3.max = undefined;\n        var sourceAxis = sourceSeries.yAxis;\n        yAxis.groupCount = sourceAxis.groupCount * 5;\n\n        this._disposers.push(vAxis_3.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_3.clonedFrom.minDefined)) {\n            vAxis_3.min = vAxis_3.clonedFrom.minDefined;\n          }\n\n          if ($type.isNumber(vAxis_3.clonedFrom.maxDefined)) {\n            vAxis_3.max = vAxis_3.clonedFrom.maxDefined;\n          }\n        }));\n      } else if (yAxis instanceof ValueAxis) {\n        var vAxis_4 = yAxis;\n        vAxis_4.min = undefined;\n        vAxis_4.max = undefined;\n\n        if (!$type.isNumber(vAxis_4.clonedFrom.minDefined)) {\n          vAxis_4.min = undefined;\n        }\n\n        if (!$type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\n          vAxis_4.max = undefined;\n        }\n\n        this._disposers.push(vAxis_4.clonedFrom.events.on(\"extremeschanged\", function () {\n          if ($type.isNumber(vAxis_4.clonedFrom.minDefined)) {\n            vAxis_4.min = vAxis_4.clonedFrom.minDefined;\n          }\n\n          if ($type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\n            vAxis_4.max = vAxis_4.clonedFrom.maxDefined;\n          }\n        }));\n      }\n    } else {\n      this.scrollbarChart.yAxes.each(function (yAxis) {\n        if (yAxis.clonedFrom == sourceSeries.yAxis) {\n          series.yAxis = yAxis;\n        }\n      });\n    }\n\n    series.rangeChangeDuration = 0;\n    series.interpolationDuration = 0;\n    series.defaultState.transitionDuration = 0;\n    series.showOnInit = false;\n\n    this._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false)); // data might be set drectly on series\n\n\n    this._disposers.push(sourceSeries.events.on(\"datavalidated\", function () {\n      if (series.data != sourceSeries.data) {\n        // data setter doesn't check this\n        series.data = sourceSeries.data;\n      }\n    }, undefined, false));\n\n    series.defaultState.properties.visible = true;\n    scrollbarChart.series.push(series);\n    this.updateByOrientation();\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYChartScrollbar.prototype.updateByOrientation = function () {\n    var _this = this;\n\n    if (this._scrollbarChart) {\n      $iter.each(this._scrollbarChart.xAxes.iterator(), function (xAxis) {\n        var renderer = xAxis.renderer;\n\n        if (_this.orientation == \"vertical\") {\n          renderer.grid.template.disabled = true;\n          renderer.labels.template.disabled = true;\n          renderer.minGridDistance = 10;\n        } else {\n          renderer.grid.template.disabled = false;\n          renderer.labels.template.disabled = false;\n          renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\n        }\n      });\n      $iter.each(this._scrollbarChart.yAxes.iterator(), function (yAxis) {\n        var renderer = yAxis.renderer;\n\n        if (_this.orientation == \"horizontal\") {\n          renderer.grid.template.disabled = true;\n          renderer.labels.template.disabled = true;\n          renderer.minGridDistance = 10;\n        } else {\n          renderer.grid.template.disabled = false;\n          renderer.labels.template.disabled = false;\n          renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\n        }\n      });\n    }\n  };\n  /**\r\n   * Cleans up after series are removed from Scrollbar.\r\n   *\r\n   * @param event  Event\r\n   */\n\n\n  XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {\n    var sourceSeries = event.oldValue;\n    var scrollbarChart = this.scrollbarChart;\n    scrollbarChart.series.each(function (series) {\n      if (series && series.clonedFrom == sourceSeries) {\n        scrollbarChart.series.removeValue(series);\n      }\n    });\n\n    if (scrollbarChart.series.length == 0) {\n      scrollbarChart.xAxes.clear();\n      scrollbarChart.yAxes.clear();\n    }\n\n    try {\n      sourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\n    } catch (err) {}\n  };\n\n  Object.defineProperty(XYChartScrollbar.prototype, \"scrollbarChart\", {\n    /**\r\n     * A chart element that is used to display graphs in the Scrollbar.\r\n     *\r\n     * This is not the same as `chart`. It's a totally independent instance of\r\n     * [[XYChart]] with separate config, series, etc.\r\n     *\r\n     * It can be configured just like any other [[XYChart]].\r\n     *\r\n     * @readonly\r\n     * @return Scrollbar's internal chart\r\n     */\n    get: function () {\n      return this._scrollbarChart;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYChartScrollbar.prototype, \"chart\", {\n    /**\r\n     * @return Chart\r\n     */\n    get: function () {\n      return this._chart.get();\n    },\n\n    /**\r\n     * A chart that Scrollbar belongs to.\r\n     *\r\n     * @param chart  Chart\r\n     */\n    set: function (chart) {\n      if (this._chart.get() !== chart) {\n        this._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\n\n        this.handleDataChanged();\n        this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYChartScrollbar.prototype, \"unselectedOverlay\", {\n    /**\r\n     * A [[Sprite]] object representing overlay that is used to dim area of the\r\n     * scrollbar that is currently not selected.\r\n     *\r\n     * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n     * completely disabling the dimming, and `1` making unselected area completely\r\n     * blank.\r\n     *\r\n     * @since 4.6.1\r\n     * @readonly\r\n     * @return Unselected area curtain element\r\n     */\n    get: function () {\n      return this._unselectedOverlay;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates Scrollbar's internal chart's data when the main chart's data\r\n   * changes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  XYChartScrollbar.prototype.handleDataChanged = function () {\n    if (this.chart.data != this.scrollbarChart.data) {\n      this.scrollbarChart.data = this.chart.data;\n    } else {\n      // add data is handled in XYChart\n      // invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\n      this.scrollbarChart.invalidateRawData();\n    }\n  };\n  /**\r\n   * Zooms out all axes on the internal chart.\r\n   */\n\n\n  XYChartScrollbar.prototype.zoomOutAxes = function () {\n    var scrollbarChart = this.scrollbarChart;\n    $iter.each(scrollbarChart.xAxes.iterator(), function (x) {\n      x.zoom({\n        start: 0,\n        end: 1\n      }, true, true);\n    });\n    $iter.each(scrollbarChart.yAxes.iterator(), function (y) {\n      y.zoom({\n        start: 0,\n        end: 1\n      }, true, true);\n    });\n  };\n  /**\r\n   * Updates scrollbar thumb.\r\n   *\r\n   * @ignore\r\n   */\n\n\n  XYChartScrollbar.prototype.updateThumb = function (dispatchEvents) {\n    if (dispatchEvents === void 0) {\n      dispatchEvents = true;\n    }\n\n    _super.prototype.updateThumb.call(this, dispatchEvents);\n\n    if (this._unselectedOverlay) {\n      var thumb = this.thumb;\n      var x = thumb.pixelX || 0;\n      var y = thumb.pixelY || 0;\n      var w = thumb.pixelWidth || 0;\n      var h = thumb.pixelHeight || 0;\n      var path = \"\";\n\n      if (this.orientation == \"horizontal\") {\n        path = $path.rectToPath({\n          x: -1,\n          y: 0,\n          width: x,\n          height: h\n        });\n        path += $path.rectToPath({\n          x: x + w,\n          y: 0,\n          width: (this.pixelWidth || 0) - x - w,\n          height: h\n        });\n      } else {\n        path = $path.rectToPath({\n          x: 0,\n          y: 0,\n          width: w,\n          height: y\n        });\n        path += $path.rectToPath({\n          x: 0,\n          y: y + h,\n          width: w,\n          height: (this.pixelHeight || 0) - y - h\n        });\n      }\n\n      this._unselectedOverlay.path = path;\n    }\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n\n  XYChartScrollbar.prototype.processConfig = function (config) {\n    if (config) {\n      if ($type.hasValue(config.series) && $type.isArray(config.series)) {\n        for (var i = 0, len = config.series.length; i < len; i++) {\n          var series = config.series[i];\n\n          if ($type.hasValue(series) && $type.isString(series)) {\n            if (this.map.hasKey(series)) {\n              config.series[i] = this.map.getKey(series);\n            } else {\n              throw Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\n            }\n          }\n        }\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n\n  return XYChartScrollbar;\n}(Scrollbar);\n\nexport { XYChartScrollbar };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;","map":{"version":3,"names":["__extends","Scrollbar","Sprite","List","MutableValueDisposer","XYChart","ValueAxis","DateAxis","registry","InterfaceColorSet","DesaturateFilter","$iter","$type","$path","$utils","percent","color","options","XYChartScrollbar","_super","_this","call","_chart","className","interfaceColors","padding","scrollbarChart","createChild","shouldClone","margin","interactionsEnabled","_scrollbarChart","isIE","filter","filterUnits","plotContainer","filters","push","_disposers","minHeight","minWidth","unselectedOverlay","setElement","paper","add","fill","getFor","fillOpacity","isMeasured","toBack","_unselectedOverlay","background","cornerRadius","thumbBackground","thumb","hoverState","states","getKey","properties","downState","applyTheme","Object","defineProperty","prototype","get","_series","events","on","handleSeriesAdded","handleSeriesRemoved","enumerable","configurable","event","sourceSeries","newValue","xAxis","yAxis","zoomOutButton","disabled","chart","dateFormatter","inputDateFormat","language","locale","addXAxis","addYAxis","each","series","iterator","xAxes","length","yAxes","removeValue","clone","onlyShowOnViewport","queue","addDisposer","invalidateData","stroke","propertyFields","undefined","scrollbarSeries","moveValue","title","rangeChangeDuration","renderer","ticks","template","inside","labels","line","strokeOpacity","minLabelPosition","maxLabelPosition","axisFills","baseGrid","grid","width","labelsTemplate","maxZoomCount","minZoomCount","vAxis_1","sourceAxis","groupCount","min","max","clonedFrom","isNumber","minDefined","maxDefined","vAxis_2","height","vAxis_3","vAxis_4","interpolationDuration","defaultState","transitionDuration","showOnInit","zoomOutAxes","data","visible","updateByOrientation","orientation","minGridDistance","oldValue","clear","off","err","set","handleDataChanged","dataProvider","invalidateRawData","x","zoom","start","end","y","updateThumb","dispatchEvents","pixelX","pixelY","w","pixelWidth","h","pixelHeight","path","rectToPath","processConfig","config","hasValue","isArray","i","len","isString","map","hasKey","Error","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js"],"sourcesContent":["/**\r\n * A module with functionality for buildin a scrollbar with an XY graph in it.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Scrollbar } from \"../../core/elements/Scrollbar\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { List } from \"../../core/utils/List\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { DesaturateFilter } from \"../../core/rendering/filters/DesaturateFilter\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { color } from \"../../core/utils/Color\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A special version of the Scrollbar that has an XY chart in it.\r\n *\r\n * Used mainly as an advanced scrollbar with a preview for other XY charts.\r\n *\r\n * However, can be used as standalone element.\r\n *\r\n * @see {@link IXYChartScrollbarEvents} for a list of available events\r\n * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYChartScrollbar = /** @class */ (function (_super) {\r\n    __extends(XYChartScrollbar, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYChartScrollbar() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * A chart element Scrollbar is for.\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"XYChartScrollbar\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.padding(0, 0, 0, 0);\r\n        var scrollbarChart = _this.createChild(XYChart);\r\n        scrollbarChart.shouldClone = false;\r\n        scrollbarChart.margin(0, 0, 0, 0);\r\n        scrollbarChart.padding(0, 0, 0, 0);\r\n        scrollbarChart.interactionsEnabled = false;\r\n        _this._scrollbarChart = scrollbarChart;\r\n        if (!$utils.isIE()) {\r\n            var filter = new DesaturateFilter();\r\n            filter.filterUnits = \"userSpaceOnUse\";\r\n            scrollbarChart.plotContainer.filters.push(filter);\r\n        }\r\n        _this._disposers.push(_this._scrollbarChart);\r\n        _this.minHeight = 60;\r\n        _this.minWidth = 60;\r\n        var unselectedOverlay = _this.createChild(Sprite);\r\n        unselectedOverlay.shouldClone = false;\r\n        unselectedOverlay.setElement(_this.paper.add(\"path\"));\r\n        unselectedOverlay.fill = interfaceColors.getFor(\"background\");\r\n        unselectedOverlay.fillOpacity = 0.8;\r\n        unselectedOverlay.interactionsEnabled = false;\r\n        unselectedOverlay.isMeasured = false;\r\n        unselectedOverlay.toBack();\r\n        _this._unselectedOverlay = unselectedOverlay;\r\n        _this._disposers.push(_this._unselectedOverlay);\r\n        scrollbarChart.toBack();\r\n        _this.background.cornerRadius(0, 0, 0, 0);\r\n        var thumbBackground = _this.thumb.background;\r\n        thumbBackground.cornerRadius(0, 0, 0, 0);\r\n        thumbBackground.fillOpacity = 0;\r\n        thumbBackground.fill = interfaceColors.getFor(\"background\");\r\n        var hoverState = thumbBackground.states.getKey(\"hover\");\r\n        if (hoverState) {\r\n            hoverState.properties.fillOpacity = 0.2;\r\n        }\r\n        var downState = thumbBackground.states.getKey(\"down\");\r\n        if (downState) {\r\n            downState.properties.fillOpacity = 0.4;\r\n        }\r\n        _this._disposers.push(_this._chart);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"series\", {\r\n        /**\r\n         * A list of series that are used to draw graph(s) on the scrollbar.\r\n         *\r\n         * @readonly\r\n         * @return Series\r\n         */\r\n        get: function () {\r\n            if (!this._series) {\r\n                this._series = new List();\r\n                this._disposers.push(this._series.events.on(\"inserted\", this.handleSeriesAdded, this, false));\r\n                this._disposers.push(this._series.events.on(\"removed\", this.handleSeriesRemoved, this, false));\r\n            }\r\n            return this._series;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Decorates a new series when they are pushed into a `series` list.\r\n     *\r\n     * @param event Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesAdded = function (event) {\r\n        var _this = this;\r\n        var sourceSeries = event.newValue;\r\n        if (!sourceSeries.xAxis || !sourceSeries.yAxis) {\r\n            return;\r\n        }\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.zoomOutButton.disabled = true;\r\n        this.chart = sourceSeries.chart;\r\n        scrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;\r\n        // Ensure that scrollbar chart shares the same locale as parent chart\r\n        scrollbarChart.language.locale = this.chart.language.locale;\r\n        var addXAxis = true;\r\n        var addYAxis = true;\r\n        // check if we haven't added clone of x or y axis before\r\n        $iter.each(this.series.iterator(), function (series) {\r\n            if (series != sourceSeries) {\r\n                if (series.xAxis == sourceSeries.xAxis && _this.scrollbarChart.xAxes.length > 0) {\r\n                    addXAxis = false;\r\n                }\r\n                if (series.yAxis == sourceSeries.yAxis && _this.scrollbarChart.yAxes.length > 0) {\r\n                    addYAxis = false;\r\n                }\r\n            }\r\n        });\r\n        sourceSeries.events.on(\"beforedisposed\", function () {\r\n            _this.series.removeValue(sourceSeries);\r\n        });\r\n        var interfaceColors = new InterfaceColorSet();\r\n        var series = sourceSeries.clone();\r\n        if (options.onlyShowOnViewport || options.queue) {\r\n            this.addDisposer(this.chart.events.on(\"removedfromqueue\", function () {\r\n                scrollbarChart.invalidateData();\r\n            }));\r\n        }\r\n        if ($utils.isIE()) {\r\n            series.stroke = color(\"#aaaaaa\");\r\n            series.fill = series.stroke;\r\n            series.propertyFields.fill = undefined;\r\n            series.propertyFields.stroke = undefined;\r\n        }\r\n        sourceSeries.scrollbarSeries = series;\r\n        if (addXAxis) {\r\n            var xAxis = sourceSeries.xAxis.clone();\r\n            scrollbarChart.xAxes.moveValue(xAxis);\r\n            xAxis.title.disabled = true;\r\n            xAxis.rangeChangeDuration = 0;\r\n            //xAxis.id = sourceSeries.uid;\r\n            var renderer = xAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.chart = scrollbarChart;\r\n            renderer.margin(0, 0, 0, 0);\r\n            xAxis.width = percent(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            xAxis.maxZoomCount = undefined;\r\n            xAxis.minZoomCount = undefined;\r\n            if (xAxis instanceof DateAxis) {\r\n                var vAxis_1 = xAxis;\r\n                var sourceAxis = sourceSeries.xAxis;\r\n                vAxis_1.groupCount = sourceAxis.groupCount * 5;\r\n                vAxis_1.min = undefined;\r\n                vAxis_1.max = undefined;\r\n                this._disposers.push(vAxis_1.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_1.clonedFrom.minDefined)) {\r\n                        vAxis_1.min = vAxis_1.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_1.clonedFrom.maxDefined)) {\r\n                        vAxis_1.max = vAxis_1.clonedFrom.maxDefined;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            else if (xAxis instanceof ValueAxis) {\r\n                var vAxis_2 = xAxis;\r\n                vAxis_2.min = undefined;\r\n                vAxis_2.max = undefined;\r\n                if (!$type.isNumber(vAxis_2.clonedFrom.minDefined)) {\r\n                    vAxis_2.min = undefined;\r\n                }\r\n                if (!$type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\r\n                    vAxis_2.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_2.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_2.clonedFrom.minDefined)) {\r\n                        vAxis_2.min = vAxis_2.clonedFrom.min;\r\n                    }\r\n                    if ($type.isNumber(vAxis_2.clonedFrom.maxDefined)) {\r\n                        vAxis_2.max = vAxis_2.clonedFrom.max;\r\n                    }\r\n                }, undefined, false));\r\n            }\r\n            series.xAxis = xAxis;\r\n        }\r\n        else {\r\n            this.scrollbarChart.xAxes.each(function (xAxis) {\r\n                if (xAxis.clonedFrom == sourceSeries.xAxis) {\r\n                    series.xAxis = xAxis;\r\n                }\r\n            });\r\n        }\r\n        if (addYAxis) {\r\n            var yAxis = sourceSeries.yAxis.clone();\r\n            scrollbarChart.yAxes.moveValue(yAxis);\r\n            yAxis.title.disabled = true;\r\n            yAxis.rangeChangeDuration = 0;\r\n            var renderer = yAxis.renderer;\r\n            renderer.ticks.template.disabled = true;\r\n            renderer.inside = true;\r\n            renderer.labels.template.inside = true;\r\n            renderer.line.strokeOpacity = 0;\r\n            renderer.minLabelPosition = 0.02;\r\n            renderer.maxLabelPosition = 0.98;\r\n            renderer.line.disabled = true;\r\n            renderer.axisFills.template.disabled = true;\r\n            renderer.grid.template.stroke = interfaceColors.getFor(\"background\");\r\n            renderer.baseGrid.disabled = true;\r\n            renderer.grid.template.strokeOpacity = 0.05;\r\n            renderer.minWidth = undefined;\r\n            renderer.minHeight = undefined;\r\n            renderer.chart = scrollbarChart;\r\n            renderer.padding(0, 0, 0, 0);\r\n            renderer.margin(0, 0, 0, 0);\r\n            yAxis.height = percent(100);\r\n            var labelsTemplate = renderer.labels.template;\r\n            labelsTemplate.fillOpacity = 0.5;\r\n            series.yAxis = yAxis;\r\n            yAxis.maxZoomCount = undefined;\r\n            yAxis.minZoomCount = undefined;\r\n            if (yAxis instanceof DateAxis) {\r\n                var vAxis_3 = yAxis;\r\n                vAxis_3.min = undefined;\r\n                vAxis_3.max = undefined;\r\n                var sourceAxis = sourceSeries.yAxis;\r\n                yAxis.groupCount = sourceAxis.groupCount * 5;\r\n                this._disposers.push(vAxis_3.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_3.clonedFrom.minDefined)) {\r\n                        vAxis_3.min = vAxis_3.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_3.clonedFrom.maxDefined)) {\r\n                        vAxis_3.max = vAxis_3.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n            else if (yAxis instanceof ValueAxis) {\r\n                var vAxis_4 = yAxis;\r\n                vAxis_4.min = undefined;\r\n                vAxis_4.max = undefined;\r\n                if (!$type.isNumber(vAxis_4.clonedFrom.minDefined)) {\r\n                    vAxis_4.min = undefined;\r\n                }\r\n                if (!$type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\r\n                    vAxis_4.max = undefined;\r\n                }\r\n                this._disposers.push(vAxis_4.clonedFrom.events.on(\"extremeschanged\", function () {\r\n                    if ($type.isNumber(vAxis_4.clonedFrom.minDefined)) {\r\n                        vAxis_4.min = vAxis_4.clonedFrom.minDefined;\r\n                    }\r\n                    if ($type.isNumber(vAxis_4.clonedFrom.maxDefined)) {\r\n                        vAxis_4.max = vAxis_4.clonedFrom.maxDefined;\r\n                    }\r\n                }));\r\n            }\r\n        }\r\n        else {\r\n            this.scrollbarChart.yAxes.each(function (yAxis) {\r\n                if (yAxis.clonedFrom == sourceSeries.yAxis) {\r\n                    series.yAxis = yAxis;\r\n                }\r\n            });\r\n        }\r\n        series.rangeChangeDuration = 0;\r\n        series.interpolationDuration = 0;\r\n        series.defaultState.transitionDuration = 0;\r\n        series.showOnInit = false;\r\n        this._disposers.push(series.events.on(\"validated\", this.zoomOutAxes, this, false));\r\n        // data might be set drectly on series\r\n        this._disposers.push(sourceSeries.events.on(\"datavalidated\", function () {\r\n            if (series.data != sourceSeries.data) { // data setter doesn't check this\r\n                series.data = sourceSeries.data;\r\n            }\r\n        }, undefined, false));\r\n        series.defaultState.properties.visible = true;\r\n        scrollbarChart.series.push(series);\r\n        this.updateByOrientation();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYChartScrollbar.prototype.updateByOrientation = function () {\r\n        var _this = this;\r\n        if (this._scrollbarChart) {\r\n            $iter.each(this._scrollbarChart.xAxes.iterator(), function (xAxis) {\r\n                var renderer = xAxis.renderer;\r\n                if (_this.orientation == \"vertical\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n            $iter.each(this._scrollbarChart.yAxes.iterator(), function (yAxis) {\r\n                var renderer = yAxis.renderer;\r\n                if (_this.orientation == \"horizontal\") {\r\n                    renderer.grid.template.disabled = true;\r\n                    renderer.labels.template.disabled = true;\r\n                    renderer.minGridDistance = 10;\r\n                }\r\n                else {\r\n                    renderer.grid.template.disabled = false;\r\n                    renderer.labels.template.disabled = false;\r\n                    renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up after series are removed from Scrollbar.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {\r\n        var sourceSeries = event.oldValue;\r\n        var scrollbarChart = this.scrollbarChart;\r\n        scrollbarChart.series.each(function (series) {\r\n            if (series && series.clonedFrom == sourceSeries) {\r\n                scrollbarChart.series.removeValue(series);\r\n            }\r\n        });\r\n        if (scrollbarChart.series.length == 0) {\r\n            scrollbarChart.xAxes.clear();\r\n            scrollbarChart.yAxes.clear();\r\n        }\r\n        try {\r\n            sourceSeries.events.off(\"validated\", this.zoomOutAxes, this);\r\n        }\r\n        catch (err) {\r\n        }\r\n    };\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"scrollbarChart\", {\r\n        /**\r\n         * A chart element that is used to display graphs in the Scrollbar.\r\n         *\r\n         * This is not the same as `chart`. It's a totally independent instance of\r\n         * [[XYChart]] with separate config, series, etc.\r\n         *\r\n         * It can be configured just like any other [[XYChart]].\r\n         *\r\n         * @readonly\r\n         * @return Scrollbar's internal chart\r\n         */\r\n        get: function () {\r\n            return this._scrollbarChart;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"chart\", {\r\n        /**\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart that Scrollbar belongs to.\r\n         *\r\n         * @param chart  Chart\r\n         */\r\n        set: function (chart) {\r\n            if (this._chart.get() !== chart) {\r\n                this._chart.set(chart, chart.events.on(\"datavalidated\", this.handleDataChanged, this, false));\r\n                this.handleDataChanged();\r\n                this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYChartScrollbar.prototype, \"unselectedOverlay\", {\r\n        /**\r\n         * A [[Sprite]] object representing overlay that is used to dim area of the\r\n         * scrollbar that is currently not selected.\r\n         *\r\n         * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)\r\n         * completely disabling the dimming, and `1` making unselected area completely\r\n         * blank.\r\n         *\r\n         * @since 4.6.1\r\n         * @readonly\r\n         * @return Unselected area curtain element\r\n         */\r\n        get: function () {\r\n            return this._unselectedOverlay;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates Scrollbar's internal chart's data when the main chart's data\r\n     * changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYChartScrollbar.prototype.handleDataChanged = function () {\r\n        if (this.chart.data != this.scrollbarChart.data) {\r\n            this.scrollbarChart.data = this.chart.data;\r\n        }\r\n        else {\r\n            // add data is handled in XYChart\r\n            // invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096\r\n            this.scrollbarChart.invalidateRawData();\r\n        }\r\n    };\r\n    /**\r\n     * Zooms out all axes on the internal chart.\r\n     */\r\n    XYChartScrollbar.prototype.zoomOutAxes = function () {\r\n        var scrollbarChart = this.scrollbarChart;\r\n        $iter.each(scrollbarChart.xAxes.iterator(), function (x) {\r\n            x.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n        $iter.each(scrollbarChart.yAxes.iterator(), function (y) {\r\n            y.zoom({ start: 0, end: 1 }, true, true);\r\n        });\r\n    };\r\n    /**\r\n     * Updates scrollbar thumb.\r\n     *\r\n     * @ignore\r\n     */\r\n    XYChartScrollbar.prototype.updateThumb = function (dispatchEvents) {\r\n        if (dispatchEvents === void 0) { dispatchEvents = true; }\r\n        _super.prototype.updateThumb.call(this, dispatchEvents);\r\n        if (this._unselectedOverlay) {\r\n            var thumb = this.thumb;\r\n            var x = thumb.pixelX || 0;\r\n            var y = thumb.pixelY || 0;\r\n            var w = thumb.pixelWidth || 0;\r\n            var h = thumb.pixelHeight || 0;\r\n            var path = \"\";\r\n            if (this.orientation == \"horizontal\") {\r\n                path = $path.rectToPath({\r\n                    x: -1,\r\n                    y: 0,\r\n                    width: x,\r\n                    height: h\r\n                });\r\n                path += $path.rectToPath({\r\n                    x: x + w,\r\n                    y: 0,\r\n                    width: (this.pixelWidth || 0) - x - w,\r\n                    height: h\r\n                });\r\n            }\r\n            else {\r\n                path = $path.rectToPath({\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: w,\r\n                    height: y\r\n                });\r\n                path += $path.rectToPath({\r\n                    x: 0,\r\n                    y: y + h,\r\n                    width: w,\r\n                    height: (this.pixelHeight || 0) - y - h\r\n                });\r\n            }\r\n            this._unselectedOverlay.path = path;\r\n        }\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYChartScrollbar.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            if ($type.hasValue(config.series) && $type.isArray(config.series)) {\r\n                for (var i = 0, len = config.series.length; i < len; i++) {\r\n                    var series = config.series[i];\r\n                    if ($type.hasValue(series) && $type.isString(series)) {\r\n                        if (this.map.hasKey(series)) {\r\n                            config.series[i] = this.map.getKey(series);\r\n                        }\r\n                        else {\r\n                            throw Error(\"XYChartScrollbar error: Series with id `\" + series + \"` does not exist.\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return XYChartScrollbar;\r\n}(Scrollbar));\r\nexport { XYChartScrollbar };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYChartScrollbar\"] = XYChartScrollbar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}