{"ast":null,"code":"import { dateInTimeZone, timeToUntilString } from './dateutil';\n\nvar DateWithZone =\n/** @class */\nfunction () {\n  function DateWithZone(date, tzid) {\n    if (isNaN(date.getTime())) {\n      throw new RangeError('Invalid date passed to DateWithZone');\n    }\n\n    this.date = date;\n    this.tzid = tzid;\n  }\n\n  Object.defineProperty(DateWithZone.prototype, \"isUTC\", {\n    get: function () {\n      return !this.tzid || this.tzid.toUpperCase() === 'UTC';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DateWithZone.prototype.toString = function () {\n    var datestr = timeToUntilString(this.date.getTime(), this.isUTC);\n\n    if (!this.isUTC) {\n      return \";TZID=\".concat(this.tzid, \":\").concat(datestr);\n    }\n\n    return \":\".concat(datestr);\n  };\n\n  DateWithZone.prototype.getTime = function () {\n    return this.date.getTime();\n  };\n\n  DateWithZone.prototype.rezonedDate = function () {\n    if (this.isUTC) {\n      return this.date;\n    }\n\n    return dateInTimeZone(this.date, this.tzid);\n  };\n\n  return DateWithZone;\n}();\n\nexport { DateWithZone };","map":{"version":3,"names":["dateInTimeZone","timeToUntilString","DateWithZone","date","tzid","isNaN","getTime","RangeError","Object","defineProperty","prototype","get","toUpperCase","enumerable","configurable","toString","datestr","isUTC","concat","rezonedDate"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/rrule/dist/esm/datewithzone.js"],"sourcesContent":["import { dateInTimeZone, timeToUntilString } from './dateutil';\nvar DateWithZone = /** @class */ (function () {\n    function DateWithZone(date, tzid) {\n        if (isNaN(date.getTime())) {\n            throw new RangeError('Invalid date passed to DateWithZone');\n        }\n        this.date = date;\n        this.tzid = tzid;\n    }\n    Object.defineProperty(DateWithZone.prototype, \"isUTC\", {\n        get: function () {\n            return !this.tzid || this.tzid.toUpperCase() === 'UTC';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DateWithZone.prototype.toString = function () {\n        var datestr = timeToUntilString(this.date.getTime(), this.isUTC);\n        if (!this.isUTC) {\n            return \";TZID=\".concat(this.tzid, \":\").concat(datestr);\n        }\n        return \":\".concat(datestr);\n    };\n    DateWithZone.prototype.getTime = function () {\n        return this.date.getTime();\n    };\n    DateWithZone.prototype.rezonedDate = function () {\n        if (this.isUTC) {\n            return this.date;\n        }\n        return dateInTimeZone(this.date, this.tzid);\n    };\n    return DateWithZone;\n}());\nexport { DateWithZone };\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,YAAlD;;AACA,IAAIC,YAAY;AAAG;AAAe,YAAY;EAC1C,SAASA,YAAT,CAAsBC,IAAtB,EAA4BC,IAA5B,EAAkC;IAC9B,IAAIC,KAAK,CAACF,IAAI,CAACG,OAAL,EAAD,CAAT,EAA2B;MACvB,MAAM,IAAIC,UAAJ,CAAe,qCAAf,CAAN;IACH;;IACD,KAAKJ,IAAL,GAAYA,IAAZ;IACA,KAAKC,IAAL,GAAYA,IAAZ;EACH;;EACDI,MAAM,CAACC,cAAP,CAAsBP,YAAY,CAACQ,SAAnC,EAA8C,OAA9C,EAAuD;IACnDC,GAAG,EAAE,YAAY;MACb,OAAO,CAAC,KAAKP,IAAN,IAAc,KAAKA,IAAL,CAAUQ,WAAV,OAA4B,KAAjD;IACH,CAHkD;IAInDC,UAAU,EAAE,KAJuC;IAKnDC,YAAY,EAAE;EALqC,CAAvD;;EAOAZ,YAAY,CAACQ,SAAb,CAAuBK,QAAvB,GAAkC,YAAY;IAC1C,IAAIC,OAAO,GAAGf,iBAAiB,CAAC,KAAKE,IAAL,CAAUG,OAAV,EAAD,EAAsB,KAAKW,KAA3B,CAA/B;;IACA,IAAI,CAAC,KAAKA,KAAV,EAAiB;MACb,OAAO,SAASC,MAAT,CAAgB,KAAKd,IAArB,EAA2B,GAA3B,EAAgCc,MAAhC,CAAuCF,OAAvC,CAAP;IACH;;IACD,OAAO,IAAIE,MAAJ,CAAWF,OAAX,CAAP;EACH,CAND;;EAOAd,YAAY,CAACQ,SAAb,CAAuBJ,OAAvB,GAAiC,YAAY;IACzC,OAAO,KAAKH,IAAL,CAAUG,OAAV,EAAP;EACH,CAFD;;EAGAJ,YAAY,CAACQ,SAAb,CAAuBS,WAAvB,GAAqC,YAAY;IAC7C,IAAI,KAAKF,KAAT,EAAgB;MACZ,OAAO,KAAKd,IAAZ;IACH;;IACD,OAAOH,cAAc,CAAC,KAAKG,IAAN,EAAY,KAAKC,IAAjB,CAArB;EACH,CALD;;EAMA,OAAOF,YAAP;AACH,CAhCiC,EAAlC;;AAiCA,SAASA,YAAT"},"metadata":{},"sourceType":"module"}