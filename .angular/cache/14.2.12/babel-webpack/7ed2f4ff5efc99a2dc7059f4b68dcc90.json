{"ast":null,"code":"/**\r\n * Defines Funnel Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\nimport { FunnelTick } from \"../elements/FunnelTick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $array from \"../../core/utils/Array\";\nimport { percent } from \"../../core/utils/Percent\";\nimport { Disposer } from \"../../core/utils/Disposer\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar FunnelSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(FunnelSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function FunnelSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"FunnelSeriesDataItem\"; // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\n\n    _this.events.on(\"visibilitychanged\", function () {\n      if (_this.component) {\n        _this.component.invalidateDataItems();\n      }\n    }, _this, false);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\n    /**\r\n     * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n     *\r\n     * @readonly\r\n     * @return Slice element\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._sliceLink) {\n        var sliceLink_1 = this.component.sliceLinks.create();\n        this._sliceLink = sliceLink_1;\n\n        this._disposers.push(sliceLink_1);\n\n        sliceLink_1.parent = this.component.slicesContainer;\n\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.sliceLinks.removeValue(sliceLink_1);\n          }\n        }));\n\n        this.addSprite(sliceLink_1);\n        sliceLink_1.visible = this.visible;\n      }\n\n      return this._sliceLink;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeriesDataItem;\n}(PercentSeriesDataItem);\n\nexport { FunnelSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\n\nvar FunnelSeries =\n/** @class */\nfunction (_super) {\n  __extends(FunnelSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function FunnelSeries() {\n    var _this = _super.call(this) || this;\n\n    _this._nextY = 0;\n    _this.className = \"FunnelSeries\";\n    _this.orientation = \"vertical\";\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.slicesContainer.width = percent(100);\n    _this.slicesContainer.height = percent(100);\n\n    _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\n\n    _this.labelsOpposite = true;\n    _this.labelsContainer.layout = \"absolute\";\n    _this.bottomRatio = 0;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Creates a [[FunnelSlice]] element.\r\n   *\r\n   * @return Slice\r\n   */\n\n\n  FunnelSeries.prototype.createSlice = function () {\n    return new FunnelSlice();\n  };\n  /**\r\n   * Creates a [[FunnelTick]] element.\r\n   *\r\n   * @return Tick\r\n   */\n\n\n  FunnelSeries.prototype.createTick = function () {\n    return new FunnelTick();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  FunnelSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Funnel Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  FunnelSeries.prototype.createDataItem = function () {\n    return new FunnelSeriesDataItem();\n  };\n  /**\r\n   * Inits FunnelSlice.\r\n   *\r\n   * @param slice to init\r\n   */\n\n\n  FunnelSeries.prototype.initSlice = function (slice) {\n    slice.isMeasured = false;\n    slice.defaultState.properties.scale = 1;\n    slice.observe(\"scale\", this.handleSliceScale, this);\n    slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\n    slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\n    var hoverState = slice.states.create(\"hover\");\n    hoverState.properties.expandDistance = 0.2;\n  };\n  /**\r\n   * [initLabel description]\r\n   *\r\n   * @todo Description\r\n   * @param label [description]\r\n   */\n\n\n  FunnelSeries.prototype.initLabel = function (label) {\n    _super.prototype.initLabel.call(this, label);\n\n    label.verticalCenter = \"middle\";\n    label.horizontalCenter = \"middle\";\n    label.isMeasured = true;\n    label.padding(5, 5, 5, 5);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  FunnelSeries.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    this._nextY = 0;\n  };\n  /**\r\n   * [validateDataElements description]\r\n   *\r\n   * @todo Description\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  FunnelSeries.prototype.validateDataElements = function () {\n    var _this = this;\n\n    var slicesContainer = this.slicesContainer;\n    var labelsContainer = this.labelsContainer;\n    var labelTemplate = this.labels.template;\n\n    if (this.alignLabels) {\n      labelTemplate.interactionsEnabled = true;\n      slicesContainer.isMeasured = true;\n      labelsContainer.isMeasured = true;\n    } else {\n      labelTemplate.interactionsEnabled = false;\n      slicesContainer.isMeasured = false;\n      labelsContainer.isMeasured = false;\n    }\n\n    var total = 0;\n    var count = 0;\n    this.dataItems.each(function (dItem) {\n      if ($type.hasValue(dItem.value)) {\n        count++;\n\n        if (dItem.value > 0) {\n          total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\n        } else {\n          if (_this.ignoreZeroValues) {\n            count--;\n          } else {\n            if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\n              count--;\n            } else {\n              total += 1;\n            }\n          }\n        }\n      }\n    });\n    this._total = 1 / count * total;\n    this._count = count;\n\n    _super.prototype.validateDataElements.call(this);\n\n    this.arrangeLabels();\n  };\n  /**\r\n   * [getNextValue description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem  [description]\r\n   * @return [description]\r\n   */\n\n\n  FunnelSeries.prototype.getNextValue = function (dataItem) {\n    var index = dataItem.index;\n    var nextValue = dataItem.getWorkingValue(\"value\");\n\n    if (index < this.dataItems.length - 1) {\n      var nextItem = this.dataItems.getIndex(index + 1);\n      nextValue = nextItem.getWorkingValue(\"value\");\n\n      if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || nextItem.value == 0 && this.ignoreZeroValues) {\n        return this.getNextValue(nextItem);\n      }\n    }\n\n    return nextValue;\n  };\n  /**\r\n   * [formDataElement description]\r\n   *\r\n   * @todo Description\r\n   */\n\n\n  FunnelSeries.prototype.formDataElement = function () {};\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  FunnelSeries.prototype.validateDataElement = function (dataItem) {\n    var _this = this; //if ($type.hasValue(dataItem.value)) {\n    // FunnelSlice\n\n\n    var slice = dataItem.slice;\n    slice.orientation = this.orientation;\n    var sliceLink = dataItem.sliceLink;\n    sliceLink.orientation = this.orientation;\n    var tick = dataItem.tick;\n    var label = dataItem.label;\n    tick.slice = slice;\n    tick.label = label;\n\n    if ($type.hasValue(dataItem.value)) {\n      this.decorateSlice(dataItem);\n      $array.each(dataItem.sprites, function (sprite) {\n        if (dataItem.value == 0 && _this.ignoreZeroValues) {\n          sprite.__disabled = true;\n        } else {\n          sprite.__disabled = false;\n        }\n      });\n    } else {\n      $array.each(dataItem.sprites, function (sprite) {\n        sprite.__disabled = true;\n      });\n    }\n\n    if (dataItem.index == this.dataItems.length - 1) {\n      sliceLink.disabled = true;\n    } // do this at the end, otherwise bullets won't be positioned properly\n\n\n    _super.prototype.validateDataElement.call(this, dataItem);\n\n    sliceLink.fill = slice.fill; //}\n  };\n  /**\r\n   * [decorateSlice description]\r\n   *\r\n   * @todo Description\r\n   * @param dataItem [description]\r\n   */\n\n\n  FunnelSeries.prototype.decorateSlice = function (dataItem) {\n    var slice = dataItem.slice;\n    var sliceLink = dataItem.sliceLink;\n    var label = dataItem.label;\n    var tick = dataItem.tick;\n    var maxWidth = this.slicesContainer.innerWidth;\n    var maxHeight = this.slicesContainer.innerHeight;\n    var nextValue = this.getNextValue(dataItem);\n    var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\n    var bottomRatio = this.bottomRatio;\n    var d = 1;\n\n    if (dataItem.value != 0) {\n      d = workingValue / Math.abs(dataItem.value);\n    } else {\n      if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\n        d = 0.000001;\n      }\n    }\n\n    if (this.ignoreZeroValues && dataItem.value == 0) {\n      dataItem.__disabled = true;\n      return;\n    } else {\n      dataItem.__disabled = false;\n    }\n\n    if (this._nextY == Infinity) {\n      this._nextY = 0;\n    }\n\n    if (this.orientation == \"vertical\") {\n      var linkHeight = sliceLink.pixelHeight * d;\n      maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\n\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\n      slice.y = this._nextY;\n      slice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\n      slice.x = maxWidth / 2;\n\n      if (!this.alignLabels) {\n        label.x = slice.x;\n      } else {\n        label.x = undefined;\n      }\n\n      label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\n      this._nextY += slice.pixelHeight + linkHeight;\n      sliceLink.y = this._nextY - linkHeight;\n      sliceLink.x = slice.x;\n    } else {\n      var linkWidth = sliceLink.pixelWidth * d;\n      maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\n\n      slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\n      slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\n      sliceLink.topWidth = slice.bottomWidth;\n      sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\n      slice.x = this._nextY;\n      slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\n      slice.y = maxHeight / 2;\n\n      if (!this.alignLabels) {\n        label.y = slice.y;\n      } else {\n        label.y = this.labelsContainer.measuredHeight;\n      }\n\n      label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\n      this._nextY += slice.pixelWidth + linkWidth;\n      sliceLink.x = this._nextY - linkWidth;\n      sliceLink.y = slice.y;\n    }\n  };\n\n  FunnelSeries.prototype.getLastLabel = function (index) {\n    if (index > 0) {\n      var lastLabel = this.labels.getIndex(index);\n\n      if (lastLabel.__disabled || !lastLabel.visible) {\n        return this.getLastLabel(index - 1);\n      } else {\n        return lastLabel;\n      }\n    }\n  };\n  /**\r\n   * [arrangeLabels description]\r\n   *\r\n   * @todo Description\r\n   */\n\n\n  FunnelSeries.prototype.arrangeLabels = function () {\n    if (this.alignLabels) {\n      var count = this.labels.length;\n\n      if (count > 1) {\n        var lastLabel = this.getLastLabel(count - 1);\n\n        if (lastLabel) {\n          var lastY = lastLabel.pixelY;\n          var lastX = lastLabel.pixelX;\n\n          if (count > 1) {\n            for (var i = count - 2; i >= 0; i--) {\n              var label = this.labels.getIndex(i);\n\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY + label.measuredHeight > lastY) {\n                    label.y = Math.min(1000000, lastY - label.measuredHeight);\n                  }\n                } // horizontal\n                else {\n                  if (label.pixelX + label.measuredWidth > lastX) {\n                    label.x = Math.min(1000000, lastX - label.measuredWidth);\n                  }\n                }\n\n                lastY = label.pixelY;\n                lastX = label.pixelX;\n              }\n            }\n\n            lastY = 0;\n            lastX = 0;\n\n            for (var i = 0; i < count; i++) {\n              var label = this.labels.getIndex(i);\n\n              if (label.visible && !label.__disabled) {\n                if (label.invalid) {\n                  label.validate();\n                }\n\n                if (this.orientation == \"vertical\") {\n                  if (label.pixelY < lastY) {\n                    label.y = Math.min(1000000, lastY);\n                  }\n                } // horizontal\n                else {\n                  if (label.pixelX < lastX) {\n                    label.x = Math.min(1000000, lastX);\n                  }\n                }\n\n                lastY += label.measuredHeight;\n                lastX += label.measuredWidth;\n              }\n            }\n          }\n        }\n      }\n    }\n  };\n  /**\r\n   * Positions series bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet  Bullet\r\n   */\n\n\n  FunnelSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n\n    var dataItem = bullet.dataItem;\n    var slice = dataItem.slice;\n    var locationX = bullet.locationX;\n\n    if (!$type.isNumber(locationX)) {\n      locationX = 0.5;\n    }\n\n    var locationY = bullet.locationY;\n\n    if (!$type.isNumber(locationY)) {\n      locationY = 1;\n    }\n\n    bullet.x = slice.pixelX + slice.measuredWidth * locationX;\n    bullet.y = slice.pixelY + slice.measuredHeight * locationY;\n  };\n\n  Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\n    /**\r\n     * @return Orientation\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"orientation\");\n    },\n\n    /**\r\n     * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n     *\r\n     * @default \"vertical\"\r\n     * @param value Orientation\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"orientation\", value)) {\n        this.labelsOpposite = this.labelsOpposite;\n        this.invalidate();\n\n        if (value == \"vertical\") {\n          this.ticks.template.locationX = 1;\n          this.ticks.template.locationY = 0.5;\n          this.labels.template.rotation = 0;\n          this.layout = \"horizontal\";\n        } else {\n          this.ticks.template.locationX = 0.5;\n          this.ticks.template.locationY = 1;\n          this.labels.template.rotation = -90;\n          this.layout = \"vertical\";\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\n    /**\r\n     * @return {number}\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"bottomRatio\");\n    },\n\n    /**\r\n     * Indicates how slice's bottom will change in relation to slices top AND\r\n     * next slices top.\r\n     *\r\n     * Basically it's a relative value (0-1) that indicates bottom width\r\n     * position between current slice's top width and the top withd of the next\r\n     * one.\r\n     *\r\n     * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n     * slice with).\r\n     *\r\n     * `0` (default) will mean that bottom will be the same as top, resulting in\r\n     * a prefectly square slice.\r\n     *\r\n     * From the data-viz standpoint `0` is a correct setting, since area of the\r\n     * slices will depict their value correctly.\r\n     *\r\n     * `1` will mean that slice will become trapezoid with its bottom matching\r\n     * width of the next slice.\r\n     *\r\n     * `0.5` will make bottom width be in the middle of width of current slice\r\n     * and the next slice.\r\n     *\r\n     * @default 0\r\n     * @param {number}\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"bottomRatio\", value)) {\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\n    /**\r\n     * A list of elements linking each actual slice.\r\n     *\r\n     * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n     * so they have all the same configuration options.\r\n     *\r\n     * You can use `template` of this link, to specify how links will look.\r\n     *\r\n     * ```TypeScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.sliceLinks.template.fillOpacity = 0.5;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     \"type\": \"FunnelSeries\",\r\n     *      // ...\r\n     *      \"sliceLinks\": {\r\n     *        \"fillOpacity\": 0.5\r\n     *      }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @return Funnel links\r\n     */\n    get: function () {\n      if (!this._sliceLinks) {\n        var sliceLink = new FunnelSlice();\n        sliceLink.applyOnClones = true;\n        sliceLink.fillOpacity = 0.5;\n        sliceLink.expandDistance = -0.3;\n        sliceLink.hiddenState.properties.opacity = 0;\n\n        this._disposers.push(sliceLink);\n\n        this._sliceLinks = new ListTemplate(sliceLink);\n\n        this._disposers.push(new ListDisposer(this._sliceLinks));\n      }\n\n      return this._sliceLinks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n\n  FunnelSeries.prototype.show = function (duration) {\n    var _this = this;\n\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.defaultState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    var delay = 0;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n\n      dataItem.show(interpolationDuration, delay, [\"value\"]);\n    });\n\n    var animation = _super.prototype.show.call(this, duration);\n\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n\n\n  FunnelSeries.prototype.hide = function (duration) {\n    var _this = this;\n\n    var fields = [\"value\"];\n    var value = 0;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n\n      if (_this.sequencedInterpolation) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n\n      dataItem.hide(interpolationDuration, delay, value, fields);\n    });\n\n    var animation = _super.prototype.hide.call(this, duration);\n\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n\n    return animation;\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  FunnelSeries.prototype.setAlignLabels = function (value) {\n    _super.prototype.setAlignLabels.call(this, value);\n\n    this.ticks.template.disabled = !value;\n    var labelsContainer = this.labelsContainer;\n\n    if (labelsContainer) {\n      // do not align\n      if (!value) {\n        labelsContainer.width = percent(100);\n        labelsContainer.height = percent(100);\n      } //align\n      else {\n        labelsContainer.height = undefined;\n        labelsContainer.width = undefined;\n        labelsContainer.margin(10, 10, 10, 10);\n      }\n    }\n\n    this.labelsOpposite = this.labelsOpposite;\n  };\n\n  Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\n    /**\r\n     * @return Labels on opposite side?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"labelsOpposite\");\n    },\n\n    /**\r\n     * Put labels on the oppsite side of the series?\r\n     *\r\n     * This setting is only used if `alignLabels = true`.\r\n     *\r\n     * If set to `true` (default) labels will be drawn to the right (on vertical\r\n     * series), or to the bottom (on horizontal series).\r\n     *\r\n     * If set to `false`, labels will be positioned to the left or top\r\n     * respectively.\r\n     *\r\n     * @default true\r\n     * @since 4.1.13\r\n     * @param  value  Labels on opposite side?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"labelsOpposite\", value);\n      var labelTemplate = this.labels.template;\n      var labelAlign = \"none\";\n      var labelValign = \"none\";\n\n      if (!this.alignLabels) {\n        if (this.orientation == \"vertical\") {\n          labelAlign = \"center\";\n        } else {\n          labelValign = \"middle\";\n        }\n      } else {\n        // opposite (left/bottom)\n        if (value) {\n          this.labelsContainer.toFront(); // left\n\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 1;\n            labelTemplate.horizontalCenter = \"left\";\n            labelAlign = \"right\";\n          } // bottom\n          else {\n            this.ticks.template.locationY = 1;\n            labelTemplate.horizontalCenter = \"right\";\n            labelValign = \"bottom\";\n          }\n        } // non oposite (right/top)\n        else {\n          this.labelsContainer.toBack(); // right\n\n          if (this.orientation == \"vertical\") {\n            this.ticks.template.locationX = 0;\n            labelAlign = \"left\";\n          } // top\n          else {\n            labelValign = \"top\";\n            this.ticks.template.locationY = 0;\n          }\n        }\n      }\n\n      labelTemplate.align = labelAlign;\n      labelTemplate.valign = labelValign;\n      this.validateLayout();\n      this.ticks.each(function (tick) {\n        tick.invalidate();\n      });\n      this.invalidateDataItems();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return FunnelSeries;\n}(PercentSeries);\n\nexport { FunnelSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;","map":{"version":3,"names":["__extends","PercentSeries","PercentSeriesDataItem","FunnelSlice","FunnelTick","ListTemplate","ListDisposer","registry","$math","$iter","$type","$array","percent","Disposer","options","FunnelSeriesDataItem","_super","_this","call","className","events","on","component","invalidateDataItems","applyTheme","Object","defineProperty","prototype","get","_sliceLink","sliceLink_1","sliceLinks","create","_disposers","push","parent","slicesContainer","removeValue","addSprite","visible","enumerable","configurable","FunnelSeries","_nextY","orientation","width","height","labelsOpposite","labelsContainer","layout","bottomRatio","createSlice","createTick","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","initSlice","slice","isMeasured","defaultState","properties","scale","observe","handleSliceScale","handleSliceMove","tooltipText","hoverState","states","expandDistance","initLabel","label","verticalCenter","horizontalCenter","padding","validate","validateDataElements","labelTemplate","labels","template","alignLabels","interactionsEnabled","total","count","dataItems","each","dItem","value","Math","abs","getWorkingValue","ignoreZeroValues","__disabled","isHiding","_total","_count","arrangeLabels","getNextValue","dataItem","index","nextValue","length","nextItem","getIndex","formDataElement","validateDataElement","sliceLink","tick","decorateSlice","sprites","sprite","disabled","fill","maxWidth","innerWidth","maxHeight","innerHeight","workingValue","d","Infinity","linkHeight","pixelHeight","topWidth","values","high","bottomWidth","y","min","max","x","undefined","pixelY","locationY","linkWidth","pixelWidth","measuredHeight","pixelX","locationX","getLastLabel","lastLabel","lastY","lastX","i","invalid","measuredWidth","positionBullet","bullet","isNumber","getPropertyValue","set","setPropertyValue","invalidate","ticks","rotation","_sliceLinks","applyOnClones","fillOpacity","hiddenState","opacity","show","duration","startIndex","endIndex","interpolationDuration","transitionDuration","animationsEnabled","delay","indexed","iterator","a","sequencedInterpolation","sequencedInterpolationDelay","animation","hide","fields","isFinished","setAlignLabels","margin","labelAlign","labelValign","toFront","toBack","align","valign","validateLayout","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js"],"sourcesContent":["/**\r\n * Defines Funnel Chart Series.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { FunnelSlice } from \"../elements/FunnelSlice\";\r\nimport { FunnelTick } from \"../elements/FunnelTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[FunnelSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar FunnelSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(FunnelSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"FunnelSeriesDataItem\";\r\n        // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)\r\n        _this.events.on(\"visibilitychanged\", function () {\r\n            if (_this.component) {\r\n                _this.component.invalidateDataItems();\r\n            }\r\n        }, _this, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(FunnelSeriesDataItem.prototype, \"sliceLink\", {\r\n        /**\r\n         * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._sliceLink) {\r\n                var sliceLink_1 = this.component.sliceLinks.create();\r\n                this._sliceLink = sliceLink_1;\r\n                this._disposers.push(sliceLink_1);\r\n                sliceLink_1.parent = this.component.slicesContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.sliceLinks.removeValue(sliceLink_1);\r\n                    }\r\n                }));\r\n                this.addSprite(sliceLink_1);\r\n                sliceLink_1.visible = this.visible;\r\n            }\r\n            return this._sliceLink;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeriesDataItem;\r\n}(PercentSeriesDataItem));\r\nexport { FunnelSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].\r\n *\r\n * @see {@link IFunnelSeriesEvents} for a list of available Events\r\n * @see {@link IFunnelSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar FunnelSeries = /** @class */ (function (_super) {\r\n    __extends(FunnelSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function FunnelSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this._nextY = 0;\r\n        _this.className = \"FunnelSeries\";\r\n        _this.orientation = \"vertical\";\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.slicesContainer.width = percent(100);\r\n        _this.slicesContainer.height = percent(100);\r\n        _this._disposers.push(_this.slicesContainer.events.on(\"maxsizechanged\", _this.invalidateDataItems, _this, false));\r\n        _this.labelsOpposite = true;\r\n        _this.labelsContainer.layout = \"absolute\";\r\n        _this.bottomRatio = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a [[FunnelSlice]] element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    FunnelSeries.prototype.createSlice = function () {\r\n        return new FunnelSlice();\r\n    };\r\n    /**\r\n     * Creates a [[FunnelTick]] element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    FunnelSeries.prototype.createTick = function () {\r\n        return new FunnelTick();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    FunnelSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Funnel Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    FunnelSeries.prototype.createDataItem = function () {\r\n        return new FunnelSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits FunnelSlice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    FunnelSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.expandDistance = 0.2;\r\n    };\r\n    /**\r\n     * [initLabel description]\r\n     *\r\n     * @todo Description\r\n     * @param label [description]\r\n     */\r\n    FunnelSeries.prototype.initLabel = function (label) {\r\n        _super.prototype.initLabel.call(this, label);\r\n        label.verticalCenter = \"middle\";\r\n        label.horizontalCenter = \"middle\";\r\n        label.isMeasured = true;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        this._nextY = 0;\r\n    };\r\n    /**\r\n     * [validateDataElements description]\r\n     *\r\n     * @todo Description\r\n     * @ignore Exclude from docs\r\n     */\r\n    FunnelSeries.prototype.validateDataElements = function () {\r\n        var _this = this;\r\n        var slicesContainer = this.slicesContainer;\r\n        var labelsContainer = this.labelsContainer;\r\n        var labelTemplate = this.labels.template;\r\n        if (this.alignLabels) {\r\n            labelTemplate.interactionsEnabled = true;\r\n            slicesContainer.isMeasured = true;\r\n            labelsContainer.isMeasured = true;\r\n        }\r\n        else {\r\n            labelTemplate.interactionsEnabled = false;\r\n            slicesContainer.isMeasured = false;\r\n            labelsContainer.isMeasured = false;\r\n        }\r\n        var total = 0;\r\n        var count = 0;\r\n        this.dataItems.each(function (dItem) {\r\n            if ($type.hasValue(dItem.value)) {\r\n                count++;\r\n                if (dItem.value > 0) {\r\n                    total += Math.abs(dItem.getWorkingValue(\"value\") / dItem.value);\r\n                }\r\n                else {\r\n                    if (_this.ignoreZeroValues) {\r\n                        count--;\r\n                    }\r\n                    else {\r\n                        if (!dItem.visible || dItem.__disabled || dItem.isHiding) {\r\n                            count--;\r\n                        }\r\n                        else {\r\n                            total += 1;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this._total = 1 / count * total;\r\n        this._count = count;\r\n        _super.prototype.validateDataElements.call(this);\r\n        this.arrangeLabels();\r\n    };\r\n    /**\r\n     * [getNextValue description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem  [description]\r\n     * @return [description]\r\n     */\r\n    FunnelSeries.prototype.getNextValue = function (dataItem) {\r\n        var index = dataItem.index;\r\n        var nextValue = dataItem.getWorkingValue(\"value\");\r\n        if (index < this.dataItems.length - 1) {\r\n            var nextItem = this.dataItems.getIndex(index + 1);\r\n            nextValue = nextItem.getWorkingValue(\"value\");\r\n            if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {\r\n                return this.getNextValue(nextItem);\r\n            }\r\n        }\r\n        return nextValue;\r\n    };\r\n    /**\r\n     * [formDataElement description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.formDataElement = function () {\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    FunnelSeries.prototype.validateDataElement = function (dataItem) {\r\n        var _this = this;\r\n        //if ($type.hasValue(dataItem.value)) {\r\n        // FunnelSlice\r\n        var slice = dataItem.slice;\r\n        slice.orientation = this.orientation;\r\n        var sliceLink = dataItem.sliceLink;\r\n        sliceLink.orientation = this.orientation;\r\n        var tick = dataItem.tick;\r\n        var label = dataItem.label;\r\n        tick.slice = slice;\r\n        tick.label = label;\r\n        if ($type.hasValue(dataItem.value)) {\r\n            this.decorateSlice(dataItem);\r\n            $array.each(dataItem.sprites, function (sprite) {\r\n                if (dataItem.value == 0 && _this.ignoreZeroValues) {\r\n                    sprite.__disabled = true;\r\n                }\r\n                else {\r\n                    sprite.__disabled = false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            $array.each(dataItem.sprites, function (sprite) {\r\n                sprite.__disabled = true;\r\n            });\r\n        }\r\n        if (dataItem.index == this.dataItems.length - 1) {\r\n            sliceLink.disabled = true;\r\n        }\r\n        // do this at the end, otherwise bullets won't be positioned properly\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        sliceLink.fill = slice.fill;\r\n        //}\r\n    };\r\n    /**\r\n     * [decorateSlice description]\r\n     *\r\n     * @todo Description\r\n     * @param dataItem [description]\r\n     */\r\n    FunnelSeries.prototype.decorateSlice = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        var sliceLink = dataItem.sliceLink;\r\n        var label = dataItem.label;\r\n        var tick = dataItem.tick;\r\n        var maxWidth = this.slicesContainer.innerWidth;\r\n        var maxHeight = this.slicesContainer.innerHeight;\r\n        var nextValue = this.getNextValue(dataItem);\r\n        var workingValue = Math.abs(dataItem.getWorkingValue(\"value\"));\r\n        var bottomRatio = this.bottomRatio;\r\n        var d = 1;\r\n        if (dataItem.value != 0) {\r\n            d = workingValue / Math.abs(dataItem.value);\r\n        }\r\n        else {\r\n            if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {\r\n                d = 0.000001;\r\n            }\r\n        }\r\n        if (this.ignoreZeroValues && dataItem.value == 0) {\r\n            dataItem.__disabled = true;\r\n            return;\r\n        }\r\n        else {\r\n            dataItem.__disabled = false;\r\n        }\r\n        if (this._nextY == Infinity) {\r\n            this._nextY = 0;\r\n        }\r\n        if (this.orientation == \"vertical\") {\r\n            var linkHeight = sliceLink.pixelHeight * d;\r\n            maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;\r\n            slice.y = this._nextY;\r\n            slice.height = Math.min(100000, $math.max(0, maxHeight / this._count * d / this._total - linkHeight));\r\n            slice.x = maxWidth / 2;\r\n            if (!this.alignLabels) {\r\n                label.x = slice.x;\r\n            }\r\n            else {\r\n                label.x = undefined;\r\n            }\r\n            label.y = slice.pixelY + slice.pixelHeight * tick.locationY;\r\n            this._nextY += slice.pixelHeight + linkHeight;\r\n            sliceLink.y = this._nextY - linkHeight;\r\n            sliceLink.x = slice.x;\r\n        }\r\n        else {\r\n            var linkWidth = sliceLink.pixelWidth * d;\r\n            maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom\r\n            slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;\r\n            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;\r\n            sliceLink.topWidth = slice.bottomWidth;\r\n            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;\r\n            slice.x = this._nextY;\r\n            slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);\r\n            slice.y = maxHeight / 2;\r\n            if (!this.alignLabels) {\r\n                label.y = slice.y;\r\n            }\r\n            else {\r\n                label.y = this.labelsContainer.measuredHeight;\r\n            }\r\n            label.x = slice.pixelX + slice.pixelWidth * tick.locationX;\r\n            this._nextY += slice.pixelWidth + linkWidth;\r\n            sliceLink.x = this._nextY - linkWidth;\r\n            sliceLink.y = slice.y;\r\n        }\r\n    };\r\n    FunnelSeries.prototype.getLastLabel = function (index) {\r\n        if (index > 0) {\r\n            var lastLabel = this.labels.getIndex(index);\r\n            if (lastLabel.__disabled || !lastLabel.visible) {\r\n                return this.getLastLabel(index - 1);\r\n            }\r\n            else {\r\n                return lastLabel;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * [arrangeLabels description]\r\n     *\r\n     * @todo Description\r\n     */\r\n    FunnelSeries.prototype.arrangeLabels = function () {\r\n        if (this.alignLabels) {\r\n            var count = this.labels.length;\r\n            if (count > 1) {\r\n                var lastLabel = this.getLastLabel(count - 1);\r\n                if (lastLabel) {\r\n                    var lastY = lastLabel.pixelY;\r\n                    var lastX = lastLabel.pixelX;\r\n                    if (count > 1) {\r\n                        for (var i = count - 2; i >= 0; i--) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY + label.measuredHeight > lastY) {\r\n                                        label.y = Math.min(1000000, lastY - label.measuredHeight);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX + label.measuredWidth > lastX) {\r\n                                        label.x = Math.min(1000000, lastX - label.measuredWidth);\r\n                                    }\r\n                                }\r\n                                lastY = label.pixelY;\r\n                                lastX = label.pixelX;\r\n                            }\r\n                        }\r\n                        lastY = 0;\r\n                        lastX = 0;\r\n                        for (var i = 0; i < count; i++) {\r\n                            var label = this.labels.getIndex(i);\r\n                            if (label.visible && !label.__disabled) {\r\n                                if (label.invalid) {\r\n                                    label.validate();\r\n                                }\r\n                                if (this.orientation == \"vertical\") {\r\n                                    if (label.pixelY < lastY) {\r\n                                        label.y = Math.min(1000000, lastY);\r\n                                    }\r\n                                }\r\n                                // horizontal\r\n                                else {\r\n                                    if (label.pixelX < lastX) {\r\n                                        label.x = Math.min(1000000, lastX);\r\n                                    }\r\n                                }\r\n                                lastY += label.measuredHeight;\r\n                                lastX += label.measuredWidth;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    FunnelSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!$type.isNumber(locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!$type.isNumber(locationY)) {\r\n            locationY = 1;\r\n        }\r\n        bullet.x = slice.pixelX + slice.measuredWidth * locationX;\r\n        bullet.y = slice.pixelY + slice.measuredHeight * locationY;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"orientation\", {\r\n        /**\r\n         * @return Orientation\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"orientation\");\r\n        },\r\n        /**\r\n         * Orientation of the funnel slices: \"horizontal\" or \"vertical\" (default).\r\n         *\r\n         * @default \"vertical\"\r\n         * @param value Orientation\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"orientation\", value)) {\r\n                this.labelsOpposite = this.labelsOpposite;\r\n                this.invalidate();\r\n                if (value == \"vertical\") {\r\n                    this.ticks.template.locationX = 1;\r\n                    this.ticks.template.locationY = 0.5;\r\n                    this.labels.template.rotation = 0;\r\n                    this.layout = \"horizontal\";\r\n                }\r\n                else {\r\n                    this.ticks.template.locationX = 0.5;\r\n                    this.ticks.template.locationY = 1;\r\n                    this.labels.template.rotation = -90;\r\n                    this.layout = \"vertical\";\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"bottomRatio\", {\r\n        /**\r\n         * @return {number}\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"bottomRatio\");\r\n        },\r\n        /**\r\n         * Indicates how slice's bottom will change in relation to slices top AND\r\n         * next slices top.\r\n         *\r\n         * Basically it's a relative value (0-1) that indicates bottom width\r\n         * position between current slice's top width and the top withd of the next\r\n         * one.\r\n         *\r\n         * The scale goes from 0 (closer to current slice width) to 1 (closer to next\r\n         * slice with).\r\n         *\r\n         * `0` (default) will mean that bottom will be the same as top, resulting in\r\n         * a prefectly square slice.\r\n         *\r\n         * From the data-viz standpoint `0` is a correct setting, since area of the\r\n         * slices will depict their value correctly.\r\n         *\r\n         * `1` will mean that slice will become trapezoid with its bottom matching\r\n         * width of the next slice.\r\n         *\r\n         * `0.5` will make bottom width be in the middle of width of current slice\r\n         * and the next slice.\r\n         *\r\n         * @default 0\r\n         * @param {number}\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"bottomRatio\", value)) {\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FunnelSeries.prototype, \"sliceLinks\", {\r\n        /**\r\n         * A list of elements linking each actual slice.\r\n         *\r\n         * Please note that links are [[FunnelSlice]] objects, just like real links,\r\n         * so they have all the same configuration options.\r\n         *\r\n         * You can use `template` of this link, to specify how links will look.\r\n         *\r\n         * ```TypeScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.sliceLinks.template.fillOpacity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     \"type\": \"FunnelSeries\",\r\n         *      // ...\r\n         *      \"sliceLinks\": {\r\n         *        \"fillOpacity\": 0.5\r\n         *      }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Funnel links\r\n         */\r\n        get: function () {\r\n            if (!this._sliceLinks) {\r\n                var sliceLink = new FunnelSlice();\r\n                sliceLink.applyOnClones = true;\r\n                sliceLink.fillOpacity = 0.5;\r\n                sliceLink.expandDistance = -0.3;\r\n                sliceLink.hiddenState.properties.opacity = 0;\r\n                this._disposers.push(sliceLink);\r\n                this._sliceLinks = new ListTemplate(sliceLink);\r\n                this._disposers.push(new ListDisposer(this._sliceLinks));\r\n            }\r\n            return this._sliceLinks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var delay = 0;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.show(interpolationDuration, delay, [\"value\"]);\r\n        });\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    FunnelSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields = [\"value\"];\r\n        var value = 0;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            if (_this.sequencedInterpolation) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            dataItem.hide(interpolationDuration, delay, value, fields);\r\n        });\r\n        var animation = _super.prototype.hide.call(this, duration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    FunnelSeries.prototype.setAlignLabels = function (value) {\r\n        _super.prototype.setAlignLabels.call(this, value);\r\n        this.ticks.template.disabled = !value;\r\n        var labelsContainer = this.labelsContainer;\r\n        if (labelsContainer) {\r\n            // do not align\r\n            if (!value) {\r\n                labelsContainer.width = percent(100);\r\n                labelsContainer.height = percent(100);\r\n            }\r\n            //align\r\n            else {\r\n                labelsContainer.height = undefined;\r\n                labelsContainer.width = undefined;\r\n                labelsContainer.margin(10, 10, 10, 10);\r\n            }\r\n        }\r\n        this.labelsOpposite = this.labelsOpposite;\r\n    };\r\n    Object.defineProperty(FunnelSeries.prototype, \"labelsOpposite\", {\r\n        /**\r\n         * @return Labels on opposite side?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"labelsOpposite\");\r\n        },\r\n        /**\r\n         * Put labels on the oppsite side of the series?\r\n         *\r\n         * This setting is only used if `alignLabels = true`.\r\n         *\r\n         * If set to `true` (default) labels will be drawn to the right (on vertical\r\n         * series), or to the bottom (on horizontal series).\r\n         *\r\n         * If set to `false`, labels will be positioned to the left or top\r\n         * respectively.\r\n         *\r\n         * @default true\r\n         * @since 4.1.13\r\n         * @param  value  Labels on opposite side?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"labelsOpposite\", value);\r\n            var labelTemplate = this.labels.template;\r\n            var labelAlign = \"none\";\r\n            var labelValign = \"none\";\r\n            if (!this.alignLabels) {\r\n                if (this.orientation == \"vertical\") {\r\n                    labelAlign = \"center\";\r\n                }\r\n                else {\r\n                    labelValign = \"middle\";\r\n                }\r\n            }\r\n            else {\r\n                // opposite (left/bottom)\r\n                if (value) {\r\n                    this.labelsContainer.toFront();\r\n                    // left\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 1;\r\n                        labelTemplate.horizontalCenter = \"left\";\r\n                        labelAlign = \"right\";\r\n                    }\r\n                    // bottom\r\n                    else {\r\n                        this.ticks.template.locationY = 1;\r\n                        labelTemplate.horizontalCenter = \"right\";\r\n                        labelValign = \"bottom\";\r\n                    }\r\n                }\r\n                // non oposite (right/top)\r\n                else {\r\n                    this.labelsContainer.toBack();\r\n                    // right\r\n                    if (this.orientation == \"vertical\") {\r\n                        this.ticks.template.locationX = 0;\r\n                        labelAlign = \"left\";\r\n                    }\r\n                    // top\r\n                    else {\r\n                        labelValign = \"top\";\r\n                        this.ticks.template.locationY = 0;\r\n                    }\r\n                }\r\n            }\r\n            labelTemplate.align = labelAlign;\r\n            labelTemplate.valign = labelValign;\r\n            this.validateLayout();\r\n            this.ticks.each(function (tick) {\r\n                tick.invalidate();\r\n            });\r\n            this.invalidateDataItems();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FunnelSeries;\r\n}(PercentSeries));\r\nexport { FunnelSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"FunnelSeries\"] = FunnelSeries;\r\nregistry.registeredClasses[\"FunnelSeriesDataItem\"] = FunnelSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}