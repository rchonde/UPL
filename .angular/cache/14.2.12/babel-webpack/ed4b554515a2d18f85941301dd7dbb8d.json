{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/responsive_box.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth } from \"../core/utils/size\";\nimport $ from \"../core/renderer\";\nimport { grep, noop } from \"../core/utils/common\";\nimport { isDefined, isPlainObject, isEmptyObject } from \"../core/utils/type\";\nimport errors from \"./widget/ui.errors\";\nimport { getWindow, defaultScreenFactorFunc, hasWindow } from \"../core/utils/window\";\nimport { each, map } from \"../core/utils/iterator\";\nimport { extend } from \"../core/utils/extend\";\nimport registerComponent from \"../core/component_registrator\";\nimport Box from \"./box\";\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\";\nvar SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\";\nvar BOX_ITEM_CLASS = \"dx-box-item\";\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\nvar HD_SCREEN_WIDTH = 1920;\nvar ResponsiveBox = CollectionWidget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      rows: [],\n      cols: [],\n      screenByWidth: null,\n      singleColumnScreen: \"\",\n      height: \"100%\",\n      width: \"100%\",\n      activeStateEnabled: false,\n      focusStateEnabled: false,\n      onItemStateChanged: void 0,\n      onLayoutChanged: null,\n      currentScreenFactor: void 0\n    });\n  },\n  _init: function () {\n    if (!this.option(\"screenByWidth\")) {\n      this._options.silent(\"screenByWidth\", defaultScreenFactorFunc);\n    }\n\n    this.callBase();\n\n    this._initLayoutChangedAction();\n  },\n  _initLayoutChangedAction: function () {\n    this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\n      excludeValidators: [\"disabled\", \"readonly\"]\n    });\n  },\n  _itemClass: function () {\n    return BOX_ITEM_CLASS;\n  },\n  _itemDataKey: function () {\n    return BOX_ITEM_DATA_KEY;\n  },\n  _initMarkup: function () {\n    this.callBase();\n    this.$element().addClass(RESPONSIVE_BOX_CLASS);\n  },\n  _renderItems: function () {\n    this._setScreenSize();\n\n    this._screenItems = this._itemsByScreen();\n\n    this._prepareGrid();\n\n    this._spreadItems();\n\n    this._layoutItems();\n\n    this._linkNodeToItem();\n  },\n  _itemOptionChanged: function (item) {\n    var $item = this._findItemElementByItem(item);\n\n    if (!$item.length) {\n      return;\n    }\n\n    this._refreshItem($item, item);\n\n    this._clearItemNodeTemplates();\n\n    this._update(true);\n  },\n  _setScreenSize: function () {\n    var currentScreen = this._getCurrentScreen();\n\n    this._removeScreenSizeClass();\n\n    this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\n    this.option(\"currentScreenFactor\", currentScreen);\n  },\n  _removeScreenSizeClass: function () {\n    var currentScreenFactor = this.option(\"currentScreenFactor\");\n    currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor);\n  },\n  _prepareGrid: function () {\n    var grid = this._grid = [];\n\n    this._prepareRowsAndCols();\n\n    each(this._rows, function () {\n      var row = [];\n      grid.push(row);\n      each(this._cols, function () {\n        row.push(this._createEmptyCell());\n      }.bind(this));\n    }.bind(this));\n  },\n  getSingleColumnRows: function () {\n    var rows = this.option(\"rows\");\n    var screenItemsLength = this._screenItems.length;\n\n    if (rows.length) {\n      var filteredRows = this._filterByScreen(rows);\n\n      var result = [];\n\n      for (var i = 0; i < screenItemsLength; i++) {\n        var sizeConfig = this._defaultSizeConfig();\n\n        if (i < filteredRows.length && isDefined(filteredRows[i].shrink)) {\n          sizeConfig.shrink = filteredRows[i].shrink;\n        }\n\n        result.push(sizeConfig);\n      }\n\n      return result;\n    } else {\n      return this._defaultSizeConfig(screenItemsLength);\n    }\n  },\n  _prepareRowsAndCols: function () {\n    if (this._isSingleColumnScreen()) {\n      this._prepareSingleColumnScreenItems();\n\n      this._rows = this.getSingleColumnRows();\n      this._cols = this._defaultSizeConfig(1);\n    } else {\n      this._rows = this._sizesByScreen(this.option(\"rows\"));\n      this._cols = this._sizesByScreen(this.option(\"cols\"));\n    }\n  },\n  _isSingleColumnScreen: function () {\n    return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length;\n  },\n  _prepareSingleColumnScreenItems: function () {\n    this._screenItems.sort(function (item1, item2) {\n      return item1.location.row - item2.location.row || item1.location.col - item2.location.col;\n    });\n\n    each(this._screenItems, function (index, item) {\n      extend(item.location, {\n        row: index,\n        col: 0,\n        rowspan: 1,\n        colspan: 1\n      });\n    });\n  },\n  _sizesByScreen: function (sizeConfigs) {\n    return map(this._filterByScreen(sizeConfigs), function (sizeConfig) {\n      return extend(this._defaultSizeConfig(), sizeConfig);\n    }.bind(this));\n  },\n  _createDefaultSizeConfig: function () {\n    return {\n      ratio: 1,\n      baseSize: 0,\n      minSize: 0,\n      maxSize: 0\n    };\n  },\n  _defaultSizeConfig: function (size) {\n    var defaultSizeConfig = this._createDefaultSizeConfig();\n\n    if (!arguments.length) {\n      return defaultSizeConfig;\n    }\n\n    var result = [];\n\n    for (var i = 0; i < size; i++) {\n      result.push(defaultSizeConfig);\n    }\n\n    return result;\n  },\n  _filterByScreen: function (items) {\n    var screenRegExp = this._screenRegExp();\n\n    return grep(items, function (item) {\n      return !item.screen || screenRegExp.test(item.screen);\n    });\n  },\n  _screenRegExp: function () {\n    var screen = this._getCurrentScreen();\n\n    return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\");\n  },\n  _getCurrentScreen: function () {\n    var width = this._screenWidth();\n\n    return this.option(\"screenByWidth\")(width);\n  },\n  _screenWidth: function () {\n    return hasWindow() ? getWidth(getWindow()) : HD_SCREEN_WIDTH;\n  },\n  _createEmptyCell: function () {\n    return {\n      item: {},\n      location: {\n        colspan: 1,\n        rowspan: 1\n      }\n    };\n  },\n  _spreadItems: function () {\n    each(this._screenItems, function (_, itemInfo) {\n      var location = itemInfo.location || {};\n      var itemCol = location.col;\n      var itemRow = location.row;\n      var row = this._grid[itemRow];\n      var itemCell = row && row[itemCol];\n\n      this._occupyCells(itemCell, itemInfo);\n    }.bind(this));\n  },\n  _itemsByScreen: function () {\n    return this.option(\"items\").reduce((result, item) => {\n      var locations = item.location || {};\n      locations = isPlainObject(locations) ? [locations] : locations;\n\n      this._filterByScreen(locations).forEach(location => {\n        result.push({\n          item: item,\n          location: extend({\n            rowspan: 1,\n            colspan: 1\n          }, location)\n        });\n      });\n\n      return result;\n    }, []);\n  },\n  _occupyCells: function (itemCell, itemInfo) {\n    if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\n      return;\n    }\n\n    extend(itemCell, itemInfo);\n\n    this._markSpanningCell(itemCell);\n  },\n  _isItemCellOccupied: function (itemCell, itemInfo) {\n    if (!isEmptyObject(itemCell.item)) {\n      return true;\n    }\n\n    var result = false;\n\n    this._loopOverSpanning(itemInfo.location, function (cell) {\n      result = result || !isEmptyObject(cell.item);\n    });\n\n    return result;\n  },\n  _loopOverSpanning: function (location, callback) {\n    var rowEnd = location.row + location.rowspan - 1;\n    var colEnd = location.col + location.colspan - 1;\n    var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\n    var boundColEnd = Math.min(colEnd, this._cols.length - 1);\n    location.rowspan -= rowEnd - boundRowEnd;\n    location.colspan -= colEnd - boundColEnd;\n\n    for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\n      for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\n        if (rowIndex !== location.row || colIndex !== location.col) {\n          callback(this._grid[rowIndex][colIndex]);\n        }\n      }\n    }\n  },\n  _markSpanningCell: function (itemCell) {\n    this._loopOverSpanning(itemCell.location, function (cell) {\n      extend(cell, {\n        item: itemCell.item,\n        spanningCell: itemCell\n      });\n    });\n  },\n  _linkNodeToItem: function () {\n    each(this._itemElements(), function (_, itemNode) {\n      var $item = $(itemNode);\n      var item = $item.data(BOX_ITEM_DATA_KEY);\n\n      if (!item.box) {\n        item.node = $item.children();\n      }\n    });\n  },\n  _layoutItems: function () {\n    var rowsCount = this._grid.length;\n    var colsCount = rowsCount && this._grid[0].length;\n\n    if (!rowsCount && !colsCount) {\n      return;\n    }\n\n    var result = this._layoutBlock({\n      direction: \"col\",\n      row: {\n        start: 0,\n        end: rowsCount - 1\n      },\n      col: {\n        start: 0,\n        end: colsCount - 1\n      }\n    });\n\n    var rootBox = this._prepareBoxConfig(result.box || {\n      direction: \"row\",\n      items: [extend(result, {\n        ratio: 1\n      })]\n    });\n\n    extend(rootBox, this._rootBoxConfig(rootBox.items));\n    this._$root = $(\"<div>\").appendTo(this._itemContainer());\n\n    this._createComponent(this._$root, Box, rootBox);\n  },\n  _rootBoxConfig: function (items) {\n    var rootItems = each(items, function (index, item) {\n      this._needApplyAutoBaseSize(item) && extend(item, {\n        baseSize: \"auto\"\n      });\n    }.bind(this));\n    return {\n      width: \"100%\",\n      height: \"100%\",\n      items: rootItems,\n      itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\n      itemHoldTimeout: this.option(\"itemHoldTimeout\"),\n      onItemHold: this._createActionByOption(\"onItemHold\"),\n      onItemClick: this._createActionByOption(\"onItemClick\"),\n      onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\n      onItemRendered: this._createActionByOption(\"onItemRendered\")\n    };\n  },\n  _needApplyAutoBaseSize: function (item) {\n    return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize);\n  },\n  _prepareBoxConfig: function (config) {\n    return extend(config || {}, {\n      crossAlign: \"stretch\",\n      onItemStateChanged: this.option(\"onItemStateChanged\")\n    });\n  },\n  _layoutBlock: function (options) {\n    if (this._isSingleItem(options)) {\n      return this._itemByCell(options.row.start, options.col.start);\n    }\n\n    return this._layoutDirection(options);\n  },\n  _isSingleItem: function (options) {\n    var firstCellLocation = this._grid[options.row.start][options.col.start].location;\n    var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\n    var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\n    return isItemRowSpanned && isItemColSpanned;\n  },\n  _itemByCell: function (rowIndex, colIndex) {\n    var itemCell = this._grid[rowIndex][colIndex];\n    return itemCell.spanningCell ? null : itemCell.item;\n  },\n  _layoutDirection: function (options) {\n    var items = [];\n    var direction = options.direction;\n\n    var crossDirection = this._crossDirection(direction);\n\n    var block;\n\n    while (block = this._nextBlock(options)) {\n      if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\n        throw errors.Error(\"E1025\");\n      }\n\n      var item = this._layoutBlock({\n        direction: crossDirection,\n        row: block.row,\n        col: block.col,\n        prevBlockOptions: options\n      });\n\n      if (item) {\n        extend(item, this._blockSize(block, crossDirection));\n        items.push(item);\n      }\n\n      options[crossDirection].start = block[crossDirection].end + 1;\n    }\n\n    return {\n      box: this._prepareBoxConfig({\n        direction: direction,\n        items: items\n      })\n    };\n  },\n  _isBlockIndivisible: function (options, block) {\n    return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end;\n  },\n  _crossDirection: function (direction) {\n    return \"col\" === direction ? \"row\" : \"col\";\n  },\n  _nextBlock: function (options) {\n    var direction = options.direction;\n\n    var crossDirection = this._crossDirection(direction);\n\n    var startIndex = options[direction].start;\n    var endIndex = options[direction].end;\n    var crossStartIndex = options[crossDirection].start;\n\n    if (crossStartIndex > options[crossDirection].end) {\n      return null;\n    }\n\n    var crossSpan = 1;\n\n    for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\n      var lineCrossSpan = 1;\n\n      for (var index = startIndex; index <= endIndex; index++) {\n        var cell = this._cellByDirection(direction, index, crossIndex);\n\n        lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"]);\n      }\n\n      var lineCrossEndIndex = crossIndex + lineCrossSpan;\n      var crossEndIndex = crossStartIndex + crossSpan;\n\n      if (lineCrossEndIndex > crossEndIndex) {\n        crossSpan += lineCrossEndIndex - crossEndIndex;\n      }\n    }\n\n    var result = {};\n    result[direction] = {\n      start: startIndex,\n      end: endIndex\n    };\n    result[crossDirection] = {\n      start: crossStartIndex,\n      end: crossStartIndex + crossSpan - 1\n    };\n    return result;\n  },\n  _cellByDirection: function (direction, index, crossIndex) {\n    return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex];\n  },\n  _blockSize: function (block, direction) {\n    var defaultMinSize = \"row\" === direction ? \"auto\" : 0;\n    var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\n    var result = extend(this._createDefaultSizeConfig(), {\n      ratio: 0\n    });\n\n    for (var index = block[direction].start; index <= block[direction].end; index++) {\n      var sizeConfig = sizeConfigs[index];\n      result.ratio += sizeConfig.ratio;\n      result.baseSize += sizeConfig.baseSize;\n      result.minSize += sizeConfig.minSize;\n      result.maxSize += sizeConfig.maxSize;\n\n      if (isDefined(sizeConfig.shrink)) {\n        result.shrink = sizeConfig.shrink;\n      }\n    }\n\n    result.minSize = result.minSize ? result.minSize : defaultMinSize;\n    result.maxSize = result.maxSize ? result.maxSize : \"auto\";\n    this._isSingleColumnScreen() && (result.baseSize = \"auto\");\n    return result;\n  },\n  _update: function (forceRemoveRoot) {\n    var $existingRoot = this._$root;\n\n    this._renderItems();\n\n    if ($existingRoot) {\n      if (forceRemoveRoot) {\n        $existingRoot.remove();\n      } else {\n        $existingRoot.detach();\n\n        this._saveAssistantRoot($existingRoot);\n      }\n    }\n\n    this._layoutChangedAction();\n  },\n  _saveAssistantRoot: function ($root) {\n    this._assistantRoots = this._assistantRoots || [];\n\n    this._assistantRoots.push($root);\n  },\n  _dispose: function () {\n    this._clearItemNodeTemplates();\n\n    this._cleanUnusedRoots();\n\n    this.callBase.apply(this, arguments);\n  },\n  _cleanUnusedRoots: function () {\n    if (!this._assistantRoots) {\n      return;\n    }\n\n    each(this._assistantRoots, function (_, item) {\n      $(item).remove();\n    });\n  },\n  _clearItemNodeTemplates: function () {\n    each(this.option(\"items\"), function () {\n      delete this.node;\n    });\n  },\n  _attachClickEvent: noop,\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"rows\":\n      case \"cols\":\n      case \"screenByWidth\":\n      case \"singleColumnScreen\":\n        this._clearItemNodeTemplates();\n\n        this._invalidate();\n\n        break;\n\n      case \"width\":\n      case \"height\":\n        this.callBase(args);\n\n        this._update();\n\n        break;\n\n      case \"onLayoutChanged\":\n        this._initLayoutChangedAction();\n\n        break;\n\n      case \"itemTemplate\":\n        this._clearItemNodeTemplates();\n\n        this.callBase(args);\n        break;\n\n      case \"currentScreenFactor\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _dimensionChanged: function () {\n    if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\n      this._update();\n    }\n  },\n  repaint: function () {\n    this._update();\n  }\n});\nregisterComponent(\"dxResponsiveBox\", ResponsiveBox);\nexport default ResponsiveBox;","map":{"version":3,"names":["getWidth","$","grep","noop","isDefined","isPlainObject","isEmptyObject","errors","getWindow","defaultScreenFactorFunc","hasWindow","each","map","extend","registerComponent","Box","CollectionWidget","RESPONSIVE_BOX_CLASS","SCREEN_SIZE_CLASS_PREFIX","BOX_ITEM_CLASS","BOX_ITEM_DATA_KEY","HD_SCREEN_WIDTH","ResponsiveBox","inherit","_getDefaultOptions","callBase","rows","cols","screenByWidth","singleColumnScreen","height","width","activeStateEnabled","focusStateEnabled","onItemStateChanged","onLayoutChanged","currentScreenFactor","_init","option","_options","silent","_initLayoutChangedAction","_layoutChangedAction","_createActionByOption","excludeValidators","_itemClass","_itemDataKey","_initMarkup","$element","addClass","_renderItems","_setScreenSize","_screenItems","_itemsByScreen","_prepareGrid","_spreadItems","_layoutItems","_linkNodeToItem","_itemOptionChanged","item","$item","_findItemElementByItem","length","_refreshItem","_clearItemNodeTemplates","_update","currentScreen","_getCurrentScreen","_removeScreenSizeClass","removeClass","grid","_grid","_prepareRowsAndCols","_rows","row","push","_cols","_createEmptyCell","bind","getSingleColumnRows","screenItemsLength","filteredRows","_filterByScreen","result","i","sizeConfig","_defaultSizeConfig","shrink","_isSingleColumnScreen","_prepareSingleColumnScreenItems","_sizesByScreen","_screenRegExp","test","sort","item1","item2","location","col","index","rowspan","colspan","sizeConfigs","_createDefaultSizeConfig","ratio","baseSize","minSize","maxSize","size","defaultSizeConfig","arguments","items","screenRegExp","screen","RegExp","_screenWidth","_","itemInfo","itemCol","itemRow","itemCell","_occupyCells","reduce","locations","forEach","_isItemCellOccupied","_markSpanningCell","_loopOverSpanning","cell","callback","rowEnd","colEnd","boundRowEnd","Math","min","boundColEnd","rowIndex","colIndex","spanningCell","_itemElements","itemNode","data","box","node","children","rowsCount","colsCount","_layoutBlock","direction","start","end","rootBox","_prepareBoxConfig","_rootBoxConfig","_$root","appendTo","_itemContainer","_createComponent","rootItems","_needApplyAutoBaseSize","itemTemplate","_getTemplateByOption","itemHoldTimeout","onItemHold","onItemClick","onItemContextMenu","onItemRendered","config","crossAlign","options","_isSingleItem","_itemByCell","_layoutDirection","firstCellLocation","isItemRowSpanned","isItemColSpanned","crossDirection","_crossDirection","block","_nextBlock","_isBlockIndivisible","prevBlockOptions","Error","_blockSize","startIndex","endIndex","crossStartIndex","crossSpan","crossIndex","lineCrossSpan","_cellByDirection","max","lineCrossEndIndex","crossEndIndex","defaultMinSize","forceRemoveRoot","$existingRoot","remove","detach","_saveAssistantRoot","$root","_assistantRoots","_dispose","_cleanUnusedRoots","apply","_attachClickEvent","_optionChanged","args","name","_invalidate","_dimensionChanged","repaint"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/responsive_box.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/responsive_box.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../core/utils/size\";\r\nimport $ from \"../core/renderer\";\r\nimport {\r\n    grep,\r\n    noop\r\n} from \"../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject,\r\n    isEmptyObject\r\n} from \"../core/utils/type\";\r\nimport errors from \"./widget/ui.errors\";\r\nimport {\r\n    getWindow,\r\n    defaultScreenFactorFunc,\r\n    hasWindow\r\n} from \"../core/utils/window\";\r\nimport {\r\n    each,\r\n    map\r\n} from \"../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../core/utils/extend\";\r\nimport registerComponent from \"../core/component_registrator\";\r\nimport Box from \"./box\";\r\nimport CollectionWidget from \"./collection/ui.collection_widget.edit\";\r\nvar RESPONSIVE_BOX_CLASS = \"dx-responsivebox\";\r\nvar SCREEN_SIZE_CLASS_PREFIX = RESPONSIVE_BOX_CLASS + \"-screen-\";\r\nvar BOX_ITEM_CLASS = \"dx-box-item\";\r\nvar BOX_ITEM_DATA_KEY = \"dxBoxItemData\";\r\nvar HD_SCREEN_WIDTH = 1920;\r\nvar ResponsiveBox = CollectionWidget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            rows: [],\r\n            cols: [],\r\n            screenByWidth: null,\r\n            singleColumnScreen: \"\",\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n            activeStateEnabled: false,\r\n            focusStateEnabled: false,\r\n            onItemStateChanged: void 0,\r\n            onLayoutChanged: null,\r\n            currentScreenFactor: void 0\r\n        })\r\n    },\r\n    _init: function() {\r\n        if (!this.option(\"screenByWidth\")) {\r\n            this._options.silent(\"screenByWidth\", defaultScreenFactorFunc)\r\n        }\r\n        this.callBase();\r\n        this._initLayoutChangedAction()\r\n    },\r\n    _initLayoutChangedAction: function() {\r\n        this._layoutChangedAction = this._createActionByOption(\"onLayoutChanged\", {\r\n            excludeValidators: [\"disabled\", \"readonly\"]\r\n        })\r\n    },\r\n    _itemClass: function() {\r\n        return BOX_ITEM_CLASS\r\n    },\r\n    _itemDataKey: function() {\r\n        return BOX_ITEM_DATA_KEY\r\n    },\r\n    _initMarkup: function() {\r\n        this.callBase();\r\n        this.$element().addClass(RESPONSIVE_BOX_CLASS)\r\n    },\r\n    _renderItems: function() {\r\n        this._setScreenSize();\r\n        this._screenItems = this._itemsByScreen();\r\n        this._prepareGrid();\r\n        this._spreadItems();\r\n        this._layoutItems();\r\n        this._linkNodeToItem()\r\n    },\r\n    _itemOptionChanged: function(item) {\r\n        var $item = this._findItemElementByItem(item);\r\n        if (!$item.length) {\r\n            return\r\n        }\r\n        this._refreshItem($item, item);\r\n        this._clearItemNodeTemplates();\r\n        this._update(true)\r\n    },\r\n    _setScreenSize: function() {\r\n        var currentScreen = this._getCurrentScreen();\r\n        this._removeScreenSizeClass();\r\n        this.$element().addClass(SCREEN_SIZE_CLASS_PREFIX + currentScreen);\r\n        this.option(\"currentScreenFactor\", currentScreen)\r\n    },\r\n    _removeScreenSizeClass: function() {\r\n        var currentScreenFactor = this.option(\"currentScreenFactor\");\r\n        currentScreenFactor && this.$element().removeClass(SCREEN_SIZE_CLASS_PREFIX + currentScreenFactor)\r\n    },\r\n    _prepareGrid: function() {\r\n        var grid = this._grid = [];\r\n        this._prepareRowsAndCols();\r\n        each(this._rows, function() {\r\n            var row = [];\r\n            grid.push(row);\r\n            each(this._cols, function() {\r\n                row.push(this._createEmptyCell())\r\n            }.bind(this))\r\n        }.bind(this))\r\n    },\r\n    getSingleColumnRows: function() {\r\n        var rows = this.option(\"rows\");\r\n        var screenItemsLength = this._screenItems.length;\r\n        if (rows.length) {\r\n            var filteredRows = this._filterByScreen(rows);\r\n            var result = [];\r\n            for (var i = 0; i < screenItemsLength; i++) {\r\n                var sizeConfig = this._defaultSizeConfig();\r\n                if (i < filteredRows.length && isDefined(filteredRows[i].shrink)) {\r\n                    sizeConfig.shrink = filteredRows[i].shrink\r\n                }\r\n                result.push(sizeConfig)\r\n            }\r\n            return result\r\n        } else {\r\n            return this._defaultSizeConfig(screenItemsLength)\r\n        }\r\n    },\r\n    _prepareRowsAndCols: function() {\r\n        if (this._isSingleColumnScreen()) {\r\n            this._prepareSingleColumnScreenItems();\r\n            this._rows = this.getSingleColumnRows();\r\n            this._cols = this._defaultSizeConfig(1)\r\n        } else {\r\n            this._rows = this._sizesByScreen(this.option(\"rows\"));\r\n            this._cols = this._sizesByScreen(this.option(\"cols\"))\r\n        }\r\n    },\r\n    _isSingleColumnScreen: function() {\r\n        return this._screenRegExp().test(this.option(\"singleColumnScreen\")) || !this.option(\"rows\").length || !this.option(\"cols\").length\r\n    },\r\n    _prepareSingleColumnScreenItems: function() {\r\n        this._screenItems.sort((function(item1, item2) {\r\n            return item1.location.row - item2.location.row || item1.location.col - item2.location.col\r\n        }));\r\n        each(this._screenItems, (function(index, item) {\r\n            extend(item.location, {\r\n                row: index,\r\n                col: 0,\r\n                rowspan: 1,\r\n                colspan: 1\r\n            })\r\n        }))\r\n    },\r\n    _sizesByScreen: function(sizeConfigs) {\r\n        return map(this._filterByScreen(sizeConfigs), function(sizeConfig) {\r\n            return extend(this._defaultSizeConfig(), sizeConfig)\r\n        }.bind(this))\r\n    },\r\n    _createDefaultSizeConfig: function() {\r\n        return {\r\n            ratio: 1,\r\n            baseSize: 0,\r\n            minSize: 0,\r\n            maxSize: 0\r\n        }\r\n    },\r\n    _defaultSizeConfig: function(size) {\r\n        var defaultSizeConfig = this._createDefaultSizeConfig();\r\n        if (!arguments.length) {\r\n            return defaultSizeConfig\r\n        }\r\n        var result = [];\r\n        for (var i = 0; i < size; i++) {\r\n            result.push(defaultSizeConfig)\r\n        }\r\n        return result\r\n    },\r\n    _filterByScreen: function(items) {\r\n        var screenRegExp = this._screenRegExp();\r\n        return grep(items, (function(item) {\r\n            return !item.screen || screenRegExp.test(item.screen)\r\n        }))\r\n    },\r\n    _screenRegExp: function() {\r\n        var screen = this._getCurrentScreen();\r\n        return new RegExp(\"(^|\\\\s)\" + screen + \"($|\\\\s)\", \"i\")\r\n    },\r\n    _getCurrentScreen: function() {\r\n        var width = this._screenWidth();\r\n        return this.option(\"screenByWidth\")(width)\r\n    },\r\n    _screenWidth: function() {\r\n        return hasWindow() ? getWidth(getWindow()) : HD_SCREEN_WIDTH\r\n    },\r\n    _createEmptyCell: function() {\r\n        return {\r\n            item: {},\r\n            location: {\r\n                colspan: 1,\r\n                rowspan: 1\r\n            }\r\n        }\r\n    },\r\n    _spreadItems: function() {\r\n        each(this._screenItems, function(_, itemInfo) {\r\n            var location = itemInfo.location || {};\r\n            var itemCol = location.col;\r\n            var itemRow = location.row;\r\n            var row = this._grid[itemRow];\r\n            var itemCell = row && row[itemCol];\r\n            this._occupyCells(itemCell, itemInfo)\r\n        }.bind(this))\r\n    },\r\n    _itemsByScreen: function() {\r\n        return this.option(\"items\").reduce((result, item) => {\r\n            var locations = item.location || {};\r\n            locations = isPlainObject(locations) ? [locations] : locations;\r\n            this._filterByScreen(locations).forEach(location => {\r\n                result.push({\r\n                    item: item,\r\n                    location: extend({\r\n                        rowspan: 1,\r\n                        colspan: 1\r\n                    }, location)\r\n                })\r\n            });\r\n            return result\r\n        }, [])\r\n    },\r\n    _occupyCells: function(itemCell, itemInfo) {\r\n        if (!itemCell || this._isItemCellOccupied(itemCell, itemInfo)) {\r\n            return\r\n        }\r\n        extend(itemCell, itemInfo);\r\n        this._markSpanningCell(itemCell)\r\n    },\r\n    _isItemCellOccupied: function(itemCell, itemInfo) {\r\n        if (!isEmptyObject(itemCell.item)) {\r\n            return true\r\n        }\r\n        var result = false;\r\n        this._loopOverSpanning(itemInfo.location, (function(cell) {\r\n            result = result || !isEmptyObject(cell.item)\r\n        }));\r\n        return result\r\n    },\r\n    _loopOverSpanning: function(location, callback) {\r\n        var rowEnd = location.row + location.rowspan - 1;\r\n        var colEnd = location.col + location.colspan - 1;\r\n        var boundRowEnd = Math.min(rowEnd, this._rows.length - 1);\r\n        var boundColEnd = Math.min(colEnd, this._cols.length - 1);\r\n        location.rowspan -= rowEnd - boundRowEnd;\r\n        location.colspan -= colEnd - boundColEnd;\r\n        for (var rowIndex = location.row; rowIndex <= boundRowEnd; rowIndex++) {\r\n            for (var colIndex = location.col; colIndex <= boundColEnd; colIndex++) {\r\n                if (rowIndex !== location.row || colIndex !== location.col) {\r\n                    callback(this._grid[rowIndex][colIndex])\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _markSpanningCell: function(itemCell) {\r\n        this._loopOverSpanning(itemCell.location, (function(cell) {\r\n            extend(cell, {\r\n                item: itemCell.item,\r\n                spanningCell: itemCell\r\n            })\r\n        }))\r\n    },\r\n    _linkNodeToItem: function() {\r\n        each(this._itemElements(), (function(_, itemNode) {\r\n            var $item = $(itemNode);\r\n            var item = $item.data(BOX_ITEM_DATA_KEY);\r\n            if (!item.box) {\r\n                item.node = $item.children()\r\n            }\r\n        }))\r\n    },\r\n    _layoutItems: function() {\r\n        var rowsCount = this._grid.length;\r\n        var colsCount = rowsCount && this._grid[0].length;\r\n        if (!rowsCount && !colsCount) {\r\n            return\r\n        }\r\n        var result = this._layoutBlock({\r\n            direction: \"col\",\r\n            row: {\r\n                start: 0,\r\n                end: rowsCount - 1\r\n            },\r\n            col: {\r\n                start: 0,\r\n                end: colsCount - 1\r\n            }\r\n        });\r\n        var rootBox = this._prepareBoxConfig(result.box || {\r\n            direction: \"row\",\r\n            items: [extend(result, {\r\n                ratio: 1\r\n            })]\r\n        });\r\n        extend(rootBox, this._rootBoxConfig(rootBox.items));\r\n        this._$root = $(\"<div>\").appendTo(this._itemContainer());\r\n        this._createComponent(this._$root, Box, rootBox)\r\n    },\r\n    _rootBoxConfig: function(items) {\r\n        var rootItems = each(items, function(index, item) {\r\n            this._needApplyAutoBaseSize(item) && extend(item, {\r\n                baseSize: \"auto\"\r\n            })\r\n        }.bind(this));\r\n        return {\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            items: rootItems,\r\n            itemTemplate: this._getTemplateByOption(\"itemTemplate\"),\r\n            itemHoldTimeout: this.option(\"itemHoldTimeout\"),\r\n            onItemHold: this._createActionByOption(\"onItemHold\"),\r\n            onItemClick: this._createActionByOption(\"onItemClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onItemContextMenu\"),\r\n            onItemRendered: this._createActionByOption(\"onItemRendered\")\r\n        }\r\n    },\r\n    _needApplyAutoBaseSize: function(item) {\r\n        return !item.baseSize && (!item.minSize || \"auto\" === item.minSize) && (!item.maxSize || \"auto\" === item.maxSize)\r\n    },\r\n    _prepareBoxConfig: function(config) {\r\n        return extend(config || {}, {\r\n            crossAlign: \"stretch\",\r\n            onItemStateChanged: this.option(\"onItemStateChanged\")\r\n        })\r\n    },\r\n    _layoutBlock: function(options) {\r\n        if (this._isSingleItem(options)) {\r\n            return this._itemByCell(options.row.start, options.col.start)\r\n        }\r\n        return this._layoutDirection(options)\r\n    },\r\n    _isSingleItem: function(options) {\r\n        var firstCellLocation = this._grid[options.row.start][options.col.start].location;\r\n        var isItemRowSpanned = options.row.end - options.row.start === firstCellLocation.rowspan - 1;\r\n        var isItemColSpanned = options.col.end - options.col.start === firstCellLocation.colspan - 1;\r\n        return isItemRowSpanned && isItemColSpanned\r\n    },\r\n    _itemByCell: function(rowIndex, colIndex) {\r\n        var itemCell = this._grid[rowIndex][colIndex];\r\n        return itemCell.spanningCell ? null : itemCell.item\r\n    },\r\n    _layoutDirection: function(options) {\r\n        var items = [];\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var block;\r\n        while (block = this._nextBlock(options)) {\r\n            if (this._isBlockIndivisible(options.prevBlockOptions, block)) {\r\n                throw errors.Error(\"E1025\")\r\n            }\r\n            var item = this._layoutBlock({\r\n                direction: crossDirection,\r\n                row: block.row,\r\n                col: block.col,\r\n                prevBlockOptions: options\r\n            });\r\n            if (item) {\r\n                extend(item, this._blockSize(block, crossDirection));\r\n                items.push(item)\r\n            }\r\n            options[crossDirection].start = block[crossDirection].end + 1\r\n        }\r\n        return {\r\n            box: this._prepareBoxConfig({\r\n                direction: direction,\r\n                items: items\r\n            })\r\n        }\r\n    },\r\n    _isBlockIndivisible: function(options, block) {\r\n        return options && options.col.start === block.col.start && options.col.end === block.col.end && options.row.start === block.row.start && options.row.end === block.row.end\r\n    },\r\n    _crossDirection: function(direction) {\r\n        return \"col\" === direction ? \"row\" : \"col\"\r\n    },\r\n    _nextBlock: function(options) {\r\n        var direction = options.direction;\r\n        var crossDirection = this._crossDirection(direction);\r\n        var startIndex = options[direction].start;\r\n        var endIndex = options[direction].end;\r\n        var crossStartIndex = options[crossDirection].start;\r\n        if (crossStartIndex > options[crossDirection].end) {\r\n            return null\r\n        }\r\n        var crossSpan = 1;\r\n        for (var crossIndex = crossStartIndex; crossIndex < crossStartIndex + crossSpan; crossIndex++) {\r\n            var lineCrossSpan = 1;\r\n            for (var index = startIndex; index <= endIndex; index++) {\r\n                var cell = this._cellByDirection(direction, index, crossIndex);\r\n                lineCrossSpan = Math.max(lineCrossSpan, cell.location[crossDirection + \"span\"])\r\n            }\r\n            var lineCrossEndIndex = crossIndex + lineCrossSpan;\r\n            var crossEndIndex = crossStartIndex + crossSpan;\r\n            if (lineCrossEndIndex > crossEndIndex) {\r\n                crossSpan += lineCrossEndIndex - crossEndIndex\r\n            }\r\n        }\r\n        var result = {};\r\n        result[direction] = {\r\n            start: startIndex,\r\n            end: endIndex\r\n        };\r\n        result[crossDirection] = {\r\n            start: crossStartIndex,\r\n            end: crossStartIndex + crossSpan - 1\r\n        };\r\n        return result\r\n    },\r\n    _cellByDirection: function(direction, index, crossIndex) {\r\n        return \"col\" === direction ? this._grid[crossIndex][index] : this._grid[index][crossIndex]\r\n    },\r\n    _blockSize: function(block, direction) {\r\n        var defaultMinSize = \"row\" === direction ? \"auto\" : 0;\r\n        var sizeConfigs = \"row\" === direction ? this._rows : this._cols;\r\n        var result = extend(this._createDefaultSizeConfig(), {\r\n            ratio: 0\r\n        });\r\n        for (var index = block[direction].start; index <= block[direction].end; index++) {\r\n            var sizeConfig = sizeConfigs[index];\r\n            result.ratio += sizeConfig.ratio;\r\n            result.baseSize += sizeConfig.baseSize;\r\n            result.minSize += sizeConfig.minSize;\r\n            result.maxSize += sizeConfig.maxSize;\r\n            if (isDefined(sizeConfig.shrink)) {\r\n                result.shrink = sizeConfig.shrink\r\n            }\r\n        }\r\n        result.minSize = result.minSize ? result.minSize : defaultMinSize;\r\n        result.maxSize = result.maxSize ? result.maxSize : \"auto\";\r\n        this._isSingleColumnScreen() && (result.baseSize = \"auto\");\r\n        return result\r\n    },\r\n    _update: function(forceRemoveRoot) {\r\n        var $existingRoot = this._$root;\r\n        this._renderItems();\r\n        if ($existingRoot) {\r\n            if (forceRemoveRoot) {\r\n                $existingRoot.remove()\r\n            } else {\r\n                $existingRoot.detach();\r\n                this._saveAssistantRoot($existingRoot)\r\n            }\r\n        }\r\n        this._layoutChangedAction()\r\n    },\r\n    _saveAssistantRoot: function($root) {\r\n        this._assistantRoots = this._assistantRoots || [];\r\n        this._assistantRoots.push($root)\r\n    },\r\n    _dispose: function() {\r\n        this._clearItemNodeTemplates();\r\n        this._cleanUnusedRoots();\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _cleanUnusedRoots: function() {\r\n        if (!this._assistantRoots) {\r\n            return\r\n        }\r\n        each(this._assistantRoots, (function(_, item) {\r\n            $(item).remove()\r\n        }))\r\n    },\r\n    _clearItemNodeTemplates: function() {\r\n        each(this.option(\"items\"), (function() {\r\n            delete this.node\r\n        }))\r\n    },\r\n    _attachClickEvent: noop,\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"rows\":\r\n            case \"cols\":\r\n            case \"screenByWidth\":\r\n            case \"singleColumnScreen\":\r\n                this._clearItemNodeTemplates();\r\n                this._invalidate();\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                this.callBase(args);\r\n                this._update();\r\n                break;\r\n            case \"onLayoutChanged\":\r\n                this._initLayoutChangedAction();\r\n                break;\r\n            case \"itemTemplate\":\r\n                this._clearItemNodeTemplates();\r\n                this.callBase(args);\r\n                break;\r\n            case \"currentScreenFactor\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (this._getCurrentScreen() !== this.option(\"currentScreenFactor\")) {\r\n            this._update()\r\n        }\r\n    },\r\n    repaint: function() {\r\n        this._update()\r\n    }\r\n});\r\nregisterComponent(\"dxResponsiveBox\", ResponsiveBox);\r\nexport default ResponsiveBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}