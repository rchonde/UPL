{"ast":null,"code":"/**\r\n * Line drawing functionality.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Sprite } from \"../Sprite\";\nimport { color } from \"../utils/Color\";\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\nimport { registry } from \"../Registry\";\nimport * as $type from \"../utils/Type\";\nimport * as $math from \"../utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link ILineEvents} for a list of available events\r\n * @see {@link ILineAdapters} for a list of available Adapters\r\n */\n\nvar Line =\n/** @class */\nfunction (_super) {\n  __extends(Line, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Line() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Line\";\n    _this.element = _this.paper.add(\"line\");\n    _this.fill = color(); //\"none\";\n\n    _this.x1 = 0;\n    _this.y1 = 0;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Draws the line.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Line.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    if (this.x1 == this.x2 || this.y1 == this.y2) {\n      this.pixelPerfect = true;\n    } else {\n      this.pixelPerfect = false;\n    }\n\n    this.x1 = this.x1;\n    this.x2 = this.x2;\n    this.y1 = this.y1;\n    this.y2 = this.y2;\n  };\n\n  Object.defineProperty(Line.prototype, \"x1\", {\n    /**\r\n     * @return X\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"x1\");\n    },\n\n    /**\r\n     * X coordinate of first end.\r\n     *\r\n     * @param value X\r\n     */\n    set: function (value) {\n      if (!$type.isNumber(value)) {\n        value = 0;\n      }\n\n      var delta = 0;\n\n      if (this.pixelPerfect && this.stroke instanceof LinearGradient) {\n        delta = 0.00001;\n      }\n\n      this.setPropertyValue(\"x1\", value, true);\n      this.element.attr({\n        \"x1\": value + delta\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Line.prototype, \"x2\", {\n    /**\r\n     * @return X\r\n     */\n    get: function () {\n      var value = this.getPropertyValue(\"x2\");\n\n      if (!$type.isNumber(value)) {\n        value = this.pixelWidth;\n      }\n\n      return value;\n    },\n\n    /**\r\n     * X coordinate of second end.\r\n     *\r\n     * @param value X\r\n     */\n    set: function (value) {\n      if (!$type.isNumber(value)) {\n        value = 0;\n      }\n\n      this.setPropertyValue(\"x2\", value, true);\n      this.element.attr({\n        \"x2\": value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Line.prototype, \"y1\", {\n    /**\r\n     * @return Y\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"y1\");\n    },\n\n    /**\r\n     * Y coordinate of first end.\r\n     *\r\n     * @param value Y\r\n     */\n    set: function (value) {\n      if (!$type.isNumber(value)) {\n        value = 0;\n      }\n\n      var delta = 0;\n\n      if (this.pixelPerfect && this.stroke instanceof LinearGradient) {\n        delta = 0.00001;\n      }\n\n      this.setPropertyValue(\"y1\", value, true);\n      this.element.attr({\n        \"y1\": value + delta\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Line.prototype, \"y2\", {\n    /**\r\n     * @return Y\r\n     */\n    get: function () {\n      var value = this.getPropertyValue(\"y2\");\n\n      if (!$type.isNumber(value)) {\n        value = this.pixelHeight;\n      }\n\n      return value;\n    },\n\n    /**\r\n     * Y coordinate of second end.\r\n     *\r\n     * @param value Y\r\n     */\n    set: function (value) {\n      if (!$type.isNumber(value)) {\n        value = 0;\n      }\n\n      this.setPropertyValue(\"y2\", value, true);\n      this.element.attr({\n        \"y2\": value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Converts relative position along the line (0-1) into pixel coordinates.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinates\r\n   */\n\n  Line.prototype.positionToPoint = function (position) {\n    var point1 = {\n      x: this.x1,\n      y: this.y1\n    };\n    var point2 = {\n      x: this.x2,\n      y: this.y2\n    };\n    var point = $math.getMidPoint(point1, point2, position);\n    var angle = $math.getAngle(point1, point2);\n    return {\n      x: point.x,\n      y: point.y,\n      angle: angle\n    };\n  };\n\n  return Line;\n}(Sprite);\n\nexport { Line };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Line\"] = Line;","map":{"version":3,"names":["__extends","Sprite","color","LinearGradient","registry","$type","$math","Line","_super","_this","call","className","element","paper","add","fill","x1","y1","applyTheme","prototype","draw","x2","y2","pixelPerfect","Object","defineProperty","get","getPropertyValue","set","value","isNumber","delta","stroke","setPropertyValue","attr","enumerable","configurable","pixelWidth","pixelHeight","positionToPoint","position","point1","x","y","point2","point","getMidPoint","angle","getAngle","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js"],"sourcesContent":["/**\r\n * Line drawing functionality.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { color } from \"../utils/Color\";\r\nimport { LinearGradient } from \"../rendering/fills/LinearGradient\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $math from \"../utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a line.\r\n *\r\n * @see {@link ILineEvents} for a list of available events\r\n * @see {@link ILineAdapters} for a list of available Adapters\r\n */\r\nvar Line = /** @class */ (function (_super) {\r\n    __extends(Line, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Line() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Line\";\r\n        _this.element = _this.paper.add(\"line\");\r\n        _this.fill = color(); //\"none\";\r\n        _this.x1 = 0;\r\n        _this.y1 = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the line.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Line.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        if (this.x1 == this.x2 || this.y1 == this.y2) {\r\n            this.pixelPerfect = true;\r\n        }\r\n        else {\r\n            this.pixelPerfect = false;\r\n        }\r\n        this.x1 = this.x1;\r\n        this.x2 = this.x2;\r\n        this.y1 = this.y1;\r\n        this.y2 = this.y2;\r\n    };\r\n    Object.defineProperty(Line.prototype, \"x1\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"x1\");\r\n        },\r\n        /**\r\n         * X coordinate of first end.\r\n         *\r\n         * @param value X\r\n         */\r\n        set: function (value) {\r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n            }\r\n            var delta = 0;\r\n            if (this.pixelPerfect && this.stroke instanceof LinearGradient) {\r\n                delta = 0.00001;\r\n            }\r\n            this.setPropertyValue(\"x1\", value, true);\r\n            this.element.attr({ \"x1\": value + delta });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Line.prototype, \"x2\", {\r\n        /**\r\n         * @return X\r\n         */\r\n        get: function () {\r\n            var value = this.getPropertyValue(\"x2\");\r\n            if (!$type.isNumber(value)) {\r\n                value = this.pixelWidth;\r\n            }\r\n            return value;\r\n        },\r\n        /**\r\n         * X coordinate of second end.\r\n         *\r\n         * @param value X\r\n         */\r\n        set: function (value) {\r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n            }\r\n            this.setPropertyValue(\"x2\", value, true);\r\n            this.element.attr({ \"x2\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Line.prototype, \"y1\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"y1\");\r\n        },\r\n        /**\r\n         * Y coordinate of first end.\r\n         *\r\n         * @param value Y\r\n         */\r\n        set: function (value) {\r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n            }\r\n            var delta = 0;\r\n            if (this.pixelPerfect && this.stroke instanceof LinearGradient) {\r\n                delta = 0.00001;\r\n            }\r\n            this.setPropertyValue(\"y1\", value, true);\r\n            this.element.attr({ \"y1\": value + delta });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Line.prototype, \"y2\", {\r\n        /**\r\n         * @return Y\r\n         */\r\n        get: function () {\r\n            var value = this.getPropertyValue(\"y2\");\r\n            if (!$type.isNumber(value)) {\r\n                value = this.pixelHeight;\r\n            }\r\n            return value;\r\n        },\r\n        /**\r\n         * Y coordinate of second end.\r\n         *\r\n         * @param value Y\r\n         */\r\n        set: function (value) {\r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n            }\r\n            this.setPropertyValue(\"y2\", value, true);\r\n            this.element.attr({ \"y2\": value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Converts relative position along the line (0-1) into pixel coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinates\r\n     */\r\n    Line.prototype.positionToPoint = function (position) {\r\n        var point1 = { x: this.x1, y: this.y1 };\r\n        var point2 = { x: this.x2, y: this.y2 };\r\n        var point = $math.getMidPoint(point1, point2, position);\r\n        var angle = $math.getAngle(point1, point2);\r\n        return { x: point.x, y: point.y, angle: angle };\r\n    };\r\n    return Line;\r\n}(Sprite));\r\nexport { Line };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Line\"] = Line;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}