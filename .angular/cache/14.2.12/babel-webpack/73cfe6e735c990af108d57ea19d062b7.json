{"ast":null,"code":"// =============================================================================\n// Helper functions\n// =============================================================================\nimport { ALL_WEEKDAYS } from './weekday';\nexport var isPresent = function (value) {\n  return value !== null && value !== undefined;\n};\nexport var isNumber = function (value) {\n  return typeof value === 'number';\n};\nexport var isWeekdayStr = function (value) {\n  return typeof value === 'string' && ALL_WEEKDAYS.includes(value);\n};\nexport var isArray = Array.isArray;\n/**\n * Simplified version of python's range()\n */\n\nexport var range = function (start, end) {\n  if (end === void 0) {\n    end = start;\n  }\n\n  if (arguments.length === 1) {\n    end = start;\n    start = 0;\n  }\n\n  var rang = [];\n\n  for (var i = start; i < end; i++) rang.push(i);\n\n  return rang;\n};\nexport var clone = function (array) {\n  return [].concat(array);\n};\nexport var repeat = function (value, times) {\n  var i = 0;\n  var array = [];\n\n  if (isArray(value)) {\n    for (; i < times; i++) array[i] = [].concat(value);\n  } else {\n    for (; i < times; i++) array[i] = value;\n  }\n\n  return array;\n};\nexport var toArray = function (item) {\n  if (isArray(item)) {\n    return item;\n  }\n\n  return [item];\n};\nexport function padStart(item, targetLength, padString) {\n  if (padString === void 0) {\n    padString = ' ';\n  }\n\n  var str = String(item);\n  targetLength = targetLength >> 0;\n\n  if (str.length > targetLength) {\n    return String(str);\n  }\n\n  targetLength = targetLength - str.length;\n\n  if (targetLength > padString.length) {\n    padString += repeat(padString, targetLength / padString.length);\n  }\n\n  return padString.slice(0, targetLength) + String(str);\n}\n/**\n * Python like split\n */\n\nexport var split = function (str, sep, num) {\n  var splits = str.split(sep);\n  return num ? splits.slice(0, num).concat([splits.slice(num).join(sep)]) : splits;\n};\n/**\n * closure/goog/math/math.js:modulo\n * Copyright 2006 The Closure Library Authors.\n * The % operator in JavaScript returns the remainder of a / b, but differs from\n * some other languages in that the result will have the same sign as the\n * dividend. For example, -1 % 8 == -1, whereas in some other languages\n * (such as Python) the result would be 7. This function emulates the more\n * correct modulo behavior, which is useful for certain applications such as\n * calculating an offset index in a circular list.\n *\n * @param {number} a The dividend.\n * @param {number} b The divisor.\n * @return {number} a % b where the result is between 0 and b (either 0 <= x < b\n * or b < x <= 0, depending on the sign of b).\n */\n\nexport var pymod = function (a, b) {\n  var r = a % b; // If r and b differ in sign, add b to wrap the result to the correct sign.\n\n  return r * b < 0 ? r + b : r;\n};\n/**\n * @see: <http://docs.python.org/library/functions.html#divmod>\n */\n\nexport var divmod = function (a, b) {\n  return {\n    div: Math.floor(a / b),\n    mod: pymod(a, b)\n  };\n};\nexport var empty = function (obj) {\n  return !isPresent(obj) || obj.length === 0;\n};\n/**\n * Python-like boolean\n *\n * @return {Boolean} value of an object/primitive, taking into account\n * the fact that in Python an empty list's/tuple's\n * boolean value is False, whereas in JS it's true\n */\n\nexport var notEmpty = function (obj) {\n  return !empty(obj);\n};\n/**\n * Return true if a value is in an array\n */\n\nexport var includes = function (arr, val) {\n  return notEmpty(arr) && arr.indexOf(val) !== -1;\n};","map":{"version":3,"names":["ALL_WEEKDAYS","isPresent","value","undefined","isNumber","isWeekdayStr","includes","isArray","Array","range","start","end","arguments","length","rang","i","push","clone","array","concat","repeat","times","toArray","item","padStart","targetLength","padString","str","String","slice","split","sep","num","splits","join","pymod","a","b","r","divmod","div","Math","floor","mod","empty","obj","notEmpty","arr","val","indexOf"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/rrule/dist/esm/helpers.js"],"sourcesContent":["// =============================================================================\n// Helper functions\n// =============================================================================\nimport { ALL_WEEKDAYS } from './weekday';\nexport var isPresent = function (value) {\n    return value !== null && value !== undefined;\n};\nexport var isNumber = function (value) {\n    return typeof value === 'number';\n};\nexport var isWeekdayStr = function (value) {\n    return typeof value === 'string' && ALL_WEEKDAYS.includes(value);\n};\nexport var isArray = Array.isArray;\n/**\n * Simplified version of python's range()\n */\nexport var range = function (start, end) {\n    if (end === void 0) { end = start; }\n    if (arguments.length === 1) {\n        end = start;\n        start = 0;\n    }\n    var rang = [];\n    for (var i = start; i < end; i++)\n        rang.push(i);\n    return rang;\n};\nexport var clone = function (array) {\n    return [].concat(array);\n};\nexport var repeat = function (value, times) {\n    var i = 0;\n    var array = [];\n    if (isArray(value)) {\n        for (; i < times; i++)\n            array[i] = [].concat(value);\n    }\n    else {\n        for (; i < times; i++)\n            array[i] = value;\n    }\n    return array;\n};\nexport var toArray = function (item) {\n    if (isArray(item)) {\n        return item;\n    }\n    return [item];\n};\nexport function padStart(item, targetLength, padString) {\n    if (padString === void 0) { padString = ' '; }\n    var str = String(item);\n    targetLength = targetLength >> 0;\n    if (str.length > targetLength) {\n        return String(str);\n    }\n    targetLength = targetLength - str.length;\n    if (targetLength > padString.length) {\n        padString += repeat(padString, targetLength / padString.length);\n    }\n    return padString.slice(0, targetLength) + String(str);\n}\n/**\n * Python like split\n */\nexport var split = function (str, sep, num) {\n    var splits = str.split(sep);\n    return num\n        ? splits.slice(0, num).concat([splits.slice(num).join(sep)])\n        : splits;\n};\n/**\n * closure/goog/math/math.js:modulo\n * Copyright 2006 The Closure Library Authors.\n * The % operator in JavaScript returns the remainder of a / b, but differs from\n * some other languages in that the result will have the same sign as the\n * dividend. For example, -1 % 8 == -1, whereas in some other languages\n * (such as Python) the result would be 7. This function emulates the more\n * correct modulo behavior, which is useful for certain applications such as\n * calculating an offset index in a circular list.\n *\n * @param {number} a The dividend.\n * @param {number} b The divisor.\n * @return {number} a % b where the result is between 0 and b (either 0 <= x < b\n * or b < x <= 0, depending on the sign of b).\n */\nexport var pymod = function (a, b) {\n    var r = a % b;\n    // If r and b differ in sign, add b to wrap the result to the correct sign.\n    return r * b < 0 ? r + b : r;\n};\n/**\n * @see: <http://docs.python.org/library/functions.html#divmod>\n */\nexport var divmod = function (a, b) {\n    return { div: Math.floor(a / b), mod: pymod(a, b) };\n};\nexport var empty = function (obj) {\n    return !isPresent(obj) || obj.length === 0;\n};\n/**\n * Python-like boolean\n *\n * @return {Boolean} value of an object/primitive, taking into account\n * the fact that in Python an empty list's/tuple's\n * boolean value is False, whereas in JS it's true\n */\nexport var notEmpty = function (obj) {\n    return !empty(obj);\n};\n/**\n * Return true if a value is in an array\n */\nexport var includes = function (arr, val) {\n    return notEmpty(arr) && arr.indexOf(val) !== -1;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}