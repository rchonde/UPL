{"ast":null,"code":"import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { forwardRef, PLATFORM_ID, Component, Inject, Input, Output, HostListener, ContentChildren, NgModule } from '@angular/core';\nimport DxColorBox from 'devextreme/ui/color_box';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiButtonComponent, DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule } from 'devextreme-angular/ui/nested';\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DxColorBoxComponent),\n  multi: true\n};\n/**\r\n * The ColorBox is a UI component that allows an end user to enter a color or pick it out from the drop-down editor.\r\n\r\n */\n\nclass DxColorBoxComponent extends DxComponent {\n  constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    this._watcherHelper = _watcherHelper;\n    this._idh = _idh;\n\n    this.touched = _ => {};\n\n    this._createEventEmitters([{\n      subscribe: 'change',\n      emit: 'onChange'\n    }, {\n      subscribe: 'closed',\n      emit: 'onClosed'\n    }, {\n      subscribe: 'copy',\n      emit: 'onCopy'\n    }, {\n      subscribe: 'cut',\n      emit: 'onCut'\n    }, {\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'enterKey',\n      emit: 'onEnterKey'\n    }, {\n      subscribe: 'focusIn',\n      emit: 'onFocusIn'\n    }, {\n      subscribe: 'focusOut',\n      emit: 'onFocusOut'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'input',\n      emit: 'onInput'\n    }, {\n      subscribe: 'keyDown',\n      emit: 'onKeyDown'\n    }, {\n      subscribe: 'keyUp',\n      emit: 'onKeyUp'\n    }, {\n      subscribe: 'opened',\n      emit: 'onOpened'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      subscribe: 'paste',\n      emit: 'onPaste'\n    }, {\n      subscribe: 'valueChanged',\n      emit: 'onValueChanged'\n    }, {\n      emit: 'acceptCustomValueChange'\n    }, {\n      emit: 'accessKeyChange'\n    }, {\n      emit: 'activeStateEnabledChange'\n    }, {\n      emit: 'applyButtonTextChange'\n    }, {\n      emit: 'applyValueModeChange'\n    }, {\n      emit: 'buttonsChange'\n    }, {\n      emit: 'cancelButtonTextChange'\n    }, {\n      emit: 'deferRenderingChange'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'dropDownButtonTemplateChange'\n    }, {\n      emit: 'dropDownOptionsChange'\n    }, {\n      emit: 'editAlphaChannelChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'fieldTemplateChange'\n    }, {\n      emit: 'focusStateEnabledChange'\n    }, {\n      emit: 'heightChange'\n    }, {\n      emit: 'hintChange'\n    }, {\n      emit: 'hoverStateEnabledChange'\n    }, {\n      emit: 'inputAttrChange'\n    }, {\n      emit: 'isValidChange'\n    }, {\n      emit: 'keyStepChange'\n    }, {\n      emit: 'labelChange'\n    }, {\n      emit: 'labelModeChange'\n    }, {\n      emit: 'nameChange'\n    }, {\n      emit: 'openedChange'\n    }, {\n      emit: 'openOnFieldClickChange'\n    }, {\n      emit: 'placeholderChange'\n    }, {\n      emit: 'readOnlyChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'showClearButtonChange'\n    }, {\n      emit: 'showDropDownButtonChange'\n    }, {\n      emit: 'stylingModeChange'\n    }, {\n      emit: 'tabIndexChange'\n    }, {\n      emit: 'textChange'\n    }, {\n      emit: 'validationErrorChange'\n    }, {\n      emit: 'validationErrorsChange'\n    }, {\n      emit: 'validationMessageModeChange'\n    }, {\n      emit: 'validationMessagePositionChange'\n    }, {\n      emit: 'validationStatusChange'\n    }, {\n      emit: 'valueChange'\n    }, {\n      emit: 'visibleChange'\n    }, {\n      emit: 'widthChange'\n    }, {\n      emit: 'onBlur'\n    }]);\n\n    this._idh.setHost(this);\n\n    optionHost.setHost(this);\n  }\n  /**\r\n   * Specifies whether or not the UI component allows an end-user to enter a custom value.\r\n  \r\n   */\n\n\n  get acceptCustomValue() {\n    return this._getOption('acceptCustomValue');\n  }\n\n  set acceptCustomValue(value) {\n    this._setOption('acceptCustomValue', value);\n  }\n  /**\r\n   * Specifies the shortcut key that sets focus on the UI component.\r\n  \r\n   */\n\n\n  get accessKey() {\n    return this._getOption('accessKey');\n  }\n\n  set accessKey(value) {\n    this._setOption('accessKey', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n  \r\n   */\n\n\n  get activeStateEnabled() {\n    return this._getOption('activeStateEnabled');\n  }\n\n  set activeStateEnabled(value) {\n    this._setOption('activeStateEnabled', value);\n  }\n  /**\r\n   * Specifies the text displayed on the button that applies changes and closes the drop-down editor.\r\n  \r\n   */\n\n\n  get applyButtonText() {\n    return this._getOption('applyButtonText');\n  }\n\n  set applyButtonText(value) {\n    this._setOption('applyButtonText', value);\n  }\n  /**\r\n   * Specifies the way an end-user applies the selected value.\r\n  \r\n   */\n\n\n  get applyValueMode() {\n    return this._getOption('applyValueMode');\n  }\n\n  set applyValueMode(value) {\n    this._setOption('applyValueMode', value);\n  }\n  /**\r\n   * Allows you to add custom buttons to the input text field.\r\n  \r\n   */\n\n\n  get buttons() {\n    return this._getOption('buttons');\n  }\n\n  set buttons(value) {\n    this._setOption('buttons', value);\n  }\n  /**\r\n   * Specifies the text displayed on the button that cancels changes and closes the drop-down editor.\r\n  \r\n   */\n\n\n  get cancelButtonText() {\n    return this._getOption('cancelButtonText');\n  }\n\n  set cancelButtonText(value) {\n    this._setOption('cancelButtonText', value);\n  }\n  /**\r\n   * Specifies whether to render the drop-down field&apos;s content when it is displayed. If false, the content is rendered immediately.\r\n  \r\n   */\n\n\n  get deferRendering() {\n    return this._getOption('deferRendering');\n  }\n\n  set deferRendering(value) {\n    this._setOption('deferRendering', value);\n  }\n  /**\r\n   * Specifies whether the UI component responds to user interaction.\r\n  \r\n   */\n\n\n  get disabled() {\n    return this._getOption('disabled');\n  }\n\n  set disabled(value) {\n    this._setOption('disabled', value);\n  }\n  /**\r\n   * Specifies a custom template for the drop-down button.\r\n  \r\n   */\n\n\n  get dropDownButtonTemplate() {\n    return this._getOption('dropDownButtonTemplate');\n  }\n\n  set dropDownButtonTemplate(value) {\n    this._setOption('dropDownButtonTemplate', value);\n  }\n  /**\r\n   * Configures the drop-down field which holds the content.\r\n  \r\n   */\n\n\n  get dropDownOptions() {\n    return this._getOption('dropDownOptions');\n  }\n\n  set dropDownOptions(value) {\n    this._setOption('dropDownOptions', value);\n  }\n  /**\r\n   * Specifies whether or not the UI component value includes the alpha channel component.\r\n  \r\n   */\n\n\n  get editAlphaChannel() {\n    return this._getOption('editAlphaChannel');\n  }\n\n  set editAlphaChannel(value) {\n    this._setOption('editAlphaChannel', value);\n  }\n  /**\r\n   * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n  \r\n   */\n\n\n  get elementAttr() {\n    return this._getOption('elementAttr');\n  }\n\n  set elementAttr(value) {\n    this._setOption('elementAttr', value);\n  }\n  /**\r\n   * Specifies a custom template for the input field. Must contain the TextBox UI component.\r\n  \r\n   */\n\n\n  get fieldTemplate() {\n    return this._getOption('fieldTemplate');\n  }\n\n  set fieldTemplate(value) {\n    this._setOption('fieldTemplate', value);\n  }\n  /**\r\n   * Specifies whether the UI component can be focused using keyboard navigation.\r\n  \r\n   */\n\n\n  get focusStateEnabled() {\n    return this._getOption('focusStateEnabled');\n  }\n\n  set focusStateEnabled(value) {\n    this._setOption('focusStateEnabled', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s height.\r\n  \r\n   */\n\n\n  get height() {\n    return this._getOption('height');\n  }\n\n  set height(value) {\n    this._setOption('height', value);\n  }\n  /**\r\n   * Specifies text for a hint that appears when a user pauses on the UI component.\r\n  \r\n   */\n\n\n  get hint() {\n    return this._getOption('hint');\n  }\n\n  set hint(value) {\n    this._setOption('hint', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its state when a user pauses on it.\r\n  \r\n   */\n\n\n  get hoverStateEnabled() {\n    return this._getOption('hoverStateEnabled');\n  }\n\n  set hoverStateEnabled(value) {\n    this._setOption('hoverStateEnabled', value);\n  }\n  /**\r\n   * Specifies the attributes to be passed on to the underlying HTML element.\r\n  \r\n   */\n\n\n  get inputAttr() {\n    return this._getOption('inputAttr');\n  }\n\n  set inputAttr(value) {\n    this._setOption('inputAttr', value);\n  }\n  /**\r\n   * Specifies or indicates whether the editor&apos;s value is valid.\r\n  \r\n   */\n\n\n  get isValid() {\n    return this._getOption('isValid');\n  }\n\n  set isValid(value) {\n    this._setOption('isValid', value);\n  }\n  /**\r\n   * Specifies the size of a step by which a handle is moved using a keyboard shortcut.\r\n  \r\n   */\n\n\n  get keyStep() {\n    return this._getOption('keyStep');\n  }\n\n  set keyStep(value) {\n    this._setOption('keyStep', value);\n  }\n  /**\r\n   * Specifies a text string used to annotate the editor&apos;s value.\r\n  \r\n   */\n\n\n  get label() {\n    return this._getOption('label');\n  }\n\n  set label(value) {\n    this._setOption('label', value);\n  }\n  /**\r\n   * Specifies the label&apos;s display mode.\r\n  \r\n   */\n\n\n  get labelMode() {\n    return this._getOption('labelMode');\n  }\n\n  set labelMode(value) {\n    this._setOption('labelMode', value);\n  }\n  /**\r\n   * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n  \r\n   */\n\n\n  get name() {\n    return this._getOption('name');\n  }\n\n  set name(value) {\n    this._setOption('name', value);\n  }\n  /**\r\n   * Specifies whether or not the drop-down editor is displayed.\r\n  \r\n   */\n\n\n  get opened() {\n    return this._getOption('opened');\n  }\n\n  set opened(value) {\n    this._setOption('opened', value);\n  }\n  /**\r\n   * Specifies whether a user can open the drop-down list by clicking a text field.\r\n  \r\n   */\n\n\n  get openOnFieldClick() {\n    return this._getOption('openOnFieldClick');\n  }\n\n  set openOnFieldClick(value) {\n    this._setOption('openOnFieldClick', value);\n  }\n  /**\r\n   * Specifies a text string displayed when the editor&apos;s value is empty.\r\n  \r\n   */\n\n\n  get placeholder() {\n    return this._getOption('placeholder');\n  }\n\n  set placeholder(value) {\n    this._setOption('placeholder', value);\n  }\n  /**\r\n   * Specifies whether the editor is read-only.\r\n  \r\n   */\n\n\n  get readOnly() {\n    return this._getOption('readOnly');\n  }\n\n  set readOnly(value) {\n    this._setOption('readOnly', value);\n  }\n  /**\r\n   * Switches the UI component to a right-to-left representation.\r\n  \r\n   */\n\n\n  get rtlEnabled() {\n    return this._getOption('rtlEnabled');\n  }\n\n  set rtlEnabled(value) {\n    this._setOption('rtlEnabled', value);\n  }\n  /**\r\n   * Specifies whether to display the Clear button in the UI component.\r\n  \r\n   */\n\n\n  get showClearButton() {\n    return this._getOption('showClearButton');\n  }\n\n  set showClearButton(value) {\n    this._setOption('showClearButton', value);\n  }\n  /**\r\n   * Specifies whether the drop-down button is visible.\r\n  \r\n   */\n\n\n  get showDropDownButton() {\n    return this._getOption('showDropDownButton');\n  }\n\n  set showDropDownButton(value) {\n    this._setOption('showDropDownButton', value);\n  }\n  /**\r\n   * Specifies how the UI component&apos;s text field is styled.\r\n  \r\n   */\n\n\n  get stylingMode() {\n    return this._getOption('stylingMode');\n  }\n\n  set stylingMode(value) {\n    this._setOption('stylingMode', value);\n  }\n  /**\r\n   * Specifies the number of the element when the Tab key is used for navigating.\r\n  \r\n   */\n\n\n  get tabIndex() {\n    return this._getOption('tabIndex');\n  }\n\n  set tabIndex(value) {\n    this._setOption('tabIndex', value);\n  }\n  /**\r\n   * The read-only property that holds the text displayed by the UI component input element.\r\n  \r\n   */\n\n\n  get text() {\n    return this._getOption('text');\n  }\n\n  set text(value) {\n    this._setOption('text', value);\n  }\n  /**\r\n   * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n  \r\n   */\n\n\n  get validationError() {\n    return this._getOption('validationError');\n  }\n\n  set validationError(value) {\n    this._setOption('validationError', value);\n  }\n  /**\r\n   * An array of the validation rules that failed.\r\n  \r\n   */\n\n\n  get validationErrors() {\n    return this._getOption('validationErrors');\n  }\n\n  set validationErrors(value) {\n    this._setOption('validationErrors', value);\n  }\n  /**\r\n   * Specifies how the message about the validation rules that are not satisfied by this editor&apos;s value is displayed.\r\n  \r\n   */\n\n\n  get validationMessageMode() {\n    return this._getOption('validationMessageMode');\n  }\n\n  set validationMessageMode(value) {\n    this._setOption('validationMessageMode', value);\n  }\n  /**\r\n   * Specifies the position of a validation message relative to the component. The validation message describes the validation rules that this component&apos;s value does not satisfy.\r\n  \r\n   */\n\n\n  get validationMessagePosition() {\n    return this._getOption('validationMessagePosition');\n  }\n\n  set validationMessagePosition(value) {\n    this._setOption('validationMessagePosition', value);\n  }\n  /**\r\n   * Indicates or specifies the current validation status.\r\n  \r\n   */\n\n\n  get validationStatus() {\n    return this._getOption('validationStatus');\n  }\n\n  set validationStatus(value) {\n    this._setOption('validationStatus', value);\n  }\n  /**\r\n   * Specifies the currently selected value.\r\n  \r\n   */\n\n\n  get value() {\n    return this._getOption('value');\n  }\n\n  set value(value) {\n    this._setOption('value', value);\n  }\n  /**\r\n   * Specifies whether the UI component is visible.\r\n  \r\n   */\n\n\n  get visible() {\n    return this._getOption('visible');\n  }\n\n  set visible(value) {\n    this._setOption('visible', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s width.\r\n  \r\n   */\n\n\n  get width() {\n    return this._getOption('width');\n  }\n\n  set width(value) {\n    this._setOption('width', value);\n  }\n\n  change(_) {}\n\n  get buttonsChildren() {\n    return this._getOption('buttons');\n  }\n\n  set buttonsChildren(value) {\n    this.setChildren('buttons', value);\n  }\n\n  _createInstance(element, options) {\n    return new DxColorBox(element, options);\n  }\n\n  writeValue(value) {\n    this.eventHelper.lockedValueChangeEvent = true;\n    this.value = value;\n    this.eventHelper.lockedValueChangeEvent = false;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  registerOnChange(fn) {\n    this.change = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.touched = fn;\n  }\n\n  _createWidget(element) {\n    super._createWidget(element);\n\n    this.instance.on('focusOut', e => {\n      this.eventHelper.fireNgEvent('onBlur', [e]);\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyWidget();\n  }\n\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n    this.setupChanges('buttons', changes);\n    this.setupChanges('validationErrors', changes);\n  }\n\n  setupChanges(prop, changes) {\n    if (!(prop in this._optionsToUpdate)) {\n      this._idh.setup(prop, changes);\n    }\n  }\n\n  ngDoCheck() {\n    this._idh.doCheck('buttons');\n\n    this._idh.doCheck('validationErrors');\n\n    this._watcherHelper.checkWatchers();\n\n    super.ngDoCheck();\n    super.clearChangedOptions();\n  }\n\n  _setOption(name, value) {\n    let isSetup = this._idh.setupSingle(name, value);\n\n    let isChanged = this._idh.getChanges(name, value) !== null;\n\n    if (isSetup || isChanged) {\n      super._setOption(name, value);\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nDxColorBoxComponent.ɵfac = function DxColorBoxComponent_Factory(t) {\n  return new (t || DxColorBoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n/** @nocollapse */\n\n\nDxColorBoxComponent.ɵcmp =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineComponent({\n  type: DxColorBoxComponent,\n  selectors: [[\"dx-color-box\"]],\n  contentQueries: function DxColorBoxComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, DxiButtonComponent, 4);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonsChildren = _t);\n    }\n  },\n  hostBindings: function DxColorBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"valueChange\", function DxColorBoxComponent_valueChange_HostBindingHandler($event) {\n        return ctx.change($event);\n      })(\"onBlur\", function DxColorBoxComponent_onBlur_HostBindingHandler($event) {\n        return ctx.touched($event);\n      });\n    }\n  },\n  inputs: {\n    acceptCustomValue: \"acceptCustomValue\",\n    accessKey: \"accessKey\",\n    activeStateEnabled: \"activeStateEnabled\",\n    applyButtonText: \"applyButtonText\",\n    applyValueMode: \"applyValueMode\",\n    buttons: \"buttons\",\n    cancelButtonText: \"cancelButtonText\",\n    deferRendering: \"deferRendering\",\n    disabled: \"disabled\",\n    dropDownButtonTemplate: \"dropDownButtonTemplate\",\n    dropDownOptions: \"dropDownOptions\",\n    editAlphaChannel: \"editAlphaChannel\",\n    elementAttr: \"elementAttr\",\n    fieldTemplate: \"fieldTemplate\",\n    focusStateEnabled: \"focusStateEnabled\",\n    height: \"height\",\n    hint: \"hint\",\n    hoverStateEnabled: \"hoverStateEnabled\",\n    inputAttr: \"inputAttr\",\n    isValid: \"isValid\",\n    keyStep: \"keyStep\",\n    label: \"label\",\n    labelMode: \"labelMode\",\n    name: \"name\",\n    opened: \"opened\",\n    openOnFieldClick: \"openOnFieldClick\",\n    placeholder: \"placeholder\",\n    readOnly: \"readOnly\",\n    rtlEnabled: \"rtlEnabled\",\n    showClearButton: \"showClearButton\",\n    showDropDownButton: \"showDropDownButton\",\n    stylingMode: \"stylingMode\",\n    tabIndex: \"tabIndex\",\n    text: \"text\",\n    validationError: \"validationError\",\n    validationErrors: \"validationErrors\",\n    validationMessageMode: \"validationMessageMode\",\n    validationMessagePosition: \"validationMessagePosition\",\n    validationStatus: \"validationStatus\",\n    value: \"value\",\n    visible: \"visible\",\n    width: \"width\"\n  },\n  outputs: {\n    onChange: \"onChange\",\n    onClosed: \"onClosed\",\n    onCopy: \"onCopy\",\n    onCut: \"onCut\",\n    onDisposing: \"onDisposing\",\n    onEnterKey: \"onEnterKey\",\n    onFocusIn: \"onFocusIn\",\n    onFocusOut: \"onFocusOut\",\n    onInitialized: \"onInitialized\",\n    onInput: \"onInput\",\n    onKeyDown: \"onKeyDown\",\n    onKeyUp: \"onKeyUp\",\n    onOpened: \"onOpened\",\n    onOptionChanged: \"onOptionChanged\",\n    onPaste: \"onPaste\",\n    onValueChanged: \"onValueChanged\",\n    acceptCustomValueChange: \"acceptCustomValueChange\",\n    accessKeyChange: \"accessKeyChange\",\n    activeStateEnabledChange: \"activeStateEnabledChange\",\n    applyButtonTextChange: \"applyButtonTextChange\",\n    applyValueModeChange: \"applyValueModeChange\",\n    buttonsChange: \"buttonsChange\",\n    cancelButtonTextChange: \"cancelButtonTextChange\",\n    deferRenderingChange: \"deferRenderingChange\",\n    disabledChange: \"disabledChange\",\n    dropDownButtonTemplateChange: \"dropDownButtonTemplateChange\",\n    dropDownOptionsChange: \"dropDownOptionsChange\",\n    editAlphaChannelChange: \"editAlphaChannelChange\",\n    elementAttrChange: \"elementAttrChange\",\n    fieldTemplateChange: \"fieldTemplateChange\",\n    focusStateEnabledChange: \"focusStateEnabledChange\",\n    heightChange: \"heightChange\",\n    hintChange: \"hintChange\",\n    hoverStateEnabledChange: \"hoverStateEnabledChange\",\n    inputAttrChange: \"inputAttrChange\",\n    isValidChange: \"isValidChange\",\n    keyStepChange: \"keyStepChange\",\n    labelChange: \"labelChange\",\n    labelModeChange: \"labelModeChange\",\n    nameChange: \"nameChange\",\n    openedChange: \"openedChange\",\n    openOnFieldClickChange: \"openOnFieldClickChange\",\n    placeholderChange: \"placeholderChange\",\n    readOnlyChange: \"readOnlyChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    showClearButtonChange: \"showClearButtonChange\",\n    showDropDownButtonChange: \"showDropDownButtonChange\",\n    stylingModeChange: \"stylingModeChange\",\n    tabIndexChange: \"tabIndexChange\",\n    textChange: \"textChange\",\n    validationErrorChange: \"validationErrorChange\",\n    validationErrorsChange: \"validationErrorsChange\",\n    validationMessageModeChange: \"validationMessageModeChange\",\n    validationMessagePositionChange: \"validationMessagePositionChange\",\n    validationStatusChange: \"validationStatusChange\",\n    valueChange: \"valueChange\",\n    visibleChange: \"visibleChange\",\n    widthChange: \"widthChange\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxColorBoxComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxColorBoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-color-box',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.DxTemplateHost\n    }, {\n      type: i1.WatcherHelper\n    }, {\n      type: i1.IterableDifferHelper\n    }, {\n      type: i1.NestedOptionHost\n    }, {\n      type: i2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    acceptCustomValue: [{\n      type: Input\n    }],\n    accessKey: [{\n      type: Input\n    }],\n    activeStateEnabled: [{\n      type: Input\n    }],\n    applyButtonText: [{\n      type: Input\n    }],\n    applyValueMode: [{\n      type: Input\n    }],\n    buttons: [{\n      type: Input\n    }],\n    cancelButtonText: [{\n      type: Input\n    }],\n    deferRendering: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    dropDownButtonTemplate: [{\n      type: Input\n    }],\n    dropDownOptions: [{\n      type: Input\n    }],\n    editAlphaChannel: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    fieldTemplate: [{\n      type: Input\n    }],\n    focusStateEnabled: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    hint: [{\n      type: Input\n    }],\n    hoverStateEnabled: [{\n      type: Input\n    }],\n    inputAttr: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Input\n    }],\n    keyStep: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    labelMode: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    opened: [{\n      type: Input\n    }],\n    openOnFieldClick: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    showClearButton: [{\n      type: Input\n    }],\n    showDropDownButton: [{\n      type: Input\n    }],\n    stylingMode: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    text: [{\n      type: Input\n    }],\n    validationError: [{\n      type: Input\n    }],\n    validationErrors: [{\n      type: Input\n    }],\n    validationMessageMode: [{\n      type: Input\n    }],\n    validationMessagePosition: [{\n      type: Input\n    }],\n    validationStatus: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onClosed: [{\n      type: Output\n    }],\n    onCopy: [{\n      type: Output\n    }],\n    onCut: [{\n      type: Output\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onEnterKey: [{\n      type: Output\n    }],\n    onFocusIn: [{\n      type: Output\n    }],\n    onFocusOut: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onInput: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onKeyUp: [{\n      type: Output\n    }],\n    onOpened: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    onPaste: [{\n      type: Output\n    }],\n    onValueChanged: [{\n      type: Output\n    }],\n    acceptCustomValueChange: [{\n      type: Output\n    }],\n    accessKeyChange: [{\n      type: Output\n    }],\n    activeStateEnabledChange: [{\n      type: Output\n    }],\n    applyButtonTextChange: [{\n      type: Output\n    }],\n    applyValueModeChange: [{\n      type: Output\n    }],\n    buttonsChange: [{\n      type: Output\n    }],\n    cancelButtonTextChange: [{\n      type: Output\n    }],\n    deferRenderingChange: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    dropDownButtonTemplateChange: [{\n      type: Output\n    }],\n    dropDownOptionsChange: [{\n      type: Output\n    }],\n    editAlphaChannelChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    fieldTemplateChange: [{\n      type: Output\n    }],\n    focusStateEnabledChange: [{\n      type: Output\n    }],\n    heightChange: [{\n      type: Output\n    }],\n    hintChange: [{\n      type: Output\n    }],\n    hoverStateEnabledChange: [{\n      type: Output\n    }],\n    inputAttrChange: [{\n      type: Output\n    }],\n    isValidChange: [{\n      type: Output\n    }],\n    keyStepChange: [{\n      type: Output\n    }],\n    labelChange: [{\n      type: Output\n    }],\n    labelModeChange: [{\n      type: Output\n    }],\n    nameChange: [{\n      type: Output\n    }],\n    openedChange: [{\n      type: Output\n    }],\n    openOnFieldClickChange: [{\n      type: Output\n    }],\n    placeholderChange: [{\n      type: Output\n    }],\n    readOnlyChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    showClearButtonChange: [{\n      type: Output\n    }],\n    showDropDownButtonChange: [{\n      type: Output\n    }],\n    stylingModeChange: [{\n      type: Output\n    }],\n    tabIndexChange: [{\n      type: Output\n    }],\n    textChange: [{\n      type: Output\n    }],\n    validationErrorChange: [{\n      type: Output\n    }],\n    validationErrorsChange: [{\n      type: Output\n    }],\n    validationMessageModeChange: [{\n      type: Output\n    }],\n    validationMessagePositionChange: [{\n      type: Output\n    }],\n    validationStatusChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    widthChange: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    change: [{\n      type: HostListener,\n      args: ['valueChange', ['$event']]\n    }],\n    touched: [{\n      type: HostListener,\n      args: ['onBlur', ['$event']]\n    }],\n    buttonsChildren: [{\n      type: ContentChildren,\n      args: [DxiButtonComponent]\n    }]\n  });\n})();\n\nclass DxColorBoxModule {}\n/** @nocollapse */\n\n\nDxColorBoxModule.ɵfac = function DxColorBoxModule_Factory(t) {\n  return new (t || DxColorBoxModule)();\n};\n/** @nocollapse */\n\n\nDxColorBoxModule.ɵmod =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineNgModule({\n  type: DxColorBoxModule\n});\n/** @nocollapse */\n\nDxColorBoxModule.ɵinj =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineInjector({\n  imports: [[DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxColorBoxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxColorBoxComponent],\n      exports: [DxColorBoxComponent, DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxColorBoxModule, {\n    declarations: [DxColorBoxComponent],\n    imports: [DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n    exports: [DxColorBoxComponent, DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule, DxTemplateModule]\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxColorBoxComponent, DxColorBoxModule };","map":{"version":3,"names":["i2","BrowserTransferStateModule","i0","forwardRef","PLATFORM_ID","Component","Inject","Input","Output","HostListener","ContentChildren","NgModule","DxColorBox","NG_VALUE_ACCESSOR","i1","DxComponent","DxTemplateHost","WatcherHelper","NestedOptionHost","IterableDifferHelper","DxIntegrationModule","DxTemplateModule","DxiButtonComponent","DxiButtonModule","DxoOptionsModule","DxoDropDownOptionsModule","DxoAnimationModule","DxoHideModule","DxoFromModule","DxoPositionModule","DxoAtModule","DxoBoundaryOffsetModule","DxoCollisionModule","DxoMyModule","DxoOffsetModule","DxoToModule","DxoShowModule","DxiToolbarItemModule","CUSTOM_VALUE_ACCESSOR_PROVIDER","provide","useExisting","DxColorBoxComponent","multi","constructor","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","touched","_","_createEventEmitters","subscribe","emit","setHost","acceptCustomValue","_getOption","value","_setOption","accessKey","activeStateEnabled","applyButtonText","applyValueMode","buttons","cancelButtonText","deferRendering","disabled","dropDownButtonTemplate","dropDownOptions","editAlphaChannel","elementAttr","fieldTemplate","focusStateEnabled","height","hint","hoverStateEnabled","inputAttr","isValid","keyStep","label","labelMode","name","opened","openOnFieldClick","placeholder","readOnly","rtlEnabled","showClearButton","showDropDownButton","stylingMode","tabIndex","text","validationError","validationErrors","validationMessageMode","validationMessagePosition","validationStatus","visible","width","change","buttonsChildren","setChildren","_createInstance","element","options","writeValue","eventHelper","lockedValueChangeEvent","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","_createWidget","instance","on","e","fireNgEvent","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","isSetup","setupSingle","isChanged","getChanges","ɵfac","DxColorBoxComponent_Factory","t","ɵɵdirectiveInject","ElementRef","NgZone","TransferState","ɵcmp","ɵɵdefineComponent","type","selectors","contentQueries","DxColorBoxComponent_ContentQueries","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","hostBindings","DxColorBoxComponent_HostBindings","ɵɵlistener","DxColorBoxComponent_valueChange_HostBindingHandler","$event","DxColorBoxComponent_onBlur_HostBindingHandler","inputs","outputs","onChange","onClosed","onCopy","onCut","onDisposing","onEnterKey","onFocusIn","onFocusOut","onInitialized","onInput","onKeyDown","onKeyUp","onOpened","onOptionChanged","onPaste","onValueChanged","acceptCustomValueChange","accessKeyChange","activeStateEnabledChange","applyButtonTextChange","applyValueModeChange","buttonsChange","cancelButtonTextChange","deferRenderingChange","disabledChange","dropDownButtonTemplateChange","dropDownOptionsChange","editAlphaChannelChange","elementAttrChange","fieldTemplateChange","focusStateEnabledChange","heightChange","hintChange","hoverStateEnabledChange","inputAttrChange","isValidChange","keyStepChange","labelChange","labelModeChange","nameChange","openedChange","openOnFieldClickChange","placeholderChange","readOnlyChange","rtlEnabledChange","showClearButtonChange","showDropDownButtonChange","stylingModeChange","tabIndexChange","textChange","validationErrorChange","validationErrorsChange","validationMessageModeChange","validationMessagePositionChange","validationStatusChange","valueChange","visibleChange","widthChange","onBlur","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","decls","vars","template","DxColorBoxComponent_Template","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","providers","undefined","decorators","DxColorBoxModule","DxColorBoxModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-color-box.js"],"sourcesContent":["import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { forwardRef, PLATFORM_ID, Component, Inject, Input, Output, HostListener, ContentChildren, NgModule } from '@angular/core';\nimport DxColorBox from 'devextreme/ui/color_box';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\nimport { DxiButtonComponent, DxiButtonModule, DxoOptionsModule, DxoDropDownOptionsModule, DxoAnimationModule, DxoHideModule, DxoFromModule, DxoPositionModule, DxoAtModule, DxoBoundaryOffsetModule, DxoCollisionModule, DxoMyModule, DxoOffsetModule, DxoToModule, DxoShowModule, DxiToolbarItemModule } from 'devextreme-angular/ui/nested';\n\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxColorBoxComponent),\r\n    multi: true\r\n};\r\n/**\r\n * The ColorBox is a UI component that allows an end user to enter a color or pick it out from the drop-down editor.\r\n\r\n */\r\nclass DxColorBoxComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._watcherHelper = _watcherHelper;\r\n        this._idh = _idh;\r\n        this.touched = (_) => { };\r\n        this._createEventEmitters([\r\n            { subscribe: 'change', emit: 'onChange' },\r\n            { subscribe: 'closed', emit: 'onClosed' },\r\n            { subscribe: 'copy', emit: 'onCopy' },\r\n            { subscribe: 'cut', emit: 'onCut' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'enterKey', emit: 'onEnterKey' },\r\n            { subscribe: 'focusIn', emit: 'onFocusIn' },\r\n            { subscribe: 'focusOut', emit: 'onFocusOut' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'input', emit: 'onInput' },\r\n            { subscribe: 'keyDown', emit: 'onKeyDown' },\r\n            { subscribe: 'keyUp', emit: 'onKeyUp' },\r\n            { subscribe: 'opened', emit: 'onOpened' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'paste', emit: 'onPaste' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'acceptCustomValueChange' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'applyButtonTextChange' },\r\n            { emit: 'applyValueModeChange' },\r\n            { emit: 'buttonsChange' },\r\n            { emit: 'cancelButtonTextChange' },\r\n            { emit: 'deferRenderingChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'dropDownButtonTemplateChange' },\r\n            { emit: 'dropDownOptionsChange' },\r\n            { emit: 'editAlphaChannelChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'fieldTemplateChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'inputAttrChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'keyStepChange' },\r\n            { emit: 'labelChange' },\r\n            { emit: 'labelModeChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'openedChange' },\r\n            { emit: 'openOnFieldClickChange' },\r\n            { emit: 'placeholderChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'showClearButtonChange' },\r\n            { emit: 'showDropDownButtonChange' },\r\n            { emit: 'stylingModeChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationErrorsChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'validationMessagePositionChange' },\r\n            { emit: 'validationStatusChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * Specifies whether or not the UI component allows an end-user to enter a custom value.\r\n    \r\n     */\r\n    get acceptCustomValue() {\r\n        return this._getOption('acceptCustomValue');\r\n    }\r\n    set acceptCustomValue(value) {\r\n        this._setOption('acceptCustomValue', value);\r\n    }\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\r\n    get accessKey() {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n    \r\n     */\r\n    get activeStateEnabled() {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the text displayed on the button that applies changes and closes the drop-down editor.\r\n    \r\n     */\r\n    get applyButtonText() {\r\n        return this._getOption('applyButtonText');\r\n    }\r\n    set applyButtonText(value) {\r\n        this._setOption('applyButtonText', value);\r\n    }\r\n    /**\r\n     * Specifies the way an end-user applies the selected value.\r\n    \r\n     */\r\n    get applyValueMode() {\r\n        return this._getOption('applyValueMode');\r\n    }\r\n    set applyValueMode(value) {\r\n        this._setOption('applyValueMode', value);\r\n    }\r\n    /**\r\n     * Allows you to add custom buttons to the input text field.\r\n    \r\n     */\r\n    get buttons() {\r\n        return this._getOption('buttons');\r\n    }\r\n    set buttons(value) {\r\n        this._setOption('buttons', value);\r\n    }\r\n    /**\r\n     * Specifies the text displayed on the button that cancels changes and closes the drop-down editor.\r\n    \r\n     */\r\n    get cancelButtonText() {\r\n        return this._getOption('cancelButtonText');\r\n    }\r\n    set cancelButtonText(value) {\r\n        this._setOption('cancelButtonText', value);\r\n    }\r\n    /**\r\n     * Specifies whether to render the drop-down field&apos;s content when it is displayed. If false, the content is rendered immediately.\r\n    \r\n     */\r\n    get deferRendering() {\r\n        return this._getOption('deferRendering');\r\n    }\r\n    set deferRendering(value) {\r\n        this._setOption('deferRendering', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    get disabled() {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value) {\r\n        this._setOption('disabled', value);\r\n    }\r\n    /**\r\n     * Specifies a custom template for the drop-down button.\r\n    \r\n     */\r\n    get dropDownButtonTemplate() {\r\n        return this._getOption('dropDownButtonTemplate');\r\n    }\r\n    set dropDownButtonTemplate(value) {\r\n        this._setOption('dropDownButtonTemplate', value);\r\n    }\r\n    /**\r\n     * Configures the drop-down field which holds the content.\r\n    \r\n     */\r\n    get dropDownOptions() {\r\n        return this._getOption('dropDownOptions');\r\n    }\r\n    set dropDownOptions(value) {\r\n        this._setOption('dropDownOptions', value);\r\n    }\r\n    /**\r\n     * Specifies whether or not the UI component value includes the alpha channel component.\r\n    \r\n     */\r\n    get editAlphaChannel() {\r\n        return this._getOption('editAlphaChannel');\r\n    }\r\n    set editAlphaChannel(value) {\r\n        this._setOption('editAlphaChannel', value);\r\n    }\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies a custom template for the input field. Must contain the TextBox UI component.\r\n    \r\n     */\r\n    get fieldTemplate() {\r\n        return this._getOption('fieldTemplate');\r\n    }\r\n    set fieldTemplate(value) {\r\n        this._setOption('fieldTemplate', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component can be focused using keyboard navigation.\r\n    \r\n     */\r\n    get focusStateEnabled() {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    get hint() {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value) {\r\n        this._setOption('hint', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    get hoverStateEnabled() {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the attributes to be passed on to the underlying HTML element.\r\n    \r\n     */\r\n    get inputAttr() {\r\n        return this._getOption('inputAttr');\r\n    }\r\n    set inputAttr(value) {\r\n        this._setOption('inputAttr', value);\r\n    }\r\n    /**\r\n     * Specifies or indicates whether the editor&apos;s value is valid.\r\n    \r\n     */\r\n    get isValid() {\r\n        return this._getOption('isValid');\r\n    }\r\n    set isValid(value) {\r\n        this._setOption('isValid', value);\r\n    }\r\n    /**\r\n     * Specifies the size of a step by which a handle is moved using a keyboard shortcut.\r\n    \r\n     */\r\n    get keyStep() {\r\n        return this._getOption('keyStep');\r\n    }\r\n    set keyStep(value) {\r\n        this._setOption('keyStep', value);\r\n    }\r\n    /**\r\n     * Specifies a text string used to annotate the editor&apos;s value.\r\n    \r\n     */\r\n    get label() {\r\n        return this._getOption('label');\r\n    }\r\n    set label(value) {\r\n        this._setOption('label', value);\r\n    }\r\n    /**\r\n     * Specifies the label&apos;s display mode.\r\n    \r\n     */\r\n    get labelMode() {\r\n        return this._getOption('labelMode');\r\n    }\r\n    set labelMode(value) {\r\n        this._setOption('labelMode', value);\r\n    }\r\n    /**\r\n     * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n    \r\n     */\r\n    get name() {\r\n        return this._getOption('name');\r\n    }\r\n    set name(value) {\r\n        this._setOption('name', value);\r\n    }\r\n    /**\r\n     * Specifies whether or not the drop-down editor is displayed.\r\n    \r\n     */\r\n    get opened() {\r\n        return this._getOption('opened');\r\n    }\r\n    set opened(value) {\r\n        this._setOption('opened', value);\r\n    }\r\n    /**\r\n     * Specifies whether a user can open the drop-down list by clicking a text field.\r\n    \r\n     */\r\n    get openOnFieldClick() {\r\n        return this._getOption('openOnFieldClick');\r\n    }\r\n    set openOnFieldClick(value) {\r\n        this._setOption('openOnFieldClick', value);\r\n    }\r\n    /**\r\n     * Specifies a text string displayed when the editor&apos;s value is empty.\r\n    \r\n     */\r\n    get placeholder() {\r\n        return this._getOption('placeholder');\r\n    }\r\n    set placeholder(value) {\r\n        this._setOption('placeholder', value);\r\n    }\r\n    /**\r\n     * Specifies whether the editor is read-only.\r\n    \r\n     */\r\n    get readOnly() {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies whether to display the Clear button in the UI component.\r\n    \r\n     */\r\n    get showClearButton() {\r\n        return this._getOption('showClearButton');\r\n    }\r\n    set showClearButton(value) {\r\n        this._setOption('showClearButton', value);\r\n    }\r\n    /**\r\n     * Specifies whether the drop-down button is visible.\r\n    \r\n     */\r\n    get showDropDownButton() {\r\n        return this._getOption('showDropDownButton');\r\n    }\r\n    set showDropDownButton(value) {\r\n        this._setOption('showDropDownButton', value);\r\n    }\r\n    /**\r\n     * Specifies how the UI component&apos;s text field is styled.\r\n    \r\n     */\r\n    get stylingMode() {\r\n        return this._getOption('stylingMode');\r\n    }\r\n    set stylingMode(value) {\r\n        this._setOption('stylingMode', value);\r\n    }\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n    \r\n     */\r\n    get tabIndex() {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n    /**\r\n     * The read-only property that holds the text displayed by the UI component input element.\r\n    \r\n     */\r\n    get text() {\r\n        return this._getOption('text');\r\n    }\r\n    set text(value) {\r\n        this._setOption('text', value);\r\n    }\r\n    /**\r\n     * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n    \r\n     */\r\n    get validationError() {\r\n        return this._getOption('validationError');\r\n    }\r\n    set validationError(value) {\r\n        this._setOption('validationError', value);\r\n    }\r\n    /**\r\n     * An array of the validation rules that failed.\r\n    \r\n     */\r\n    get validationErrors() {\r\n        return this._getOption('validationErrors');\r\n    }\r\n    set validationErrors(value) {\r\n        this._setOption('validationErrors', value);\r\n    }\r\n    /**\r\n     * Specifies how the message about the validation rules that are not satisfied by this editor&apos;s value is displayed.\r\n    \r\n     */\r\n    get validationMessageMode() {\r\n        return this._getOption('validationMessageMode');\r\n    }\r\n    set validationMessageMode(value) {\r\n        this._setOption('validationMessageMode', value);\r\n    }\r\n    /**\r\n     * Specifies the position of a validation message relative to the component. The validation message describes the validation rules that this component&apos;s value does not satisfy.\r\n    \r\n     */\r\n    get validationMessagePosition() {\r\n        return this._getOption('validationMessagePosition');\r\n    }\r\n    set validationMessagePosition(value) {\r\n        this._setOption('validationMessagePosition', value);\r\n    }\r\n    /**\r\n     * Indicates or specifies the current validation status.\r\n    \r\n     */\r\n    get validationStatus() {\r\n        return this._getOption('validationStatus');\r\n    }\r\n    set validationStatus(value) {\r\n        this._setOption('validationStatus', value);\r\n    }\r\n    /**\r\n     * Specifies the currently selected value.\r\n    \r\n     */\r\n    get value() {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value) {\r\n        this._setOption('value', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component is visible.\r\n    \r\n     */\r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value) {\r\n        this._setOption('visible', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    change(_) { }\r\n    get buttonsChildren() {\r\n        return this._getOption('buttons');\r\n    }\r\n    set buttonsChildren(value) {\r\n        this.setChildren('buttons', value);\r\n    }\r\n    _createInstance(element, options) {\r\n        return new DxColorBox(element, options);\r\n    }\r\n    writeValue(value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    }\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    registerOnChange(fn) { this.change = fn; }\r\n    registerOnTouched(fn) { this.touched = fn; }\r\n    _createWidget(element) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('buttons', changes);\r\n        this.setupChanges('validationErrors', changes);\r\n    }\r\n    setupChanges(prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        this._idh.doCheck('buttons');\r\n        this._idh.doCheck('validationErrors');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n    _setOption(name, value) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ DxColorBoxComponent.ɵfac = function DxColorBoxComponent_Factory(t) { return new (t || DxColorBoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\r\n/** @nocollapse */ DxColorBoxComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxColorBoxComponent, selectors: [[\"dx-color-box\"]], contentQueries: function DxColorBoxComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\r\n        i0.ɵɵcontentQuery(dirIndex, DxiButtonComponent, 4);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.buttonsChildren = _t);\r\n    } }, hostBindings: function DxColorBoxComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵlistener(\"valueChange\", function DxColorBoxComponent_valueChange_HostBindingHandler($event) { return ctx.change($event); })(\"onBlur\", function DxColorBoxComponent_onBlur_HostBindingHandler($event) { return ctx.touched($event); });\r\n    } }, inputs: { acceptCustomValue: \"acceptCustomValue\", accessKey: \"accessKey\", activeStateEnabled: \"activeStateEnabled\", applyButtonText: \"applyButtonText\", applyValueMode: \"applyValueMode\", buttons: \"buttons\", cancelButtonText: \"cancelButtonText\", deferRendering: \"deferRendering\", disabled: \"disabled\", dropDownButtonTemplate: \"dropDownButtonTemplate\", dropDownOptions: \"dropDownOptions\", editAlphaChannel: \"editAlphaChannel\", elementAttr: \"elementAttr\", fieldTemplate: \"fieldTemplate\", focusStateEnabled: \"focusStateEnabled\", height: \"height\", hint: \"hint\", hoverStateEnabled: \"hoverStateEnabled\", inputAttr: \"inputAttr\", isValid: \"isValid\", keyStep: \"keyStep\", label: \"label\", labelMode: \"labelMode\", name: \"name\", opened: \"opened\", openOnFieldClick: \"openOnFieldClick\", placeholder: \"placeholder\", readOnly: \"readOnly\", rtlEnabled: \"rtlEnabled\", showClearButton: \"showClearButton\", showDropDownButton: \"showDropDownButton\", stylingMode: \"stylingMode\", tabIndex: \"tabIndex\", text: \"text\", validationError: \"validationError\", validationErrors: \"validationErrors\", validationMessageMode: \"validationMessageMode\", validationMessagePosition: \"validationMessagePosition\", validationStatus: \"validationStatus\", value: \"value\", visible: \"visible\", width: \"width\" }, outputs: { onChange: \"onChange\", onClosed: \"onClosed\", onCopy: \"onCopy\", onCut: \"onCut\", onDisposing: \"onDisposing\", onEnterKey: \"onEnterKey\", onFocusIn: \"onFocusIn\", onFocusOut: \"onFocusOut\", onInitialized: \"onInitialized\", onInput: \"onInput\", onKeyDown: \"onKeyDown\", onKeyUp: \"onKeyUp\", onOpened: \"onOpened\", onOptionChanged: \"onOptionChanged\", onPaste: \"onPaste\", onValueChanged: \"onValueChanged\", acceptCustomValueChange: \"acceptCustomValueChange\", accessKeyChange: \"accessKeyChange\", activeStateEnabledChange: \"activeStateEnabledChange\", applyButtonTextChange: \"applyButtonTextChange\", applyValueModeChange: \"applyValueModeChange\", buttonsChange: \"buttonsChange\", cancelButtonTextChange: \"cancelButtonTextChange\", deferRenderingChange: \"deferRenderingChange\", disabledChange: \"disabledChange\", dropDownButtonTemplateChange: \"dropDownButtonTemplateChange\", dropDownOptionsChange: \"dropDownOptionsChange\", editAlphaChannelChange: \"editAlphaChannelChange\", elementAttrChange: \"elementAttrChange\", fieldTemplateChange: \"fieldTemplateChange\", focusStateEnabledChange: \"focusStateEnabledChange\", heightChange: \"heightChange\", hintChange: \"hintChange\", hoverStateEnabledChange: \"hoverStateEnabledChange\", inputAttrChange: \"inputAttrChange\", isValidChange: \"isValidChange\", keyStepChange: \"keyStepChange\", labelChange: \"labelChange\", labelModeChange: \"labelModeChange\", nameChange: \"nameChange\", openedChange: \"openedChange\", openOnFieldClickChange: \"openOnFieldClickChange\", placeholderChange: \"placeholderChange\", readOnlyChange: \"readOnlyChange\", rtlEnabledChange: \"rtlEnabledChange\", showClearButtonChange: \"showClearButtonChange\", showDropDownButtonChange: \"showDropDownButtonChange\", stylingModeChange: \"stylingModeChange\", tabIndexChange: \"tabIndexChange\", textChange: \"textChange\", validationErrorChange: \"validationErrorChange\", validationErrorsChange: \"validationErrorsChange\", validationMessageModeChange: \"validationMessageModeChange\", validationMessagePositionChange: \"validationMessagePositionChange\", validationStatusChange: \"validationStatusChange\", valueChange: \"valueChange\", visibleChange: \"visibleChange\", widthChange: \"widthChange\", onBlur: \"onBlur\" }, features: [i0.ɵɵProvidersFeature([\r\n            DxTemplateHost,\r\n            WatcherHelper,\r\n            CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n            NestedOptionHost,\r\n            IterableDifferHelper\r\n        ]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DxColorBoxComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxColorBoxComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'dx-color-box',\r\n                template: '',\r\n                providers: [\r\n                    DxTemplateHost,\r\n                    WatcherHelper,\r\n                    CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                    NestedOptionHost,\r\n                    IterableDifferHelper\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.DxTemplateHost }, { type: i1.WatcherHelper }, { type: i1.IterableDifferHelper }, { type: i1.NestedOptionHost }, { type: i2.TransferState }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, { acceptCustomValue: [{\r\n            type: Input\r\n        }], accessKey: [{\r\n            type: Input\r\n        }], activeStateEnabled: [{\r\n            type: Input\r\n        }], applyButtonText: [{\r\n            type: Input\r\n        }], applyValueMode: [{\r\n            type: Input\r\n        }], buttons: [{\r\n            type: Input\r\n        }], cancelButtonText: [{\r\n            type: Input\r\n        }], deferRendering: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], dropDownButtonTemplate: [{\r\n            type: Input\r\n        }], dropDownOptions: [{\r\n            type: Input\r\n        }], editAlphaChannel: [{\r\n            type: Input\r\n        }], elementAttr: [{\r\n            type: Input\r\n        }], fieldTemplate: [{\r\n            type: Input\r\n        }], focusStateEnabled: [{\r\n            type: Input\r\n        }], height: [{\r\n            type: Input\r\n        }], hint: [{\r\n            type: Input\r\n        }], hoverStateEnabled: [{\r\n            type: Input\r\n        }], inputAttr: [{\r\n            type: Input\r\n        }], isValid: [{\r\n            type: Input\r\n        }], keyStep: [{\r\n            type: Input\r\n        }], label: [{\r\n            type: Input\r\n        }], labelMode: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], opened: [{\r\n            type: Input\r\n        }], openOnFieldClick: [{\r\n            type: Input\r\n        }], placeholder: [{\r\n            type: Input\r\n        }], readOnly: [{\r\n            type: Input\r\n        }], rtlEnabled: [{\r\n            type: Input\r\n        }], showClearButton: [{\r\n            type: Input\r\n        }], showDropDownButton: [{\r\n            type: Input\r\n        }], stylingMode: [{\r\n            type: Input\r\n        }], tabIndex: [{\r\n            type: Input\r\n        }], text: [{\r\n            type: Input\r\n        }], validationError: [{\r\n            type: Input\r\n        }], validationErrors: [{\r\n            type: Input\r\n        }], validationMessageMode: [{\r\n            type: Input\r\n        }], validationMessagePosition: [{\r\n            type: Input\r\n        }], validationStatus: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], visible: [{\r\n            type: Input\r\n        }], width: [{\r\n            type: Input\r\n        }], onChange: [{\r\n            type: Output\r\n        }], onClosed: [{\r\n            type: Output\r\n        }], onCopy: [{\r\n            type: Output\r\n        }], onCut: [{\r\n            type: Output\r\n        }], onDisposing: [{\r\n            type: Output\r\n        }], onEnterKey: [{\r\n            type: Output\r\n        }], onFocusIn: [{\r\n            type: Output\r\n        }], onFocusOut: [{\r\n            type: Output\r\n        }], onInitialized: [{\r\n            type: Output\r\n        }], onInput: [{\r\n            type: Output\r\n        }], onKeyDown: [{\r\n            type: Output\r\n        }], onKeyUp: [{\r\n            type: Output\r\n        }], onOpened: [{\r\n            type: Output\r\n        }], onOptionChanged: [{\r\n            type: Output\r\n        }], onPaste: [{\r\n            type: Output\r\n        }], onValueChanged: [{\r\n            type: Output\r\n        }], acceptCustomValueChange: [{\r\n            type: Output\r\n        }], accessKeyChange: [{\r\n            type: Output\r\n        }], activeStateEnabledChange: [{\r\n            type: Output\r\n        }], applyButtonTextChange: [{\r\n            type: Output\r\n        }], applyValueModeChange: [{\r\n            type: Output\r\n        }], buttonsChange: [{\r\n            type: Output\r\n        }], cancelButtonTextChange: [{\r\n            type: Output\r\n        }], deferRenderingChange: [{\r\n            type: Output\r\n        }], disabledChange: [{\r\n            type: Output\r\n        }], dropDownButtonTemplateChange: [{\r\n            type: Output\r\n        }], dropDownOptionsChange: [{\r\n            type: Output\r\n        }], editAlphaChannelChange: [{\r\n            type: Output\r\n        }], elementAttrChange: [{\r\n            type: Output\r\n        }], fieldTemplateChange: [{\r\n            type: Output\r\n        }], focusStateEnabledChange: [{\r\n            type: Output\r\n        }], heightChange: [{\r\n            type: Output\r\n        }], hintChange: [{\r\n            type: Output\r\n        }], hoverStateEnabledChange: [{\r\n            type: Output\r\n        }], inputAttrChange: [{\r\n            type: Output\r\n        }], isValidChange: [{\r\n            type: Output\r\n        }], keyStepChange: [{\r\n            type: Output\r\n        }], labelChange: [{\r\n            type: Output\r\n        }], labelModeChange: [{\r\n            type: Output\r\n        }], nameChange: [{\r\n            type: Output\r\n        }], openedChange: [{\r\n            type: Output\r\n        }], openOnFieldClickChange: [{\r\n            type: Output\r\n        }], placeholderChange: [{\r\n            type: Output\r\n        }], readOnlyChange: [{\r\n            type: Output\r\n        }], rtlEnabledChange: [{\r\n            type: Output\r\n        }], showClearButtonChange: [{\r\n            type: Output\r\n        }], showDropDownButtonChange: [{\r\n            type: Output\r\n        }], stylingModeChange: [{\r\n            type: Output\r\n        }], tabIndexChange: [{\r\n            type: Output\r\n        }], textChange: [{\r\n            type: Output\r\n        }], validationErrorChange: [{\r\n            type: Output\r\n        }], validationErrorsChange: [{\r\n            type: Output\r\n        }], validationMessageModeChange: [{\r\n            type: Output\r\n        }], validationMessagePositionChange: [{\r\n            type: Output\r\n        }], validationStatusChange: [{\r\n            type: Output\r\n        }], valueChange: [{\r\n            type: Output\r\n        }], visibleChange: [{\r\n            type: Output\r\n        }], widthChange: [{\r\n            type: Output\r\n        }], onBlur: [{\r\n            type: Output\r\n        }], change: [{\r\n            type: HostListener,\r\n            args: ['valueChange', ['$event']]\r\n        }], touched: [{\r\n            type: HostListener,\r\n            args: ['onBlur', ['$event']]\r\n        }], buttonsChildren: [{\r\n            type: ContentChildren,\r\n            args: [DxiButtonComponent]\r\n        }] }); })();\r\nclass DxColorBoxModule {\r\n}\r\n/** @nocollapse */ DxColorBoxModule.ɵfac = function DxColorBoxModule_Factory(t) { return new (t || DxColorBoxModule)(); };\r\n/** @nocollapse */ DxColorBoxModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxColorBoxModule });\r\n/** @nocollapse */ DxColorBoxModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[\r\n            DxiButtonModule,\r\n            DxoOptionsModule,\r\n            DxoDropDownOptionsModule,\r\n            DxoAnimationModule,\r\n            DxoHideModule,\r\n            DxoFromModule,\r\n            DxoPositionModule,\r\n            DxoAtModule,\r\n            DxoBoundaryOffsetModule,\r\n            DxoCollisionModule,\r\n            DxoMyModule,\r\n            DxoOffsetModule,\r\n            DxoToModule,\r\n            DxoShowModule,\r\n            DxiToolbarItemModule,\r\n            DxIntegrationModule,\r\n            DxTemplateModule,\r\n            BrowserTransferStateModule\r\n        ], DxiButtonModule,\r\n        DxoOptionsModule,\r\n        DxoDropDownOptionsModule,\r\n        DxoAnimationModule,\r\n        DxoHideModule,\r\n        DxoFromModule,\r\n        DxoPositionModule,\r\n        DxoAtModule,\r\n        DxoBoundaryOffsetModule,\r\n        DxoCollisionModule,\r\n        DxoMyModule,\r\n        DxoOffsetModule,\r\n        DxoToModule,\r\n        DxoShowModule,\r\n        DxiToolbarItemModule,\r\n        DxTemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxColorBoxModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    DxiButtonModule,\r\n                    DxoOptionsModule,\r\n                    DxoDropDownOptionsModule,\r\n                    DxoAnimationModule,\r\n                    DxoHideModule,\r\n                    DxoFromModule,\r\n                    DxoPositionModule,\r\n                    DxoAtModule,\r\n                    DxoBoundaryOffsetModule,\r\n                    DxoCollisionModule,\r\n                    DxoMyModule,\r\n                    DxoOffsetModule,\r\n                    DxoToModule,\r\n                    DxoShowModule,\r\n                    DxiToolbarItemModule,\r\n                    DxIntegrationModule,\r\n                    DxTemplateModule,\r\n                    BrowserTransferStateModule\r\n                ],\r\n                declarations: [\r\n                    DxColorBoxComponent\r\n                ],\r\n                exports: [\r\n                    DxColorBoxComponent,\r\n                    DxiButtonModule,\r\n                    DxoOptionsModule,\r\n                    DxoDropDownOptionsModule,\r\n                    DxoAnimationModule,\r\n                    DxoHideModule,\r\n                    DxoFromModule,\r\n                    DxoPositionModule,\r\n                    DxoAtModule,\r\n                    DxoBoundaryOffsetModule,\r\n                    DxoCollisionModule,\r\n                    DxoMyModule,\r\n                    DxoOffsetModule,\r\n                    DxoToModule,\r\n                    DxoShowModule,\r\n                    DxiToolbarItemModule,\r\n                    DxTemplateModule\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxColorBoxModule, { declarations: [DxColorBoxComponent], imports: [DxiButtonModule,\r\n        DxoOptionsModule,\r\n        DxoDropDownOptionsModule,\r\n        DxoAnimationModule,\r\n        DxoHideModule,\r\n        DxoFromModule,\r\n        DxoPositionModule,\r\n        DxoAtModule,\r\n        DxoBoundaryOffsetModule,\r\n        DxoCollisionModule,\r\n        DxoMyModule,\r\n        DxoOffsetModule,\r\n        DxoToModule,\r\n        DxoShowModule,\r\n        DxiToolbarItemModule,\r\n        DxIntegrationModule,\r\n        DxTemplateModule,\r\n        BrowserTransferStateModule], exports: [DxColorBoxComponent, DxiButtonModule,\r\n        DxoOptionsModule,\r\n        DxoDropDownOptionsModule,\r\n        DxoAnimationModule,\r\n        DxoHideModule,\r\n        DxoFromModule,\r\n        DxoPositionModule,\r\n        DxoAtModule,\r\n        DxoBoundaryOffsetModule,\r\n        DxoCollisionModule,\r\n        DxoMyModule,\r\n        DxoOffsetModule,\r\n        DxoToModule,\r\n        DxoShowModule,\r\n        DxiToolbarItemModule,\r\n        DxTemplateModule] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxColorBoxComponent, DxColorBoxModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}