{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { name as wheelEventName } from \"../../events/core/wheel\";\nimport messageLocalization from \"../../localization/message\";\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\nimport { isDefined } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport browser from \"../../core/utils/browser\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport { move } from \"../../animation/translator\";\nimport Scrollable from \"../scroll_view/ui.scrollable\";\nimport { when } from \"../../core/utils/deferred\";\nvar CONTENT_CLASS = \"content\";\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\nvar LAST_CELL_CLASS = \"dx-last-cell\";\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\nvar COMMAND_TRANSPARENT = \"transparent\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\n\nvar getTransparentColumnIndex = function (fixedColumns) {\n  var transparentColumnIndex = -1;\n  each(fixedColumns, function (index, column) {\n    if (column.command === COMMAND_TRANSPARENT) {\n      transparentColumnIndex = index;\n      return false;\n    }\n  });\n  return transparentColumnIndex;\n};\n\nvar normalizeColumnWidths = function (fixedColumns, widths, fixedWidths) {\n  var fixedColumnIndex = 0;\n\n  if (fixedColumns && widths && fixedWidths) {\n    for (var i = 0; i < fixedColumns.length; i++) {\n      if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\n        fixedColumnIndex += fixedColumns[i].colspan;\n      } else {\n        if (widths[fixedColumnIndex] < fixedWidths[i]) {\n          widths[fixedColumnIndex] = fixedWidths[i];\n        }\n\n        fixedColumnIndex++;\n      }\n    }\n  }\n\n  return widths;\n};\n\nvar baseFixedColumns = {\n  init: function () {\n    this.callBase();\n    this._isFixedTableRendering = false;\n    this._isFixedColumns = false;\n  },\n  _createCol: function (column) {\n    return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)));\n  },\n  _correctColumnIndicesForFixedColumns: function (fixedColumns, change) {\n    var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n    var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\n    var columnIndices = change && change.columnIndices;\n\n    if (columnIndices) {\n      change.columnIndices = columnIndices.map(function (columnIndices) {\n        if (columnIndices) {\n          return columnIndices.map(function (columnIndex) {\n            if (columnIndex < transparentColumnIndex) {\n              return columnIndex;\n            } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\n              return columnIndex - transparentColspan + 1;\n            }\n\n            return -1;\n          }).filter(function (columnIndex) {\n            return columnIndex >= 0;\n          });\n        }\n      });\n    }\n  },\n\n  _partialUpdateFixedTable(fixedColumns) {\n    var fixedTableElement = this._fixedTableElement;\n\n    var $rows = this._getRowElementsCore(fixedTableElement);\n\n    var $colgroup = fixedTableElement.children(\"colgroup\");\n    $colgroup.replaceWith(this._createColGroup(fixedColumns));\n\n    for (var i = 0; i < $rows.length; i++) {\n      this._partialUpdateFixedRow($($rows[i]), fixedColumns);\n    }\n  },\n\n  _partialUpdateFixedRow($row, fixedColumns) {\n    var cellElements = $row.get(0).childNodes;\n    var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n    var transparentColumn = fixedColumns[transparentColumnIndex];\n\n    var columnIndexOffset = this._columnsController.getColumnIndexOffset();\n\n    var groupCellOptions;\n    var colIndex = columnIndexOffset + 1;\n    var colspan = transparentColumn.colspan;\n\n    if ($row.hasClass(DETAIL_ROW_CLASS)) {\n      var _this$_columnsControl;\n\n      cellElements[0].setAttribute(\"colspan\", null === (_this$_columnsControl = this._columnsController.getVisibleColumns()) || void 0 === _this$_columnsControl ? void 0 : _this$_columnsControl.length);\n      return;\n    }\n\n    if ($row.hasClass(GROUP_ROW_CLASS)) {\n      groupCellOptions = this._getGroupCellOptions({\n        row: $row.data(\"options\"),\n        columns: this._columnsController.getVisibleColumns()\n      });\n      colspan = groupCellOptions.colspan - Math.max(0, cellElements.length - (groupCellOptions.columnIndex + 2));\n    }\n\n    for (var j = 0; j < cellElements.length; j++) {\n      var needUpdateColspan = groupCellOptions ? j === groupCellOptions.columnIndex + 1 : j === transparentColumnIndex;\n      cellElements[j].setAttribute(\"aria-colindex\", colIndex);\n\n      if (needUpdateColspan) {\n        cellElements[j].setAttribute(\"colspan\", colspan);\n        colIndex += colspan;\n      } else {\n        colIndex++;\n      }\n    }\n  },\n\n  _renderTable: function (options) {\n    var $fixedTable;\n    var fixedColumns = this.getFixedColumns();\n    this._isFixedColumns = !!fixedColumns.length;\n    var $table = this.callBase(options);\n\n    if (this._isFixedColumns) {\n      var change = null === options || void 0 === options ? void 0 : options.change;\n      this._isFixedTableRendering = true;\n\n      if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\n        this._partialUpdateFixedTable(fixedColumns);\n\n        this._isFixedTableRendering = false;\n      } else {\n        var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\n\n        this._correctColumnIndicesForFixedColumns(fixedColumns, change);\n\n        $fixedTable = this._createTable(fixedColumns);\n\n        this._renderRows($fixedTable, extend({}, options, {\n          columns: fixedColumns\n        }));\n\n        when(this._updateContent($fixedTable, change)).done(() => {\n          this._isFixedTableRendering = false;\n        });\n\n        if (columnIndices) {\n          change.columnIndices = columnIndices;\n        }\n      }\n    } else {\n      this._fixedTableElement && this._fixedTableElement.parent().remove();\n      this._fixedTableElement = null;\n    }\n\n    return $table;\n  },\n  _renderRow: function ($table, options) {\n    var fixedCorrection;\n    var cells = options.row.cells;\n    this.callBase.apply(this, arguments);\n\n    if (this._isFixedTableRendering && cells && cells.length) {\n      fixedCorrection = 0;\n      var fixedCells = options.row.cells || [];\n      cells = cells.slice();\n      options.row.cells = cells;\n\n      for (var i = 0; i < fixedCells.length; i++) {\n        if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\n          fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\n          continue;\n        }\n\n        cells[i + fixedCorrection] = fixedCells[i];\n      }\n    }\n  },\n  _createCell: function (options) {\n    var that = this;\n    var column = options.column;\n    var columnCommand = column && column.command;\n    var rowType = options.rowType;\n    var $cell = that.callBase.apply(that, arguments);\n    var fixedColumns;\n    var prevFixedColumn;\n    var transparentColumnIndex;\n\n    if (that._isFixedTableRendering || \"filter\" === rowType) {\n      fixedColumns = that.getFixedColumns();\n      transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n      prevFixedColumn = fixedColumns[transparentColumnIndex - 1];\n    }\n\n    if (that._isFixedTableRendering) {\n      if (columnCommand === COMMAND_TRANSPARENT) {\n        $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\n\n        if (\"freeSpace\" !== rowType) {\n          gridCoreUtils.setEmptyText($cell);\n        }\n      }\n    } else if (\"filter\" === rowType) {\n      $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex);\n    }\n\n    var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\n    var isSelectAllCell = \"multiple\" === that.option(\"selection.mode\") && 0 === options.columnIndex && \"header\" === options.rowType;\n\n    if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle && !isSelectAllCell) {\n      $cell.addClass(FIXED_COL_CLASS);\n    }\n\n    return $cell;\n  },\n  _wrapTableInScrollContainer: function () {\n    var $scrollContainer = this.callBase.apply(this, arguments);\n\n    if (this._isFixedTableRendering) {\n      $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n    }\n\n    return $scrollContainer;\n  },\n  _renderCellContent: function ($cell, options) {\n    var isEmptyCell;\n    var column = options.column;\n    var isFixedTableRendering = this._isFixedTableRendering;\n    var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\n\n    if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\n      $cell.css(\"pointerEvents\", \"none\");\n    }\n\n    if (!isFixedTableRendering && this._isFixedColumns) {\n      isEmptyCell = column.fixed || column.command && false !== column.fixed;\n\n      if (isGroupCell) {\n        isEmptyCell = false;\n\n        if (options.row.summaryCells && options.row.summaryCells.length) {\n          var columns = this._columnsController.getVisibleColumns();\n\n          var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\n            columns: columns,\n            row: options.row,\n            isFixed: true\n          }) : 0;\n\n          if (alignByFixedColumnCellCount > 0) {\n            var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\n            isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex;\n          }\n        }\n      }\n\n      if (isEmptyCell) {\n        if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\n          $cell.html(\"&nbsp;\").addClass(column.cssClass);\n          return;\n        } else {\n          $cell.addClass(\"dx-hidden-cell\");\n        }\n      }\n    }\n\n    if (column.command !== COMMAND_TRANSPARENT) {\n      this.callBase.apply(this, arguments);\n    }\n  },\n  _getCellElementsCore: function (rowIndex) {\n    var cellElements = this.callBase.apply(this, arguments);\n    var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\n    var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\n\n    if (this._fixedTableElement && cellElements) {\n      var fixedColumns = this.getFixedColumns(headerRowIndex);\n\n      var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\n\n      each(fixedCellElements, (columnIndex, cell) => {\n        if (isGroupRow) {\n          if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\n            cellElements[columnIndex] = cell;\n          }\n        } else {\n          var fixedColumn = fixedColumns[columnIndex];\n\n          if (fixedColumn) {\n            if (fixedColumn.command === COMMAND_TRANSPARENT) {\n              if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\n                cellElements[columnIndex] = cell || cellElements[columnIndex];\n              }\n            } else {\n              var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\n\n              cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex];\n            }\n          }\n        }\n      });\n    }\n\n    return cellElements;\n  },\n  getColumnWidths: function () {\n    var fixedWidths;\n    var result = this.callBase();\n    var fixedColumns = this.getFixedColumns();\n\n    if (this._fixedTableElement && result.length) {\n      fixedWidths = this.callBase(this._fixedTableElement);\n    }\n\n    return normalizeColumnWidths(fixedColumns, result, fixedWidths);\n  },\n  getTableElement: function () {\n    var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\n    return tableElement;\n  },\n  setTableElement: function (tableElement) {\n    if (this._isFixedTableRendering) {\n      this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS);\n    } else {\n      this.callBase(tableElement);\n    }\n  },\n  getColumns: function (rowIndex, $tableElement) {\n    $tableElement = $tableElement || this.getTableElement();\n\n    if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\n      return this.getFixedColumns(rowIndex);\n    }\n\n    return this.callBase(rowIndex, $tableElement);\n  },\n  getRowIndex: function ($row) {\n    var $fixedTable = this._fixedTableElement;\n\n    if ($fixedTable && $fixedTable.find($row).length) {\n      return this._getRowElements($fixedTable).index($row);\n    }\n\n    return this.callBase($row);\n  },\n  getTableElements: function () {\n    var result = this.callBase.apply(this, arguments);\n\n    if (this._fixedTableElement) {\n      result = $([result.get(0), this._fixedTableElement.get(0)]);\n    }\n\n    return result;\n  },\n  getFixedColumns: function (rowIndex) {\n    return this._columnsController.getFixedColumns(rowIndex);\n  },\n  getFixedColumnsOffset: function () {\n    var offset = {\n      left: 0,\n      right: 0\n    };\n    var $transparentColumn;\n\n    if (this._fixedTableElement) {\n      $transparentColumn = this.getTransparentColumnElement();\n      var positionTransparentColumn = $transparentColumn.position();\n      offset = {\n        left: positionTransparentColumn.left,\n        right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\n      };\n    }\n\n    return offset;\n  },\n  getTransparentColumnElement: function () {\n    return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first();\n  },\n  getFixedTableElement: function () {\n    return this._fixedTableElement;\n  },\n  isFixedColumns: function () {\n    return this._isFixedColumns;\n  },\n  _resizeCore: function () {\n    this.callBase();\n    this.synchronizeRows();\n  },\n  setColumnWidths: function (options) {\n    var columns;\n\n    var visibleColumns = this._columnsController.getVisibleColumns();\n\n    var widths = options.widths;\n    var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\n    var optionNames = options.optionNames;\n    var isColumnWidthChanged = optionNames && optionNames.width;\n    var useVisibleColumns = false;\n    this.callBase.apply(this, arguments);\n\n    if (this._fixedTableElement) {\n      var hasAutoWidth = widths && widths.some(function (width) {\n        return \"auto\" === width;\n      });\n      useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\n\n      if (useVisibleColumns) {\n        columns = visibleColumns;\n      }\n\n      this.callBase(extend({}, options, {\n        $tableElement: this._fixedTableElement,\n        columns: columns,\n        fixed: true\n      }));\n    }\n\n    if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\n      this.synchronizeRows();\n    }\n  },\n  _createColGroup: function (columns) {\n    if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\n      var visibleColumns = this._columnsController.getVisibleColumns();\n\n      var useVisibleColumns = visibleColumns.filter(function (column) {\n        return !column.width;\n      }).length;\n\n      if (useVisibleColumns) {\n        columns = visibleColumns;\n      }\n    }\n\n    return this.callBase(columns);\n  },\n  _getClientHeight: function (element) {\n    var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\n    return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight;\n  },\n  synchronizeRows: function () {\n    var rowHeights = [];\n    var fixedRowHeights = [];\n    var rowIndex;\n    var $rowElements;\n    var $fixedRowElements;\n    var $contentElement;\n\n    if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\n      var heightTable = this._getClientHeight(this._tableElement.get(0));\n\n      var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\n\n      $rowElements = this._getRowElements(this._tableElement);\n      $fixedRowElements = this._getRowElements(this._fixedTableElement);\n      $contentElement = this._findContentElement();\n\n      if (heightTable !== heightFixedTable) {\n        $contentElement && $contentElement.css(\"height\", heightTable);\n        $rowElements.css(\"height\", \"\");\n        $fixedRowElements.css(\"height\", \"\");\n\n        for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\n          rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\n          fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)));\n        }\n\n        for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\n          var rowHeight = rowHeights[rowIndex];\n          var fixedRowHeight = fixedRowHeights[rowIndex];\n\n          if (rowHeight > fixedRowHeight) {\n            $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight);\n          } else if (rowHeight < fixedRowHeight) {\n            $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight);\n          }\n        }\n\n        $contentElement && $contentElement.css(\"height\", \"\");\n      }\n    }\n  },\n  setScrollerSpacing: function (width) {\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    this.callBase(width);\n    this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\n      paddingLeft: rtlEnabled ? width : \"\",\n      paddingRight: !rtlEnabled ? width : \"\"\n    });\n  }\n};\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\n  _getRowVisibleColumns: function (rowIndex) {\n    if (this._isFixedTableRendering) {\n      return this.getFixedColumns(rowIndex);\n    }\n\n    return this.callBase(rowIndex);\n  },\n  getContextMenuItems: function (options) {\n    var column = options.column;\n    var columnFixingOptions = this.option(\"columnFixing\");\n    var items = this.callBase(options);\n\n    if (options.row && \"header\" === options.row.rowType) {\n      if (true === columnFixingOptions.enabled && column && column.allowFixing) {\n        var onItemClick = params => {\n          switch (params.itemData.value) {\n            case \"none\":\n              this._columnsController.columnOption(column.index, \"fixed\", false);\n\n              break;\n\n            case \"left\":\n              this._columnsController.columnOption(column.index, {\n                fixed: true,\n                fixedPosition: \"left\"\n              });\n\n              break;\n\n            case \"right\":\n              this._columnsController.columnOption(column.index, {\n                fixed: true,\n                fixedPosition: \"right\"\n              });\n\n          }\n        };\n\n        items = items || [];\n        items.push({\n          text: columnFixingOptions.texts.fix,\n          beginGroup: true,\n          items: [{\n            text: columnFixingOptions.texts.leftPosition,\n            value: \"left\",\n            disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\n            onItemClick: onItemClick\n          }, {\n            text: columnFixingOptions.texts.rightPosition,\n            value: \"right\",\n            disabled: column.fixed && \"right\" === column.fixedPosition,\n            onItemClick: onItemClick\n          }]\n        }, {\n          text: columnFixingOptions.texts.unfix,\n          value: \"none\",\n          disabled: !column.fixed,\n          onItemClick: onItemClick\n        });\n      }\n    }\n\n    return items;\n  },\n  getFixedColumnElements: function (rowIndex) {\n    if (isDefined(rowIndex)) {\n      return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children();\n    }\n\n    var columnElements = this.getColumnElements();\n    var $transparentColumnElement = this.getTransparentColumnElement();\n\n    if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\n      var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\n      columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0));\n    }\n\n    return columnElements;\n  },\n  getColumnWidths: function () {\n    var fixedWidths;\n    var result = this.callBase();\n    var $fixedColumnElements = this.getFixedColumnElements();\n    var fixedColumns = this.getFixedColumns();\n\n    if (this._fixedTableElement) {\n      if ($fixedColumnElements && $fixedColumnElements.length) {\n        fixedWidths = this._getWidths($fixedColumnElements);\n      } else {\n        fixedWidths = this.callBase(this._fixedTableElement);\n      }\n    }\n\n    return normalizeColumnWidths(fixedColumns, result, fixedWidths);\n  }\n});\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\n  _detachHoverEvents: function () {\n    this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\n    this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\");\n  },\n  _attachHoverEvents: function () {\n    var that = this;\n\n    var attachHoverEvent = function ($table) {\n      eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction(function (args) {\n        var event = args.event;\n        var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\n        var isHover = \"mouseover\" === event.type;\n\n        if (rowIndex >= 0) {\n          that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\n          that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\n        }\n      }));\n    };\n\n    if (that._fixedTableElement && that._tableElement) {\n      attachHoverEvent(that._fixedTableElement);\n      attachHoverEvent(that._tableElement);\n    }\n  },\n  _findContentElement: function () {\n    var that = this;\n    var $content;\n    var scrollTop;\n    var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\n    var element = that.element();\n    var scrollDelay = browser.mozilla ? 60 : 0;\n\n    if (element && that._isFixedTableRendering) {\n      $content = element.children(\".\" + contentClass);\n      var scrollable = that.getScrollable();\n\n      if (!$content.length && scrollable) {\n        $content = $(\"<div>\").addClass(contentClass);\n        eventsEngine.on($content, \"scroll\", function (e) {\n          var target = e.target;\n          clearTimeout(that._fixedScrollTimeout);\n          that._fixedScrollTimeout = setTimeout(function () {\n            scrollTop = $(target).scrollTop();\n            scrollable.scrollTo({\n              y: scrollTop\n            });\n          }, scrollDelay);\n        });\n        eventsEngine.on($content, wheelEventName, function (e) {\n          var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\n          var shouldScroll = false;\n\n          if (scrollable && scrollable.$element().is($nearestScrollable)) {\n            shouldScroll = true;\n          } else {\n            var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\n            var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\n            shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar;\n          }\n\n          if (shouldScroll) {\n            scrollTop = scrollable.scrollTop();\n            scrollable.scrollTo({\n              y: scrollTop - e.delta\n            });\n\n            if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\n              return false;\n            }\n          }\n        });\n        $content.appendTo(element);\n      }\n\n      return $content;\n    }\n\n    return that.callBase();\n  },\n  _updateScrollable: function () {\n    this.callBase();\n    var scrollable = this.getScrollable();\n\n    if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\n      return;\n    }\n\n    var scrollTop = scrollable && scrollable.scrollOffset().top;\n\n    this._updateFixedTablePosition(scrollTop);\n  },\n  _renderContent: function (contentElement, tableElement) {\n    if (this._isFixedTableRendering) {\n      return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement);\n    }\n\n    return this.callBase(contentElement, tableElement);\n  },\n  _getGroupCellOptions: function (options) {\n    if (this._isFixedTableRendering) {\n      return this.callBase(extend({}, options, {\n        columns: this._columnsController.getVisibleColumns()\n      }));\n    }\n\n    return this.callBase(options);\n  },\n  _renderGroupedCells: function ($row, options) {\n    return this.callBase($row, extend({}, options, {\n      columns: this._columnsController.getVisibleColumns()\n    }));\n  },\n  _renderGroupSummaryCells: function ($row, options) {\n    if (this._isFixedTableRendering) {\n      this.callBase($row, extend({}, options, {\n        columns: this._columnsController.getVisibleColumns()\n      }));\n    } else {\n      this.callBase($row, options);\n    }\n  },\n  _hasAlignByColumnSummaryItems: function (columnIndex, options) {\n    var result = this.callBase.apply(this, arguments);\n    var column = options.columns[columnIndex];\n\n    if (options.isFixed) {\n      return column.fixed && (result || \"right\" === column.fixedPosition);\n    }\n\n    return result && (!this._isFixedColumns || !column.fixed);\n  },\n  _renderGroupSummaryCellsCore: function ($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\n    var alignByFixedColumnCellCount;\n\n    if (this._isFixedTableRendering) {\n      options.isFixed = true;\n      alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\n      options.isFixed = false;\n      var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\n      options = extend({}, options, {\n        columns: this.getFixedColumns()\n      });\n      var transparentColumnIndex = getTransparentColumnIndex(options.columns);\n\n      if (startColumnIndex < transparentColumnIndex) {\n        alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\n        groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0;\n      } else if (alignByColumnCellCount > 0) {\n        $groupCell.css(\"visibility\", \"hidden\");\n      }\n\n      alignByColumnCellCount = alignByFixedColumnCellCount;\n    }\n\n    this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount);\n  },\n  _getSummaryCellIndex: function (columnIndex, columns) {\n    if (this._isFixedTableRendering) {\n      var transparentColumnIndex = getTransparentColumnIndex(columns);\n\n      if (columnIndex > transparentColumnIndex) {\n        columnIndex += columns[transparentColumnIndex].colspan - 1;\n      }\n\n      return columnIndex;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _renderCore: function (change) {\n    this._detachHoverEvents();\n\n    var deferred = this.callBase(change);\n    var isFixedColumns = this._isFixedColumns;\n    this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\n\n    if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\n      this._attachHoverEvents();\n    }\n\n    return deferred;\n  },\n  setRowsOpacity: function (columnIndex, value) {\n    this.callBase(columnIndex, value);\n\n    var $rows = this._getRowElements(this._fixedTableElement);\n\n    this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value);\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n\n    if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\n      args.value ? this._attachHoverEvents() : this._detachHoverEvents();\n    }\n  },\n  getCellIndex: function ($cell) {\n    var $fixedTable = this._fixedTableElement;\n    var cellIndex = 0;\n\n    if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\n      var columns = this.getFixedColumns();\n      each(columns, function (index, column) {\n        if (index === $cell[0].cellIndex) {\n          return false;\n        }\n\n        if (column.colspan) {\n          cellIndex += column.colspan;\n          return;\n        }\n\n        cellIndex++;\n      });\n      return cellIndex;\n    }\n\n    return this.callBase.apply(this, arguments);\n  },\n  _updateFixedTablePosition: function (scrollTop, needFocus) {\n    if (this._fixedTableElement && this._tableElement) {\n      var $focusedElement;\n      var editorFactory = this.getController(\"editorFactory\");\n\n      this._fixedTableElement.parent().scrollTop(scrollTop);\n\n      if (needFocus && editorFactory) {\n        $focusedElement = editorFactory.focus();\n        $focusedElement && editorFactory.focus($focusedElement);\n      }\n    }\n  },\n  setScrollerSpacing: function (vWidth, hWidth) {\n    var styles = {\n      marginBottom: 0\n    };\n    var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n\n    if ($fixedContent.length && this._fixedTableElement) {\n      $fixedContent.css(styles);\n\n      this._fixedTableElement.css(styles);\n\n      styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\n      styles.marginBottom = hWidth;\n\n      var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\n\n      (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles);\n    }\n  },\n  _getElasticScrollTop: function (e) {\n    var elasticScrollTop = 0;\n\n    if (e.scrollOffset.top < 0) {\n      elasticScrollTop = -e.scrollOffset.top;\n    } else if (e.reachedBottom) {\n      var $scrollableContent = $(e.component.content());\n      var $scrollableContainer = $(e.component.container());\n      var maxScrollTop = Math.max($scrollableContent.get(0).clientHeight - $scrollableContainer.get(0).clientHeight, 0);\n      elasticScrollTop = maxScrollTop - e.scrollOffset.top;\n    }\n\n    return Math.floor(elasticScrollTop);\n  },\n  _applyElasticScrolling: function (e) {\n    if (this._fixedTableElement) {\n      var elasticScrollTop = this._getElasticScrollTop(e);\n\n      if (0 !== Math.ceil(elasticScrollTop)) {\n        move(this._fixedTableElement, {\n          top: elasticScrollTop\n        });\n      } else {\n        this._fixedTableElement.css(\"transform\", \"\");\n      }\n    }\n  },\n  _handleScroll: function (e) {\n    this._updateFixedTablePosition(e.scrollOffset.top, true);\n\n    this._applyElasticScrolling(e);\n\n    this.callBase(e);\n  },\n  _updateContentPosition: function (isRender) {\n    this.callBase.apply(this, arguments);\n\n    if (!isRender) {\n      this._updateFixedTablePosition(this._scrollTop);\n    }\n  },\n  _afterRowPrepared: function (e) {\n    if (this._isFixedTableRendering) {\n      return;\n    }\n\n    this.callBase(e);\n  },\n  _scrollToElement: function ($element) {\n    this.callBase($element, this.getFixedColumnsOffset());\n  },\n  dispose: function () {\n    this.callBase.apply(this, arguments);\n    clearTimeout(this._fixedScrollTimeout);\n  }\n});\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\nexport var columnFixingModule = {\n  defaultOptions: function () {\n    return {\n      columnFixing: {\n        enabled: false,\n        texts: {\n          fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\n          unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\n          leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\n          rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\n        }\n      }\n    };\n  },\n  extenders: {\n    views: {\n      columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\n      rowsView: RowsViewFixedColumnsExtender,\n      footerView: FooterViewFixedColumnsExtender\n    },\n    controllers: {\n      draggingHeader: {\n        _generatePointsByColumns: function (options) {\n          var visibleColumns = options.columns;\n          var targetDraggingPanel = options.targetDraggingPanel;\n\n          if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\n            if (options.sourceColumn.fixed) {\n              if (!options.rowIndex) {\n                options.columnElements = targetDraggingPanel.getFixedColumnElements(0);\n              }\n\n              options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\n              var pointsByColumns = this.callBase(options);\n              !function (columns, fixedColumns, pointsByColumns) {\n                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n                var correctIndex = columns.length - fixedColumns.length;\n                each(pointsByColumns, function (_, point) {\n                  if (point.index > transparentColumnIndex) {\n                    point.columnIndex += correctIndex;\n                    point.index += correctIndex;\n                  }\n                });\n                return pointsByColumns;\n              }(visibleColumns, options.columns, pointsByColumns);\n              return pointsByColumns;\n            }\n          }\n\n          return this.callBase(options);\n        },\n        _pointCreated: function (point, columns, location, sourceColumn) {\n          var result = this.callBase.apply(this, arguments);\n          var targetColumn = columns[point.columnIndex];\n\n          var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\n\n          if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\n            var boundingRect = getBoundingRect($transparentColumn.get(0));\n\n            if (sourceColumn && sourceColumn.fixed) {\n              return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left;\n            } else {\n              if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\n                return true;\n              }\n\n              return point.x < boundingRect.left || point.x > boundingRect.right;\n            }\n          }\n\n          return result;\n        }\n      },\n      columnsResizer: {\n        _generatePointsByColumns: function () {\n          var that = this;\n          var columnsController = that._columnsController;\n\n          var columns = columnsController && that._columnsController.getVisibleColumns();\n\n          var fixedColumns = columnsController && that._columnsController.getFixedColumns();\n\n          var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\n          var correctIndex = columns.length - fixedColumns.length;\n\n          var cells = that._columnHeadersView.getFixedColumnElements();\n\n          that.callBase();\n\n          if (cells && cells.length > 0) {\n            that._pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, function (point) {\n              if (point.index > transparentColumnIndex) {\n                point.columnIndex += correctIndex;\n                point.index += correctIndex;\n              }\n\n              return that._pointCreated(point, columns.length, columns);\n            });\n          }\n        },\n        _getTargetPoint: function (pointsByColumns, currentX, deltaX) {\n          var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\n\n          if ($transparentColumn && $transparentColumn.length) {\n            var boundingRect = getBoundingRect($transparentColumn.get(0));\n\n            if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\n              return this.callBase(this._pointsByFixedColumns, currentX, deltaX);\n            }\n          }\n\n          return this.callBase(pointsByColumns, currentX, deltaX);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["getOuterWidth","$","eventsEngine","name","wheelEventName","messageLocalization","gridCoreUtils","isDefined","extend","each","browser","getBoundingRect","move","Scrollable","when","CONTENT_CLASS","CONTENT_FIXED_CLASS","MASTER_DETAIL_CELL_CLASS","FIRST_CELL_CLASS","LAST_CELL_CLASS","HOVER_STATE_CLASS","FIXED_COL_CLASS","FIXED_COLUMNS_CLASS","POINTER_EVENTS_NONE_CLASS","COMMAND_TRANSPARENT","GROUP_ROW_CLASS","DETAIL_ROW_CLASS","getTransparentColumnIndex","fixedColumns","transparentColumnIndex","index","column","command","normalizeColumnWidths","widths","fixedWidths","fixedColumnIndex","i","length","colspan","baseFixedColumns","init","callBase","_isFixedTableRendering","_isFixedColumns","_createCol","toggleClass","fixed","_correctColumnIndicesForFixedColumns","change","transparentColspan","columnIndices","map","columnIndex","filter","_partialUpdateFixedTable","fixedTableElement","_fixedTableElement","$rows","_getRowElementsCore","$colgroup","children","replaceWith","_createColGroup","_partialUpdateFixedRow","$row","cellElements","get","childNodes","transparentColumn","columnIndexOffset","_columnsController","getColumnIndexOffset","groupCellOptions","colIndex","hasClass","_this$_columnsControl","setAttribute","getVisibleColumns","_getGroupCellOptions","row","data","columns","Math","max","j","needUpdateColspan","_renderTable","options","$fixedTable","getFixedColumns","$table","virtualColumnsScrolling","option","_createTable","_renderRows","_updateContent","done","parent","remove","_renderRow","fixedCorrection","cells","apply","arguments","fixedCells","slice","_createCell","that","columnCommand","rowType","$cell","prevFixedColumn","addClass","setEmptyText","isRowAltStyle","isAltRow","isSelectAllCell","mozilla","_wrapTableInScrollContainer","$scrollContainer","addWidgetPrefix","_renderCellContent","isEmptyCell","isFixedTableRendering","isGroupCell","groupIndex","groupCellTemplate","css","summaryCells","alignByFixedColumnCellCount","_getAlignByColumnCellCount","isFixed","type","html","cssClass","_getCellElementsCore","rowIndex","isGroupRow","headerRowIndex","fixedCellElements","_getRowElements","eq","cell","style","visibility","fixedColumn","getVisibleIndexByColumn","getColumnWidths","result","getTableElement","tableElement","setTableElement","getColumns","$tableElement","closest","getRowIndex","find","getTableElements","getFixedColumnsOffset","offset","left","right","$transparentColumn","getTransparentColumnElement","positionTransparentColumn","position","element","first","getFixedTableElement","isFixedColumns","_resizeCore","synchronizeRows","setColumnWidths","visibleColumns","isWidthsSynchronized","visibleWidth","optionNames","isColumnWidthChanged","width","useVisibleColumns","hasAutoWidth","some","isScrollbarVisible","_getClientHeight","boundingClientRectElement","getBoundingClientRect","height","clientHeight","rowHeights","fixedRowHeights","$rowElements","$fixedRowElements","$contentElement","_tableElement","heightTable","heightFixedTable","_findContentElement","push","rowHeight","fixedRowHeight","setScrollerSpacing","rtlEnabled","paddingLeft","paddingRight","ColumnHeadersViewFixedColumnsExtender","_getRowVisibleColumns","getContextMenuItems","columnFixingOptions","items","enabled","allowFixing","onItemClick","params","itemData","value","columnOption","fixedPosition","text","texts","fix","beginGroup","leftPosition","disabled","rightPosition","unfix","getFixedColumnElements","columnElements","getColumnElements","$transparentColumnElement","splice","colSpan","$fixedColumnElements","_getWidths","RowsViewFixedColumnsExtender","_detachHoverEvents","off","_attachHoverEvents","attachHoverEvent","on","createAction","args","event","target","isHover","$content","scrollTop","contentClass","scrollDelay","scrollable","getScrollable","e","clearTimeout","_fixedScrollTimeout","setTimeout","scrollTo","y","$nearestScrollable","shouldScroll","$element","is","nearestScrollableInstance","getInstance","nearestScrollableHasVerticalScrollbar","scrollHeight","delta","getScrollbarWidth","appendTo","_updateScrollable","_disposed","scrollOffset","top","_updateFixedTablePosition","_renderContent","contentElement","empty","append","_renderGroupedCells","_renderGroupSummaryCells","_hasAlignByColumnSummaryItems","_renderGroupSummaryCellsCore","$groupCell","groupCellColSpan","alignByColumnCellCount","startColumnIndex","_getSummaryCellIndex","_renderCore","deferred","setRowsOpacity","_setRowsOpacityCore","optionChanged","getCellIndex","cellIndex","needFocus","$focusedElement","editorFactory","getController","focus","vWidth","hWidth","styles","marginBottom","$fixedContent","useNativeScrolling","_scrollable","_getElasticScrollTop","elasticScrollTop","reachedBottom","$scrollableContent","component","content","$scrollableContainer","container","maxScrollTop","floor","_applyElasticScrolling","ceil","_handleScroll","_updateContentPosition","isRender","_scrollTop","_afterRowPrepared","_scrollToElement","dispose","FooterViewFixedColumnsExtender","columnFixingModule","defaultOptions","columnFixing","format","extenders","views","columnHeadersView","rowsView","footerView","controllers","draggingHeader","_generatePointsByColumns","targetDraggingPanel","getName","sourceColumn","pointsByColumns","correctIndex","_","point","_pointCreated","location","targetColumn","_columnHeadersView","boundingRect","x","columnsResizer","columnsController","_pointsByFixedColumns","getPointsByColumns","_getTargetPoint","currentX","deltaX"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.column_fixing.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.column_fixing.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    name as wheelEventName\r\n} from \"../../events/core/wheel\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport gridCoreUtils from \"../grid_core/ui.grid_core.utils\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport {\r\n    move\r\n} from \"../../animation/translator\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar MASTER_DETAIL_CELL_CLASS = \"dx-master-detail-cell\";\r\nvar FIRST_CELL_CLASS = \"dx-first-cell\";\r\nvar LAST_CELL_CLASS = \"dx-last-cell\";\r\nvar HOVER_STATE_CLASS = \"dx-state-hover\";\r\nvar FIXED_COL_CLASS = \"dx-col-fixed\";\r\nvar FIXED_COLUMNS_CLASS = \"dx-fixed-columns\";\r\nvar POINTER_EVENTS_NONE_CLASS = \"dx-pointer-events-none\";\r\nvar COMMAND_TRANSPARENT = \"transparent\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar getTransparentColumnIndex = function(fixedColumns) {\r\n    var transparentColumnIndex = -1;\r\n    each(fixedColumns, (function(index, column) {\r\n        if (column.command === COMMAND_TRANSPARENT) {\r\n            transparentColumnIndex = index;\r\n            return false\r\n        }\r\n    }));\r\n    return transparentColumnIndex\r\n};\r\nvar normalizeColumnWidths = function(fixedColumns, widths, fixedWidths) {\r\n    var fixedColumnIndex = 0;\r\n    if (fixedColumns && widths && fixedWidths) {\r\n        for (var i = 0; i < fixedColumns.length; i++) {\r\n            if (fixedColumns[i].command === COMMAND_TRANSPARENT) {\r\n                fixedColumnIndex += fixedColumns[i].colspan\r\n            } else {\r\n                if (widths[fixedColumnIndex] < fixedWidths[i]) {\r\n                    widths[fixedColumnIndex] = fixedWidths[i]\r\n                }\r\n                fixedColumnIndex++\r\n            }\r\n        }\r\n    }\r\n    return widths\r\n};\r\nvar baseFixedColumns = {\r\n    init: function() {\r\n        this.callBase();\r\n        this._isFixedTableRendering = false;\r\n        this._isFixedColumns = false\r\n    },\r\n    _createCol: function(column) {\r\n        return this.callBase(column).toggleClass(FIXED_COL_CLASS, !!(this._isFixedTableRendering && (column.fixed || column.command && column.command !== COMMAND_TRANSPARENT)))\r\n    },\r\n    _correctColumnIndicesForFixedColumns: function(fixedColumns, change) {\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColspan = fixedColumns[transparentColumnIndex].colspan;\r\n        var columnIndices = change && change.columnIndices;\r\n        if (columnIndices) {\r\n            change.columnIndices = columnIndices.map((function(columnIndices) {\r\n                if (columnIndices) {\r\n                    return columnIndices.map((function(columnIndex) {\r\n                        if (columnIndex < transparentColumnIndex) {\r\n                            return columnIndex\r\n                        } else if (columnIndex >= transparentColumnIndex + transparentColspan) {\r\n                            return columnIndex - transparentColspan + 1\r\n                        }\r\n                        return -1\r\n                    })).filter((function(columnIndex) {\r\n                        return columnIndex >= 0\r\n                    }))\r\n                }\r\n            }))\r\n        }\r\n    },\r\n    _partialUpdateFixedTable(fixedColumns) {\r\n        var fixedTableElement = this._fixedTableElement;\r\n        var $rows = this._getRowElementsCore(fixedTableElement);\r\n        var $colgroup = fixedTableElement.children(\"colgroup\");\r\n        $colgroup.replaceWith(this._createColGroup(fixedColumns));\r\n        for (var i = 0; i < $rows.length; i++) {\r\n            this._partialUpdateFixedRow($($rows[i]), fixedColumns)\r\n        }\r\n    },\r\n    _partialUpdateFixedRow($row, fixedColumns) {\r\n        var cellElements = $row.get(0).childNodes;\r\n        var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n        var transparentColumn = fixedColumns[transparentColumnIndex];\r\n        var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        var groupCellOptions;\r\n        var colIndex = columnIndexOffset + 1;\r\n        var colspan = transparentColumn.colspan;\r\n        if ($row.hasClass(DETAIL_ROW_CLASS)) {\r\n            var _this$_columnsControl;\r\n            cellElements[0].setAttribute(\"colspan\", null === (_this$_columnsControl = this._columnsController.getVisibleColumns()) || void 0 === _this$_columnsControl ? void 0 : _this$_columnsControl.length);\r\n            return\r\n        }\r\n        if ($row.hasClass(GROUP_ROW_CLASS)) {\r\n            groupCellOptions = this._getGroupCellOptions({\r\n                row: $row.data(\"options\"),\r\n                columns: this._columnsController.getVisibleColumns()\r\n            });\r\n            colspan = groupCellOptions.colspan - Math.max(0, cellElements.length - (groupCellOptions.columnIndex + 2))\r\n        }\r\n        for (var j = 0; j < cellElements.length; j++) {\r\n            var needUpdateColspan = groupCellOptions ? j === groupCellOptions.columnIndex + 1 : j === transparentColumnIndex;\r\n            cellElements[j].setAttribute(\"aria-colindex\", colIndex);\r\n            if (needUpdateColspan) {\r\n                cellElements[j].setAttribute(\"colspan\", colspan);\r\n                colIndex += colspan\r\n            } else {\r\n                colIndex++\r\n            }\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        var $fixedTable;\r\n        var fixedColumns = this.getFixedColumns();\r\n        this._isFixedColumns = !!fixedColumns.length;\r\n        var $table = this.callBase(options);\r\n        if (this._isFixedColumns) {\r\n            var change = null === options || void 0 === options ? void 0 : options.change;\r\n            this._isFixedTableRendering = true;\r\n            if (null !== change && void 0 !== change && change.virtualColumnsScrolling && true !== this.option(\"scrolling.legacyMode\")) {\r\n                this._partialUpdateFixedTable(fixedColumns);\r\n                this._isFixedTableRendering = false\r\n            } else {\r\n                var columnIndices = null === change || void 0 === change ? void 0 : change.columnIndices;\r\n                this._correctColumnIndicesForFixedColumns(fixedColumns, change);\r\n                $fixedTable = this._createTable(fixedColumns);\r\n                this._renderRows($fixedTable, extend({}, options, {\r\n                    columns: fixedColumns\r\n                }));\r\n                when(this._updateContent($fixedTable, change)).done(() => {\r\n                    this._isFixedTableRendering = false\r\n                });\r\n                if (columnIndices) {\r\n                    change.columnIndices = columnIndices\r\n                }\r\n            }\r\n        } else {\r\n            this._fixedTableElement && this._fixedTableElement.parent().remove();\r\n            this._fixedTableElement = null\r\n        }\r\n        return $table\r\n    },\r\n    _renderRow: function($table, options) {\r\n        var fixedCorrection;\r\n        var cells = options.row.cells;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering && cells && cells.length) {\r\n            fixedCorrection = 0;\r\n            var fixedCells = options.row.cells || [];\r\n            cells = cells.slice();\r\n            options.row.cells = cells;\r\n            for (var i = 0; i < fixedCells.length; i++) {\r\n                if (fixedCells[i].column && fixedCells[i].column.command === COMMAND_TRANSPARENT) {\r\n                    fixedCorrection = (fixedCells[i].column.colspan || 1) - 1;\r\n                    continue\r\n                }\r\n                cells[i + fixedCorrection] = fixedCells[i]\r\n            }\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var that = this;\r\n        var column = options.column;\r\n        var columnCommand = column && column.command;\r\n        var rowType = options.rowType;\r\n        var $cell = that.callBase.apply(that, arguments);\r\n        var fixedColumns;\r\n        var prevFixedColumn;\r\n        var transparentColumnIndex;\r\n        if (that._isFixedTableRendering || \"filter\" === rowType) {\r\n            fixedColumns = that.getFixedColumns();\r\n            transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n            prevFixedColumn = fixedColumns[transparentColumnIndex - 1]\r\n        }\r\n        if (that._isFixedTableRendering) {\r\n            if (columnCommand === COMMAND_TRANSPARENT) {\r\n                $cell.addClass(POINTER_EVENTS_NONE_CLASS).toggleClass(FIRST_CELL_CLASS, 0 === transparentColumnIndex || prevFixedColumn && \"expand\" === prevFixedColumn.command).toggleClass(LAST_CELL_CLASS, fixedColumns.length && transparentColumnIndex === fixedColumns.length - 1);\r\n                if (\"freeSpace\" !== rowType) {\r\n                    gridCoreUtils.setEmptyText($cell)\r\n                }\r\n            }\r\n        } else if (\"filter\" === rowType) {\r\n            $cell.toggleClass(FIRST_CELL_CLASS, options.columnIndex === transparentColumnIndex)\r\n        }\r\n        var isRowAltStyle = that.option(\"rowAlternationEnabled\") && options.isAltRow;\r\n        var isSelectAllCell = \"multiple\" === that.option(\"selection.mode\") && 0 === options.columnIndex && \"header\" === options.rowType;\r\n        if (browser.mozilla && options.column.fixed && \"group\" !== options.rowType && !isRowAltStyle && !isSelectAllCell) {\r\n            $cell.addClass(FIXED_COL_CLASS)\r\n        }\r\n        return $cell\r\n    },\r\n    _wrapTableInScrollContainer: function() {\r\n        var $scrollContainer = this.callBase.apply(this, arguments);\r\n        if (this._isFixedTableRendering) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_FIXED_CLASS))\r\n        }\r\n        return $scrollContainer\r\n    },\r\n    _renderCellContent: function($cell, options) {\r\n        var isEmptyCell;\r\n        var column = options.column;\r\n        var isFixedTableRendering = this._isFixedTableRendering;\r\n        var isGroupCell = \"group\" === options.rowType && isDefined(column.groupIndex);\r\n        if (isFixedTableRendering && isGroupCell && !column.command && !column.groupCellTemplate) {\r\n            $cell.css(\"pointerEvents\", \"none\")\r\n        }\r\n        if (!isFixedTableRendering && this._isFixedColumns) {\r\n            isEmptyCell = column.fixed || column.command && false !== column.fixed;\r\n            if (isGroupCell) {\r\n                isEmptyCell = false;\r\n                if (options.row.summaryCells && options.row.summaryCells.length) {\r\n                    var columns = this._columnsController.getVisibleColumns();\r\n                    var alignByFixedColumnCellCount = this._getAlignByColumnCellCount ? this._getAlignByColumnCellCount(column.colspan, {\r\n                        columns: columns,\r\n                        row: options.row,\r\n                        isFixed: true\r\n                    }) : 0;\r\n                    if (alignByFixedColumnCellCount > 0) {\r\n                        var transparentColumnIndex = getTransparentColumnIndex(this._columnsController.getFixedColumns());\r\n                        isEmptyCell = columns.length - alignByFixedColumnCellCount < transparentColumnIndex\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyCell) {\r\n                if (column.command && \"buttons\" !== column.type || \"group\" === options.rowType) {\r\n                    $cell.html(\"&nbsp;\").addClass(column.cssClass);\r\n                    return\r\n                } else {\r\n                    $cell.addClass(\"dx-hidden-cell\")\r\n                }\r\n            }\r\n        }\r\n        if (column.command !== COMMAND_TRANSPARENT) {\r\n            this.callBase.apply(this, arguments)\r\n        }\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var cellElements = this.callBase.apply(this, arguments);\r\n        var isGroupRow = cellElements.parent().hasClass(GROUP_ROW_CLASS);\r\n        var headerRowIndex = \"columnHeadersView\" === this.name ? rowIndex : void 0;\r\n        if (this._fixedTableElement && cellElements) {\r\n            var fixedColumns = this.getFixedColumns(headerRowIndex);\r\n            var fixedCellElements = this._getRowElements(this._fixedTableElement).eq(rowIndex).children(\"td\");\r\n            each(fixedCellElements, (columnIndex, cell) => {\r\n                if (isGroupRow) {\r\n                    if (cellElements[columnIndex] && \"hidden\" !== cell.style.visibility) {\r\n                        cellElements[columnIndex] = cell\r\n                    }\r\n                } else {\r\n                    var fixedColumn = fixedColumns[columnIndex];\r\n                    if (fixedColumn) {\r\n                        if (fixedColumn.command === COMMAND_TRANSPARENT) {\r\n                            if (fixedCellElements.eq(columnIndex).hasClass(MASTER_DETAIL_CELL_CLASS)) {\r\n                                cellElements[columnIndex] = cell || cellElements[columnIndex]\r\n                            }\r\n                        } else {\r\n                            var fixedColumnIndex = this._columnsController.getVisibleIndexByColumn(fixedColumn, headerRowIndex);\r\n                            cellElements[fixedColumnIndex] = cell || cellElements[fixedColumnIndex]\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return cellElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement && result.length) {\r\n            fixedWidths = this.callBase(this._fixedTableElement)\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    },\r\n    getTableElement: function() {\r\n        var tableElement = this._isFixedTableRendering ? this._fixedTableElement : this.callBase();\r\n        return tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            this._fixedTableElement = tableElement.addClass(POINTER_EVENTS_NONE_CLASS)\r\n        } else {\r\n            this.callBase(tableElement)\r\n        }\r\n    },\r\n    getColumns: function(rowIndex, $tableElement) {\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if (this._isFixedTableRendering || $tableElement && $tableElement.closest(\"table\").parent(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).length) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex, $tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        if ($fixedTable && $fixedTable.find($row).length) {\r\n            return this._getRowElements($fixedTable).index($row)\r\n        }\r\n        return this.callBase($row)\r\n    },\r\n    getTableElements: function() {\r\n        var result = this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            result = $([result.get(0), this._fixedTableElement.get(0)])\r\n        }\r\n        return result\r\n    },\r\n    getFixedColumns: function(rowIndex) {\r\n        return this._columnsController.getFixedColumns(rowIndex)\r\n    },\r\n    getFixedColumnsOffset: function() {\r\n        var offset = {\r\n            left: 0,\r\n            right: 0\r\n        };\r\n        var $transparentColumn;\r\n        if (this._fixedTableElement) {\r\n            $transparentColumn = this.getTransparentColumnElement();\r\n            var positionTransparentColumn = $transparentColumn.position();\r\n            offset = {\r\n                left: positionTransparentColumn.left,\r\n                right: getOuterWidth(this.element(), true) - (getOuterWidth($transparentColumn, true) + positionTransparentColumn.left)\r\n            }\r\n        }\r\n        return offset\r\n    },\r\n    getTransparentColumnElement: function() {\r\n        return this._fixedTableElement && this._fixedTableElement.find(\".\" + POINTER_EVENTS_NONE_CLASS).first()\r\n    },\r\n    getFixedTableElement: function() {\r\n        return this._fixedTableElement\r\n    },\r\n    isFixedColumns: function() {\r\n        return this._isFixedColumns\r\n    },\r\n    _resizeCore: function() {\r\n        this.callBase();\r\n        this.synchronizeRows()\r\n    },\r\n    setColumnWidths: function(options) {\r\n        var columns;\r\n        var visibleColumns = this._columnsController.getVisibleColumns();\r\n        var widths = options.widths;\r\n        var isWidthsSynchronized = widths && widths.length && isDefined(visibleColumns[0].visibleWidth);\r\n        var optionNames = options.optionNames;\r\n        var isColumnWidthChanged = optionNames && optionNames.width;\r\n        var useVisibleColumns = false;\r\n        this.callBase.apply(this, arguments);\r\n        if (this._fixedTableElement) {\r\n            var hasAutoWidth = widths && widths.some((function(width) {\r\n                return \"auto\" === width\r\n            }));\r\n            useVisibleColumns = hasAutoWidth && (!isWidthsSynchronized || !this.isScrollbarVisible(true));\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n            this.callBase(extend({}, options, {\r\n                $tableElement: this._fixedTableElement,\r\n                columns: columns,\r\n                fixed: true\r\n            }))\r\n        }\r\n        if (isWidthsSynchronized || isColumnWidthChanged && this.option(\"wordWrapEnabled\")) {\r\n            this.synchronizeRows()\r\n        }\r\n    },\r\n    _createColGroup: function(columns) {\r\n        if (this._isFixedTableRendering && !this.option(\"columnAutoWidth\")) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var useVisibleColumns = visibleColumns.filter((function(column) {\r\n                return !column.width\r\n            })).length;\r\n            if (useVisibleColumns) {\r\n                columns = visibleColumns\r\n            }\r\n        }\r\n        return this.callBase(columns)\r\n    },\r\n    _getClientHeight: function(element) {\r\n        var boundingClientRectElement = element.getBoundingClientRect && getBoundingRect(element);\r\n        return boundingClientRectElement && boundingClientRectElement.height ? boundingClientRectElement.height : element.clientHeight\r\n    },\r\n    synchronizeRows: function() {\r\n        var rowHeights = [];\r\n        var fixedRowHeights = [];\r\n        var rowIndex;\r\n        var $rowElements;\r\n        var $fixedRowElements;\r\n        var $contentElement;\r\n        if (this._isFixedColumns && this._tableElement && this._fixedTableElement) {\r\n            var heightTable = this._getClientHeight(this._tableElement.get(0));\r\n            var heightFixedTable = this._getClientHeight(this._fixedTableElement.get(0));\r\n            $rowElements = this._getRowElements(this._tableElement);\r\n            $fixedRowElements = this._getRowElements(this._fixedTableElement);\r\n            $contentElement = this._findContentElement();\r\n            if (heightTable !== heightFixedTable) {\r\n                $contentElement && $contentElement.css(\"height\", heightTable);\r\n                $rowElements.css(\"height\", \"\");\r\n                $fixedRowElements.css(\"height\", \"\");\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    rowHeights.push(this._getClientHeight($rowElements.get(rowIndex)));\r\n                    fixedRowHeights.push(this._getClientHeight($fixedRowElements.get(rowIndex)))\r\n                }\r\n                for (rowIndex = 0; rowIndex < $rowElements.length; rowIndex++) {\r\n                    var rowHeight = rowHeights[rowIndex];\r\n                    var fixedRowHeight = fixedRowHeights[rowIndex];\r\n                    if (rowHeight > fixedRowHeight) {\r\n                        $fixedRowElements.eq(rowIndex).css(\"height\", rowHeight)\r\n                    } else if (rowHeight < fixedRowHeight) {\r\n                        $rowElements.eq(rowIndex).css(\"height\", fixedRowHeight)\r\n                    }\r\n                }\r\n                $contentElement && $contentElement.css(\"height\", \"\")\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(width) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        this.callBase(width);\r\n        this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n};\r\nvar ColumnHeadersViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _getRowVisibleColumns: function(rowIndex) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.getFixedColumns(rowIndex)\r\n        }\r\n        return this.callBase(rowIndex)\r\n    },\r\n    getContextMenuItems: function(options) {\r\n        var column = options.column;\r\n        var columnFixingOptions = this.option(\"columnFixing\");\r\n        var items = this.callBase(options);\r\n        if (options.row && \"header\" === options.row.rowType) {\r\n            if (true === columnFixingOptions.enabled && column && column.allowFixing) {\r\n                var onItemClick = params => {\r\n                    switch (params.itemData.value) {\r\n                        case \"none\":\r\n                            this._columnsController.columnOption(column.index, \"fixed\", false);\r\n                            break;\r\n                        case \"left\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"left\"\r\n                            });\r\n                            break;\r\n                        case \"right\":\r\n                            this._columnsController.columnOption(column.index, {\r\n                                fixed: true,\r\n                                fixedPosition: \"right\"\r\n                            })\r\n                    }\r\n                };\r\n                items = items || [];\r\n                items.push({\r\n                    text: columnFixingOptions.texts.fix,\r\n                    beginGroup: true,\r\n                    items: [{\r\n                        text: columnFixingOptions.texts.leftPosition,\r\n                        value: \"left\",\r\n                        disabled: column.fixed && (!column.fixedPosition || \"left\" === column.fixedPosition),\r\n                        onItemClick: onItemClick\r\n                    }, {\r\n                        text: columnFixingOptions.texts.rightPosition,\r\n                        value: \"right\",\r\n                        disabled: column.fixed && \"right\" === column.fixedPosition,\r\n                        onItemClick: onItemClick\r\n                    }]\r\n                }, {\r\n                    text: columnFixingOptions.texts.unfix,\r\n                    value: \"none\",\r\n                    disabled: !column.fixed,\r\n                    onItemClick: onItemClick\r\n                })\r\n            }\r\n        }\r\n        return items\r\n    },\r\n    getFixedColumnElements: function(rowIndex) {\r\n        if (isDefined(rowIndex)) {\r\n            return this._fixedTableElement && this._getRowElements(this._fixedTableElement).eq(rowIndex).children()\r\n        }\r\n        var columnElements = this.getColumnElements();\r\n        var $transparentColumnElement = this.getTransparentColumnElement();\r\n        if (columnElements && $transparentColumnElement && $transparentColumnElement.length) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(this.getFixedColumns());\r\n            columnElements.splice(transparentColumnIndex, $transparentColumnElement.get(0).colSpan, $transparentColumnElement.get(0))\r\n        }\r\n        return columnElements\r\n    },\r\n    getColumnWidths: function() {\r\n        var fixedWidths;\r\n        var result = this.callBase();\r\n        var $fixedColumnElements = this.getFixedColumnElements();\r\n        var fixedColumns = this.getFixedColumns();\r\n        if (this._fixedTableElement) {\r\n            if ($fixedColumnElements && $fixedColumnElements.length) {\r\n                fixedWidths = this._getWidths($fixedColumnElements)\r\n            } else {\r\n                fixedWidths = this.callBase(this._fixedTableElement)\r\n            }\r\n        }\r\n        return normalizeColumnWidths(fixedColumns, result, fixedWidths)\r\n    }\r\n});\r\nvar RowsViewFixedColumnsExtender = extend({}, baseFixedColumns, {\r\n    _detachHoverEvents: function() {\r\n        this._fixedTableElement && eventsEngine.off(this._fixedTableElement, \"mouseover mouseout\", \".dx-data-row\");\r\n        this._tableElement && eventsEngine.off(this._tableElement, \"mouseover mouseout\", \".dx-data-row\")\r\n    },\r\n    _attachHoverEvents: function() {\r\n        var that = this;\r\n        var attachHoverEvent = function($table) {\r\n            eventsEngine.on($table, \"mouseover mouseout\", \".dx-data-row\", that.createAction((function(args) {\r\n                var event = args.event;\r\n                var rowIndex = that.getRowIndex($(event.target).closest(\".dx-row\"));\r\n                var isHover = \"mouseover\" === event.type;\r\n                if (rowIndex >= 0) {\r\n                    that._tableElement && that._getRowElements(that._tableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover);\r\n                    that._fixedTableElement && that._getRowElements(that._fixedTableElement).eq(rowIndex).toggleClass(HOVER_STATE_CLASS, isHover)\r\n                }\r\n            })))\r\n        };\r\n        if (that._fixedTableElement && that._tableElement) {\r\n            attachHoverEvent(that._fixedTableElement);\r\n            attachHoverEvent(that._tableElement)\r\n        }\r\n    },\r\n    _findContentElement: function() {\r\n        var that = this;\r\n        var $content;\r\n        var scrollTop;\r\n        var contentClass = that.addWidgetPrefix(CONTENT_CLASS);\r\n        var element = that.element();\r\n        var scrollDelay = browser.mozilla ? 60 : 0;\r\n        if (element && that._isFixedTableRendering) {\r\n            $content = element.children(\".\" + contentClass);\r\n            var scrollable = that.getScrollable();\r\n            if (!$content.length && scrollable) {\r\n                $content = $(\"<div>\").addClass(contentClass);\r\n                eventsEngine.on($content, \"scroll\", (function(e) {\r\n                    var target = e.target;\r\n                    clearTimeout(that._fixedScrollTimeout);\r\n                    that._fixedScrollTimeout = setTimeout((function() {\r\n                        scrollTop = $(target).scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop\r\n                        })\r\n                    }), scrollDelay)\r\n                }));\r\n                eventsEngine.on($content, wheelEventName, (function(e) {\r\n                    var $nearestScrollable = $(e.target).closest(\".dx-scrollable\");\r\n                    var shouldScroll = false;\r\n                    if (scrollable && scrollable.$element().is($nearestScrollable)) {\r\n                        shouldScroll = true\r\n                    } else {\r\n                        var nearestScrollableInstance = $nearestScrollable.length && Scrollable.getInstance($nearestScrollable.get(0));\r\n                        var nearestScrollableHasVerticalScrollbar = nearestScrollableInstance && nearestScrollableInstance.scrollHeight() - nearestScrollableInstance.clientHeight() > 0;\r\n                        shouldScroll = nearestScrollableInstance && !nearestScrollableHasVerticalScrollbar\r\n                    }\r\n                    if (shouldScroll) {\r\n                        scrollTop = scrollable.scrollTop();\r\n                        scrollable.scrollTo({\r\n                            y: scrollTop - e.delta\r\n                        });\r\n                        if (scrollable.scrollTop() > 0 && scrollable.scrollTop() + scrollable.clientHeight() < scrollable.scrollHeight() + that.getScrollbarWidth()) {\r\n                            return false\r\n                        }\r\n                    }\r\n                }));\r\n                $content.appendTo(element)\r\n            }\r\n            return $content\r\n        }\r\n        return that.callBase()\r\n    },\r\n    _updateScrollable: function() {\r\n        this.callBase();\r\n        var scrollable = this.getScrollable();\r\n        if (null !== scrollable && void 0 !== scrollable && scrollable._disposed) {\r\n            return\r\n        }\r\n        var scrollTop = scrollable && scrollable.scrollOffset().top;\r\n        this._updateFixedTablePosition(scrollTop)\r\n    },\r\n    _renderContent: function(contentElement, tableElement) {\r\n        if (this._isFixedTableRendering) {\r\n            return contentElement.empty().addClass(this.addWidgetPrefix(CONTENT_CLASS) + \" \" + this.addWidgetPrefix(CONTENT_FIXED_CLASS)).append(tableElement)\r\n        }\r\n        return this.callBase(contentElement, tableElement)\r\n    },\r\n    _getGroupCellOptions: function(options) {\r\n        if (this._isFixedTableRendering) {\r\n            return this.callBase(extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        }\r\n        return this.callBase(options)\r\n    },\r\n    _renderGroupedCells: function($row, options) {\r\n        return this.callBase($row, extend({}, options, {\r\n            columns: this._columnsController.getVisibleColumns()\r\n        }))\r\n    },\r\n    _renderGroupSummaryCells: function($row, options) {\r\n        if (this._isFixedTableRendering) {\r\n            this.callBase($row, extend({}, options, {\r\n                columns: this._columnsController.getVisibleColumns()\r\n            }))\r\n        } else {\r\n            this.callBase($row, options)\r\n        }\r\n    },\r\n    _hasAlignByColumnSummaryItems: function(columnIndex, options) {\r\n        var result = this.callBase.apply(this, arguments);\r\n        var column = options.columns[columnIndex];\r\n        if (options.isFixed) {\r\n            return column.fixed && (result || \"right\" === column.fixedPosition)\r\n        }\r\n        return result && (!this._isFixedColumns || !column.fixed)\r\n    },\r\n    _renderGroupSummaryCellsCore: function($groupCell, options, groupCellColSpan, alignByColumnCellCount) {\r\n        var alignByFixedColumnCellCount;\r\n        if (this._isFixedTableRendering) {\r\n            options.isFixed = true;\r\n            alignByFixedColumnCellCount = this._getAlignByColumnCellCount(groupCellColSpan, options);\r\n            options.isFixed = false;\r\n            var startColumnIndex = options.columns.length - alignByFixedColumnCellCount;\r\n            options = extend({}, options, {\r\n                columns: this.getFixedColumns()\r\n            });\r\n            var transparentColumnIndex = getTransparentColumnIndex(options.columns);\r\n            if (startColumnIndex < transparentColumnIndex) {\r\n                alignByFixedColumnCellCount -= options.columns[transparentColumnIndex].colspan - 1 || 0;\r\n                groupCellColSpan -= options.columns[transparentColumnIndex].colspan - 1 || 0\r\n            } else if (alignByColumnCellCount > 0) {\r\n                $groupCell.css(\"visibility\", \"hidden\")\r\n            }\r\n            alignByColumnCellCount = alignByFixedColumnCellCount\r\n        }\r\n        this.callBase($groupCell, options, groupCellColSpan, alignByColumnCellCount)\r\n    },\r\n    _getSummaryCellIndex: function(columnIndex, columns) {\r\n        if (this._isFixedTableRendering) {\r\n            var transparentColumnIndex = getTransparentColumnIndex(columns);\r\n            if (columnIndex > transparentColumnIndex) {\r\n                columnIndex += columns[transparentColumnIndex].colspan - 1\r\n            }\r\n            return columnIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _renderCore: function(change) {\r\n        this._detachHoverEvents();\r\n        var deferred = this.callBase(change);\r\n        var isFixedColumns = this._isFixedColumns;\r\n        this.element().toggleClass(FIXED_COLUMNS_CLASS, isFixedColumns);\r\n        if (this.option(\"hoverStateEnabled\") && isFixedColumns) {\r\n            this._attachHoverEvents()\r\n        }\r\n        return deferred\r\n    },\r\n    setRowsOpacity: function(columnIndex, value) {\r\n        this.callBase(columnIndex, value);\r\n        var $rows = this._getRowElements(this._fixedTableElement);\r\n        this._setRowsOpacityCore($rows, this.getFixedColumns(), columnIndex, value)\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        if (\"hoverStateEnabled\" === args.name && this._isFixedColumns) {\r\n            args.value ? this._attachHoverEvents() : this._detachHoverEvents()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var $fixedTable = this._fixedTableElement;\r\n        var cellIndex = 0;\r\n        if ($fixedTable && $cell.is(\"td\") && $cell.closest($fixedTable).length) {\r\n            var columns = this.getFixedColumns();\r\n            each(columns, (function(index, column) {\r\n                if (index === $cell[0].cellIndex) {\r\n                    return false\r\n                }\r\n                if (column.colspan) {\r\n                    cellIndex += column.colspan;\r\n                    return\r\n                }\r\n                cellIndex++\r\n            }));\r\n            return cellIndex\r\n        }\r\n        return this.callBase.apply(this, arguments)\r\n    },\r\n    _updateFixedTablePosition: function(scrollTop, needFocus) {\r\n        if (this._fixedTableElement && this._tableElement) {\r\n            var $focusedElement;\r\n            var editorFactory = this.getController(\"editorFactory\");\r\n            this._fixedTableElement.parent().scrollTop(scrollTop);\r\n            if (needFocus && editorFactory) {\r\n                $focusedElement = editorFactory.focus();\r\n                $focusedElement && editorFactory.focus($focusedElement)\r\n            }\r\n        }\r\n    },\r\n    setScrollerSpacing: function(vWidth, hWidth) {\r\n        var styles = {\r\n            marginBottom: 0\r\n        };\r\n        var $fixedContent = this.element().children(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if ($fixedContent.length && this._fixedTableElement) {\r\n            $fixedContent.css(styles);\r\n            this._fixedTableElement.css(styles);\r\n            styles[this.option(\"rtlEnabled\") ? \"marginLeft\" : \"marginRight\"] = vWidth;\r\n            styles.marginBottom = hWidth;\r\n            var useNativeScrolling = this._scrollable && this._scrollable.option(\"useNative\");\r\n            (useNativeScrolling ? $fixedContent : this._fixedTableElement).css(styles)\r\n        }\r\n    },\r\n    _getElasticScrollTop: function(e) {\r\n        var elasticScrollTop = 0;\r\n        if (e.scrollOffset.top < 0) {\r\n            elasticScrollTop = -e.scrollOffset.top\r\n        } else if (e.reachedBottom) {\r\n            var $scrollableContent = $(e.component.content());\r\n            var $scrollableContainer = $(e.component.container());\r\n            var maxScrollTop = Math.max($scrollableContent.get(0).clientHeight - $scrollableContainer.get(0).clientHeight, 0);\r\n            elasticScrollTop = maxScrollTop - e.scrollOffset.top\r\n        }\r\n        return Math.floor(elasticScrollTop)\r\n    },\r\n    _applyElasticScrolling: function(e) {\r\n        if (this._fixedTableElement) {\r\n            var elasticScrollTop = this._getElasticScrollTop(e);\r\n            if (0 !== Math.ceil(elasticScrollTop)) {\r\n                move(this._fixedTableElement, {\r\n                    top: elasticScrollTop\r\n                })\r\n            } else {\r\n                this._fixedTableElement.css(\"transform\", \"\")\r\n            }\r\n        }\r\n    },\r\n    _handleScroll: function(e) {\r\n        this._updateFixedTablePosition(e.scrollOffset.top, true);\r\n        this._applyElasticScrolling(e);\r\n        this.callBase(e)\r\n    },\r\n    _updateContentPosition: function(isRender) {\r\n        this.callBase.apply(this, arguments);\r\n        if (!isRender) {\r\n            this._updateFixedTablePosition(this._scrollTop)\r\n        }\r\n    },\r\n    _afterRowPrepared: function(e) {\r\n        if (this._isFixedTableRendering) {\r\n            return\r\n        }\r\n        this.callBase(e)\r\n    },\r\n    _scrollToElement: function($element) {\r\n        this.callBase($element, this.getFixedColumnsOffset())\r\n    },\r\n    dispose: function() {\r\n        this.callBase.apply(this, arguments);\r\n        clearTimeout(this._fixedScrollTimeout)\r\n    }\r\n});\r\nvar FooterViewFixedColumnsExtender = baseFixedColumns;\r\nexport var columnFixingModule = {\r\n    defaultOptions: function() {\r\n        return {\r\n            columnFixing: {\r\n                enabled: false,\r\n                texts: {\r\n                    fix: messageLocalization.format(\"dxDataGrid-columnFixingFix\"),\r\n                    unfix: messageLocalization.format(\"dxDataGrid-columnFixingUnfix\"),\r\n                    leftPosition: messageLocalization.format(\"dxDataGrid-columnFixingLeftPosition\"),\r\n                    rightPosition: messageLocalization.format(\"dxDataGrid-columnFixingRightPosition\")\r\n                }\r\n            }\r\n        }\r\n    },\r\n    extenders: {\r\n        views: {\r\n            columnHeadersView: ColumnHeadersViewFixedColumnsExtender,\r\n            rowsView: RowsViewFixedColumnsExtender,\r\n            footerView: FooterViewFixedColumnsExtender\r\n        },\r\n        controllers: {\r\n            draggingHeader: {\r\n                _generatePointsByColumns: function(options) {\r\n                    var visibleColumns = options.columns;\r\n                    var targetDraggingPanel = options.targetDraggingPanel;\r\n                    if (targetDraggingPanel && \"headers\" === targetDraggingPanel.getName() && targetDraggingPanel.isFixedColumns()) {\r\n                        if (options.sourceColumn.fixed) {\r\n                            if (!options.rowIndex) {\r\n                                options.columnElements = targetDraggingPanel.getFixedColumnElements(0)\r\n                            }\r\n                            options.columns = targetDraggingPanel.getFixedColumns(options.rowIndex);\r\n                            var pointsByColumns = this.callBase(options);\r\n                            ! function(columns, fixedColumns, pointsByColumns) {\r\n                                var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                                var correctIndex = columns.length - fixedColumns.length;\r\n                                each(pointsByColumns, (function(_, point) {\r\n                                    if (point.index > transparentColumnIndex) {\r\n                                        point.columnIndex += correctIndex;\r\n                                        point.index += correctIndex\r\n                                    }\r\n                                }));\r\n                                return pointsByColumns\r\n                            }(visibleColumns, options.columns, pointsByColumns);\r\n                            return pointsByColumns\r\n                        }\r\n                    }\r\n                    return this.callBase(options)\r\n                },\r\n                _pointCreated: function(point, columns, location, sourceColumn) {\r\n                    var result = this.callBase.apply(this, arguments);\r\n                    var targetColumn = columns[point.columnIndex];\r\n                    var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                    if (!result && \"headers\" === location && $transparentColumn && $transparentColumn.length) {\r\n                        var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                        if (sourceColumn && sourceColumn.fixed) {\r\n                            return \"right\" === sourceColumn.fixedPosition ? point.x < boundingRect.right : point.x > boundingRect.left\r\n                        } else {\r\n                            if (targetColumn && targetColumn.fixed && \"right\" !== targetColumn.fixedPosition) {\r\n                                return true\r\n                            }\r\n                            return point.x < boundingRect.left || point.x > boundingRect.right\r\n                        }\r\n                    }\r\n                    return result\r\n                }\r\n            },\r\n            columnsResizer: {\r\n                _generatePointsByColumns: function() {\r\n                    var that = this;\r\n                    var columnsController = that._columnsController;\r\n                    var columns = columnsController && that._columnsController.getVisibleColumns();\r\n                    var fixedColumns = columnsController && that._columnsController.getFixedColumns();\r\n                    var transparentColumnIndex = getTransparentColumnIndex(fixedColumns);\r\n                    var correctIndex = columns.length - fixedColumns.length;\r\n                    var cells = that._columnHeadersView.getFixedColumnElements();\r\n                    that.callBase();\r\n                    if (cells && cells.length > 0) {\r\n                        that._pointsByFixedColumns = gridCoreUtils.getPointsByColumns(cells, (function(point) {\r\n                            if (point.index > transparentColumnIndex) {\r\n                                point.columnIndex += correctIndex;\r\n                                point.index += correctIndex\r\n                            }\r\n                            return that._pointCreated(point, columns.length, columns)\r\n                        }))\r\n                    }\r\n                },\r\n                _getTargetPoint: function(pointsByColumns, currentX, deltaX) {\r\n                    var $transparentColumn = this._columnHeadersView.getTransparentColumnElement();\r\n                    if ($transparentColumn && $transparentColumn.length) {\r\n                        var boundingRect = getBoundingRect($transparentColumn.get(0));\r\n                        if (currentX <= boundingRect.left || currentX >= boundingRect.right) {\r\n                            return this.callBase(this._pointsByFixedColumns, currentX, deltaX)\r\n                        }\r\n                    }\r\n                    return this.callBase(pointsByColumns, currentX, deltaX)\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}