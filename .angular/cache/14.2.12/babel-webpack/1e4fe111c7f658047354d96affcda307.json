{"ast":null,"code":"/**\r\n * Defines Pie Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\nimport { Slice } from \"../../core/elements/Slice\"; //import { Slice3D } from \"../../core/elements/3D/Slice3D\";\n\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\nimport { PieTick } from \"../elements/PieTick\";\nimport { registry } from \"../../core/Registry\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $type from \"../../core/utils/Type\";\nimport { Percent, percent } from \"../../core/utils/Percent\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar PieSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(PieSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PieSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"PieSeriesDataItem\";\n    _this.values.radiusValue = {};\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(PieSeriesDataItem.prototype, \"radiusValue\", {\n    /**\r\n     * @return Radius\r\n     */\n    get: function () {\n      return this.values.radiusValue.value;\n    },\n\n    /**\r\n     * Slice's radius, if other than default.\r\n     *\r\n     * @param value  Radius\r\n     */\n    set: function (value) {\n      this.setValue(\"radiusValue\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Hide the data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param toValue   Target value for animation\r\n   * @param fields    Fields to animate while hiding\r\n   */\n\n  PieSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\n    return _super.prototype.hide.call(this, duration, delay, 0, [\"value\", \"radiusValue\"]);\n  };\n  /**\r\n   * Show hidden data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param fields    Fields to animate while hiding\r\n   */\n\n\n  PieSeriesDataItem.prototype.show = function (duration, delay, fields) {\n    return _super.prototype.show.call(this, duration, delay, [\"value\", \"radiusValue\"]);\n  };\n\n  return PieSeriesDataItem;\n}(PercentSeriesDataItem);\n\nexport { PieSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\n\nvar PieSeries =\n/** @class */\nfunction (_super) {\n  __extends(PieSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PieSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"PieSeries\";\n    _this.alignLabels = true; //this.startAngle = -90;\n    //this.endAngle = 270;\n\n    _this.layout = \"none\";\n    _this.labels.template.radius = percent(5);\n\n    _this.addDisposer(_this.labels.template.events.on(\"enabled\", _this.invalidate, _this, false));\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * creates slice\r\n   */\n\n\n  PieSeries.prototype.createSlice = function () {\n    return new Slice();\n  };\n  /**\r\n   * creates tick\r\n   */\n\n\n  PieSeries.prototype.createTick = function () {\n    return new PieTick();\n  };\n  /**\r\n   * creates label\r\n   */\n\n\n  PieSeries.prototype.createLabel = function () {\n    return new AxisLabelCircular();\n  };\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  PieSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Pie Slice Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  PieSeries.prototype.createDataItem = function () {\n    return new PieSeriesDataItem();\n  };\n  /**\r\n   * Inits slice.\r\n   *\r\n   * @param slice to init\r\n   */\n\n\n  PieSeries.prototype.initSlice = function (slice) {\n    slice.isMeasured = false;\n    slice.defaultState.properties.scale = 1;\n    slice.observe(\"scale\", this.handleSliceScale, this);\n    slice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\n    slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\n    var hoverState = slice.states.create(\"hover\");\n    hoverState.properties.scale = 1.05;\n    var defaultState = slice.defaultState;\n    defaultState.properties.shiftRadius = 0;\n    slice.togglable = true;\n    slice.events.on(\"toggled\", function (event) {\n      event.target.hideTooltip(); // The following takes care of removing hover on subsequent click of\n      // a slice\n\n      if (event.target.interactions.lastHitPointer && event.target.interactions.lastHitPointer.touch && !event.target.isActive) {\n        event.target.isHover = false;\n      }\n    });\n    var activeState = slice.states.create(\"active\");\n    activeState.properties.shiftRadius = 0.10;\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  PieSeries.prototype.validate = function () {\n    this._leftItems = [];\n    this._rightItems = [];\n    this._currentStartAngle = this.startAngle;\n    this._arcRect = $math.getArcRect(this.startAngle, this.endAngle);\n    this._maxRadiusPercent = 0;\n\n    for (var i = this.startIndex; i < this.endIndex; i++) {\n      var dataItem = this.dataItems.getIndex(i);\n      var radiusValuePercent = dataItem.values.radiusValue.percent;\n\n      if (radiusValuePercent > this._maxRadiusPercent) {\n        this._maxRadiusPercent = radiusValuePercent;\n      }\n    }\n\n    _super.prototype.validate.call(this);\n\n    if (this.alignLabels) {\n      if (this.startAngle > this.endAngle) {\n        this._rightItems.reverse();\n      } else {\n        this._leftItems.reverse();\n      }\n\n      this._rightItems.sort(function (a, b) {\n        var aAngle = (a.slice.middleAngle + 360) % 360;\n        var bAngle = (b.slice.middleAngle + 360) % 360;\n\n        if (aAngle > 270) {\n          aAngle -= 360;\n        }\n\n        if (bAngle > 270) {\n          bAngle -= 360;\n        }\n\n        if (aAngle < bAngle) {\n          return -1;\n        } else if (aAngle > bAngle) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n\n      this._leftItems.sort(function (a, b) {\n        var aAngle = (a.slice.middleAngle + 360) % 360;\n        var bAngle = (b.slice.middleAngle + 360) % 360;\n\n        if (aAngle < bAngle) {\n          return 1;\n        } else if (aAngle > bAngle) {\n          return -1;\n        } else {\n          return 0;\n        }\n      });\n\n      this.arrangeLabels(this._rightItems);\n      this.arrangeLabels2(this._rightItems);\n      this.arrangeLabels(this._leftItems);\n      this.arrangeLabels2(this._leftItems);\n    }\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  PieSeries.prototype.validateDataElement = function (dataItem) {\n    if (this.pixelRadius > 0) {\n      if (this.ignoreZeroValues && (dataItem.value == 0 || dataItem.value == null)) {\n        dataItem.__disabled = true;\n      } else {\n        dataItem.__disabled = false;\n      } // SLICE\n\n\n      var slice = dataItem.slice;\n      slice.radius = this.pixelRadius;\n\n      if ($type.isNumber(dataItem.radiusValue)) {\n        slice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\n      }\n\n      if (!(slice.innerRadius instanceof Percent)) {\n        slice.innerRadius = this.pixelInnerRadius;\n      }\n\n      slice.startAngle = this._currentStartAngle;\n      slice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100; // LABEL\n\n      if (!this.labels.template.disabled) {\n        var label = dataItem.label;\n        var tick = dataItem.tick;\n        tick.slice = slice;\n        tick.label = label;\n        var normalizedMiddleAngle = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\n\n        var point = void 0;\n\n        if (this.alignLabels) {\n          var labelRadius = label.pixelRadius(slice.radius);\n          var x = tick.length + labelRadius;\n          label.dx = 0;\n          label.dy = 0;\n          label.verticalCenter = \"middle\";\n          var arcRect = this._arcRect; // right half\n\n          if (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\n            x += (arcRect.width + arcRect.x) * this.pixelRadius;\n            label.horizontalCenter = \"left\";\n\n            this._rightItems.push(dataItem);\n          } // left half\n          else {\n            x -= arcRect.x * this.pixelRadius;\n            label.horizontalCenter = \"right\";\n\n            this._leftItems.push(dataItem);\n\n            x *= -1;\n          }\n\n          var distance = slice.radius + tick.length + labelRadius;\n          point = {\n            x: x,\n            y: slice.iy * distance\n          };\n          label.moveTo(point);\n        } else {\n          var depth = slice[\"depth\"];\n\n          if (!$type.isNumber(depth)) {\n            depth = 0;\n          }\n\n          label.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\n        }\n      }\n\n      this._currentStartAngle += slice.arc; // do this at the end, otherwise bullets won't be positioned properly\n\n      _super.prototype.validateDataElement.call(this, dataItem);\n    }\n  };\n\n  Object.defineProperty(PieSeries.prototype, \"radius\", {\n    /**\r\n     * @return Radius\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"radius\");\n    },\n\n    /**\r\n     * Outer radius for the series' slices in pixels or [[Percent]].\r\n     *\r\n     * @param value  Radius\r\n     */\n    set: function (value) {\n      if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\n        this.invalidateDataItems();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"pixelRadius\", {\n    /**\r\n     * @return Radius\r\n     * @ignore\r\n     */\n    get: function () {\n      return this._pixelRadius;\n    },\n\n    /**\r\n     * @ignore\r\n     */\n    set: function (value) {\n      if (this._pixelRadius != value) {\n        this._pixelRadius = value;\n        this.invalidateDataItems();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"pixelInnerRadius\", {\n    /**\r\n     * @return Pixel inner radius\r\n     * @ignore\r\n     */\n    get: function () {\n      return this._pixelInnerRadius;\n    },\n\n    /**\r\n     * @ignore\r\n     */\n    set: function (value) {\n      if (this._pixelInnerRadius != value) {\n        this._pixelInnerRadius = value;\n        this.invalidateDataItems();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"innerRadius\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Radius\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"innerRadius\");\n    },\n\n    /**\r\n     * Inner radius for the series' slices in pixels.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Redo so that users can set it\r\n     * @param value  Radius\r\n     */\n    set: function (value) {\n      this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"startAngle\", {\n    /**\r\n     * @return Angle\r\n     */\n    get: function () {\n      var startAngle = this.getPropertyValue(\"startAngle\");\n\n      if ($type.isNumber(startAngle)) {\n        return startAngle;\n      } else {\n        return this._startAngleInternal;\n      }\n    },\n\n    /**\r\n     * Start angle for the series' slices in degrees. (0-360)\r\n     *\r\n     * @param value  Angle\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PieSeries.prototype, \"endAngle\", {\n    /**\r\n     * @return Angle\r\n     */\n    get: function () {\n      var endAngle = this.getPropertyValue(\"endAngle\");\n\n      if ($type.isNumber(endAngle)) {\n        return endAngle;\n      } else {\n        return this._endAngleInternal;\n      }\n    },\n\n    /**\r\n     * End angle for the series' slices in degrees. (0-360)\r\n     *\r\n     * @param value  Angle\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"endAngle\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Positions series bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet  Bullet\r\n   */\n\n  PieSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n\n    var dataItem = bullet.dataItem;\n    var slice = dataItem.slice;\n    var locationX = bullet.locationX;\n\n    if (!$type.isNumber(locationX)) {\n      locationX = 0.5;\n    }\n\n    var locationY = bullet.locationY;\n\n    if (!$type.isNumber(locationY)) {\n      locationY = 1;\n    }\n\n    var angle = slice.startAngle + slice.arc * locationX;\n    bullet.x = locationY * slice.radius * $math.cos(angle);\n    bullet.y = locationY * slice.radiusY * $math.sin(angle);\n  };\n  /**\r\n   * Repositions bullet and labels when slice moves.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event  Event\r\n   */\n\n\n  PieSeries.prototype.handleSliceMove = function (event) {\n    if (!this.alignLabels) {\n      var slice = event.target;\n      var dataItem = slice.dataItem; // moving textelement, as label dx and dy are already employed for aligning\n      //@labeltodo\n\n      if (dataItem) {\n        var label = dataItem.label;\n\n        if (label) {\n          label.dx = label.fdx + slice.dx + slice.pixelX;\n          label.dy = label.fdy + slice.dy + slice.pixelY;\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(PieSeries.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n\n      var chart = this.chart;\n\n      if (chart) {\n        return $math.getArcRect(chart.startAngle, chart.endAngle, this.pixelRadius);\n      }\n\n      return $math.getArcRect(this.startAngle, this.endAngle, this.pixelRadius);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PieSeries;\n}(PercentSeries);\n\nexport { PieSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"PieSeries\"] = PieSeries;\nregistry.registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;","map":{"version":3,"names":["__extends","PercentSeries","PercentSeriesDataItem","Slice","AxisLabelCircular","PieTick","registry","$math","$type","Percent","percent","PieSeriesDataItem","_super","_this","call","className","values","radiusValue","applyTheme","Object","defineProperty","prototype","get","value","set","setValue","enumerable","configurable","hide","duration","delay","toValue","fields","show","PieSeries","alignLabels","layout","labels","template","radius","addDisposer","events","on","invalidate","createSlice","createTick","createLabel","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","initSlice","slice","isMeasured","defaultState","properties","scale","observe","handleSliceScale","handleSliceMove","tooltipText","hoverState","states","create","shiftRadius","togglable","event","target","hideTooltip","interactions","lastHitPointer","touch","isActive","isHover","activeState","validate","_leftItems","_rightItems","_currentStartAngle","startAngle","_arcRect","getArcRect","endAngle","_maxRadiusPercent","i","startIndex","endIndex","dataItem","dataItems","getIndex","radiusValuePercent","reverse","sort","a","b","aAngle","middleAngle","bAngle","arrangeLabels","arrangeLabels2","validateDataElement","pixelRadius","ignoreZeroValues","__disabled","isNumber","pixelInnerRadius","innerRadius","arc","Math","abs","disabled","label","tick","normalizedMiddleAngle","point","labelRadius","x","length","dx","dy","verticalCenter","arcRect","width","horizontalCenter","push","distance","y","iy","moveTo","depth","fixPosition","radiusY","getPropertyValue","setPercentProperty","invalidateDataItems","_pixelRadius","_pixelInnerRadius","_startAngleInternal","setPropertyValue","normalizeAngle","_endAngleInternal","positionBullet","bullet","locationX","locationY","angle","cos","sin","fdx","pixelX","fdy","pixelY","definedBBox","chart","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js"],"sourcesContent":["/**\r\n * Defines Pie Chart Series.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentSeries, PercentSeriesDataItem } from \"./PercentSeries\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\n//import { Slice3D } from \"../../core/elements/3D/Slice3D\";\r\nimport { AxisLabelCircular } from \"../axes/AxisLabelCircular\";\r\nimport { PieTick } from \"../elements/PieTick\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PieSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PieSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(PieSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeriesDataItem\";\r\n        _this.values.radiusValue = {};\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(PieSeriesDataItem.prototype, \"radiusValue\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.values.radiusValue.value;\r\n        },\r\n        /**\r\n         * Slice's radius, if other than default.\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"radiusValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        return _super.prototype.hide.call(this, duration, delay, 0, [\"value\", \"radiusValue\"]);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PieSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        return _super.prototype.show.call(this, duration, delay, [\"value\", \"radiusValue\"]);\r\n    };\r\n    return PieSeriesDataItem;\r\n}(PercentSeriesDataItem));\r\nexport { PieSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a slice series on a Pie chart.\r\n *\r\n * @see {@link IPieSeriesEvents} for a list of available Events\r\n * @see {@link IPieSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar PieSeries = /** @class */ (function (_super) {\r\n    __extends(PieSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PieSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PieSeries\";\r\n        _this.alignLabels = true;\r\n        //this.startAngle = -90;\r\n        //this.endAngle = 270;\r\n        _this.layout = \"none\";\r\n        _this.labels.template.radius = percent(5);\r\n        _this.addDisposer(_this.labels.template.events.on(\"enabled\", _this.invalidate, _this, false));\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * creates slice\r\n     */\r\n    PieSeries.prototype.createSlice = function () {\r\n        return new Slice();\r\n    };\r\n    /**\r\n     * creates tick\r\n     */\r\n    PieSeries.prototype.createTick = function () {\r\n        return new PieTick();\r\n    };\r\n    /**\r\n     * creates label\r\n     */\r\n    PieSeries.prototype.createLabel = function () {\r\n        return new AxisLabelCircular();\r\n    };\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    PieSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Pie Slice Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PieSeries.prototype.createDataItem = function () {\r\n        return new PieSeriesDataItem();\r\n    };\r\n    /**\r\n     * Inits slice.\r\n     *\r\n     * @param slice to init\r\n     */\r\n    PieSeries.prototype.initSlice = function (slice) {\r\n        slice.isMeasured = false;\r\n        slice.defaultState.properties.scale = 1;\r\n        slice.observe(\"scale\", this.handleSliceScale, this);\r\n        slice.observe([\"dx\", \"dy\", \"x\", \"y\", \"shiftRadius\"], this.handleSliceMove, this);\r\n        slice.tooltipText = \"{category}: {value.percent.formatNumber('#.#p')} ({value.value})\";\r\n        var hoverState = slice.states.create(\"hover\");\r\n        hoverState.properties.scale = 1.05;\r\n        var defaultState = slice.defaultState;\r\n        defaultState.properties.shiftRadius = 0;\r\n        slice.togglable = true;\r\n        slice.events.on(\"toggled\", function (event) {\r\n            event.target.hideTooltip();\r\n            // The following takes care of removing hover on subsequent click of\r\n            // a slice\r\n            if (event.target.interactions.lastHitPointer\r\n                && event.target.interactions.lastHitPointer.touch\r\n                && !event.target.isActive) {\r\n                event.target.isHover = false;\r\n            }\r\n        });\r\n        var activeState = slice.states.create(\"active\");\r\n        activeState.properties.shiftRadius = 0.10;\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PieSeries.prototype.validate = function () {\r\n        this._leftItems = [];\r\n        this._rightItems = [];\r\n        this._currentStartAngle = this.startAngle;\r\n        this._arcRect = $math.getArcRect(this.startAngle, this.endAngle);\r\n        this._maxRadiusPercent = 0;\r\n        for (var i = this.startIndex; i < this.endIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            var radiusValuePercent = dataItem.values.radiusValue.percent;\r\n            if (radiusValuePercent > this._maxRadiusPercent) {\r\n                this._maxRadiusPercent = radiusValuePercent;\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        if (this.alignLabels) {\r\n            if (this.startAngle > this.endAngle) {\r\n                this._rightItems.reverse();\r\n            }\r\n            else {\r\n                this._leftItems.reverse();\r\n            }\r\n            this._rightItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle > 270) {\r\n                    aAngle -= 360;\r\n                }\r\n                if (bAngle > 270) {\r\n                    bAngle -= 360;\r\n                }\r\n                if (aAngle < bAngle) {\r\n                    return -1;\r\n                }\r\n                else if (aAngle > bAngle) {\r\n                    return 1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            this._leftItems.sort(function (a, b) {\r\n                var aAngle = (a.slice.middleAngle + 360) % 360;\r\n                var bAngle = (b.slice.middleAngle + 360) % 360;\r\n                if (aAngle < bAngle) {\r\n                    return 1;\r\n                }\r\n                else if (aAngle > bAngle) {\r\n                    return -1;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            });\r\n            this.arrangeLabels(this._rightItems);\r\n            this.arrangeLabels2(this._rightItems);\r\n            this.arrangeLabels(this._leftItems);\r\n            this.arrangeLabels2(this._leftItems);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PieSeries.prototype.validateDataElement = function (dataItem) {\r\n        if (this.pixelRadius > 0) {\r\n            if (this.ignoreZeroValues && (dataItem.value == 0 || dataItem.value == null)) {\r\n                dataItem.__disabled = true;\r\n            }\r\n            else {\r\n                dataItem.__disabled = false;\r\n            }\r\n            // SLICE\r\n            var slice = dataItem.slice;\r\n            slice.radius = this.pixelRadius;\r\n            if ($type.isNumber(dataItem.radiusValue)) {\r\n                slice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;\r\n            }\r\n            if (!(slice.innerRadius instanceof Percent)) {\r\n                slice.innerRadius = this.pixelInnerRadius;\r\n            }\r\n            slice.startAngle = this._currentStartAngle;\r\n            slice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;\r\n            // LABEL\r\n            if (!this.labels.template.disabled) {\r\n                var label = dataItem.label;\r\n                var tick = dataItem.tick;\r\n                tick.slice = slice;\r\n                tick.label = label;\r\n                var normalizedMiddleAngle = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;\r\n                var point = void 0;\r\n                if (this.alignLabels) {\r\n                    var labelRadius = label.pixelRadius(slice.radius);\r\n                    var x = tick.length + labelRadius;\r\n                    label.dx = 0;\r\n                    label.dy = 0;\r\n                    label.verticalCenter = \"middle\";\r\n                    var arcRect = this._arcRect;\r\n                    // right half\r\n                    if (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {\r\n                        x += (arcRect.width + arcRect.x) * this.pixelRadius;\r\n                        label.horizontalCenter = \"left\";\r\n                        this._rightItems.push(dataItem);\r\n                    }\r\n                    // left half\r\n                    else {\r\n                        x -= arcRect.x * this.pixelRadius;\r\n                        label.horizontalCenter = \"right\";\r\n                        this._leftItems.push(dataItem);\r\n                        x *= -1;\r\n                    }\r\n                    var distance = slice.radius + tick.length + labelRadius;\r\n                    point = { x: x, y: slice.iy * distance };\r\n                    label.moveTo(point);\r\n                }\r\n                else {\r\n                    var depth = slice[\"depth\"];\r\n                    if (!$type.isNumber(depth)) {\r\n                        depth = 0;\r\n                    }\r\n                    label.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);\r\n                }\r\n            }\r\n            this._currentStartAngle += slice.arc;\r\n            // do this at the end, otherwise bullets won't be positioned properly\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * Outer radius for the series' slices in pixels or [[Percent]].\r\n         *\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            if (this.setPercentProperty(\"radius\", value, true, false, 10, false)) {\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelRadius\", {\r\n        /**\r\n         * @return Radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelRadius != value) {\r\n                this._pixelRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * @return Pixel inner radius\r\n         * @ignore\r\n         */\r\n        get: function () {\r\n            return this._pixelInnerRadius;\r\n        },\r\n        /**\r\n         * @ignore\r\n         */\r\n        set: function (value) {\r\n            if (this._pixelInnerRadius != value) {\r\n                this._pixelInnerRadius = value;\r\n                this.invalidateDataItems();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"innerRadius\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Radius\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius for the series' slices in pixels.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Redo so that users can set it\r\n         * @param value  Radius\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var startAngle = this.getPropertyValue(\"startAngle\");\r\n            if ($type.isNumber(startAngle)) {\r\n                return startAngle;\r\n            }\r\n            else {\r\n                return this._startAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * Start angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PieSeries.prototype, \"endAngle\", {\r\n        /**\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            var endAngle = this.getPropertyValue(\"endAngle\");\r\n            if ($type.isNumber(endAngle)) {\r\n                return endAngle;\r\n            }\r\n            else {\r\n                return this._endAngleInternal;\r\n            }\r\n        },\r\n        /**\r\n         * End angle for the series' slices in degrees. (0-360)\r\n         *\r\n         * @param value  Angle\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"endAngle\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Positions series bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet  Bullet\r\n     */\r\n    PieSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        var slice = dataItem.slice;\r\n        var locationX = bullet.locationX;\r\n        if (!$type.isNumber(locationX)) {\r\n            locationX = 0.5;\r\n        }\r\n        var locationY = bullet.locationY;\r\n        if (!$type.isNumber(locationY)) {\r\n            locationY = 1;\r\n        }\r\n        var angle = slice.startAngle + slice.arc * locationX;\r\n        bullet.x = locationY * slice.radius * $math.cos(angle);\r\n        bullet.y = locationY * slice.radiusY * $math.sin(angle);\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PieSeries.prototype.handleSliceMove = function (event) {\r\n        if (!this.alignLabels) {\r\n            var slice = event.target;\r\n            var dataItem = slice.dataItem;\r\n            // moving textelement, as label dx and dy are already employed for aligning\r\n            //@labeltodo\r\n            if (dataItem) {\r\n                var label = dataItem.label;\r\n                if (label) {\r\n                    label.dx = label.fdx + slice.dx + slice.pixelX;\r\n                    label.dy = label.fdy + slice.dy + slice.pixelY;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PieSeries.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                return $math.getArcRect(chart.startAngle, chart.endAngle, this.pixelRadius);\r\n            }\r\n            return $math.getArcRect(this.startAngle, this.endAngle, this.pixelRadius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PieSeries;\r\n}(PercentSeries));\r\nexport { PieSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PieSeries\"] = PieSeries;\r\nregistry.registeredClasses[\"PieSeriesDataItem\"] = PieSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}