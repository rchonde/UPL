{"ast":null,"code":"/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\nimport { ConeColumn } from \"../elements/ConeColumn\";\nimport { registry } from \"../../core/Registry\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar ConeSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(ConeSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ConeSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ConeSeriesDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return ConeSeriesDataItem;\n}(ColumnSeriesDataItem);\n\nexport { ConeSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\n\nvar ConeSeries =\n/** @class */\nfunction (_super) {\n  __extends(ConeSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ConeSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ConeSeries\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Returns an element to use for Candlestick\r\n   * @ignore\r\n   * @return Element.\r\n   */\n\n\n  ConeSeries.prototype.createColumnTemplate = function () {\n    return new ConeColumn();\n  };\n  /**\r\n   * Returns an SVG path to use as series mask.\r\n   *\r\n   * @return SVG path\r\n   */\n\n\n  ConeSeries.prototype.getMaskPath = function () {\n    var dx = 0;\n    var dy = 0;\n    var column = this.columns.getIndex(0);\n\n    if (column) {\n      if (this.baseAxis == this.xAxis) {\n        dy = column.coneColumn.innerWidth / 2 + 1;\n      } else {\n        dx = column.coneColumn.innerHeight / 2 + 1;\n      }\n\n      return $path.rectToPath({\n        x: -dx,\n        y: 0,\n        width: this.xAxis.axisLength + dx,\n        height: this.yAxis.axisLength + dy\n      });\n    }\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  ConeSeries.prototype.validateDataElementReal = function (dataItem) {\n    _super.prototype.validateDataElementReal.call(this, dataItem);\n\n    var column = dataItem.column;\n\n    if (column) {\n      var coneColumn = dataItem.column.coneColumn;\n      coneColumn.fill = dataItem.column.fill;\n\n      if (this.baseAxis == this.yAxis) {\n        coneColumn.orientation = \"horizontal\";\n      } else {\n        coneColumn.orientation = \"vertical\";\n      }\n    }\n  };\n\n  return ConeSeries;\n}(ColumnSeries);\n\nexport { ConeSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ConeSeries\"] = ConeSeries;\nregistry.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;","map":{"version":3,"names":["__extends","ColumnSeries","ColumnSeriesDataItem","ConeColumn","registry","$path","ConeSeriesDataItem","_super","_this","call","className","applyTheme","ConeSeries","prototype","createColumnTemplate","getMaskPath","dx","dy","column","columns","getIndex","baseAxis","xAxis","coneColumn","innerWidth","innerHeight","rectToPath","x","y","width","axisLength","height","yAxis","validateDataElementReal","dataItem","fill","orientation","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js"],"sourcesContent":["/**\r\n * ConeSeries module\r\n * Not recommended using if you use scrollbars or your chart is zoomable in some other way.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ColumnSeries, ColumnSeriesDataItem } from \"./ColumnSeries\";\r\nimport { ConeColumn } from \"../elements/ConeColumn\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ConeSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ConeSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(ConeSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ConeSeriesDataItem;\r\n}(ColumnSeriesDataItem));\r\nexport { ConeSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a cone graph.\r\n *\r\n * @see {@link IConeSeriesEvents} for a list of available Events\r\n * @see {@link IConeSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ConeSeries = /** @class */ (function (_super) {\r\n    __extends(ConeSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ConeSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ConeSeries\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Returns an element to use for Candlestick\r\n     * @ignore\r\n     * @return Element.\r\n     */\r\n    ConeSeries.prototype.createColumnTemplate = function () {\r\n        return new ConeColumn();\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    ConeSeries.prototype.getMaskPath = function () {\r\n        var dx = 0;\r\n        var dy = 0;\r\n        var column = this.columns.getIndex(0);\r\n        if (column) {\r\n            if (this.baseAxis == this.xAxis) {\r\n                dy = column.coneColumn.innerWidth / 2 + 1;\r\n            }\r\n            else {\r\n                dx = column.coneColumn.innerHeight / 2 + 1;\r\n            }\r\n            return $path.rectToPath({\r\n                x: -dx,\r\n                y: 0,\r\n                width: this.xAxis.axisLength + dx,\r\n                height: this.yAxis.axisLength + dy\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ConeSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        _super.prototype.validateDataElementReal.call(this, dataItem);\r\n        var column = dataItem.column;\r\n        if (column) {\r\n            var coneColumn = dataItem.column.coneColumn;\r\n            coneColumn.fill = dataItem.column.fill;\r\n            if (this.baseAxis == this.yAxis) {\r\n                coneColumn.orientation = \"horizontal\";\r\n            }\r\n            else {\r\n                coneColumn.orientation = \"vertical\";\r\n            }\r\n        }\r\n    };\r\n    return ConeSeries;\r\n}(ColumnSeries));\r\nexport { ConeSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ConeSeries\"] = ConeSeries;\r\nregistry.registeredClasses[\"ConeSeriesDataItem\"] = ConeSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}