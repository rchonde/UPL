{"ast":null,"code":"/**\r\n * Module for \"Colorize\" filter.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Filter } from \"./Filter\";\nimport { registry } from \"../../Registry\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\n\nvar ColorizeFilter =\n/** @class */\nfunction (_super) {\n  __extends(ColorizeFilter, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ColorizeFilter() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ColorizeFilter\"; // Create elements\n    // NOTE: we do not need to add each individual element to `_disposers`\n    // because `filterPrimitives` has an event handler which automatically adds\n    // anything added to it to `_disposers`\n\n    _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\n\n    _this.feColorMatrix.attr({\n      \"type\": \"matrix\"\n    }); //this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\n\n\n    _this.filterPrimitives.push(_this.feColorMatrix); // Set default properties\n\n\n    _this.intensity = 1;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * (Re)applies colors to the already existing filter by modifying filyer's\r\n   * color matrix element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  ColorizeFilter.prototype.applyFilter = function () {\n    var i = this.intensity;\n    var ii = 1 - i;\n    var r;\n    var g;\n    var b;\n    var color = this.color;\n\n    if (color && color.rgb) {\n      r = color.rgb.r / 255 * i;\n      g = color.rgb.g / 255 * i;\n      b = color.rgb.b / 255 * i;\n    } else {\n      r = 0;\n      g = 0;\n      b = 0;\n    }\n\n    this.feColorMatrix.attr({\n      \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\"\n    });\n  };\n\n  Object.defineProperty(ColorizeFilter.prototype, \"color\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function () {\n      return this.properties[\"color\"];\n    },\n\n    /**\r\n     * Target color to apply to the element.\r\n     *\r\n     * Depending on the `intensity`, all colors of the target element will steer\r\n     * towards this color.\r\n     *\r\n     * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n     *\r\n     * @param value  Color\r\n     */\n    set: function (value) {\n      this.properties[\"color\"] = value;\n      this.applyFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColorizeFilter.prototype, \"intensity\", {\n    /**\r\n     * @return Intensity (0-1)\r\n     */\n    get: function () {\n      return this.properties.intensity;\n    },\n\n    /**\r\n     * Intensity of the color (0-1).\r\n     *\r\n     * The bigger the number the more of a `color` target's colors will become.\r\n     *\r\n     * 0 means the colors will remain as they are.\r\n     * 1 means all colors will become the target `color`.\r\n     *\r\n     * @default 1\r\n     * @param value  Intensity (0-1)\r\n     */\n    set: function (value) {\n      this.properties.intensity = value;\n      this.applyFilter();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ColorizeFilter;\n}(Filter);\n\nexport { ColorizeFilter };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;","map":{"version":3,"names":["__extends","Filter","registry","ColorizeFilter","_super","_this","call","className","feColorMatrix","paper","add","attr","filterPrimitives","push","intensity","applyTheme","prototype","applyFilter","i","ii","r","g","b","color","rgb","Object","defineProperty","get","properties","set","value","enumerable","configurable","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/ColorizeFilter.js"],"sourcesContent":["/**\r\n * Module for \"Colorize\" filter.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Filter } from \"./Filter\";\r\nimport { registry } from \"../../Registry\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a \"Colorize\" filter.\r\n */\r\nvar ColorizeFilter = /** @class */ (function (_super) {\r\n    __extends(ColorizeFilter, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColorizeFilter() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColorizeFilter\";\r\n        // Create elements\r\n        // NOTE: we do not need to add each individual element to `_disposers`\r\n        // because `filterPrimitives` has an event handler which automatically adds\r\n        // anything added to it to `_disposers`\r\n        _this.feColorMatrix = _this.paper.add(\"feColorMatrix\");\r\n        _this.feColorMatrix.attr({ \"type\": \"matrix\" });\r\n        //this.feColorMatrix.setAttribute(\"in\", \"SourceAlpha\");\r\n        _this.filterPrimitives.push(_this.feColorMatrix);\r\n        // Set default properties\r\n        _this.intensity = 1;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)applies colors to the already existing filter by modifying filyer's\r\n     * color matrix element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColorizeFilter.prototype.applyFilter = function () {\r\n        var i = this.intensity;\r\n        var ii = 1 - i;\r\n        var r;\r\n        var g;\r\n        var b;\r\n        var color = this.color;\r\n        if (color && color.rgb) {\r\n            r = color.rgb.r / 255 * i;\r\n            g = color.rgb.g / 255 * i;\r\n            b = color.rgb.b / 255 * i;\r\n        }\r\n        else {\r\n            r = 0;\r\n            g = 0;\r\n            b = 0;\r\n        }\r\n        this.feColorMatrix.attr({ \"values\": ii + \" 0 0 0 \" + r + \" 0 \" + ii + \" 0 0 \" + g + \" 0 0 \" + ii + \" 0 \" + b + \" 0 0 0 1 0\" });\r\n    };\r\n    Object.defineProperty(ColorizeFilter.prototype, \"color\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"color\"];\r\n        },\r\n        /**\r\n         * Target color to apply to the element.\r\n         *\r\n         * Depending on the `intensity`, all colors of the target element will steer\r\n         * towards this color.\r\n         *\r\n         * E.g. setting to `am4core.color(\"greener\")` will make all colors greener.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"color\"] = value;\r\n            this.applyFilter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColorizeFilter.prototype, \"intensity\", {\r\n        /**\r\n         * @return Intensity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties.intensity;\r\n        },\r\n        /**\r\n         * Intensity of the color (0-1).\r\n         *\r\n         * The bigger the number the more of a `color` target's colors will become.\r\n         *\r\n         * 0 means the colors will remain as they are.\r\n         * 1 means all colors will become the target `color`.\r\n         *\r\n         * @default 1\r\n         * @param value  Intensity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties.intensity = value;\r\n            this.applyFilter();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColorizeFilter;\r\n}(Filter));\r\nexport { ColorizeFilter };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColorizeFilter\"] = ColorizeFilter;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA,IAAIC,cAAc;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAClDJ,SAAS,CAACG,cAAD,EAAiBC,MAAjB,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,cAAT,GAA0B;IACtB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,gBAAlB,CAFsB,CAGtB;IACA;IACA;IACA;;IACAF,KAAK,CAACG,aAAN,GAAsBH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,eAAhB,CAAtB;;IACAL,KAAK,CAACG,aAAN,CAAoBG,IAApB,CAAyB;MAAE,QAAQ;IAAV,CAAzB,EARsB,CAStB;;;IACAN,KAAK,CAACO,gBAAN,CAAuBC,IAAvB,CAA4BR,KAAK,CAACG,aAAlC,EAVsB,CAWtB;;;IACAH,KAAK,CAACS,SAAN,GAAkB,CAAlB;;IACAT,KAAK,CAACU,UAAN;;IACA,OAAOV,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIF,cAAc,CAACa,SAAf,CAAyBC,WAAzB,GAAuC,YAAY;IAC/C,IAAIC,CAAC,GAAG,KAAKJ,SAAb;IACA,IAAIK,EAAE,GAAG,IAAID,CAAb;IACA,IAAIE,CAAJ;IACA,IAAIC,CAAJ;IACA,IAAIC,CAAJ;IACA,IAAIC,KAAK,GAAG,KAAKA,KAAjB;;IACA,IAAIA,KAAK,IAAIA,KAAK,CAACC,GAAnB,EAAwB;MACpBJ,CAAC,GAAGG,KAAK,CAACC,GAAN,CAAUJ,CAAV,GAAc,GAAd,GAAoBF,CAAxB;MACAG,CAAC,GAAGE,KAAK,CAACC,GAAN,CAAUH,CAAV,GAAc,GAAd,GAAoBH,CAAxB;MACAI,CAAC,GAAGC,KAAK,CAACC,GAAN,CAAUF,CAAV,GAAc,GAAd,GAAoBJ,CAAxB;IACH,CAJD,MAKK;MACDE,CAAC,GAAG,CAAJ;MACAC,CAAC,GAAG,CAAJ;MACAC,CAAC,GAAG,CAAJ;IACH;;IACD,KAAKd,aAAL,CAAmBG,IAAnB,CAAwB;MAAE,UAAUQ,EAAE,GAAG,SAAL,GAAiBC,CAAjB,GAAqB,KAArB,GAA6BD,EAA7B,GAAkC,OAAlC,GAA4CE,CAA5C,GAAgD,OAAhD,GAA0DF,EAA1D,GAA+D,KAA/D,GAAuEG,CAAvE,GAA2E;IAAvF,CAAxB;EACH,CAlBD;;EAmBAG,MAAM,CAACC,cAAP,CAAsBvB,cAAc,CAACa,SAArC,EAAgD,OAAhD,EAAyD;IACrD;AACR;AACA;IACQW,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,UAAL,CAAgB,OAAhB,CAAP;IACH,CANoD;;IAOrD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,KAAKF,UAAL,CAAgB,OAAhB,IAA2BE,KAA3B;MACA,KAAKb,WAAL;IACH,CApBoD;IAqBrDc,UAAU,EAAE,IArByC;IAsBrDC,YAAY,EAAE;EAtBuC,CAAzD;EAwBAP,MAAM,CAACC,cAAP,CAAsBvB,cAAc,CAACa,SAArC,EAAgD,WAAhD,EAA6D;IACzD;AACR;AACA;IACQW,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,UAAL,CAAgBd,SAAvB;IACH,CANwD;;IAOzD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQe,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,KAAKF,UAAL,CAAgBd,SAAhB,GAA4BgB,KAA5B;MACA,KAAKb,WAAL;IACH,CArBwD;IAsBzDc,UAAU,EAAE,IAtB6C;IAuBzDC,YAAY,EAAE;EAvB2C,CAA7D;EAyBA,OAAO7B,cAAP;AACH,CAhGmC,CAgGlCF,MAhGkC,CAApC;;AAiGA,SAASE,cAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,QAAQ,CAAC+B,iBAAT,CAA2B,gBAA3B,IAA+C9B,cAA/C"},"metadata":{},"sourceType":"module"}