{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getOuterWidth, getWidth, getOuterHeight, getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport { getWindow } from \"../../core/utils/window\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { data as elementData } from \"../../core/element_data\";\nimport pointerEvents from \"../../events/pointer\";\nimport { name as clickEventName } from \"../../events/click\";\nimport { name as dblclickEvent } from \"../../events/double_click\";\nimport browser from \"../../core/utils/browser\";\nimport { noop } from \"../../core/utils/common\";\nimport { setWidth } from \"../../core/utils/style\";\nimport { getPublicElement } from \"../../core/element\";\nimport { isRenderer, isFunction, isString, isDefined, isNumeric } from \"../../core/utils/type\";\nimport { getBoundingRect, getDefaultAlignment } from \"../../core/utils/position\";\nimport * as iteratorUtils from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport modules from \"./ui.grid_core.modules\";\nimport gridCoreUtils from \"./ui.grid_core.utils\";\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\nimport { when, Deferred } from \"../../core/utils/deferred\";\nimport { nativeScrolling } from \"../../core/utils/support\";\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\nvar GROUP_SPACE_CLASS = \"group-space\";\nvar CONTENT_CLASS = \"content\";\nvar TABLE_CLASS = \"table\";\nvar TABLE_FIXED_CLASS = \"table-fixed\";\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\nvar ROW_CLASS = \"dx-row\";\nvar GROUP_ROW_CLASS = \"dx-group-row\";\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nvar FILTER_ROW_CLASS = \"filter-row\";\nvar ERROR_ROW_CLASS = \"dx-error-row\";\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\nvar appendElementTemplate = {\n  render: function (options) {\n    options.container.append(options.content);\n  }\n};\n\nvar subscribeToRowEvents = function (that, $table) {\n  var touchTarget;\n  var touchCurrentTarget;\n  var timeoutId;\n\n  function clearTouchTargets(timeout) {\n    return setTimeout(function () {\n      touchTarget = touchCurrentTarget = null;\n    }, timeout);\n  }\n\n  eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", function (e) {\n    clearTimeout(timeoutId);\n\n    if (\"touchstart\" === e.type) {\n      touchTarget = e.target;\n      touchCurrentTarget = e.currentTarget;\n      timeoutId = clearTouchTargets(1e3);\n    } else {\n      timeoutId = clearTouchTargets();\n    }\n  });\n  eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", that.createAction(function (e) {\n    var event = e.event;\n\n    if (touchTarget) {\n      event.target = touchTarget;\n      event.currentTarget = touchCurrentTarget;\n    }\n\n    if (!$(event.target).closest(\"a\").length) {\n      e.rowIndex = that.getRowIndex(event.currentTarget);\n\n      if (e.rowIndex >= 0) {\n        e.rowElement = getPublicElement($(event.currentTarget));\n        e.columns = that.getColumns();\n\n        if (event.type === pointerEvents.down) {\n          that._rowPointerDown(e);\n        } else if (event.type === clickEventName) {\n          that._rowClick(e);\n        } else {\n          that._rowDblClick(e);\n        }\n      }\n    }\n  }));\n};\n\nvar getWidthStyle = function (width) {\n  if (\"auto\" === width) {\n    return \"\";\n  }\n\n  return isNumeric(width) ? width + \"px\" : width;\n};\n\nvar setCellWidth = function (cell, column, width) {\n  cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width;\n};\n\nvar copyAttributes = function (element, newElement) {\n  if (!element || !newElement) {\n    return;\n  }\n\n  var oldAttributes = element.attributes;\n  var newAttributes = newElement.attributes;\n  var i;\n\n  for (i = 0; i < oldAttributes.length; i++) {\n    var name = oldAttributes[i].nodeName;\n\n    if (!newElement.hasAttribute(name)) {\n      element.removeAttribute(name);\n    }\n  }\n\n  for (i = 0; i < newAttributes.length; i++) {\n    element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue);\n  }\n};\n\nvar columnsViewMembers = {\n  _createScrollableOptions: function () {\n    var scrollingOptions = this.option(\"scrolling\");\n    var useNativeScrolling = this.option(\"scrolling.useNative\");\n    var options = extend({}, scrollingOptions, {\n      direction: \"both\",\n      bounceEnabled: false,\n      useKeyboard: false\n    });\n\n    if (void 0 === useNativeScrolling) {\n      useNativeScrolling = true;\n    }\n\n    if (\"auto\" === useNativeScrolling) {\n      delete options.useNative;\n      delete options.useSimulatedScrollbar;\n    } else {\n      options.useNative = !!useNativeScrolling;\n      options.useSimulatedScrollbar = !useNativeScrolling;\n    }\n\n    return options;\n  },\n  _updateCell: function ($cell, parameters) {\n    if (parameters.rowType) {\n      this._cellPrepared($cell, parameters);\n    }\n  },\n  _createCell: function (options) {\n    var column = options.column;\n    var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\n    var cell = domAdapter.createElement(\"td\");\n    cell.style.textAlign = alignment;\n    var $cell = $(cell);\n\n    if (\"data\" === options.rowType && column.headerId && !column.type) {\n      if (this.component.option(\"showColumnHeaders\")) {\n        this.setAria(\"describedby\", column.headerId, $cell);\n      }\n    }\n\n    if (column.cssClass) {\n      $cell.addClass(column.cssClass);\n    }\n\n    if (\"expand\" === column.command) {\n      $cell.addClass(column.cssClass);\n      $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS));\n    }\n\n    if (column.colspan > 1) {\n      $cell.attr(\"colSpan\", column.colspan);\n    } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\n      if (column.width || column.minWidth) {\n        cell.style.minWidth = getWidthStyle(column.minWidth || column.width);\n      }\n\n      if (column.width) {\n        setCellWidth(cell, column, getWidthStyle(column.width));\n      }\n    }\n\n    return $cell;\n  },\n  _createRow: function (rowObject, tagName) {\n    tagName = tagName || \"tr\";\n    var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\n    this.setAria(\"role\", \"row\", $element);\n    return $element;\n  },\n  _isAltRow: function (row) {\n    return row && row.dataIndex % 2 === 1;\n  },\n  _createTable: function (columns, isAppend) {\n    var that = this;\n    var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\n\n    if (columns && !isAppend) {\n      $table.append(that._createColGroup(columns));\n\n      if (browser.safari) {\n        $table.append($(\"<thead>\").append(\"<tr>\"));\n      }\n\n      that.setAria(\"role\", \"presentation\", $table);\n    } else {\n      that.setAria(\"hidden\", true, $table);\n    }\n\n    this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\n\n    if (isAppend) {\n      return $table;\n    }\n\n    if (browser.mozilla) {\n      eventsEngine.on($table, \"mousedown\", \"td\", function (e) {\n        if (e.ctrlKey) {\n          e.preventDefault();\n        }\n      });\n    }\n\n    if (that.option(\"cellHintEnabled\")) {\n      eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction(function (args) {\n        var e = args.event;\n        var $element = $(e.target);\n        var $cell = $(e.currentTarget);\n        var $row = $cell.parent();\n\n        var visibleColumns = that._columnsController.getVisibleColumns();\n\n        var rowOptions = $row.data(\"options\");\n        var columnIndex = $cell.index();\n        var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\n        var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\n        var isHeaderRow = $row.hasClass(\"dx-header-row\");\n        var isDataRow = $row.hasClass(\"dx-data-row\");\n        var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\n        var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\n        var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\n        var isDataRowWithTemplate = isDataRow && (!column || column.cellTemplate);\n        var isEditorShown = isDataRow && cellOptions && (rowOptions.isEditing || cellOptions.isEditing || (null === column || void 0 === column ? void 0 : column.showEditorAlways));\n        var isHeaderRowWithTemplate = isHeaderRow && (!column || column.headerCellTemplate);\n        var isGroupCellWithTemplate = isGroupRow && (!column || column.groupIndex && column.groupCellTemplate);\n        var shouldShowHint = !isMasterDetailRow && !isFilterRow && !isEditorShown && !isDataRowWithTemplate && !isHeaderRowWithTemplate && !isGroupCellWithTemplate;\n\n        if (shouldShowHint) {\n          if ($element.data(CELL_HINT_VISIBLE)) {\n            $element.removeAttr(\"title\");\n            $element.data(CELL_HINT_VISIBLE, false);\n          }\n\n          var difference = $element[0].scrollWidth - $element[0].clientWidth;\n\n          if (difference > 0 && !isDefined($element.attr(\"title\"))) {\n            $element.attr(\"title\", $element.text());\n            $element.data(CELL_HINT_VISIBLE, true);\n          }\n        }\n      }));\n    }\n\n    var getOptions = function (event) {\n      var $cell = $(event.currentTarget);\n      var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\n      var $row = $cell.parent();\n      var rowOptions = $row.data(\"options\");\n      var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\n\n      if (!$cell.closest(\"table\").is(event.delegateTarget)) {\n        return;\n      }\n\n      var resultOptions = extend({}, options, {\n        cellElement: getPublicElement($cell),\n        event: event,\n        eventType: event.type\n      });\n      resultOptions.rowIndex = that.getRowIndex($row);\n\n      if ($fieldItemContent.length) {\n        var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\n\n        if (formItemOptions.column) {\n          resultOptions.column = formItemOptions.column;\n          resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index);\n        }\n      }\n\n      return resultOptions;\n    };\n\n    eventsEngine.on($table, \"mouseover\", \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, \"mouseout\", \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, clickEventName, \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellClick\", options);\n    });\n    eventsEngine.on($table, dblclickEvent, \".dx-row > td\", function (e) {\n      var options = getOptions(e);\n      options && that.executeAction(\"onCellDblClick\", options);\n    });\n    subscribeToRowEvents(that, $table);\n    return $table;\n  },\n  _rowPointerDown: noop,\n  _rowClick: noop,\n  _rowDblClick: noop,\n  _createColGroup: function (columns) {\n    var colgroupElement = $(\"<colgroup>\");\n\n    for (var i = 0; i < columns.length; i++) {\n      var colspan = columns[i].colspan || 1;\n\n      for (var j = 0; j < colspan; j++) {\n        colgroupElement.append(this._createCol(columns[i]));\n      }\n    }\n\n    return colgroupElement;\n  },\n  _createCol: function (column) {\n    var width = column.visibleWidth || column.width;\n\n    if (\"adaptiveHidden\" === width) {\n      width = HIDDEN_COLUMNS_WIDTH;\n    }\n\n    var col = $(\"<col>\");\n    setWidth(col, width);\n    return col;\n  },\n  renderDelayedTemplates: function (change) {\n    var delayedTemplates = this._delayedTemplates;\n    var syncTemplates = delayedTemplates.filter(template => !template.async);\n    var asyncTemplates = delayedTemplates.filter(template => template.async);\n    this._delayedTemplates = [];\n\n    this._renderDelayedTemplatesCore(syncTemplates, false, change);\n\n    this._renderDelayedTemplatesCoreAsync(asyncTemplates);\n  },\n  _renderDelayedTemplatesCoreAsync: function (templates) {\n    var that = this;\n\n    if (templates.length) {\n      getWindow().setTimeout(function () {\n        that._renderDelayedTemplatesCore(templates, true);\n      });\n    }\n  },\n  _renderDelayedTemplatesCore: function (templates, isAsync, change) {\n    var date = new Date();\n\n    while (templates.length) {\n      var templateParameters = templates.shift();\n      var options = templateParameters.options;\n      var doc = domAdapter.getRootNode($(options.container).get(0));\n\n      var needWaitAsyncTemplates = this._needWaitAsyncTemplates();\n\n      if (!isAsync || $(options.container).closest(doc).length || needWaitAsyncTemplates) {\n        if (change) {\n          options.change = change;\n        }\n\n        templateParameters.template.render(options);\n      }\n\n      if (isAsync && new Date() - date > 30) {\n        this._renderDelayedTemplatesCoreAsync(templates);\n\n        break;\n      }\n    }\n\n    if (!templates.length && this._delayedTemplates.length) {\n      this.renderDelayedTemplates();\n    }\n  },\n  _processTemplate: function (template) {\n    var renderingTemplate;\n\n    if (template && template.render && !isRenderer(template)) {\n      renderingTemplate = {\n        allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\n        render: function (options) {\n          template.render(options.container, options.model, options.change);\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else if (isFunction(template)) {\n      renderingTemplate = {\n        render: function (options) {\n          var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\n\n          if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\n            options.container.append(renderedTemplate);\n          }\n\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else {\n      var templateID = isString(template) ? template : $(template).attr(\"id\");\n\n      if (!templateID) {\n        renderingTemplate = this.getTemplate(template);\n      } else {\n        if (!this._templatesCache[templateID]) {\n          this._templatesCache[templateID] = this.getTemplate(template);\n        }\n\n        renderingTemplate = this._templatesCache[templateID];\n      }\n    }\n\n    return renderingTemplate;\n  },\n  renderTemplate: function (container, template, options, allowRenderToDetachedContainer, change) {\n    var renderingTemplate = this._processTemplate(template, options);\n\n    var column = options.column;\n    var isDataRow = \"data\" === options.rowType;\n    var templateDeferred = new Deferred();\n    var templateOptions = {\n      container: container,\n      model: options,\n      deferred: templateDeferred,\n      onRendered: () => {\n        templateDeferred.resolve();\n      }\n    };\n\n    if (renderingTemplate) {\n      options.component = this.component;\n      var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\n\n      if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\n        renderingTemplate.render(templateOptions);\n      } else {\n        this._delayedTemplates.push({\n          template: renderingTemplate,\n          options: templateOptions,\n          async: async\n        });\n      }\n\n      if (change) {\n        change.templateDeferreds = change.templateDeferreds || [];\n        change.templateDeferreds.push(templateDeferred);\n      }\n    } else {\n      templateDeferred.reject();\n    }\n\n    return templateDeferred.promise();\n  },\n  _getBodies: function (tableElement) {\n    return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\");\n  },\n  _needWrapRow: function ($tableElement) {\n    var _this$_getBodies;\n\n    var hasRowTemplate = !!this.option().rowTemplate;\n    return hasRowTemplate && !!(null !== (_this$_getBodies = this._getBodies($tableElement)) && void 0 !== _this$_getBodies && _this$_getBodies.filter(\".\" + ROW_CLASS).length);\n  },\n  _wrapRowIfNeed: function ($table, $row, isRefreshing) {\n    var $tableElement = isRefreshing ? $table || this._tableElement : this._tableElement || $table;\n\n    var needWrapRow = this._needWrapRow($tableElement);\n\n    if (needWrapRow) {\n      var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\n      this.setAria(\"role\", \"presentation\", $tbody);\n      return $tbody.append($row);\n    }\n\n    return $row;\n  },\n  _appendRow: function ($table, $row, appendTemplate) {\n    appendTemplate = appendTemplate || appendElementTemplate;\n    appendTemplate.render({\n      content: $row,\n      container: $table\n    });\n  },\n  _resizeCore: function () {\n    var scrollLeft = this._scrollLeft;\n\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  },\n  _renderCore: function (e) {\n    var $root = this.element().parent();\n\n    if (!$root || $root.parent().length) {\n      this.renderDelayedTemplates(e);\n    }\n  },\n  _renderTable: function (options) {\n    options = options || {};\n    options.columns = this._columnsController.getVisibleColumns();\n    var changeType = options.change && options.change.changeType;\n\n    var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\n\n    this._renderRows($table, options);\n\n    return $table;\n  },\n  _renderRows: function ($table, options) {\n    var rows = this._getRows(options.change);\n\n    var columnIndices = options.change && options.change.columnIndices || [];\n    var changeTypes = options.change && options.change.changeTypes || [];\n\n    for (var i = 0; i < rows.length; i++) {\n      this._renderRow($table, extend({\n        row: rows[i],\n        columnIndices: columnIndices[i],\n        changeType: changeTypes[i]\n      }, options));\n    }\n  },\n  _renderRow: function ($table, options) {\n    if (!options.columnIndices) {\n      options.row.cells = [];\n    }\n\n    var $row = this._createRow(options.row);\n\n    var $wrappedRow = this._wrapRowIfNeed($table, $row);\n\n    if (\"remove\" !== options.changeType) {\n      this._renderCells($row, options);\n    }\n\n    this._appendRow($table, $wrappedRow);\n\n    var rowOptions = extend({\n      columns: options.columns\n    }, options.row);\n\n    this._addWatchMethod(rowOptions, options.row);\n\n    this._rowPrepared($wrappedRow, rowOptions, options.row);\n  },\n  _needRenderCell: function (columnIndex, columnIndices) {\n    return !columnIndices || columnIndices.indexOf(columnIndex) >= 0;\n  },\n  _renderCells: function ($row, options) {\n    var columnIndex = 0;\n    var row = options.row;\n    var columns = options.columns;\n\n    for (var i = 0; i < columns.length; i++) {\n      if (this._needRenderCell(i, options.columnIndices)) {\n        this._renderCell($row, extend({\n          column: columns[i],\n          columnIndex: columnIndex,\n          value: row.values && row.values[columnIndex],\n          oldValue: row.oldValues && row.oldValues[columnIndex]\n        }, options));\n      }\n\n      if (columns[i].colspan > 1) {\n        columnIndex += columns[i].colspan;\n      } else {\n        columnIndex++;\n      }\n    }\n  },\n  _updateCells: function ($rowElement, $newRowElement, columnIndices) {\n    var $cells = $rowElement.children();\n    var $newCells = $newRowElement.children();\n    var highlightChanges = this.option(\"highlightChanges\");\n    var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\n    columnIndices.forEach(function (columnIndex, index) {\n      var $cell = $cells.eq(columnIndex);\n      var $newCell = $newCells.eq(index);\n      $cell.replaceWith($newCell);\n\n      if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\n        $newCell.addClass(cellUpdatedClass);\n      }\n    });\n    copyAttributes($rowElement.get(0), $newRowElement.get(0));\n  },\n  _setCellAriaAttributes: function ($cell, cellOptions) {\n    if (\"freeSpace\" !== cellOptions.rowType) {\n      this.setAria(\"role\", \"gridcell\", $cell);\n\n      var columnIndexOffset = this._columnsController.getColumnIndexOffset();\n\n      var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\n      this.setAria(\"colindex\", ariaColIndex, $cell);\n    }\n  },\n  _renderCell: function ($row, options) {\n    var cellOptions = this._getCellOptions(options);\n\n    if (options.columnIndices) {\n      if (options.row.cells) {\n        var cellIndex = options.row.cells.findIndex(cell => cell.columnIndex === cellOptions.columnIndex);\n        options.row.cells[cellIndex] = cellOptions;\n      }\n    } else {\n      options.row.cells.push(cellOptions);\n    }\n\n    var $cell = this._createCell(cellOptions);\n\n    this._setCellAriaAttributes($cell, cellOptions);\n\n    this._renderCellContent($cell, cellOptions, options);\n\n    $row.get(0).appendChild($cell.get(0));\n    return $cell;\n  },\n  _renderCellContent: function ($cell, options, renderOptions) {\n    var template = this._getCellTemplate(options);\n\n    when(!template || this.renderTemplate($cell, template, options, void 0, renderOptions.change)).done(() => {\n      this._updateCell($cell, options);\n    });\n  },\n  _getCellTemplate: function () {},\n  _getRows: function () {\n    return [];\n  },\n  _getCellOptions: function (options) {\n    var cellOptions = {\n      column: options.column,\n      columnIndex: options.columnIndex,\n      rowType: options.row.rowType,\n      isAltRow: this._isAltRow(options.row)\n    };\n\n    this._addWatchMethod(cellOptions);\n\n    return cellOptions;\n  },\n  _addWatchMethod: function (options, source) {\n    if (!this.option(\"repaintChangesOnly\")) {\n      return;\n    }\n\n    var watchers = [];\n    source = source || options;\n\n    source.watch = source.watch || function (getter, updateValueFunc, updateRowFunc) {\n      var oldValue = getter(source.data);\n\n      var watcher = function (row) {\n        if (row && updateRowFunc) {\n          updateRowFunc(row);\n        }\n\n        var newValue = getter(source.data);\n\n        if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n          if (row) {\n            updateValueFunc(newValue);\n          }\n\n          oldValue = newValue;\n        }\n      };\n\n      watchers.push(watcher);\n      return function () {\n        var index = watchers.indexOf(watcher);\n\n        if (index >= 0) {\n          watchers.splice(index, 1);\n        }\n      };\n    };\n\n    source.update = source.update || function (row, keepRow) {\n      if (row) {\n        this.data = options.data = row.data;\n        this.rowIndex = options.rowIndex = row.rowIndex;\n        this.dataIndex = options.dataIndex = row.dataIndex;\n        this.isExpanded = options.isExpanded = row.isExpanded;\n\n        if (options.row && !keepRow) {\n          options.row = row;\n        }\n      }\n\n      watchers.forEach(function (watcher) {\n        watcher(row);\n      });\n    };\n\n    if (source !== options) {\n      options.watch = source.watch.bind(source);\n    }\n\n    return options;\n  },\n  _cellPrepared: function (cell, options) {\n    options.cellElement = getPublicElement($(cell));\n    this.executeAction(\"onCellPrepared\", options);\n  },\n  _rowPrepared: function ($row, options) {\n    elementData($row.get(0), \"options\", options);\n    options.rowElement = getPublicElement($row);\n    this.executeAction(\"onRowPrepared\", options);\n  },\n  _columnOptionChanged: function (e) {\n    var optionNames = e.optionNames;\n\n    if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\n      var visibleColumns = this._columnsController.getVisibleColumns();\n\n      var widths = iteratorUtils.map(visibleColumns, function (column) {\n        var width = column.visibleWidth || column.width;\n        return isDefined(width) ? width : \"auto\";\n      });\n      this.setColumnWidths({\n        widths: widths,\n        optionNames: optionNames\n      });\n      return;\n    }\n\n    if (!this._requireReady) {\n      this.render();\n    }\n  },\n  getCellIndex: function ($cell) {\n    var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\n    return cellIndex;\n  },\n  getTableElements: function () {\n    return this._tableElement || $();\n  },\n  getTableElement: function () {\n    return this._tableElement;\n  },\n  setTableElement: function (tableElement) {\n    this._tableElement = tableElement;\n  },\n  optionChanged: function (args) {\n    this.callBase(args);\n\n    switch (args.name) {\n      case \"cellHintEnabled\":\n      case \"onCellPrepared\":\n      case \"onRowPrepared\":\n      case \"onCellHoverChanged\":\n        this._invalidate(true, true);\n\n        args.handled = true;\n    }\n  },\n  init: function () {\n    var that = this;\n    that._scrollLeft = -1;\n    that._columnsController = that.getController(\"columns\");\n    that._dataController = that.getController(\"data\");\n    that._delayedTemplates = [];\n    that._templatesCache = {};\n    that.createAction(\"onCellClick\");\n    that.createAction(\"onRowClick\");\n    that.createAction(\"onCellDblClick\");\n    that.createAction(\"onRowDblClick\");\n    that.createAction(\"onCellHoverChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n    that.createAction(\"onCellPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\"\n    });\n    that.createAction(\"onRowPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\",\n      afterExecute: function (e) {\n        that._afterRowPrepared(e);\n      }\n    });\n\n    that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\n\n    that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that));\n  },\n  _afterRowPrepared: noop,\n  _handleDataChanged: function () {},\n  callbackNames: function () {\n    return [\"scrollChanged\"];\n  },\n  _updateScrollLeftPosition: function () {\n    var scrollLeft = this._scrollLeft;\n\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  },\n  scrollTo: function (pos) {\n    var $element = this.element();\n    var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\n\n    if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\n      this._scrollLeft = pos.left;\n      $scrollContainer && $scrollContainer.scrollLeft(pos.left);\n    }\n  },\n  _wrapTableInScrollContainer: function ($table) {\n    var $scrollContainer = $(\"<div>\");\n    var useNative = this.option(\"scrolling.useNative\");\n\n    if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\n      $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS));\n    }\n\n    eventsEngine.on($scrollContainer, \"scroll\", () => {\n      var scrollLeft = $scrollContainer.scrollLeft();\n\n      if (scrollLeft !== this._scrollLeft) {\n        this.scrollChanged.fire({\n          left: scrollLeft\n        }, this.name);\n      }\n    });\n    $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\n    this.setAria(\"role\", \"presentation\", $scrollContainer);\n    return $scrollContainer;\n  },\n  _needWaitAsyncTemplates: function () {\n    return this.option(\"templatesRenderAsynchronously\") && false === this.option(\"renderAsync\");\n  },\n  _waitAsyncTemplates: function (change, forceWaiting) {\n    var needWaitAsyncTemplates = this._needWaitAsyncTemplates();\n\n    var templateDeferreds = (forceWaiting || needWaitAsyncTemplates && (\"update\" !== (null === change || void 0 === change ? void 0 : change.changeType) || null !== change && void 0 !== change && change.isLiveUpdate)) && null !== change && void 0 !== change && change.templateDeferreds ? null === change || void 0 === change ? void 0 : change.templateDeferreds : [];\n    return when.apply(this, templateDeferreds);\n  },\n  _updateContent: function ($newTableElement, change) {\n    return this._waitAsyncTemplates(change).done(() => {\n      this.setTableElement($newTableElement);\n\n      this._wrapTableInScrollContainer($newTableElement);\n    });\n  },\n  _findContentElement: noop,\n  _getWidths: function ($cellElements) {\n    var result = [];\n    var width;\n\n    if ($cellElements) {\n      iteratorUtils.each($cellElements, function (index, item) {\n        width = item.offsetWidth;\n\n        if (item.getBoundingClientRect) {\n          var clientRect = getBoundingRect(item);\n\n          if (clientRect.width > width - 1) {\n            width = clientRect.width;\n          }\n        }\n\n        result.push(width);\n      });\n    }\n\n    return result;\n  },\n  getColumnWidths: function ($tableElement) {\n    var result = [];\n    var $rows;\n    var $cells;\n    (this.option(\"forceApplyBindings\") || noop)();\n    $tableElement = $tableElement || this.getTableElement();\n\n    if ($tableElement) {\n      $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\n\n      for (var i = 0; i < $rows.length; i++) {\n        var $row = $rows.eq(i);\n        var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\n\n        if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\n          $cells = $row.children(\"td\");\n          break;\n        }\n      }\n\n      result = this._getWidths($cells);\n    }\n\n    return result;\n  },\n  getVisibleColumnIndex: function (columnIndex, rowIndex) {\n    return columnIndex;\n  },\n  setColumnWidths: function (_ref) {\n    var {\n      widths: widths,\n      $tableElement: $tableElement,\n      columns: columns,\n      fixed: fixed\n    } = _ref;\n    var $cols;\n    var width;\n    var minWidth;\n    var columnIndex;\n    var columnAutoWidth = this.option(\"columnAutoWidth\");\n    $tableElement = $tableElement || this.getTableElement();\n\n    if ($tableElement && $tableElement.length && widths) {\n      columnIndex = 0;\n      $cols = $tableElement.children(\"colgroup\").children(\"col\");\n      setWidth($cols, \"auto\");\n      columns = columns || this.getColumns(null, $tableElement);\n\n      for (var i = 0; i < columns.length; i++) {\n        if (columnAutoWidth && !fixed) {\n          width = columns[i].width;\n\n          if (width && !columns[i].command) {\n            width = columns[i].visibleWidth || width;\n            width = getWidthStyle(width);\n            minWidth = getWidthStyle(columns[i].minWidth || width);\n            var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\n\n            for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\n              var row = $rows[rowIndex];\n              var cell = void 0;\n              var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\n\n              if (row.classList.contains(GROUP_ROW_CLASS)) {\n                cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']:not(.\").concat(GROUP_CELL_CLASS, \")\"));\n              } else {\n                cell = row.cells[visibleIndex];\n              }\n\n              if (cell) {\n                setCellWidth(cell, columns[i], width);\n                cell.style.minWidth = minWidth;\n              }\n            }\n          }\n        }\n\n        if (columns[i].colspan) {\n          columnIndex += columns[i].colspan;\n          continue;\n        }\n\n        width = widths[columnIndex];\n\n        if (\"adaptiveHidden\" === width) {\n          width = HIDDEN_COLUMNS_WIDTH;\n        }\n\n        if (\"number\" === typeof width) {\n          width = width.toFixed(3) + \"px\";\n        }\n\n        setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\n        columnIndex++;\n      }\n    }\n  },\n  getCellElements: function (rowIndex) {\n    return this._getCellElementsCore(rowIndex);\n  },\n  _getCellElementsCore: function (rowIndex) {\n    var $row = this._getRowElements().eq(rowIndex);\n\n    return $row.children();\n  },\n  _getCellElement: function (rowIndex, columnIdentifier) {\n    var $cell;\n    var $cells = this.getCellElements(rowIndex);\n\n    var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\n\n    if ($cells.length && columnVisibleIndex >= 0) {\n      $cell = $cells.eq(columnVisibleIndex);\n    }\n\n    if ($cell && $cell.length) {\n      return $cell;\n    }\n  },\n  _getRowElement: function (rowIndex) {\n    var that = this;\n    var $rowElement = $();\n    var $tableElements = that.getTableElements();\n    iteratorUtils.each($tableElements, function (_, tableElement) {\n      $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex));\n    });\n\n    if ($rowElement.length) {\n      return $rowElement;\n    }\n  },\n  getCellElement: function (rowIndex, columnIdentifier) {\n    return getPublicElement(this._getCellElement(rowIndex, columnIdentifier));\n  },\n  getRowElement: function (rowIndex) {\n    var $rows = this._getRowElement(rowIndex);\n\n    var elements = [];\n\n    if ($rows && !getPublicElement($rows).get) {\n      for (var i = 0; i < $rows.length; i++) {\n        elements.push($rows[i]);\n      }\n    } else {\n      elements = $rows;\n    }\n\n    return elements;\n  },\n  _getVisibleColumnIndex: function ($cells, rowIndex, columnIdentifier) {\n    if (isString(columnIdentifier)) {\n      var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\n\n      return this._columnsController.getVisibleIndex(columnIndex);\n    }\n\n    return columnIdentifier;\n  },\n  getColumnElements: function () {},\n  getColumns: function (rowIndex) {\n    return this._columnsController.getVisibleColumns(rowIndex);\n  },\n  getCell: function (cellPosition, rows, cells) {\n    var $rows = rows || this._getRowElements();\n\n    var $cells;\n\n    if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\n      if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\n        cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1;\n      }\n\n      $cells = cells || this.getCellElements(cellPosition.rowIndex);\n\n      if ($cells && $cells.length > 0) {\n        return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1);\n      }\n    }\n  },\n  getRowsCount: function () {\n    var tableElement = this.getTableElement();\n\n    if (tableElement && 1 === tableElement.length) {\n      return tableElement[0].rows.length;\n    }\n\n    return 0;\n  },\n  _getRowElementsCore: function (tableElement) {\n    tableElement = tableElement || this.getTableElement();\n\n    if (tableElement) {\n      var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\n      var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\n      return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS);\n    }\n\n    return $();\n  },\n  _getRowElements: function (tableElement) {\n    return this._getRowElementsCore(tableElement);\n  },\n  getRowIndex: function ($row) {\n    return this._getRowElements().index($row);\n  },\n  getBoundingRect: function () {},\n  getName: function () {},\n  setScrollerSpacing: function (width) {\n    var $element = this.element();\n    var rtlEnabled = this.option(\"rtlEnabled\");\n    $element && $element.css({\n      paddingLeft: rtlEnabled ? width : \"\",\n      paddingRight: !rtlEnabled ? width : \"\"\n    });\n  },\n  isScrollbarVisible: function (isHorizontal) {\n    var $element = this.element();\n    var $tableElement = this._tableElement;\n\n    if ($element && $tableElement) {\n      return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0;\n    }\n\n    return false;\n  }\n};\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit(columnsViewMembers);","map":{"version":3,"names":["getOuterWidth","getWidth","getOuterHeight","getHeight","$","domAdapter","getWindow","eventsEngine","data","elementData","pointerEvents","name","clickEventName","dblclickEvent","browser","noop","setWidth","getPublicElement","isRenderer","isFunction","isString","isDefined","isNumeric","getBoundingRect","getDefaultAlignment","iteratorUtils","extend","modules","gridCoreUtils","columnStateMixin","when","Deferred","nativeScrolling","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","GROUP_CELL_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","render","options","container","append","content","subscribeToRowEvents","that","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","timeout","setTimeout","on","e","clearTimeout","type","target","currentTarget","down","join","createAction","event","closest","length","rowIndex","getRowIndex","rowElement","columns","getColumns","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","width","setCellWidth","cell","column","style","maxWidth","copyAttributes","element","newElement","oldAttributes","attributes","newAttributes","i","nodeName","hasAttribute","removeAttribute","setAttribute","nodeValue","columnsViewMembers","_createScrollableOptions","scrollingOptions","option","useNativeScrolling","direction","bounceEnabled","useKeyboard","useNative","useSimulatedScrollbar","_updateCell","$cell","parameters","rowType","_cellPrepared","_createCell","alignment","createElement","textAlign","headerId","component","setAria","cssClass","addClass","command","addWidgetPrefix","colspan","attr","isBand","visibleWidth","minWidth","_createRow","rowObject","tagName","$element","concat","_isAltRow","row","dataIndex","_createTable","isAppend","_createColGroup","safari","appendTo","mozilla","ctrlKey","preventDefault","args","$row","parent","visibleColumns","_columnsController","getVisibleColumns","rowOptions","columnIndex","index","cellOptions","cells","isHeaderRow","hasClass","isDataRow","isMasterDetailRow","isGroupRow","isFilterRow","isDataRowWithTemplate","cellTemplate","isEditorShown","isEditing","showEditorAlways","isHeaderRowWithTemplate","headerCellTemplate","isGroupCellWithTemplate","groupIndex","groupCellTemplate","shouldShowHint","removeAttr","difference","scrollWidth","clientWidth","text","getOptions","$fieldItemContent","is","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","executeAction","colgroupElement","j","_createCol","col","renderDelayedTemplates","change","delayedTemplates","_delayedTemplates","syncTemplates","filter","template","async","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","isAsync","date","Date","templateParameters","shift","doc","getRootNode","get","needWaitAsyncTemplates","_needWaitAsyncTemplates","_processTemplate","renderingTemplate","allowRenderToDetachedContainer","model","deferred","resolve","renderedTemplate","nodeType","templateID","getTemplate","_templatesCache","renderTemplate","templateDeferred","templateOptions","onRendered","renderAsync","push","templateDeferreds","reject","promise","_getBodies","tableElement","children","not","_needWrapRow","$tableElement","_this$_getBodies","hasRowTemplate","rowTemplate","_wrapRowIfNeed","isRefreshing","_tableElement","needWrapRow","$tbody","_appendRow","appendTemplate","_resizeCore","scrollLeft","_scrollLeft","scrollTo","left","_renderCore","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","indexOf","_renderCell","value","values","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","$cells","$newCells","highlightChanges","cellUpdatedClass","forEach","eq","$newCell","replaceWith","_setCellAriaAttributes","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","cellIndex","findIndex","_renderCellContent","appendChild","renderOptions","_getCellTemplate","done","isAltRow","source","watchers","watch","getter","updateValueFunc","updateRowFunc","watcher","newValue","JSON","stringify","splice","update","keepRow","isExpanded","bind","_columnOptionChanged","optionNames","checkChanges","widths","map","setColumnWidths","_requireReady","getCellIndex","getTableElements","getTableElement","setTableElement","optionChanged","callBase","_invalidate","handled","init","getController","_dataController","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","changed","_handleDataChanged","callbackNames","_updateScrollLeftPosition","pos","$scrollContainer","_wrapTableInScrollContainer","scrollChanged","fire","_waitAsyncTemplates","forceWaiting","isLiveUpdate","apply","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","result","each","item","offsetWidth","getBoundingClientRect","clientRect","getColumnWidths","$rows","isRowVisible","display","getVisibleColumnIndex","_ref","fixed","$cols","columnAutoWidth","visibleIndex","classList","contains","querySelector","toFixed","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","_","getCellElement","getRowElement","elements","columnOption","getColumnElements","getCell","cellPosition","getRowsCount","_getRowElementsCore","tBodies","find","getName","setScrollerSpacing","rtlEnabled","css","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","ColumnsView","View","inherit"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/grid_core/ui.grid_core.columns_view.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/grid_core/ui.grid_core.columns_view.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getOuterWidth,\r\n    getWidth,\r\n    getOuterHeight,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../core/element_data\";\r\nimport pointerEvents from \"../../events/pointer\";\r\nimport {\r\n    name as clickEventName\r\n} from \"../../events/click\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../events/double_click\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    setWidth\r\n} from \"../../core/utils/style\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport {\r\n    isRenderer,\r\n    isFunction,\r\n    isString,\r\n    isDefined,\r\n    isNumeric\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../core/utils/position\";\r\nimport * as iteratorUtils from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport modules from \"./ui.grid_core.modules\";\r\nimport gridCoreUtils from \"./ui.grid_core.utils\";\r\nimport columnStateMixin from \"./ui.grid_core.column_state_mixin\";\r\nimport {\r\n    when,\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    nativeScrolling\r\n} from \"../../core/utils/support\";\r\nvar SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nvar SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nvar GROUP_SPACE_CLASS = \"group-space\";\r\nvar CONTENT_CLASS = \"content\";\r\nvar TABLE_CLASS = \"table\";\r\nvar TABLE_FIXED_CLASS = \"table-fixed\";\r\nvar CONTENT_FIXED_CLASS = \"content-fixed\";\r\nvar ROW_CLASS = \"dx-row\";\r\nvar GROUP_ROW_CLASS = \"dx-group-row\";\r\nvar GROUP_CELL_CLASS = \"dx-group-cell\";\r\nvar DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nvar FILTER_ROW_CLASS = \"filter-row\";\r\nvar ERROR_ROW_CLASS = \"dx-error-row\";\r\nvar CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nvar HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nvar CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nvar FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nvar appendElementTemplate = {\r\n    render: function(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nvar subscribeToRowEvents = function(that, $table) {\r\n    var touchTarget;\r\n    var touchCurrentTarget;\r\n    var timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((function() {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (function(e) {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", that.createAction((function(e) {\r\n        var event = e.event;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nvar getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? width + \"px\" : width\r\n};\r\nvar setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nvar copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    var oldAttributes = element.attributes;\r\n    var newAttributes = newElement.attributes;\r\n    var i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        var name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nvar columnsViewMembers = {\r\n    _createScrollableOptions: function() {\r\n        var scrollingOptions = this.option(\"scrolling\");\r\n        var useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        var options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    },\r\n    _updateCell: function($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    },\r\n    _createCell: function(options) {\r\n        var column = options.column;\r\n        var alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        var cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        var $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(GROUP_SPACE_CLASS))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && this.option(\"columnAutoWidth\")) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    },\r\n    _createRow: function(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        var $element = $(\"<\".concat(tagName, \">\")).addClass(ROW_CLASS);\r\n        this.setAria(\"role\", \"row\", $element);\r\n        return $element\r\n    },\r\n    _isAltRow: function(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    },\r\n    _createTable: function(columns, isAppend) {\r\n        var that = this;\r\n        var $table = $(\"<table>\").addClass(that.addWidgetPrefix(TABLE_CLASS)).addClass(that.addWidgetPrefix(TABLE_FIXED_CLASS));\r\n        if (columns && !isAppend) {\r\n            $table.append(that._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            that.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            that.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (function(e) {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (that.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((function(args) {\r\n                var e = args.event;\r\n                var $element = $(e.target);\r\n                var $cell = $(e.currentTarget);\r\n                var $row = $cell.parent();\r\n                var visibleColumns = that._columnsController.getVisibleColumns();\r\n                var rowOptions = $row.data(\"options\");\r\n                var columnIndex = $cell.index();\r\n                var cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                var column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                var isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                var isDataRow = $row.hasClass(\"dx-data-row\");\r\n                var isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                var isGroupRow = $row.hasClass(GROUP_ROW_CLASS);\r\n                var isFilterRow = $row.hasClass(that.addWidgetPrefix(FILTER_ROW_CLASS));\r\n                var isDataRowWithTemplate = isDataRow && (!column || column.cellTemplate);\r\n                var isEditorShown = isDataRow && cellOptions && (rowOptions.isEditing || cellOptions.isEditing || (null === column || void 0 === column ? void 0 : column.showEditorAlways));\r\n                var isHeaderRowWithTemplate = isHeaderRow && (!column || column.headerCellTemplate);\r\n                var isGroupCellWithTemplate = isGroupRow && (!column || column.groupIndex && column.groupCellTemplate);\r\n                var shouldShowHint = !isMasterDetailRow && !isFilterRow && !isEditorShown && !isDataRowWithTemplate && !isHeaderRowWithTemplate && !isGroupCellWithTemplate;\r\n                if (shouldShowHint) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    var difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        var getOptions = function(event) {\r\n            var $cell = $(event.currentTarget);\r\n            var $fieldItemContent = $(event.target).closest(\".\" + FORM_FIELD_ITEM_CONTENT_CLASS);\r\n            var $row = $cell.parent();\r\n            var rowOptions = $row.data(\"options\");\r\n            var options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            var resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = that.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                var formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = that._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (function(e) {\r\n            var options = getOptions(e);\r\n            options && that.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(that, $table);\r\n        return $table\r\n    },\r\n    _rowPointerDown: noop,\r\n    _rowClick: noop,\r\n    _rowDblClick: noop,\r\n    _createColGroup: function(columns) {\r\n        var colgroupElement = $(\"<colgroup>\");\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var colspan = columns[i].colspan || 1;\r\n            for (var j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    },\r\n    _createCol: function(column) {\r\n        var width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = HIDDEN_COLUMNS_WIDTH\r\n        }\r\n        var col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    },\r\n    renderDelayedTemplates: function(change) {\r\n        var delayedTemplates = this._delayedTemplates;\r\n        var syncTemplates = delayedTemplates.filter(template => !template.async);\r\n        var asyncTemplates = delayedTemplates.filter(template => template.async);\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    },\r\n    _renderDelayedTemplatesCoreAsync: function(templates) {\r\n        var that = this;\r\n        if (templates.length) {\r\n            getWindow().setTimeout((function() {\r\n                that._renderDelayedTemplatesCore(templates, true)\r\n            }))\r\n        }\r\n    },\r\n    _renderDelayedTemplatesCore: function(templates, isAsync, change) {\r\n        var date = new Date;\r\n        while (templates.length) {\r\n            var templateParameters = templates.shift();\r\n            var options = templateParameters.options;\r\n            var doc = domAdapter.getRootNode($(options.container).get(0));\r\n            var needWaitAsyncTemplates = this._needWaitAsyncTemplates();\r\n            if (!isAsync || $(options.container).closest(doc).length || needWaitAsyncTemplates) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    },\r\n    _processTemplate: function(template) {\r\n        var renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render: function(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render: function(options) {\r\n                    var renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            var templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = this.getTemplate(template)\r\n            } else {\r\n                if (!this._templatesCache[templateID]) {\r\n                    this._templatesCache[templateID] = this.getTemplate(template)\r\n                }\r\n                renderingTemplate = this._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    },\r\n    renderTemplate: function(container, template, options, allowRenderToDetachedContainer, change) {\r\n        var renderingTemplate = this._processTemplate(template, options);\r\n        var column = options.column;\r\n        var isDataRow = \"data\" === options.rowType;\r\n        var templateDeferred = new Deferred;\r\n        var templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                templateDeferred.resolve()\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            var async = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            if (change) {\r\n                change.templateDeferreds = change.templateDeferreds || [];\r\n                change.templateDeferreds.push(templateDeferred)\r\n            }\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise()\r\n    },\r\n    _getBodies: function(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    },\r\n    _needWrapRow: function($tableElement) {\r\n        var _this$_getBodies;\r\n        var hasRowTemplate = !!this.option().rowTemplate;\r\n        return hasRowTemplate && !!(null !== (_this$_getBodies = this._getBodies($tableElement)) && void 0 !== _this$_getBodies && _this$_getBodies.filter(\".\" + ROW_CLASS).length)\r\n    },\r\n    _wrapRowIfNeed: function($table, $row, isRefreshing) {\r\n        var $tableElement = isRefreshing ? $table || this._tableElement : this._tableElement || $table;\r\n        var needWrapRow = this._needWrapRow($tableElement);\r\n        if (needWrapRow) {\r\n            var $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    },\r\n    _appendRow: function($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    },\r\n    _resizeCore: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    _renderCore: function(e) {\r\n        var $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n    },\r\n    _renderTable: function(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        var changeType = options.change && options.change.changeType;\r\n        var $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    },\r\n    _renderRows: function($table, options) {\r\n        var rows = this._getRows(options.change);\r\n        var columnIndices = options.change && options.change.columnIndices || [];\r\n        var changeTypes = options.change && options.change.changeTypes || [];\r\n        for (var i = 0; i < rows.length; i++) {\r\n            this._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    },\r\n    _renderRow: function($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        var $row = this._createRow(options.row);\r\n        var $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        var rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    },\r\n    _needRenderCell: function(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    },\r\n    _renderCells: function($row, options) {\r\n        var columnIndex = 0;\r\n        var row = options.row;\r\n        var columns = options.columns;\r\n        for (var i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                this._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    _updateCells: function($rowElement, $newRowElement, columnIndices) {\r\n        var $cells = $rowElement.children();\r\n        var $newCells = $newRowElement.children();\r\n        var highlightChanges = this.option(\"highlightChanges\");\r\n        var cellUpdatedClass = this.addWidgetPrefix(CELL_UPDATED_ANIMATION_CLASS);\r\n        columnIndices.forEach((function(columnIndex, index) {\r\n            var $cell = $cells.eq(columnIndex);\r\n            var $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    },\r\n    _setCellAriaAttributes: function($cell, cellOptions) {\r\n        if (\"freeSpace\" !== cellOptions.rowType) {\r\n            this.setAria(\"role\", \"gridcell\", $cell);\r\n            var columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n            var ariaColIndex = cellOptions.columnIndex + columnIndexOffset + 1;\r\n            this.setAria(\"colindex\", ariaColIndex, $cell)\r\n        }\r\n    },\r\n    _renderCell: function($row, options) {\r\n        var cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                var cellIndex = options.row.cells.findIndex(cell => cell.columnIndex === cellOptions.columnIndex);\r\n                options.row.cells[cellIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        var $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions);\r\n        this._renderCellContent($cell, cellOptions, options);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    },\r\n    _renderCellContent: function($cell, options, renderOptions) {\r\n        var template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options, void 0, renderOptions.change)).done(() => {\r\n            this._updateCell($cell, options)\r\n        })\r\n    },\r\n    _getCellTemplate: function() {},\r\n    _getRows: function() {\r\n        return []\r\n    },\r\n    _getCellOptions: function(options) {\r\n        var cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    },\r\n    _addWatchMethod: function(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        var watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            var oldValue = getter(source.data);\r\n            var watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                var newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                var index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((function(watcher) {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    },\r\n    _cellPrepared: function(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    },\r\n    _rowPrepared: function($row, options) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    },\r\n    _columnOptionChanged: function(e) {\r\n        var optionNames = e.optionNames;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            var visibleColumns = this._columnsController.getVisibleColumns();\r\n            var widths = iteratorUtils.map(visibleColumns, (function(column) {\r\n                var width = column.visibleWidth || column.width;\r\n                return isDefined(width) ? width : \"auto\"\r\n            }));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    },\r\n    getCellIndex: function($cell) {\r\n        var cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    },\r\n    getTableElements: function() {\r\n        return this._tableElement || $()\r\n    },\r\n    getTableElement: function() {\r\n        return this._tableElement\r\n    },\r\n    setTableElement: function(tableElement) {\r\n        this._tableElement = tableElement\r\n    },\r\n    optionChanged: function(args) {\r\n        this.callBase(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true\r\n        }\r\n    },\r\n    init: function() {\r\n        var that = this;\r\n        that._scrollLeft = -1;\r\n        that._columnsController = that.getController(\"columns\");\r\n        that._dataController = that.getController(\"data\");\r\n        that._delayedTemplates = [];\r\n        that._templatesCache = {};\r\n        that.createAction(\"onCellClick\");\r\n        that.createAction(\"onRowClick\");\r\n        that.createAction(\"onCellDblClick\");\r\n        that.createAction(\"onRowDblClick\");\r\n        that.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        that.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        that.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: function(e) {\r\n                that._afterRowPrepared(e)\r\n            }\r\n        });\r\n        that._columnsController.columnsChanged.add(that._columnOptionChanged.bind(that));\r\n        that._dataController && that._dataController.changed.add(that._handleDataChanged.bind(that))\r\n    },\r\n    _afterRowPrepared: noop,\r\n    _handleDataChanged: function() {},\r\n    callbackNames: function() {\r\n        return [\"scrollChanged\"]\r\n    },\r\n    _updateScrollLeftPosition: function() {\r\n        var scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    },\r\n    scrollTo: function(pos) {\r\n        var $element = this.element();\r\n        var $scrollContainer = $element && $element.children(\".\" + this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).not(\".\" + this.addWidgetPrefix(CONTENT_FIXED_CLASS));\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    },\r\n    _wrapTableInScrollContainer: function($table) {\r\n        var $scrollContainer = $(\"<div>\");\r\n        var useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(SCROLLABLE_SIMULATED_CLASS))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", () => {\r\n            var scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        });\r\n        $scrollContainer.addClass(this.addWidgetPrefix(CONTENT_CLASS)).addClass(this.addWidgetPrefix(SCROLL_CONTAINER_CLASS)).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    },\r\n    _needWaitAsyncTemplates: function() {\r\n        return this.option(\"templatesRenderAsynchronously\") && false === this.option(\"renderAsync\")\r\n    },\r\n    _waitAsyncTemplates: function(change, forceWaiting) {\r\n        var needWaitAsyncTemplates = this._needWaitAsyncTemplates();\r\n        var templateDeferreds = (forceWaiting || needWaitAsyncTemplates && (\"update\" !== (null === change || void 0 === change ? void 0 : change.changeType) || null !== change && void 0 !== change && change.isLiveUpdate)) && null !== change && void 0 !== change && change.templateDeferreds ? null === change || void 0 === change ? void 0 : change.templateDeferreds : [];\r\n        return when.apply(this, templateDeferreds)\r\n    },\r\n    _updateContent: function($newTableElement, change) {\r\n        return this._waitAsyncTemplates(change).done(() => {\r\n            this.setTableElement($newTableElement);\r\n            this._wrapTableInScrollContainer($newTableElement)\r\n        })\r\n    },\r\n    _findContentElement: noop,\r\n    _getWidths: function($cellElements) {\r\n        var result = [];\r\n        var width;\r\n        if ($cellElements) {\r\n            iteratorUtils.each($cellElements, (function(index, item) {\r\n                width = item.offsetWidth;\r\n                if (item.getBoundingClientRect) {\r\n                    var clientRect = getBoundingRect(item);\r\n                    if (clientRect.width > width - 1) {\r\n                        width = clientRect.width\r\n                    }\r\n                }\r\n                result.push(width)\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    getColumnWidths: function($tableElement) {\r\n        var result = [];\r\n        var $rows;\r\n        var $cells;\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement) {\r\n            $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                var $row = $rows.eq(i);\r\n                var isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                if (!$row.is(\".\" + GROUP_ROW_CLASS) && !$row.is(\".\" + DETAIL_ROW_CLASS) && !$row.is(\".\" + ERROR_ROW_CLASS) && isRowVisible) {\r\n                    $cells = $row.children(\"td\");\r\n                    break\r\n                }\r\n            }\r\n            result = this._getWidths($cells)\r\n        }\r\n        return result\r\n    },\r\n    getVisibleColumnIndex: function(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    },\r\n    setColumnWidths: function(_ref) {\r\n        var {\r\n            widths: widths,\r\n            $tableElement: $tableElement,\r\n            columns: columns,\r\n            fixed: fixed\r\n        } = _ref;\r\n        var $cols;\r\n        var width;\r\n        var minWidth;\r\n        var columnIndex;\r\n        var columnAutoWidth = this.option(\"columnAutoWidth\");\r\n        $tableElement = $tableElement || this.getTableElement();\r\n        if ($tableElement && $tableElement.length && widths) {\r\n            columnIndex = 0;\r\n            $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n            setWidth($cols, \"auto\");\r\n            columns = columns || this.getColumns(null, $tableElement);\r\n            for (var i = 0; i < columns.length; i++) {\r\n                if (columnAutoWidth && !fixed) {\r\n                    width = columns[i].width;\r\n                    if (width && !columns[i].command) {\r\n                        width = columns[i].visibleWidth || width;\r\n                        width = getWidthStyle(width);\r\n                        minWidth = getWidthStyle(columns[i].minWidth || width);\r\n                        var $rows = $rows || $tableElement.children().children(\".dx-row\").not(\".\" + DETAIL_ROW_CLASS);\r\n                        for (var rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                            var row = $rows[rowIndex];\r\n                            var cell = void 0;\r\n                            var visibleIndex = this.getVisibleColumnIndex(i, rowIndex);\r\n                            if (row.classList.contains(GROUP_ROW_CLASS)) {\r\n                                cell = row.querySelector(\"td[aria-colindex='\".concat(visibleIndex + 1, \"']:not(.\").concat(GROUP_CELL_CLASS, \")\"))\r\n                            } else {\r\n                                cell = row.cells[visibleIndex]\r\n                            }\r\n                            if (cell) {\r\n                                setCellWidth(cell, columns[i], width);\r\n                                cell.style.minWidth = minWidth\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (columns[i].colspan) {\r\n                    columnIndex += columns[i].colspan;\r\n                    continue\r\n                }\r\n                width = widths[columnIndex];\r\n                if (\"adaptiveHidden\" === width) {\r\n                    width = HIDDEN_COLUMNS_WIDTH\r\n                }\r\n                if (\"number\" === typeof width) {\r\n                    width = width.toFixed(3) + \"px\"\r\n                }\r\n                setWidth($cols.eq(columnIndex), isDefined(width) ? width : \"auto\");\r\n                columnIndex++\r\n            }\r\n        }\r\n    },\r\n    getCellElements: function(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    },\r\n    _getCellElementsCore: function(rowIndex) {\r\n        var $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    },\r\n    _getCellElement: function(rowIndex, columnIdentifier) {\r\n        var $cell;\r\n        var $cells = this.getCellElements(rowIndex);\r\n        var columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if ($cells.length && columnVisibleIndex >= 0) {\r\n            $cell = $cells.eq(columnVisibleIndex)\r\n        }\r\n        if ($cell && $cell.length) {\r\n            return $cell\r\n        }\r\n    },\r\n    _getRowElement: function(rowIndex) {\r\n        var that = this;\r\n        var $rowElement = $();\r\n        var $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, (function(_, tableElement) {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n    },\r\n    getCellElement: function(rowIndex, columnIdentifier) {\r\n        return getPublicElement(this._getCellElement(rowIndex, columnIdentifier))\r\n    },\r\n    getRowElement: function(rowIndex) {\r\n        var $rows = this._getRowElement(rowIndex);\r\n        var elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (var i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    },\r\n    _getVisibleColumnIndex: function($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            var columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    },\r\n    getColumnElements: function() {},\r\n    getColumns: function(rowIndex) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    },\r\n    getCell: function(cellPosition, rows, cells) {\r\n        var $rows = rows || this._getRowElements();\r\n        var $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = cells || this.getCellElements(cellPosition.rowIndex);\r\n            if ($cells && $cells.length > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    },\r\n    getRowsCount: function() {\r\n        var tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    },\r\n    _getRowElementsCore: function(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            var hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            var tBodies = hasRowTemplate && tableElement.find(\"> tbody.\" + ROW_CLASS);\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .\" + ROW_CLASS + \", > .\" + ROW_CLASS)\r\n        }\r\n        return $()\r\n    },\r\n    _getRowElements: function(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    },\r\n    getRowIndex: function($row) {\r\n        return this._getRowElements().index($row)\r\n    },\r\n    getBoundingRect: function() {},\r\n    getName: function() {},\r\n    setScrollerSpacing: function(width) {\r\n        var $element = this.element();\r\n        var rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    },\r\n    isScrollbarVisible: function(isHorizontal) {\r\n        var $element = this.element();\r\n        var $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    }\r\n};\r\nexport var ColumnsView = modules.View.inherit(columnStateMixin).inherit(columnsViewMembers);\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,aADJ,EAEIC,QAFJ,EAGIC,cAHJ,EAIIC,SAJJ,QAKO,uBALP;AAMA,OAAOC,CAAP,MAAc,qBAAd;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SACIC,SADJ,QAEO,yBAFP;AAGA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SACIC,IAAI,IAAIC,WADZ,QAEO,yBAFP;AAGA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,SACIC,IAAI,IAAIC,cADZ,QAEO,oBAFP;AAGA,SACID,IAAI,IAAIE,aADZ,QAEO,2BAFP;AAGA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SACIC,IADJ,QAEO,yBAFP;AAGA,SACIC,QADJ,QAEO,wBAFP;AAGA,SACIC,gBADJ,QAEO,oBAFP;AAGA,SACIC,UADJ,EAEIC,UAFJ,EAGIC,QAHJ,EAIIC,SAJJ,EAKIC,SALJ,QAMO,uBANP;AAOA,SACIC,eADJ,EAEIC,mBAFJ,QAGO,2BAHP;AAIA,OAAO,KAAKC,aAAZ,MAA+B,2BAA/B;AACA,SACIC,MADJ,QAEO,yBAFP;AAGA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,SACIC,IADJ,EAEIC,QAFJ,QAGO,2BAHP;AAIA,SACIC,eADJ,QAEO,0BAFP;AAGA,IAAIC,sBAAsB,GAAG,kBAA7B;AACA,IAAIC,0BAA0B,GAAG,sBAAjC;AACA,IAAIC,iBAAiB,GAAG,aAAxB;AACA,IAAIC,aAAa,GAAG,SAApB;AACA,IAAIC,WAAW,GAAG,OAAlB;AACA,IAAIC,iBAAiB,GAAG,aAAxB;AACA,IAAIC,mBAAmB,GAAG,eAA1B;AACA,IAAIC,SAAS,GAAG,QAAhB;AACA,IAAIC,eAAe,GAAG,cAAtB;AACA,IAAIC,gBAAgB,GAAG,eAAvB;AACA,IAAIC,gBAAgB,GAAG,sBAAvB;AACA,IAAIC,gBAAgB,GAAG,YAAvB;AACA,IAAIC,eAAe,GAAG,cAAtB;AACA,IAAIC,4BAA4B,GAAG,wBAAnC;AACA,IAAIC,oBAAoB,GAAG,UAA3B;AACA,IAAIC,iBAAiB,GAAG,mBAAxB;AACA,IAAIC,6BAA6B,GAAG,uBAApC;AACA,IAAIC,qBAAqB,GAAG;EACxBC,MAAM,EAAE,UAASC,OAAT,EAAkB;IACtBA,OAAO,CAACC,SAAR,CAAkBC,MAAlB,CAAyBF,OAAO,CAACG,OAAjC;EACH;AAHuB,CAA5B;;AAKA,IAAIC,oBAAoB,GAAG,UAASC,IAAT,EAAeC,MAAf,EAAuB;EAC9C,IAAIC,WAAJ;EACA,IAAIC,kBAAJ;EACA,IAAIC,SAAJ;;EAEA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;IAChC,OAAOC,UAAU,CAAE,YAAW;MAC1BL,WAAW,GAAGC,kBAAkB,GAAG,IAAnC;IACH,CAFgB,EAEbG,OAFa,CAAjB;EAGH;;EACDxD,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB,qBAAxB,EAA+C,SAA/C,EAA2D,UAASQ,CAAT,EAAY;IACnEC,YAAY,CAACN,SAAD,CAAZ;;IACA,IAAI,iBAAiBK,CAAC,CAACE,IAAvB,EAA6B;MACzBT,WAAW,GAAGO,CAAC,CAACG,MAAhB;MACAT,kBAAkB,GAAGM,CAAC,CAACI,aAAvB;MACAT,SAAS,GAAGC,iBAAiB,CAAC,GAAD,CAA7B;IACH,CAJD,MAIO;MACHD,SAAS,GAAGC,iBAAiB,EAA7B;IACH;EACJ,CATD;EAUAvD,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB,CAAC9C,cAAD,EAAiBC,aAAjB,EAAgCH,aAAa,CAAC6D,IAA9C,EAAoDC,IAApD,CAAyD,GAAzD,CAAxB,EAAuF,SAAvF,EAAkGf,IAAI,CAACgB,YAAL,CAAmB,UAASP,CAAT,EAAY;IAC7H,IAAIQ,KAAK,GAAGR,CAAC,CAACQ,KAAd;;IACA,IAAIf,WAAJ,EAAiB;MACbe,KAAK,CAACL,MAAN,GAAeV,WAAf;MACAe,KAAK,CAACJ,aAAN,GAAsBV,kBAAtB;IACH;;IACD,IAAI,CAACxD,CAAC,CAACsE,KAAK,CAACL,MAAP,CAAD,CAAgBM,OAAhB,CAAwB,GAAxB,EAA6BC,MAAlC,EAA0C;MACtCV,CAAC,CAACW,QAAF,GAAapB,IAAI,CAACqB,WAAL,CAAiBJ,KAAK,CAACJ,aAAvB,CAAb;;MACA,IAAIJ,CAAC,CAACW,QAAF,IAAc,CAAlB,EAAqB;QACjBX,CAAC,CAACa,UAAF,GAAe9D,gBAAgB,CAACb,CAAC,CAACsE,KAAK,CAACJ,aAAP,CAAF,CAA/B;QACAJ,CAAC,CAACc,OAAF,GAAYvB,IAAI,CAACwB,UAAL,EAAZ;;QACA,IAAIP,KAAK,CAACN,IAAN,KAAe1D,aAAa,CAAC6D,IAAjC,EAAuC;UACnCd,IAAI,CAACyB,eAAL,CAAqBhB,CAArB;QACH,CAFD,MAEO,IAAIQ,KAAK,CAACN,IAAN,KAAexD,cAAnB,EAAmC;UACtC6C,IAAI,CAAC0B,SAAL,CAAejB,CAAf;QACH,CAFM,MAEA;UACHT,IAAI,CAAC2B,YAAL,CAAkBlB,CAAlB;QACH;MACJ;IACJ;EACJ,CApBiG,CAAlG;AAqBH,CAzCD;;AA0CA,IAAImB,aAAa,GAAG,UAASC,KAAT,EAAgB;EAChC,IAAI,WAAWA,KAAf,EAAsB;IAClB,OAAO,EAAP;EACH;;EACD,OAAOhE,SAAS,CAACgE,KAAD,CAAT,GAAmBA,KAAK,GAAG,IAA3B,GAAkCA,KAAzC;AACH,CALD;;AAMA,IAAIC,YAAY,GAAG,UAASC,IAAT,EAAeC,MAAf,EAAuBH,KAAvB,EAA8B;EAC7CE,IAAI,CAACE,KAAL,CAAWJ,KAAX,GAAmBE,IAAI,CAACE,KAAL,CAAWC,QAAX,GAAsB,WAAWF,MAAM,CAACH,KAAlB,GAA0B,EAA1B,GAA+BA,KAAxE;AACH,CAFD;;AAGA,IAAIM,cAAc,GAAG,UAASC,OAAT,EAAkBC,UAAlB,EAA8B;EAC/C,IAAI,CAACD,OAAD,IAAY,CAACC,UAAjB,EAA6B;IACzB;EACH;;EACD,IAAIC,aAAa,GAAGF,OAAO,CAACG,UAA5B;EACA,IAAIC,aAAa,GAAGH,UAAU,CAACE,UAA/B;EACA,IAAIE,CAAJ;;EACA,KAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,aAAa,CAACnB,MAA9B,EAAsCsB,CAAC,EAAvC,EAA2C;IACvC,IAAIvF,IAAI,GAAGoF,aAAa,CAACG,CAAD,CAAb,CAAiBC,QAA5B;;IACA,IAAI,CAACL,UAAU,CAACM,YAAX,CAAwBzF,IAAxB,CAAL,EAAoC;MAChCkF,OAAO,CAACQ,eAAR,CAAwB1F,IAAxB;IACH;EACJ;;EACD,KAAKuF,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,aAAa,CAACrB,MAA9B,EAAsCsB,CAAC,EAAvC,EAA2C;IACvCL,OAAO,CAACS,YAAR,CAAqBL,aAAa,CAACC,CAAD,CAAb,CAAiBC,QAAtC,EAAgDF,aAAa,CAACC,CAAD,CAAb,CAAiBK,SAAjE;EACH;AACJ,CAhBD;;AAiBA,IAAIC,kBAAkB,GAAG;EACrBC,wBAAwB,EAAE,YAAW;IACjC,IAAIC,gBAAgB,GAAG,KAAKC,MAAL,CAAY,WAAZ,CAAvB;IACA,IAAIC,kBAAkB,GAAG,KAAKD,MAAL,CAAY,qBAAZ,CAAzB;IACA,IAAIvD,OAAO,GAAG1B,MAAM,CAAC,EAAD,EAAKgF,gBAAL,EAAuB;MACvCG,SAAS,EAAE,MAD4B;MAEvCC,aAAa,EAAE,KAFwB;MAGvCC,WAAW,EAAE;IAH0B,CAAvB,CAApB;;IAKA,IAAI,KAAK,CAAL,KAAWH,kBAAf,EAAmC;MAC/BA,kBAAkB,GAAG,IAArB;IACH;;IACD,IAAI,WAAWA,kBAAf,EAAmC;MAC/B,OAAOxD,OAAO,CAAC4D,SAAf;MACA,OAAO5D,OAAO,CAAC6D,qBAAf;IACH,CAHD,MAGO;MACH7D,OAAO,CAAC4D,SAAR,GAAoB,CAAC,CAACJ,kBAAtB;MACAxD,OAAO,CAAC6D,qBAAR,GAAgC,CAACL,kBAAjC;IACH;;IACD,OAAOxD,OAAP;EACH,CApBoB;EAqBrB8D,WAAW,EAAE,UAASC,KAAT,EAAgBC,UAAhB,EAA4B;IACrC,IAAIA,UAAU,CAACC,OAAf,EAAwB;MACpB,KAAKC,aAAL,CAAmBH,KAAnB,EAA0BC,UAA1B;IACH;EACJ,CAzBoB;EA0BrBG,WAAW,EAAE,UAASnE,OAAT,EAAkB;IAC3B,IAAIqC,MAAM,GAAGrC,OAAO,CAACqC,MAArB;IACA,IAAI+B,SAAS,GAAG/B,MAAM,CAAC+B,SAAP,IAAoBhG,mBAAmB,CAAC,KAAKmF,MAAL,CAAY,YAAZ,CAAD,CAAvD;IACA,IAAInB,IAAI,GAAGnF,UAAU,CAACoH,aAAX,CAAyB,IAAzB,CAAX;IACAjC,IAAI,CAACE,KAAL,CAAWgC,SAAX,GAAuBF,SAAvB;IACA,IAAIL,KAAK,GAAG/G,CAAC,CAACoF,IAAD,CAAb;;IACA,IAAI,WAAWpC,OAAO,CAACiE,OAAnB,IAA8B5B,MAAM,CAACkC,QAArC,IAAiD,CAAClC,MAAM,CAACrB,IAA7D,EAAmE;MAC/D,IAAI,KAAKwD,SAAL,CAAejB,MAAf,CAAsB,mBAAtB,CAAJ,EAAgD;QAC5C,KAAKkB,OAAL,CAAa,aAAb,EAA4BpC,MAAM,CAACkC,QAAnC,EAA6CR,KAA7C;MACH;IACJ;;IACD,IAAI1B,MAAM,CAACqC,QAAX,EAAqB;MACjBX,KAAK,CAACY,QAAN,CAAetC,MAAM,CAACqC,QAAtB;IACH;;IACD,IAAI,aAAarC,MAAM,CAACuC,OAAxB,EAAiC;MAC7Bb,KAAK,CAACY,QAAN,CAAetC,MAAM,CAACqC,QAAtB;MACAX,KAAK,CAACY,QAAN,CAAe,KAAKE,eAAL,CAAqB9F,iBAArB,CAAf;IACH;;IACD,IAAIsD,MAAM,CAACyC,OAAP,GAAiB,CAArB,EAAwB;MACpBf,KAAK,CAACgB,IAAN,CAAW,SAAX,EAAsB1C,MAAM,CAACyC,OAA7B;IACH,CAFD,MAEO,IAAI,CAACzC,MAAM,CAAC2C,MAAR,IAAkB,WAAW3C,MAAM,CAAC4C,YAApC,IAAoD,KAAK1B,MAAL,CAAY,iBAAZ,CAAxD,EAAwF;MAC3F,IAAIlB,MAAM,CAACH,KAAP,IAAgBG,MAAM,CAAC6C,QAA3B,EAAqC;QACjC9C,IAAI,CAACE,KAAL,CAAW4C,QAAX,GAAsBjD,aAAa,CAACI,MAAM,CAAC6C,QAAP,IAAmB7C,MAAM,CAACH,KAA3B,CAAnC;MACH;;MACD,IAAIG,MAAM,CAACH,KAAX,EAAkB;QACdC,YAAY,CAACC,IAAD,EAAOC,MAAP,EAAeJ,aAAa,CAACI,MAAM,CAACH,KAAR,CAA5B,CAAZ;MACH;IACJ;;IACD,OAAO6B,KAAP;EACH,CAvDoB;EAwDrBoB,UAAU,EAAE,UAASC,SAAT,EAAoBC,OAApB,EAA6B;IACrCA,OAAO,GAAGA,OAAO,IAAI,IAArB;IACA,IAAIC,QAAQ,GAAGtI,CAAC,CAAC,IAAIuI,MAAJ,CAAWF,OAAX,EAAoB,GAApB,CAAD,CAAD,CAA4BV,QAA5B,CAAqCvF,SAArC,CAAf;IACA,KAAKqF,OAAL,CAAa,MAAb,EAAqB,KAArB,EAA4Ba,QAA5B;IACA,OAAOA,QAAP;EACH,CA7DoB;EA8DrBE,SAAS,EAAE,UAASC,GAAT,EAAc;IACrB,OAAOA,GAAG,IAAIA,GAAG,CAACC,SAAJ,GAAgB,CAAhB,KAAsB,CAApC;EACH,CAhEoB;EAiErBC,YAAY,EAAE,UAAS/D,OAAT,EAAkBgE,QAAlB,EAA4B;IACtC,IAAIvF,IAAI,GAAG,IAAX;IACA,IAAIC,MAAM,GAAGtD,CAAC,CAAC,SAAD,CAAD,CAAa2H,QAAb,CAAsBtE,IAAI,CAACwE,eAAL,CAAqB5F,WAArB,CAAtB,EAAyD0F,QAAzD,CAAkEtE,IAAI,CAACwE,eAAL,CAAqB3F,iBAArB,CAAlE,CAAb;;IACA,IAAI0C,OAAO,IAAI,CAACgE,QAAhB,EAA0B;MACtBtF,MAAM,CAACJ,MAAP,CAAcG,IAAI,CAACwF,eAAL,CAAqBjE,OAArB,CAAd;;MACA,IAAIlE,OAAO,CAACoI,MAAZ,EAAoB;QAChBxF,MAAM,CAACJ,MAAP,CAAclD,CAAC,CAAC,SAAD,CAAD,CAAakD,MAAb,CAAoB,MAApB,CAAd;MACH;;MACDG,IAAI,CAACoE,OAAL,CAAa,MAAb,EAAqB,cAArB,EAAqCnE,MAArC;IACH,CAND,MAMO;MACHD,IAAI,CAACoE,OAAL,CAAa,QAAb,EAAuB,IAAvB,EAA6BnE,MAA7B;IACH;;IACD,KAAKmE,OAAL,CAAa,MAAb,EAAqB,cAArB,EAAqCzH,CAAC,CAAC,SAAD,CAAD,CAAa+I,QAAb,CAAsBzF,MAAtB,CAArC;;IACA,IAAIsF,QAAJ,EAAc;MACV,OAAOtF,MAAP;IACH;;IACD,IAAI5C,OAAO,CAACsI,OAAZ,EAAqB;MACjB7I,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB,WAAxB,EAAqC,IAArC,EAA4C,UAASQ,CAAT,EAAY;QACpD,IAAIA,CAAC,CAACmF,OAAN,EAAe;UACXnF,CAAC,CAACoF,cAAF;QACH;MACJ,CAJD;IAKH;;IACD,IAAI7F,IAAI,CAACkD,MAAL,CAAY,iBAAZ,CAAJ,EAAoC;MAChCpG,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB,WAAxB,EAAqC,cAArC,EAAqD,KAAKe,YAAL,CAAmB,UAAS8E,IAAT,EAAe;QACnF,IAAIrF,CAAC,GAAGqF,IAAI,CAAC7E,KAAb;QACA,IAAIgE,QAAQ,GAAGtI,CAAC,CAAC8D,CAAC,CAACG,MAAH,CAAhB;QACA,IAAI8C,KAAK,GAAG/G,CAAC,CAAC8D,CAAC,CAACI,aAAH,CAAb;QACA,IAAIkF,IAAI,GAAGrC,KAAK,CAACsC,MAAN,EAAX;;QACA,IAAIC,cAAc,GAAGjG,IAAI,CAACkG,kBAAL,CAAwBC,iBAAxB,EAArB;;QACA,IAAIC,UAAU,GAAGL,IAAI,CAAChJ,IAAL,CAAU,SAAV,CAAjB;QACA,IAAIsJ,WAAW,GAAG3C,KAAK,CAAC4C,KAAN,EAAlB;QACA,IAAIC,WAAW,GAAGH,UAAU,IAAIA,UAAU,CAACI,KAAzB,IAAkCJ,UAAU,CAACI,KAAX,CAAiBH,WAAjB,CAApD;QACA,IAAIrE,MAAM,GAAGuE,WAAW,GAAGA,WAAW,CAACvE,MAAf,GAAwBiE,cAAc,CAACI,WAAD,CAA9D;QACA,IAAII,WAAW,GAAGV,IAAI,CAACW,QAAL,CAAc,eAAd,CAAlB;QACA,IAAIC,SAAS,GAAGZ,IAAI,CAACW,QAAL,CAAc,aAAd,CAAhB;QACA,IAAIE,iBAAiB,GAAGb,IAAI,CAACW,QAAL,CAAcxH,gBAAd,CAAxB;QACA,IAAI2H,UAAU,GAAGd,IAAI,CAACW,QAAL,CAAc1H,eAAd,CAAjB;QACA,IAAI8H,WAAW,GAAGf,IAAI,CAACW,QAAL,CAAc1G,IAAI,CAACwE,eAAL,CAAqBrF,gBAArB,CAAd,CAAlB;QACA,IAAI4H,qBAAqB,GAAGJ,SAAS,KAAK,CAAC3E,MAAD,IAAWA,MAAM,CAACgF,YAAvB,CAArC;QACA,IAAIC,aAAa,GAAGN,SAAS,IAAIJ,WAAb,KAA6BH,UAAU,CAACc,SAAX,IAAwBX,WAAW,CAACW,SAApC,KAAkD,SAASlF,MAAT,IAAmB,KAAK,CAAL,KAAWA,MAA9B,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACmF,gBAAzG,CAA7B,CAApB;QACA,IAAIC,uBAAuB,GAAGX,WAAW,KAAK,CAACzE,MAAD,IAAWA,MAAM,CAACqF,kBAAvB,CAAzC;QACA,IAAIC,uBAAuB,GAAGT,UAAU,KAAK,CAAC7E,MAAD,IAAWA,MAAM,CAACuF,UAAP,IAAqBvF,MAAM,CAACwF,iBAA5C,CAAxC;QACA,IAAIC,cAAc,GAAG,CAACb,iBAAD,IAAsB,CAACE,WAAvB,IAAsC,CAACG,aAAvC,IAAwD,CAACF,qBAAzD,IAAkF,CAACK,uBAAnF,IAA8G,CAACE,uBAApI;;QACA,IAAIG,cAAJ,EAAoB;UAChB,IAAIxC,QAAQ,CAAClI,IAAT,CAAcwC,iBAAd,CAAJ,EAAsC;YAClC0F,QAAQ,CAACyC,UAAT,CAAoB,OAApB;YACAzC,QAAQ,CAAClI,IAAT,CAAcwC,iBAAd,EAAiC,KAAjC;UACH;;UACD,IAAIoI,UAAU,GAAG1C,QAAQ,CAAC,CAAD,CAAR,CAAY2C,WAAZ,GAA0B3C,QAAQ,CAAC,CAAD,CAAR,CAAY4C,WAAvD;;UACA,IAAIF,UAAU,GAAG,CAAb,IAAkB,CAAC/J,SAAS,CAACqH,QAAQ,CAACP,IAAT,CAAc,OAAd,CAAD,CAAhC,EAA0D;YACtDO,QAAQ,CAACP,IAAT,CAAc,OAAd,EAAuBO,QAAQ,CAAC6C,IAAT,EAAvB;YACA7C,QAAQ,CAAClI,IAAT,CAAcwC,iBAAd,EAAiC,IAAjC;UACH;QACJ;MACJ,CA/BoD,CAArD;IAgCH;;IACD,IAAIwI,UAAU,GAAG,UAAS9G,KAAT,EAAgB;MAC7B,IAAIyC,KAAK,GAAG/G,CAAC,CAACsE,KAAK,CAACJ,aAAP,CAAb;MACA,IAAImH,iBAAiB,GAAGrL,CAAC,CAACsE,KAAK,CAACL,MAAP,CAAD,CAAgBM,OAAhB,CAAwB,MAAM1B,6BAA9B,CAAxB;MACA,IAAIuG,IAAI,GAAGrC,KAAK,CAACsC,MAAN,EAAX;MACA,IAAII,UAAU,GAAGL,IAAI,CAAChJ,IAAL,CAAU,SAAV,CAAjB;MACA,IAAI4C,OAAO,GAAGyG,UAAU,IAAIA,UAAU,CAACI,KAAzB,IAAkCJ,UAAU,CAACI,KAAX,CAAiB9C,KAAK,CAAC4C,KAAN,EAAjB,CAAhD;;MACA,IAAI,CAAC5C,KAAK,CAACxC,OAAN,CAAc,OAAd,EAAuB+G,EAAvB,CAA0BhH,KAAK,CAACiH,cAAhC,CAAL,EAAsD;QAClD;MACH;;MACD,IAAIC,aAAa,GAAGlK,MAAM,CAAC,EAAD,EAAK0B,OAAL,EAAc;QACpCyI,WAAW,EAAE5K,gBAAgB,CAACkG,KAAD,CADO;QAEpCzC,KAAK,EAAEA,KAF6B;QAGpCoH,SAAS,EAAEpH,KAAK,CAACN;MAHmB,CAAd,CAA1B;MAKAwH,aAAa,CAAC/G,QAAd,GAAyBpB,IAAI,CAACqB,WAAL,CAAiB0E,IAAjB,CAAzB;;MACA,IAAIiC,iBAAiB,CAAC7G,MAAtB,EAA8B;QAC1B,IAAImH,eAAe,GAAGN,iBAAiB,CAACjL,IAAlB,CAAuB,cAAvB,CAAtB;;QACA,IAAIuL,eAAe,CAACtG,MAApB,EAA4B;UACxBmG,aAAa,CAACnG,MAAd,GAAuBsG,eAAe,CAACtG,MAAvC;UACAmG,aAAa,CAAC9B,WAAd,GAA4BrG,IAAI,CAACkG,kBAAL,CAAwBqC,eAAxB,CAAwCJ,aAAa,CAACnG,MAAd,CAAqBsE,KAA7D,CAA5B;QACH;MACJ;;MACD,OAAO6B,aAAP;IACH,CAvBD;;IAwBArL,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB,WAAxB,EAAqC,cAArC,EAAsD,UAASQ,CAAT,EAAY;MAC9D,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAD,CAAxB;MACAd,OAAO,IAAIK,IAAI,CAACwI,aAAL,CAAmB,oBAAnB,EAAyC7I,OAAzC,CAAX;IACH,CAHD;IAIA7C,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB,UAAxB,EAAoC,cAApC,EAAqD,UAASQ,CAAT,EAAY;MAC7D,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAD,CAAxB;MACAd,OAAO,IAAIK,IAAI,CAACwI,aAAL,CAAmB,oBAAnB,EAAyC7I,OAAzC,CAAX;IACH,CAHD;IAIA7C,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB9C,cAAxB,EAAwC,cAAxC,EAAyD,UAASsD,CAAT,EAAY;MACjE,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAD,CAAxB;MACAd,OAAO,IAAIK,IAAI,CAACwI,aAAL,CAAmB,aAAnB,EAAkC7I,OAAlC,CAAX;IACH,CAHD;IAIA7C,YAAY,CAAC0D,EAAb,CAAgBP,MAAhB,EAAwB7C,aAAxB,EAAuC,cAAvC,EAAwD,UAASqD,CAAT,EAAY;MAChE,IAAId,OAAO,GAAGoI,UAAU,CAACtH,CAAD,CAAxB;MACAd,OAAO,IAAIK,IAAI,CAACwI,aAAL,CAAmB,gBAAnB,EAAqC7I,OAArC,CAAX;IACH,CAHD;IAIAI,oBAAoB,CAACC,IAAD,EAAOC,MAAP,CAApB;IACA,OAAOA,MAAP;EACH,CApKoB;EAqKrBwB,eAAe,EAAEnE,IArKI;EAsKrBoE,SAAS,EAAEpE,IAtKU;EAuKrBqE,YAAY,EAAErE,IAvKO;EAwKrBkI,eAAe,EAAE,UAASjE,OAAT,EAAkB;IAC/B,IAAIkH,eAAe,GAAG9L,CAAC,CAAC,YAAD,CAAvB;;IACA,KAAK,IAAI8F,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,OAAO,CAACJ,MAA5B,EAAoCsB,CAAC,EAArC,EAAyC;MACrC,IAAIgC,OAAO,GAAGlD,OAAO,CAACkB,CAAD,CAAP,CAAWgC,OAAX,IAAsB,CAApC;;MACA,KAAK,IAAIiE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjE,OAApB,EAA6BiE,CAAC,EAA9B,EAAkC;QAC9BD,eAAe,CAAC5I,MAAhB,CAAuB,KAAK8I,UAAL,CAAgBpH,OAAO,CAACkB,CAAD,CAAvB,CAAvB;MACH;IACJ;;IACD,OAAOgG,eAAP;EACH,CAjLoB;EAkLrBE,UAAU,EAAE,UAAS3G,MAAT,EAAiB;IACzB,IAAIH,KAAK,GAAGG,MAAM,CAAC4C,YAAP,IAAuB5C,MAAM,CAACH,KAA1C;;IACA,IAAI,qBAAqBA,KAAzB,EAAgC;MAC5BA,KAAK,GAAGvC,oBAAR;IACH;;IACD,IAAIsJ,GAAG,GAAGjM,CAAC,CAAC,OAAD,CAAX;IACAY,QAAQ,CAACqL,GAAD,EAAM/G,KAAN,CAAR;IACA,OAAO+G,GAAP;EACH,CA1LoB;EA2LrBC,sBAAsB,EAAE,UAASC,MAAT,EAAiB;IACrC,IAAIC,gBAAgB,GAAG,KAAKC,iBAA5B;IACA,IAAIC,aAAa,GAAGF,gBAAgB,CAACG,MAAjB,CAAwBC,QAAQ,IAAI,CAACA,QAAQ,CAACC,KAA9C,CAApB;IACA,IAAIC,cAAc,GAAGN,gBAAgB,CAACG,MAAjB,CAAwBC,QAAQ,IAAIA,QAAQ,CAACC,KAA7C,CAArB;IACA,KAAKJ,iBAAL,GAAyB,EAAzB;;IACA,KAAKM,2BAAL,CAAiCL,aAAjC,EAAgD,KAAhD,EAAuDH,MAAvD;;IACA,KAAKS,gCAAL,CAAsCF,cAAtC;EACH,CAlMoB;EAmMrBE,gCAAgC,EAAE,UAASC,SAAT,EAAoB;IAClD,IAAIxJ,IAAI,GAAG,IAAX;;IACA,IAAIwJ,SAAS,CAACrI,MAAd,EAAsB;MAClBtE,SAAS,GAAG0D,UAAZ,CAAwB,YAAW;QAC/BP,IAAI,CAACsJ,2BAAL,CAAiCE,SAAjC,EAA4C,IAA5C;MACH,CAFD;IAGH;EACJ,CA1MoB;EA2MrBF,2BAA2B,EAAE,UAASE,SAAT,EAAoBC,OAApB,EAA6BX,MAA7B,EAAqC;IAC9D,IAAIY,IAAI,GAAG,IAAIC,IAAJ,EAAX;;IACA,OAAOH,SAAS,CAACrI,MAAjB,EAAyB;MACrB,IAAIyI,kBAAkB,GAAGJ,SAAS,CAACK,KAAV,EAAzB;MACA,IAAIlK,OAAO,GAAGiK,kBAAkB,CAACjK,OAAjC;MACA,IAAImK,GAAG,GAAGlN,UAAU,CAACmN,WAAX,CAAuBpN,CAAC,CAACgD,OAAO,CAACC,SAAT,CAAD,CAAqBoK,GAArB,CAAyB,CAAzB,CAAvB,CAAV;;MACA,IAAIC,sBAAsB,GAAG,KAAKC,uBAAL,EAA7B;;MACA,IAAI,CAACT,OAAD,IAAY9M,CAAC,CAACgD,OAAO,CAACC,SAAT,CAAD,CAAqBsB,OAArB,CAA6B4I,GAA7B,EAAkC3I,MAA9C,IAAwD8I,sBAA5D,EAAoF;QAChF,IAAInB,MAAJ,EAAY;UACRnJ,OAAO,CAACmJ,MAAR,GAAiBA,MAAjB;QACH;;QACDc,kBAAkB,CAACT,QAAnB,CAA4BzJ,MAA5B,CAAmCC,OAAnC;MACH;;MACD,IAAI8J,OAAO,IAAI,IAAIE,IAAJ,KAAWD,IAAX,GAAkB,EAAjC,EAAqC;QACjC,KAAKH,gCAAL,CAAsCC,SAAtC;;QACA;MACH;IACJ;;IACD,IAAI,CAACA,SAAS,CAACrI,MAAX,IAAqB,KAAK6H,iBAAL,CAAuB7H,MAAhD,EAAwD;MACpD,KAAK0H,sBAAL;IACH;EACJ,CAhOoB;EAiOrBsB,gBAAgB,EAAE,UAAShB,QAAT,EAAmB;IACjC,IAAIiB,iBAAJ;;IACA,IAAIjB,QAAQ,IAAIA,QAAQ,CAACzJ,MAArB,IAA+B,CAACjC,UAAU,CAAC0L,QAAD,CAA9C,EAA0D;MACtDiB,iBAAiB,GAAG;QAChBC,8BAA8B,EAAElB,QAAQ,CAACkB,8BADzB;QAEhB3K,MAAM,EAAE,UAASC,OAAT,EAAkB;UACtBwJ,QAAQ,CAACzJ,MAAT,CAAgBC,OAAO,CAACC,SAAxB,EAAmCD,OAAO,CAAC2K,KAA3C,EAAkD3K,OAAO,CAACmJ,MAA1D;UACAnJ,OAAO,CAAC4K,QAAR,IAAoB5K,OAAO,CAAC4K,QAAR,CAAiBC,OAAjB,EAApB;QACH;MALe,CAApB;IAOH,CARD,MAQO,IAAI9M,UAAU,CAACyL,QAAD,CAAd,EAA0B;MAC7BiB,iBAAiB,GAAG;QAChB1K,MAAM,EAAE,UAASC,OAAT,EAAkB;UACtB,IAAI8K,gBAAgB,GAAGtB,QAAQ,CAAC3L,gBAAgB,CAACmC,OAAO,CAACC,SAAT,CAAjB,EAAsCD,OAAO,CAAC2K,KAA9C,EAAqD3K,OAAO,CAACmJ,MAA7D,CAA/B;;UACA,IAAI2B,gBAAgB,KAAKA,gBAAgB,CAACC,QAAjB,IAA6BjN,UAAU,CAACgN,gBAAD,CAA5C,CAApB,EAAqF;YACjF9K,OAAO,CAACC,SAAR,CAAkBC,MAAlB,CAAyB4K,gBAAzB;UACH;;UACD9K,OAAO,CAAC4K,QAAR,IAAoB5K,OAAO,CAAC4K,QAAR,CAAiBC,OAAjB,EAApB;QACH;MAPe,CAApB;IASH,CAVM,MAUA;MACH,IAAIG,UAAU,GAAGhN,QAAQ,CAACwL,QAAD,CAAR,GAAqBA,QAArB,GAAgCxM,CAAC,CAACwM,QAAD,CAAD,CAAYzE,IAAZ,CAAiB,IAAjB,CAAjD;;MACA,IAAI,CAACiG,UAAL,EAAiB;QACbP,iBAAiB,GAAG,KAAKQ,WAAL,CAAiBzB,QAAjB,CAApB;MACH,CAFD,MAEO;QACH,IAAI,CAAC,KAAK0B,eAAL,CAAqBF,UAArB,CAAL,EAAuC;UACnC,KAAKE,eAAL,CAAqBF,UAArB,IAAmC,KAAKC,WAAL,CAAiBzB,QAAjB,CAAnC;QACH;;QACDiB,iBAAiB,GAAG,KAAKS,eAAL,CAAqBF,UAArB,CAApB;MACH;IACJ;;IACD,OAAOP,iBAAP;EACH,CAjQoB;EAkQrBU,cAAc,EAAE,UAASlL,SAAT,EAAoBuJ,QAApB,EAA8BxJ,OAA9B,EAAuC0K,8BAAvC,EAAuEvB,MAAvE,EAA+E;IAC3F,IAAIsB,iBAAiB,GAAG,KAAKD,gBAAL,CAAsBhB,QAAtB,EAAgCxJ,OAAhC,CAAxB;;IACA,IAAIqC,MAAM,GAAGrC,OAAO,CAACqC,MAArB;IACA,IAAI2E,SAAS,GAAG,WAAWhH,OAAO,CAACiE,OAAnC;IACA,IAAImH,gBAAgB,GAAG,IAAIzM,QAAJ,EAAvB;IACA,IAAI0M,eAAe,GAAG;MAClBpL,SAAS,EAAEA,SADO;MAElB0K,KAAK,EAAE3K,OAFW;MAGlB4K,QAAQ,EAAEQ,gBAHQ;MAIlBE,UAAU,EAAE,MAAM;QACdF,gBAAgB,CAACP,OAAjB;MACH;IANiB,CAAtB;;IAQA,IAAIJ,iBAAJ,EAAuB;MACnBzK,OAAO,CAACwE,SAAR,GAAoB,KAAKA,SAAzB;MACA,IAAIiF,KAAK,GAAGpH,MAAM,KAAKA,MAAM,CAACkJ,WAAP,IAAsBvE,SAAtB,IAAmC,KAAKzD,MAAL,CAAY,aAAZ,MAA+B,UAAUlB,MAAM,CAACkJ,WAAjB,KAAiClJ,MAAM,CAACuC,OAAP,IAAkBvC,MAAM,CAACmF,gBAA1D,KAA+ER,SAA/E,IAA4F,aAAahH,OAAO,CAACiE,OAAhJ,CAAxC,CAAlB;;MACA,IAAI,CAACwG,iBAAiB,CAACC,8BAAlB,IAAoDA,8BAArD,KAAwF,CAACjB,KAA7F,EAAoG;QAChGgB,iBAAiB,CAAC1K,MAAlB,CAAyBsL,eAAzB;MACH,CAFD,MAEO;QACH,KAAKhC,iBAAL,CAAuBmC,IAAvB,CAA4B;UACxBhC,QAAQ,EAAEiB,iBADc;UAExBzK,OAAO,EAAEqL,eAFe;UAGxB5B,KAAK,EAAEA;QAHiB,CAA5B;MAKH;;MACD,IAAIN,MAAJ,EAAY;QACRA,MAAM,CAACsC,iBAAP,GAA2BtC,MAAM,CAACsC,iBAAP,IAA4B,EAAvD;QACAtC,MAAM,CAACsC,iBAAP,CAAyBD,IAAzB,CAA8BJ,gBAA9B;MACH;IACJ,CAhBD,MAgBO;MACHA,gBAAgB,CAACM,MAAjB;IACH;;IACD,OAAON,gBAAgB,CAACO,OAAjB,EAAP;EACH,CAnSoB;EAoSrBC,UAAU,EAAE,UAASC,YAAT,EAAuB;IAC/B,OAAO7O,CAAC,CAAC6O,YAAD,CAAD,CAAgBC,QAAhB,CAAyB,OAAzB,EAAkCC,GAAlC,CAAsC,YAAtC,EAAoDA,GAApD,CAAwD,YAAxD,CAAP;EACH,CAtSoB;EAuSrBC,YAAY,EAAE,UAASC,aAAT,EAAwB;IAClC,IAAIC,gBAAJ;;IACA,IAAIC,cAAc,GAAG,CAAC,CAAC,KAAK5I,MAAL,GAAc6I,WAArC;IACA,OAAOD,cAAc,IAAI,CAAC,EAAE,UAAUD,gBAAgB,GAAG,KAAKN,UAAL,CAAgBK,aAAhB,CAA7B,KAAgE,KAAK,CAAL,KAAWC,gBAA3E,IAA+FA,gBAAgB,CAAC3C,MAAjB,CAAwB,MAAMnK,SAA9B,EAAyCoC,MAA1I,CAA1B;EACH,CA3SoB;EA4SrB6K,cAAc,EAAE,UAAS/L,MAAT,EAAiB8F,IAAjB,EAAuBkG,YAAvB,EAAqC;IACjD,IAAIL,aAAa,GAAGK,YAAY,GAAGhM,MAAM,IAAI,KAAKiM,aAAlB,GAAkC,KAAKA,aAAL,IAAsBjM,MAAxF;;IACA,IAAIkM,WAAW,GAAG,KAAKR,YAAL,CAAkBC,aAAlB,CAAlB;;IACA,IAAIO,WAAJ,EAAiB;MACb,IAAIC,MAAM,GAAGzP,CAAC,CAAC,SAAD,CAAD,CAAa2H,QAAb,CAAsByB,IAAI,CAACrB,IAAL,CAAU,OAAV,CAAtB,CAAb;MACA,KAAKN,OAAL,CAAa,MAAb,EAAqB,cAArB,EAAqCgI,MAArC;MACA,OAAOA,MAAM,CAACvM,MAAP,CAAckG,IAAd,CAAP;IACH;;IACD,OAAOA,IAAP;EACH,CArToB;EAsTrBsG,UAAU,EAAE,UAASpM,MAAT,EAAiB8F,IAAjB,EAAuBuG,cAAvB,EAAuC;IAC/CA,cAAc,GAAGA,cAAc,IAAI7M,qBAAnC;IACA6M,cAAc,CAAC5M,MAAf,CAAsB;MAClBI,OAAO,EAAEiG,IADS;MAElBnG,SAAS,EAAEK;IAFO,CAAtB;EAIH,CA5ToB;EA6TrBsM,WAAW,EAAE,YAAW;IACpB,IAAIC,UAAU,GAAG,KAAKC,WAAtB;;IACA,IAAID,UAAU,IAAI,CAAlB,EAAqB;MACjB,KAAKC,WAAL,GAAmB,CAAnB;MACA,KAAKC,QAAL,CAAc;QACVC,IAAI,EAAEH;MADI,CAAd;IAGH;EACJ,CArUoB;EAsUrBI,WAAW,EAAE,UAASnM,CAAT,EAAY;IACrB,IAAIoM,KAAK,GAAG,KAAKzK,OAAL,GAAe4D,MAAf,EAAZ;;IACA,IAAI,CAAC6G,KAAD,IAAUA,KAAK,CAAC7G,MAAN,GAAe7E,MAA7B,EAAqC;MACjC,KAAK0H,sBAAL,CAA4BpI,CAA5B;IACH;EACJ,CA3UoB;EA4UrBqM,YAAY,EAAE,UAASnN,OAAT,EAAkB;IAC5BA,OAAO,GAAGA,OAAO,IAAI,EAArB;IACAA,OAAO,CAAC4B,OAAR,GAAkB,KAAK2E,kBAAL,CAAwBC,iBAAxB,EAAlB;IACA,IAAI4G,UAAU,GAAGpN,OAAO,CAACmJ,MAAR,IAAkBnJ,OAAO,CAACmJ,MAAR,CAAeiE,UAAlD;;IACA,IAAI9M,MAAM,GAAG,KAAKqF,YAAL,CAAkB3F,OAAO,CAAC4B,OAA1B,EAAmC,aAAawL,UAAb,IAA2B,cAAcA,UAAzC,IAAuD,aAAaA,UAAvG,CAAb;;IACA,KAAKC,WAAL,CAAiB/M,MAAjB,EAAyBN,OAAzB;;IACA,OAAOM,MAAP;EACH,CAnVoB;EAoVrB+M,WAAW,EAAE,UAAS/M,MAAT,EAAiBN,OAAjB,EAA0B;IACnC,IAAIsN,IAAI,GAAG,KAAKC,QAAL,CAAcvN,OAAO,CAACmJ,MAAtB,CAAX;;IACA,IAAIqE,aAAa,GAAGxN,OAAO,CAACmJ,MAAR,IAAkBnJ,OAAO,CAACmJ,MAAR,CAAeqE,aAAjC,IAAkD,EAAtE;IACA,IAAIC,WAAW,GAAGzN,OAAO,CAACmJ,MAAR,IAAkBnJ,OAAO,CAACmJ,MAAR,CAAesE,WAAjC,IAAgD,EAAlE;;IACA,KAAK,IAAI3K,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwK,IAAI,CAAC9L,MAAzB,EAAiCsB,CAAC,EAAlC,EAAsC;MAClC,KAAK4K,UAAL,CAAgBpN,MAAhB,EAAwBhC,MAAM,CAAC;QAC3BmH,GAAG,EAAE6H,IAAI,CAACxK,CAAD,CADkB;QAE3B0K,aAAa,EAAEA,aAAa,CAAC1K,CAAD,CAFD;QAG3BsK,UAAU,EAAEK,WAAW,CAAC3K,CAAD;MAHI,CAAD,EAI3B9C,OAJ2B,CAA9B;IAKH;EACJ,CA/VoB;EAgWrB0N,UAAU,EAAE,UAASpN,MAAT,EAAiBN,OAAjB,EAA0B;IAClC,IAAI,CAACA,OAAO,CAACwN,aAAb,EAA4B;MACxBxN,OAAO,CAACyF,GAAR,CAAYoB,KAAZ,GAAoB,EAApB;IACH;;IACD,IAAIT,IAAI,GAAG,KAAKjB,UAAL,CAAgBnF,OAAO,CAACyF,GAAxB,CAAX;;IACA,IAAIkI,WAAW,GAAG,KAAKtB,cAAL,CAAoB/L,MAApB,EAA4B8F,IAA5B,CAAlB;;IACA,IAAI,aAAapG,OAAO,CAACoN,UAAzB,EAAqC;MACjC,KAAKQ,YAAL,CAAkBxH,IAAlB,EAAwBpG,OAAxB;IACH;;IACD,KAAK0M,UAAL,CAAgBpM,MAAhB,EAAwBqN,WAAxB;;IACA,IAAIlH,UAAU,GAAGnI,MAAM,CAAC;MACpBsD,OAAO,EAAE5B,OAAO,CAAC4B;IADG,CAAD,EAEpB5B,OAAO,CAACyF,GAFY,CAAvB;;IAGA,KAAKoI,eAAL,CAAqBpH,UAArB,EAAiCzG,OAAO,CAACyF,GAAzC;;IACA,KAAKqI,YAAL,CAAkBH,WAAlB,EAA+BlH,UAA/B,EAA2CzG,OAAO,CAACyF,GAAnD;EACH,CA/WoB;EAgXrBsI,eAAe,EAAE,UAASrH,WAAT,EAAsB8G,aAAtB,EAAqC;IAClD,OAAO,CAACA,aAAD,IAAkBA,aAAa,CAACQ,OAAd,CAAsBtH,WAAtB,KAAsC,CAA/D;EACH,CAlXoB;EAmXrBkH,YAAY,EAAE,UAASxH,IAAT,EAAepG,OAAf,EAAwB;IAClC,IAAI0G,WAAW,GAAG,CAAlB;IACA,IAAIjB,GAAG,GAAGzF,OAAO,CAACyF,GAAlB;IACA,IAAI7D,OAAO,GAAG5B,OAAO,CAAC4B,OAAtB;;IACA,KAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,OAAO,CAACJ,MAA5B,EAAoCsB,CAAC,EAArC,EAAyC;MACrC,IAAI,KAAKiL,eAAL,CAAqBjL,CAArB,EAAwB9C,OAAO,CAACwN,aAAhC,CAAJ,EAAoD;QAChD,KAAKS,WAAL,CAAiB7H,IAAjB,EAAuB9H,MAAM,CAAC;UAC1B+D,MAAM,EAAET,OAAO,CAACkB,CAAD,CADW;UAE1B4D,WAAW,EAAEA,WAFa;UAG1BwH,KAAK,EAAEzI,GAAG,CAAC0I,MAAJ,IAAc1I,GAAG,CAAC0I,MAAJ,CAAWzH,WAAX,CAHK;UAI1B0H,QAAQ,EAAE3I,GAAG,CAAC4I,SAAJ,IAAiB5I,GAAG,CAAC4I,SAAJ,CAAc3H,WAAd;QAJD,CAAD,EAK1B1G,OAL0B,CAA7B;MAMH;;MACD,IAAI4B,OAAO,CAACkB,CAAD,CAAP,CAAWgC,OAAX,GAAqB,CAAzB,EAA4B;QACxB4B,WAAW,IAAI9E,OAAO,CAACkB,CAAD,CAAP,CAAWgC,OAA1B;MACH,CAFD,MAEO;QACH4B,WAAW;MACd;IACJ;EACJ,CAtYoB;EAuYrB4H,YAAY,EAAE,UAASC,WAAT,EAAsBC,cAAtB,EAAsChB,aAAtC,EAAqD;IAC/D,IAAIiB,MAAM,GAAGF,WAAW,CAACzC,QAAZ,EAAb;IACA,IAAI4C,SAAS,GAAGF,cAAc,CAAC1C,QAAf,EAAhB;IACA,IAAI6C,gBAAgB,GAAG,KAAKpL,MAAL,CAAY,kBAAZ,CAAvB;IACA,IAAIqL,gBAAgB,GAAG,KAAK/J,eAAL,CAAqBnF,4BAArB,CAAvB;IACA8N,aAAa,CAACqB,OAAd,CAAuB,UAASnI,WAAT,EAAsBC,KAAtB,EAA6B;MAChD,IAAI5C,KAAK,GAAG0K,MAAM,CAACK,EAAP,CAAUpI,WAAV,CAAZ;MACA,IAAIqI,QAAQ,GAAGL,SAAS,CAACI,EAAV,CAAanI,KAAb,CAAf;MACA5C,KAAK,CAACiL,WAAN,CAAkBD,QAAlB;;MACA,IAAIJ,gBAAgB,IAAI,CAACI,QAAQ,CAAChI,QAAT,CAAkB,mBAAlB,CAAzB,EAAiE;QAC7DgI,QAAQ,CAACpK,QAAT,CAAkBiK,gBAAlB;MACH;IACJ,CAPD;IAQApM,cAAc,CAAC+L,WAAW,CAAClE,GAAZ,CAAgB,CAAhB,CAAD,EAAqBmE,cAAc,CAACnE,GAAf,CAAmB,CAAnB,CAArB,CAAd;EACH,CArZoB;EAsZrB4E,sBAAsB,EAAE,UAASlL,KAAT,EAAgB6C,WAAhB,EAA6B;IACjD,IAAI,gBAAgBA,WAAW,CAAC3C,OAAhC,EAAyC;MACrC,KAAKQ,OAAL,CAAa,MAAb,EAAqB,UAArB,EAAiCV,KAAjC;;MACA,IAAImL,iBAAiB,GAAG,KAAK3I,kBAAL,CAAwB4I,oBAAxB,EAAxB;;MACA,IAAIC,YAAY,GAAGxI,WAAW,CAACF,WAAZ,GAA0BwI,iBAA1B,GAA8C,CAAjE;MACA,KAAKzK,OAAL,CAAa,UAAb,EAAyB2K,YAAzB,EAAuCrL,KAAvC;IACH;EACJ,CA7ZoB;EA8ZrBkK,WAAW,EAAE,UAAS7H,IAAT,EAAepG,OAAf,EAAwB;IACjC,IAAI4G,WAAW,GAAG,KAAKyI,eAAL,CAAqBrP,OAArB,CAAlB;;IACA,IAAIA,OAAO,CAACwN,aAAZ,EAA2B;MACvB,IAAIxN,OAAO,CAACyF,GAAR,CAAYoB,KAAhB,EAAuB;QACnB,IAAIyI,SAAS,GAAGtP,OAAO,CAACyF,GAAR,CAAYoB,KAAZ,CAAkB0I,SAAlB,CAA4BnN,IAAI,IAAIA,IAAI,CAACsE,WAAL,KAAqBE,WAAW,CAACF,WAArE,CAAhB;QACA1G,OAAO,CAACyF,GAAR,CAAYoB,KAAZ,CAAkByI,SAAlB,IAA+B1I,WAA/B;MACH;IACJ,CALD,MAKO;MACH5G,OAAO,CAACyF,GAAR,CAAYoB,KAAZ,CAAkB2E,IAAlB,CAAuB5E,WAAvB;IACH;;IACD,IAAI7C,KAAK,GAAG,KAAKI,WAAL,CAAiByC,WAAjB,CAAZ;;IACA,KAAKqI,sBAAL,CAA4BlL,KAA5B,EAAmC6C,WAAnC;;IACA,KAAK4I,kBAAL,CAAwBzL,KAAxB,EAA+B6C,WAA/B,EAA4C5G,OAA5C;;IACAoG,IAAI,CAACiE,GAAL,CAAS,CAAT,EAAYoF,WAAZ,CAAwB1L,KAAK,CAACsG,GAAN,CAAU,CAAV,CAAxB;IACA,OAAOtG,KAAP;EACH,CA7aoB;EA8arByL,kBAAkB,EAAE,UAASzL,KAAT,EAAgB/D,OAAhB,EAAyB0P,aAAzB,EAAwC;IACxD,IAAIlG,QAAQ,GAAG,KAAKmG,gBAAL,CAAsB3P,OAAtB,CAAf;;IACAtB,IAAI,CAAC,CAAC8K,QAAD,IAAa,KAAK2B,cAAL,CAAoBpH,KAApB,EAA2ByF,QAA3B,EAAqCxJ,OAArC,EAA8C,KAAK,CAAnD,EAAsD0P,aAAa,CAACvG,MAApE,CAAd,CAAJ,CAA+FyG,IAA/F,CAAoG,MAAM;MACtG,KAAK9L,WAAL,CAAiBC,KAAjB,EAAwB/D,OAAxB;IACH,CAFD;EAGH,CAnboB;EAobrB2P,gBAAgB,EAAE,YAAW,CAAE,CApbV;EAqbrBpC,QAAQ,EAAE,YAAW;IACjB,OAAO,EAAP;EACH,CAvboB;EAwbrB8B,eAAe,EAAE,UAASrP,OAAT,EAAkB;IAC/B,IAAI4G,WAAW,GAAG;MACdvE,MAAM,EAAErC,OAAO,CAACqC,MADF;MAEdqE,WAAW,EAAE1G,OAAO,CAAC0G,WAFP;MAGdzC,OAAO,EAAEjE,OAAO,CAACyF,GAAR,CAAYxB,OAHP;MAId4L,QAAQ,EAAE,KAAKrK,SAAL,CAAexF,OAAO,CAACyF,GAAvB;IAJI,CAAlB;;IAMA,KAAKoI,eAAL,CAAqBjH,WAArB;;IACA,OAAOA,WAAP;EACH,CAjcoB;EAkcrBiH,eAAe,EAAE,UAAS7N,OAAT,EAAkB8P,MAAlB,EAA0B;IACvC,IAAI,CAAC,KAAKvM,MAAL,CAAY,oBAAZ,CAAL,EAAwC;MACpC;IACH;;IACD,IAAIwM,QAAQ,GAAG,EAAf;IACAD,MAAM,GAAGA,MAAM,IAAI9P,OAAnB;;IACA8P,MAAM,CAACE,KAAP,GAAeF,MAAM,CAACE,KAAP,IAAgB,UAASC,MAAT,EAAiBC,eAAjB,EAAkCC,aAAlC,EAAiD;MAC5E,IAAI/B,QAAQ,GAAG6B,MAAM,CAACH,MAAM,CAAC1S,IAAR,CAArB;;MACA,IAAIgT,OAAO,GAAG,UAAS3K,GAAT,EAAc;QACxB,IAAIA,GAAG,IAAI0K,aAAX,EAA0B;UACtBA,aAAa,CAAC1K,GAAD,CAAb;QACH;;QACD,IAAI4K,QAAQ,GAAGJ,MAAM,CAACH,MAAM,CAAC1S,IAAR,CAArB;;QACA,IAAIkT,IAAI,CAACC,SAAL,CAAenC,QAAf,MAA6BkC,IAAI,CAACC,SAAL,CAAeF,QAAf,CAAjC,EAA2D;UACvD,IAAI5K,GAAJ,EAAS;YACLyK,eAAe,CAACG,QAAD,CAAf;UACH;;UACDjC,QAAQ,GAAGiC,QAAX;QACH;MACJ,CAXD;;MAYAN,QAAQ,CAACvE,IAAT,CAAc4E,OAAd;MACA,OAAO,YAAW;QACd,IAAIzJ,KAAK,GAAGoJ,QAAQ,CAAC/B,OAAT,CAAiBoC,OAAjB,CAAZ;;QACA,IAAIzJ,KAAK,IAAI,CAAb,EAAgB;UACZoJ,QAAQ,CAACS,MAAT,CAAgB7J,KAAhB,EAAuB,CAAvB;QACH;MACJ,CALD;IAMH,CArBD;;IAsBAmJ,MAAM,CAACW,MAAP,GAAgBX,MAAM,CAACW,MAAP,IAAiB,UAAShL,GAAT,EAAciL,OAAd,EAAuB;MACpD,IAAIjL,GAAJ,EAAS;QACL,KAAKrI,IAAL,GAAY4C,OAAO,CAAC5C,IAAR,GAAeqI,GAAG,CAACrI,IAA/B;QACA,KAAKqE,QAAL,GAAgBzB,OAAO,CAACyB,QAAR,GAAmBgE,GAAG,CAAChE,QAAvC;QACA,KAAKiE,SAAL,GAAiB1F,OAAO,CAAC0F,SAAR,GAAoBD,GAAG,CAACC,SAAzC;QACA,KAAKiL,UAAL,GAAkB3Q,OAAO,CAAC2Q,UAAR,GAAqBlL,GAAG,CAACkL,UAA3C;;QACA,IAAI3Q,OAAO,CAACyF,GAAR,IAAe,CAACiL,OAApB,EAA6B;UACzB1Q,OAAO,CAACyF,GAAR,GAAcA,GAAd;QACH;MACJ;;MACDsK,QAAQ,CAAClB,OAAT,CAAkB,UAASuB,OAAT,EAAkB;QAChCA,OAAO,CAAC3K,GAAD,CAAP;MACH,CAFD;IAGH,CAbD;;IAcA,IAAIqK,MAAM,KAAK9P,OAAf,EAAwB;MACpBA,OAAO,CAACgQ,KAAR,GAAgBF,MAAM,CAACE,KAAP,CAAaY,IAAb,CAAkBd,MAAlB,CAAhB;IACH;;IACD,OAAO9P,OAAP;EACH,CAhfoB;EAifrBkE,aAAa,EAAE,UAAS9B,IAAT,EAAepC,OAAf,EAAwB;IACnCA,OAAO,CAACyI,WAAR,GAAsB5K,gBAAgB,CAACb,CAAC,CAACoF,IAAD,CAAF,CAAtC;IACA,KAAKyG,aAAL,CAAmB,gBAAnB,EAAqC7I,OAArC;EACH,CApfoB;EAqfrB8N,YAAY,EAAE,UAAS1H,IAAT,EAAepG,OAAf,EAAwB;IAClC3C,WAAW,CAAC+I,IAAI,CAACiE,GAAL,CAAS,CAAT,CAAD,EAAc,SAAd,EAAyBrK,OAAzB,CAAX;IACAA,OAAO,CAAC2B,UAAR,GAAqB9D,gBAAgB,CAACuI,IAAD,CAArC;IACA,KAAKyC,aAAL,CAAmB,eAAnB,EAAoC7I,OAApC;EACH,CAzfoB;EA0frB6Q,oBAAoB,EAAE,UAAS/P,CAAT,EAAY;IAC9B,IAAIgQ,WAAW,GAAGhQ,CAAC,CAACgQ,WAApB;;IACA,IAAItS,aAAa,CAACuS,YAAd,CAA2BD,WAA3B,EAAwC,CAAC,OAAD,EAAU,cAAV,CAAxC,CAAJ,EAAwE;MACpE,IAAIxK,cAAc,GAAG,KAAKC,kBAAL,CAAwBC,iBAAxB,EAArB;;MACA,IAAIwK,MAAM,GAAG3S,aAAa,CAAC4S,GAAd,CAAkB3K,cAAlB,EAAmC,UAASjE,MAAT,EAAiB;QAC7D,IAAIH,KAAK,GAAGG,MAAM,CAAC4C,YAAP,IAAuB5C,MAAM,CAACH,KAA1C;QACA,OAAOjE,SAAS,CAACiE,KAAD,CAAT,GAAmBA,KAAnB,GAA2B,MAAlC;MACH,CAHY,CAAb;MAIA,KAAKgP,eAAL,CAAqB;QACjBF,MAAM,EAAEA,MADS;QAEjBF,WAAW,EAAEA;MAFI,CAArB;MAIA;IACH;;IACD,IAAI,CAAC,KAAKK,aAAV,EAAyB;MACrB,KAAKpR,MAAL;IACH;EACJ,CA3gBoB;EA4gBrBqR,YAAY,EAAE,UAASrN,KAAT,EAAgB;IAC1B,IAAIuL,SAAS,GAAGvL,KAAK,CAACvC,MAAN,GAAeuC,KAAK,CAAC,CAAD,CAAL,CAASuL,SAAxB,GAAoC,CAAC,CAArD;IACA,OAAOA,SAAP;EACH,CA/gBoB;EAghBrB+B,gBAAgB,EAAE,YAAW;IACzB,OAAO,KAAK9E,aAAL,IAAsBvP,CAAC,EAA9B;EACH,CAlhBoB;EAmhBrBsU,eAAe,EAAE,YAAW;IACxB,OAAO,KAAK/E,aAAZ;EACH,CArhBoB;EAshBrBgF,eAAe,EAAE,UAAS1F,YAAT,EAAuB;IACpC,KAAKU,aAAL,GAAqBV,YAArB;EACH,CAxhBoB;EAyhBrB2F,aAAa,EAAE,UAASrL,IAAT,EAAe;IAC1B,KAAKsL,QAAL,CAActL,IAAd;;IACA,QAAQA,IAAI,CAAC5I,IAAb;MACI,KAAK,iBAAL;MACA,KAAK,gBAAL;MACA,KAAK,eAAL;MACA,KAAK,oBAAL;QACI,KAAKmU,WAAL,CAAiB,IAAjB,EAAuB,IAAvB;;QACAvL,IAAI,CAACwL,OAAL,GAAe,IAAf;IANR;EAQH,CAniBoB;EAoiBrBC,IAAI,EAAE,YAAW;IACb,IAAIvR,IAAI,GAAG,IAAX;IACAA,IAAI,CAACyM,WAAL,GAAmB,CAAC,CAApB;IACAzM,IAAI,CAACkG,kBAAL,GAA0BlG,IAAI,CAACwR,aAAL,CAAmB,SAAnB,CAA1B;IACAxR,IAAI,CAACyR,eAAL,GAAuBzR,IAAI,CAACwR,aAAL,CAAmB,MAAnB,CAAvB;IACAxR,IAAI,CAACgJ,iBAAL,GAAyB,EAAzB;IACAhJ,IAAI,CAAC6K,eAAL,GAAuB,EAAvB;IACA7K,IAAI,CAACgB,YAAL,CAAkB,aAAlB;IACAhB,IAAI,CAACgB,YAAL,CAAkB,YAAlB;IACAhB,IAAI,CAACgB,YAAL,CAAkB,gBAAlB;IACAhB,IAAI,CAACgB,YAAL,CAAkB,eAAlB;IACAhB,IAAI,CAACgB,YAAL,CAAkB,oBAAlB,EAAwC;MACpC0Q,iBAAiB,EAAE,CAAC,UAAD,EAAa,UAAb;IADiB,CAAxC;IAGA1R,IAAI,CAACgB,YAAL,CAAkB,gBAAlB,EAAoC;MAChC0Q,iBAAiB,EAAE,CAAC,UAAD,EAAa,UAAb,CADa;MAEhCC,QAAQ,EAAE;IAFsB,CAApC;IAIA3R,IAAI,CAACgB,YAAL,CAAkB,eAAlB,EAAmC;MAC/B0Q,iBAAiB,EAAE,CAAC,UAAD,EAAa,UAAb,CADY;MAE/BC,QAAQ,EAAE,WAFqB;MAG/BC,YAAY,EAAE,UAASnR,CAAT,EAAY;QACtBT,IAAI,CAAC6R,iBAAL,CAAuBpR,CAAvB;MACH;IAL8B,CAAnC;;IAOAT,IAAI,CAACkG,kBAAL,CAAwB4L,cAAxB,CAAuCC,GAAvC,CAA2C/R,IAAI,CAACwQ,oBAAL,CAA0BD,IAA1B,CAA+BvQ,IAA/B,CAA3C;;IACAA,IAAI,CAACyR,eAAL,IAAwBzR,IAAI,CAACyR,eAAL,CAAqBO,OAArB,CAA6BD,GAA7B,CAAiC/R,IAAI,CAACiS,kBAAL,CAAwB1B,IAAxB,CAA6BvQ,IAA7B,CAAjC,CAAxB;EACH,CA/jBoB;EAgkBrB6R,iBAAiB,EAAEvU,IAhkBE;EAikBrB2U,kBAAkB,EAAE,YAAW,CAAE,CAjkBZ;EAkkBrBC,aAAa,EAAE,YAAW;IACtB,OAAO,CAAC,eAAD,CAAP;EACH,CApkBoB;EAqkBrBC,yBAAyB,EAAE,YAAW;IAClC,IAAI3F,UAAU,GAAG,KAAKC,WAAtB;;IACA,IAAID,UAAU,IAAI,CAAlB,EAAqB;MACjB,KAAKC,WAAL,GAAmB,CAAnB;MACA,KAAKC,QAAL,CAAc;QACVC,IAAI,EAAEH;MADI,CAAd;IAGH;EACJ,CA7kBoB;EA8kBrBE,QAAQ,EAAE,UAAS0F,GAAT,EAAc;IACpB,IAAInN,QAAQ,GAAG,KAAK7C,OAAL,EAAf;IACA,IAAIiQ,gBAAgB,GAAGpN,QAAQ,IAAIA,QAAQ,CAACwG,QAAT,CAAkB,MAAM,KAAKjH,eAAL,CAAqBhG,sBAArB,CAAxB,EAAsEkN,GAAtE,CAA0E,MAAM,KAAKlH,eAAL,CAAqB1F,mBAArB,CAAhF,CAAnC;;IACA,IAAIlB,SAAS,CAACwU,GAAD,CAAT,IAAkBxU,SAAS,CAACwU,GAAG,CAACzF,IAAL,CAA3B,IAAyC,KAAKF,WAAL,KAAqB2F,GAAG,CAACzF,IAAtE,EAA4E;MACxE,KAAKF,WAAL,GAAmB2F,GAAG,CAACzF,IAAvB;MACA0F,gBAAgB,IAAIA,gBAAgB,CAAC7F,UAAjB,CAA4B4F,GAAG,CAACzF,IAAhC,CAApB;IACH;EACJ,CArlBoB;EAslBrB2F,2BAA2B,EAAE,UAASrS,MAAT,EAAiB;IAC1C,IAAIoS,gBAAgB,GAAG1V,CAAC,CAAC,OAAD,CAAxB;IACA,IAAI4G,SAAS,GAAG,KAAKL,MAAL,CAAY,qBAAZ,CAAhB;;IACA,IAAI,UAAUK,SAAV,IAAuB,WAAWA,SAAX,IAAwB,CAAChF,eAApD,EAAqE;MACjE8T,gBAAgB,CAAC/N,QAAjB,CAA0B,KAAKE,eAAL,CAAqB/F,0BAArB,CAA1B;IACH;;IACD3B,YAAY,CAAC0D,EAAb,CAAgB6R,gBAAhB,EAAkC,QAAlC,EAA4C,MAAM;MAC9C,IAAI7F,UAAU,GAAG6F,gBAAgB,CAAC7F,UAAjB,EAAjB;;MACA,IAAIA,UAAU,KAAK,KAAKC,WAAxB,EAAqC;QACjC,KAAK8F,aAAL,CAAmBC,IAAnB,CAAwB;UACpB7F,IAAI,EAAEH;QADc,CAAxB,EAEG,KAAKtP,IAFR;MAGH;IACJ,CAPD;IAQAmV,gBAAgB,CAAC/N,QAAjB,CAA0B,KAAKE,eAAL,CAAqB7F,aAArB,CAA1B,EAA+D2F,QAA/D,CAAwE,KAAKE,eAAL,CAAqBhG,sBAArB,CAAxE,EAAsHqB,MAAtH,CAA6HI,MAA7H,EAAqIyF,QAArI,CAA8I,KAAKtD,OAAL,EAA9I;IACA,KAAKgC,OAAL,CAAa,MAAb,EAAqB,cAArB,EAAqCiO,gBAArC;IACA,OAAOA,gBAAP;EACH,CAvmBoB;EAwmBrBnI,uBAAuB,EAAE,YAAW;IAChC,OAAO,KAAKhH,MAAL,CAAY,+BAAZ,KAAgD,UAAU,KAAKA,MAAL,CAAY,aAAZ,CAAjE;EACH,CA1mBoB;EA2mBrBuP,mBAAmB,EAAE,UAAS3J,MAAT,EAAiB4J,YAAjB,EAA+B;IAChD,IAAIzI,sBAAsB,GAAG,KAAKC,uBAAL,EAA7B;;IACA,IAAIkB,iBAAiB,GAAG,CAACsH,YAAY,IAAIzI,sBAAsB,KAAK,cAAc,SAASnB,MAAT,IAAmB,KAAK,CAAL,KAAWA,MAA9B,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACiE,UAArE,KAAoF,SAASjE,MAAT,IAAmB,KAAK,CAAL,KAAWA,MAA9B,IAAwCA,MAAM,CAAC6J,YAAxI,CAAvC,KAAiM,SAAS7J,MAA1M,IAAoN,KAAK,CAAL,KAAWA,MAA/N,IAAyOA,MAAM,CAACsC,iBAAhP,GAAoQ,SAAStC,MAAT,IAAmB,KAAK,CAAL,KAAWA,MAA9B,GAAuC,KAAK,CAA5C,GAAgDA,MAAM,CAACsC,iBAA3T,GAA+U,EAAvW;IACA,OAAO/M,IAAI,CAACuU,KAAL,CAAW,IAAX,EAAiBxH,iBAAjB,CAAP;EACH,CA/mBoB;EAgnBrByH,cAAc,EAAE,UAASC,gBAAT,EAA2BhK,MAA3B,EAAmC;IAC/C,OAAO,KAAK2J,mBAAL,CAAyB3J,MAAzB,EAAiCyG,IAAjC,CAAsC,MAAM;MAC/C,KAAK2B,eAAL,CAAqB4B,gBAArB;;MACA,KAAKR,2BAAL,CAAiCQ,gBAAjC;IACH,CAHM,CAAP;EAIH,CArnBoB;EAsnBrBC,mBAAmB,EAAEzV,IAtnBA;EAunBrB0V,UAAU,EAAE,UAASC,aAAT,EAAwB;IAChC,IAAIC,MAAM,GAAG,EAAb;IACA,IAAIrR,KAAJ;;IACA,IAAIoR,aAAJ,EAAmB;MACfjV,aAAa,CAACmV,IAAd,CAAmBF,aAAnB,EAAmC,UAAS3M,KAAT,EAAgB8M,IAAhB,EAAsB;QACrDvR,KAAK,GAAGuR,IAAI,CAACC,WAAb;;QACA,IAAID,IAAI,CAACE,qBAAT,EAAgC;UAC5B,IAAIC,UAAU,GAAGzV,eAAe,CAACsV,IAAD,CAAhC;;UACA,IAAIG,UAAU,CAAC1R,KAAX,GAAmBA,KAAK,GAAG,CAA/B,EAAkC;YAC9BA,KAAK,GAAG0R,UAAU,CAAC1R,KAAnB;UACH;QACJ;;QACDqR,MAAM,CAAC/H,IAAP,CAAYtJ,KAAZ;MACH,CATD;IAUH;;IACD,OAAOqR,MAAP;EACH,CAvoBoB;EAwoBrBM,eAAe,EAAE,UAAS5H,aAAT,EAAwB;IACrC,IAAIsH,MAAM,GAAG,EAAb;IACA,IAAIO,KAAJ;IACA,IAAIrF,MAAJ;IACA,CAAC,KAAKlL,MAAL,CAAY,oBAAZ,KAAqC5F,IAAtC;IACAsO,aAAa,GAAGA,aAAa,IAAI,KAAKqF,eAAL,EAAjC;;IACA,IAAIrF,aAAJ,EAAmB;MACf6H,KAAK,GAAG7H,aAAa,CAACH,QAAd,CAAuB,uBAAvB,EAAgDA,QAAhD,EAAR;;MACA,KAAK,IAAIhJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgR,KAAK,CAACtS,MAA1B,EAAkCsB,CAAC,EAAnC,EAAuC;QACnC,IAAIsD,IAAI,GAAG0N,KAAK,CAAChF,EAAN,CAAShM,CAAT,CAAX;QACA,IAAIiR,YAAY,GAAG,WAAW3N,IAAI,CAACiE,GAAL,CAAS,CAAT,EAAY/H,KAAZ,CAAkB0R,OAA7B,IAAwC,CAAC5N,IAAI,CAACW,QAAL,CAAc,oBAAd,CAA5D;;QACA,IAAI,CAACX,IAAI,CAACkC,EAAL,CAAQ,MAAMjJ,eAAd,CAAD,IAAmC,CAAC+G,IAAI,CAACkC,EAAL,CAAQ,MAAM/I,gBAAd,CAApC,IAAuE,CAAC6G,IAAI,CAACkC,EAAL,CAAQ,MAAM7I,eAAd,CAAxE,IAA0GsU,YAA9G,EAA4H;UACxHtF,MAAM,GAAGrI,IAAI,CAAC0F,QAAL,CAAc,IAAd,CAAT;UACA;QACH;MACJ;;MACDyH,MAAM,GAAG,KAAKF,UAAL,CAAgB5E,MAAhB,CAAT;IACH;;IACD,OAAO8E,MAAP;EACH,CA3pBoB;EA4pBrBU,qBAAqB,EAAE,UAASvN,WAAT,EAAsBjF,QAAtB,EAAgC;IACnD,OAAOiF,WAAP;EACH,CA9pBoB;EA+pBrBwK,eAAe,EAAE,UAASgD,IAAT,EAAe;IAC5B,IAAI;MACAlD,MAAM,EAAEA,MADR;MAEA/E,aAAa,EAAEA,aAFf;MAGArK,OAAO,EAAEA,OAHT;MAIAuS,KAAK,EAAEA;IAJP,IAKAD,IALJ;IAMA,IAAIE,KAAJ;IACA,IAAIlS,KAAJ;IACA,IAAIgD,QAAJ;IACA,IAAIwB,WAAJ;IACA,IAAI2N,eAAe,GAAG,KAAK9Q,MAAL,CAAY,iBAAZ,CAAtB;IACA0I,aAAa,GAAGA,aAAa,IAAI,KAAKqF,eAAL,EAAjC;;IACA,IAAIrF,aAAa,IAAIA,aAAa,CAACzK,MAA/B,IAAyCwP,MAA7C,EAAqD;MACjDtK,WAAW,GAAG,CAAd;MACA0N,KAAK,GAAGnI,aAAa,CAACH,QAAd,CAAuB,UAAvB,EAAmCA,QAAnC,CAA4C,KAA5C,CAAR;MACAlO,QAAQ,CAACwW,KAAD,EAAQ,MAAR,CAAR;MACAxS,OAAO,GAAGA,OAAO,IAAI,KAAKC,UAAL,CAAgB,IAAhB,EAAsBoK,aAAtB,CAArB;;MACA,KAAK,IAAInJ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlB,OAAO,CAACJ,MAA5B,EAAoCsB,CAAC,EAArC,EAAyC;QACrC,IAAIuR,eAAe,IAAI,CAACF,KAAxB,EAA+B;UAC3BjS,KAAK,GAAGN,OAAO,CAACkB,CAAD,CAAP,CAAWZ,KAAnB;;UACA,IAAIA,KAAK,IAAI,CAACN,OAAO,CAACkB,CAAD,CAAP,CAAW8B,OAAzB,EAAkC;YAC9B1C,KAAK,GAAGN,OAAO,CAACkB,CAAD,CAAP,CAAWmC,YAAX,IAA2B/C,KAAnC;YACAA,KAAK,GAAGD,aAAa,CAACC,KAAD,CAArB;YACAgD,QAAQ,GAAGjD,aAAa,CAACL,OAAO,CAACkB,CAAD,CAAP,CAAWoC,QAAX,IAAuBhD,KAAxB,CAAxB;YACA,IAAI4R,KAAK,GAAGA,KAAK,IAAI7H,aAAa,CAACH,QAAd,GAAyBA,QAAzB,CAAkC,SAAlC,EAA6CC,GAA7C,CAAiD,MAAMxM,gBAAvD,CAArB;;YACA,KAAK,IAAIkC,QAAQ,GAAG,CAApB,EAAuBA,QAAQ,GAAGqS,KAAK,CAACtS,MAAxC,EAAgDC,QAAQ,EAAxD,EAA4D;cACxD,IAAIgE,GAAG,GAAGqO,KAAK,CAACrS,QAAD,CAAf;cACA,IAAIW,IAAI,GAAG,KAAK,CAAhB;cACA,IAAIkS,YAAY,GAAG,KAAKL,qBAAL,CAA2BnR,CAA3B,EAA8BrB,QAA9B,CAAnB;;cACA,IAAIgE,GAAG,CAAC8O,SAAJ,CAAcC,QAAd,CAAuBnV,eAAvB,CAAJ,EAA6C;gBACzC+C,IAAI,GAAGqD,GAAG,CAACgP,aAAJ,CAAkB,qBAAqBlP,MAArB,CAA4B+O,YAAY,GAAG,CAA3C,EAA8C,UAA9C,EAA0D/O,MAA1D,CAAiEjG,gBAAjE,EAAmF,GAAnF,CAAlB,CAAP;cACH,CAFD,MAEO;gBACH8C,IAAI,GAAGqD,GAAG,CAACoB,KAAJ,CAAUyN,YAAV,CAAP;cACH;;cACD,IAAIlS,IAAJ,EAAU;gBACND,YAAY,CAACC,IAAD,EAAOR,OAAO,CAACkB,CAAD,CAAd,EAAmBZ,KAAnB,CAAZ;gBACAE,IAAI,CAACE,KAAL,CAAW4C,QAAX,GAAsBA,QAAtB;cACH;YACJ;UACJ;QACJ;;QACD,IAAItD,OAAO,CAACkB,CAAD,CAAP,CAAWgC,OAAf,EAAwB;UACpB4B,WAAW,IAAI9E,OAAO,CAACkB,CAAD,CAAP,CAAWgC,OAA1B;UACA;QACH;;QACD5C,KAAK,GAAG8O,MAAM,CAACtK,WAAD,CAAd;;QACA,IAAI,qBAAqBxE,KAAzB,EAAgC;UAC5BA,KAAK,GAAGvC,oBAAR;QACH;;QACD,IAAI,aAAa,OAAOuC,KAAxB,EAA+B;UAC3BA,KAAK,GAAGA,KAAK,CAACwS,OAAN,CAAc,CAAd,IAAmB,IAA3B;QACH;;QACD9W,QAAQ,CAACwW,KAAK,CAACtF,EAAN,CAASpI,WAAT,CAAD,EAAwBzI,SAAS,CAACiE,KAAD,CAAT,GAAmBA,KAAnB,GAA2B,MAAnD,CAAR;QACAwE,WAAW;MACd;IACJ;EACJ,CAxtBoB;EAytBrBiO,eAAe,EAAE,UAASlT,QAAT,EAAmB;IAChC,OAAO,KAAKmT,oBAAL,CAA0BnT,QAA1B,CAAP;EACH,CA3tBoB;EA4tBrBmT,oBAAoB,EAAE,UAASnT,QAAT,EAAmB;IACrC,IAAI2E,IAAI,GAAG,KAAKyO,eAAL,GAAuB/F,EAAvB,CAA0BrN,QAA1B,CAAX;;IACA,OAAO2E,IAAI,CAAC0F,QAAL,EAAP;EACH,CA/tBoB;EAguBrBgJ,eAAe,EAAE,UAASrT,QAAT,EAAmBsT,gBAAnB,EAAqC;IAClD,IAAIhR,KAAJ;IACA,IAAI0K,MAAM,GAAG,KAAKkG,eAAL,CAAqBlT,QAArB,CAAb;;IACA,IAAIuT,kBAAkB,GAAG,KAAKC,sBAAL,CAA4BxG,MAA5B,EAAoChN,QAApC,EAA8CsT,gBAA9C,CAAzB;;IACA,IAAItG,MAAM,CAACjN,MAAP,IAAiBwT,kBAAkB,IAAI,CAA3C,EAA8C;MAC1CjR,KAAK,GAAG0K,MAAM,CAACK,EAAP,CAAUkG,kBAAV,CAAR;IACH;;IACD,IAAIjR,KAAK,IAAIA,KAAK,CAACvC,MAAnB,EAA2B;MACvB,OAAOuC,KAAP;IACH;EACJ,CA1uBoB;EA2uBrBmR,cAAc,EAAE,UAASzT,QAAT,EAAmB;IAC/B,IAAIpB,IAAI,GAAG,IAAX;IACA,IAAIkO,WAAW,GAAGvR,CAAC,EAAnB;IACA,IAAImY,cAAc,GAAG9U,IAAI,CAACgR,gBAAL,EAArB;IACAhT,aAAa,CAACmV,IAAd,CAAmB2B,cAAnB,EAAoC,UAASC,CAAT,EAAYvJ,YAAZ,EAA0B;MAC1D0C,WAAW,GAAGA,WAAW,CAAC6D,GAAZ,CAAgB/R,IAAI,CAACwU,eAAL,CAAqB7X,CAAC,CAAC6O,YAAD,CAAtB,EAAsCiD,EAAtC,CAAyCrN,QAAzC,CAAhB,CAAd;IACH,CAFD;;IAGA,IAAI8M,WAAW,CAAC/M,MAAhB,EAAwB;MACpB,OAAO+M,WAAP;IACH;EACJ,CArvBoB;EAsvBrB8G,cAAc,EAAE,UAAS5T,QAAT,EAAmBsT,gBAAnB,EAAqC;IACjD,OAAOlX,gBAAgB,CAAC,KAAKiX,eAAL,CAAqBrT,QAArB,EAA+BsT,gBAA/B,CAAD,CAAvB;EACH,CAxvBoB;EAyvBrBO,aAAa,EAAE,UAAS7T,QAAT,EAAmB;IAC9B,IAAIqS,KAAK,GAAG,KAAKoB,cAAL,CAAoBzT,QAApB,CAAZ;;IACA,IAAI8T,QAAQ,GAAG,EAAf;;IACA,IAAIzB,KAAK,IAAI,CAACjW,gBAAgB,CAACiW,KAAD,CAAhB,CAAwBzJ,GAAtC,EAA2C;MACvC,KAAK,IAAIvH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgR,KAAK,CAACtS,MAA1B,EAAkCsB,CAAC,EAAnC,EAAuC;QACnCyS,QAAQ,CAAC/J,IAAT,CAAcsI,KAAK,CAAChR,CAAD,CAAnB;MACH;IACJ,CAJD,MAIO;MACHyS,QAAQ,GAAGzB,KAAX;IACH;;IACD,OAAOyB,QAAP;EACH,CApwBoB;EAqwBrBN,sBAAsB,EAAE,UAASxG,MAAT,EAAiBhN,QAAjB,EAA2BsT,gBAA3B,EAA6C;IACjE,IAAI/W,QAAQ,CAAC+W,gBAAD,CAAZ,EAAgC;MAC5B,IAAIrO,WAAW,GAAG,KAAKH,kBAAL,CAAwBiP,YAAxB,CAAqCT,gBAArC,EAAuD,OAAvD,CAAlB;;MACA,OAAO,KAAKxO,kBAAL,CAAwBqC,eAAxB,CAAwClC,WAAxC,CAAP;IACH;;IACD,OAAOqO,gBAAP;EACH,CA3wBoB;EA4wBrBU,iBAAiB,EAAE,YAAW,CAAE,CA5wBX;EA6wBrB5T,UAAU,EAAE,UAASJ,QAAT,EAAmB;IAC3B,OAAO,KAAK8E,kBAAL,CAAwBC,iBAAxB,CAA0C/E,QAA1C,CAAP;EACH,CA/wBoB;EAgxBrBiU,OAAO,EAAE,UAASC,YAAT,EAAuBrI,IAAvB,EAA6BzG,KAA7B,EAAoC;IACzC,IAAIiN,KAAK,GAAGxG,IAAI,IAAI,KAAKuH,eAAL,EAApB;;IACA,IAAIpG,MAAJ;;IACA,IAAIqF,KAAK,CAACtS,MAAN,GAAe,CAAf,IAAoBmU,YAAY,CAAClU,QAAb,IAAyB,CAAjD,EAAoD;MAChD,IAAI,cAAc,KAAK8B,MAAL,CAAY,gBAAZ,CAAd,IAA+C,cAAc,KAAKA,MAAL,CAAY,4BAAZ,CAAjE,EAA4G;QACxGoS,YAAY,CAAClU,QAAb,GAAwBkU,YAAY,CAAClU,QAAb,GAAwBqS,KAAK,CAACtS,MAA9B,GAAuCmU,YAAY,CAAClU,QAApD,GAA+DqS,KAAK,CAACtS,MAAN,GAAe,CAAtG;MACH;;MACDiN,MAAM,GAAG5H,KAAK,IAAI,KAAK8N,eAAL,CAAqBgB,YAAY,CAAClU,QAAlC,CAAlB;;MACA,IAAIgN,MAAM,IAAIA,MAAM,CAACjN,MAAP,GAAgB,CAA9B,EAAiC;QAC7B,OAAOiN,MAAM,CAACK,EAAP,CAAUL,MAAM,CAACjN,MAAP,GAAgBmU,YAAY,CAACjP,WAA7B,GAA2CiP,YAAY,CAACjP,WAAxD,GAAsE+H,MAAM,CAACjN,MAAP,GAAgB,CAAhG,CAAP;MACH;IACJ;EACJ,CA5xBoB;EA6xBrBoU,YAAY,EAAE,YAAW;IACrB,IAAI/J,YAAY,GAAG,KAAKyF,eAAL,EAAnB;;IACA,IAAIzF,YAAY,IAAI,MAAMA,YAAY,CAACrK,MAAvC,EAA+C;MAC3C,OAAOqK,YAAY,CAAC,CAAD,CAAZ,CAAgByB,IAAhB,CAAqB9L,MAA5B;IACH;;IACD,OAAO,CAAP;EACH,CAnyBoB;EAoyBrBqU,mBAAmB,EAAE,UAAShK,YAAT,EAAuB;IACxCA,YAAY,GAAGA,YAAY,IAAI,KAAKyF,eAAL,EAA/B;;IACA,IAAIzF,YAAJ,EAAkB;MACd,IAAIM,cAAc,GAAG,KAAK5I,MAAL,GAAc6I,WAAd,IAA6B,KAAK7I,MAAL,CAAY,iBAAZ,CAAlD;MACA,IAAIuS,OAAO,GAAG3J,cAAc,IAAIN,YAAY,CAACkK,IAAb,CAAkB,aAAa3W,SAA/B,CAAhC;MACA,OAAO0W,OAAO,IAAIA,OAAO,CAACtU,MAAnB,GAA4BsU,OAA5B,GAAsCjK,YAAY,CAACkK,IAAb,CAAkB,gBAAgB3W,SAAhB,GAA4B,OAA5B,GAAsCA,SAAxD,CAA7C;IACH;;IACD,OAAOpC,CAAC,EAAR;EACH,CA5yBoB;EA6yBrB6X,eAAe,EAAE,UAAShJ,YAAT,EAAuB;IACpC,OAAO,KAAKgK,mBAAL,CAAyBhK,YAAzB,CAAP;EACH,CA/yBoB;EAgzBrBnK,WAAW,EAAE,UAAS0E,IAAT,EAAe;IACxB,OAAO,KAAKyO,eAAL,GAAuBlO,KAAvB,CAA6BP,IAA7B,CAAP;EACH,CAlzBoB;EAmzBrBjI,eAAe,EAAE,YAAW,CAAE,CAnzBT;EAozBrB6X,OAAO,EAAE,YAAW,CAAE,CApzBD;EAqzBrBC,kBAAkB,EAAE,UAAS/T,KAAT,EAAgB;IAChC,IAAIoD,QAAQ,GAAG,KAAK7C,OAAL,EAAf;IACA,IAAIyT,UAAU,GAAG,KAAK3S,MAAL,CAAY,YAAZ,CAAjB;IACA+B,QAAQ,IAAIA,QAAQ,CAAC6Q,GAAT,CAAa;MACrBC,WAAW,EAAEF,UAAU,GAAGhU,KAAH,GAAW,EADb;MAErBmU,YAAY,EAAE,CAACH,UAAD,GAAchU,KAAd,GAAsB;IAFf,CAAb,CAAZ;EAIH,CA5zBoB;EA6zBrBoU,kBAAkB,EAAE,UAASC,YAAT,EAAuB;IACvC,IAAIjR,QAAQ,GAAG,KAAK7C,OAAL,EAAf;IACA,IAAIwJ,aAAa,GAAG,KAAKM,aAAzB;;IACA,IAAIjH,QAAQ,IAAI2G,aAAhB,EAA+B;MAC3B,OAAOsK,YAAY,GAAG3Z,aAAa,CAACqP,aAAD,CAAb,GAA+BpP,QAAQ,CAACyI,QAAD,CAAvC,GAAoD,CAAvD,GAA2DxI,cAAc,CAACmP,aAAD,CAAd,GAAgClP,SAAS,CAACuI,QAAD,CAAzC,GAAsD,CAApI;IACH;;IACD,OAAO,KAAP;EACH;AAp0BoB,CAAzB;AAs0BA,OAAO,IAAIkR,WAAW,GAAGjY,OAAO,CAACkY,IAAR,CAAaC,OAAb,CAAqBjY,gBAArB,EAAuCiY,OAAvC,CAA+CtT,kBAA/C,CAAlB"},"metadata":{},"sourceType":"module"}