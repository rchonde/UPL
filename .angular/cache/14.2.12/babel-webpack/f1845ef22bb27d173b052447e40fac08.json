{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport registerComponent from \"../../core/component_registrator\";\nimport Guid from \"../../core/guid\";\nimport { ensureDefined } from \"../../core/utils/common\";\nimport config from \"../../core/config\";\nimport { isDefined, isEmptyObject, isObject, isString } from \"../../core/utils/type\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { triggerResizeEvent, triggerShownEvent } from \"../../events/visibility_change\";\nimport { getPublicElement } from \"../../core/element\";\nimport messageLocalization from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport Editor from \"../editor/editor\";\nimport { defaultScreenFactorFunc, getCurrentScreenFactor, hasWindow } from \"../../core/utils/window\";\nimport ValidationEngine from \"../validation_engine\";\nimport { default as FormItemsRunTimeInfo } from \"./ui.form.items_runtime_info\";\nimport TabPanel from \"../tab_panel\";\nimport Scrollable from \"../scroll_view/ui.scrollable\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { isMaterial } from \"../themes\";\nimport tryCreateItemOptionAction from \"./ui.form.item_options_actions\";\nimport resizeObserverSingleton from \"../../core/resize_observer\";\nimport \"./ui.form.layout_manager\";\nimport { concatPaths, createItemPathByIndex, getFullOptionName, getOptionNameFromFullName, tryGetTabPath, getTextWithoutSpaces, isEqualToDataFieldOrNameOrTitleOrCaption, isFullPathContainsTabs, getItemPath, convertToLayoutManagerOptions } from \"./ui.form.utils\";\nimport { convertToLabelMarkOptions } from \"./ui.form.layout_manager.utils\";\nimport { setLabelWidthByMaxLabelWidth } from \"./components/label\";\nimport \"../validation_summary\";\nimport \"../validation_group\";\nimport { FORM_CLASS, FIELD_ITEM_CLASS, FORM_GROUP_CLASS, FORM_GROUP_CONTENT_CLASS, FIELD_ITEM_CONTENT_HAS_GROUP_CLASS, FIELD_ITEM_CONTENT_HAS_TABS_CLASS, FORM_GROUP_WITH_CAPTION_CLASS, FORM_GROUP_CAPTION_CLASS, FIELD_ITEM_TAB_CLASS, FORM_FIELD_ITEM_COL_CLASS, GROUP_COL_COUNT_CLASS, GROUP_COL_COUNT_ATTR, FIELD_ITEM_CONTENT_CLASS, FORM_VALIDATION_SUMMARY, ROOT_SIMPLE_ITEM_CLASS, FORM_UNDERLINED_CLASS } from \"./constants\";\nimport { TOOLBAR_CLASS } from \"../toolbar/constants\";\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\nvar ITEM_OPTIONS_FOR_VALIDATION_UPDATING = [\"items\", \"isRequired\", \"validationRules\", \"visible\"];\nvar Form = Widget.inherit({\n  _init: function () {\n    this.callBase();\n    this._cachedColCountOptions = [];\n    this._itemsRunTimeInfo = new FormItemsRunTimeInfo();\n    this._groupsColCount = [];\n\n    this._attachSyncSubscriptions();\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      formID: \"dx-\" + new Guid(),\n      formData: {},\n      colCount: 1,\n      screenByWidth: defaultScreenFactorFunc,\n      colCountByScreen: void 0,\n      labelLocation: \"left\",\n      readOnly: false,\n      onFieldDataChanged: null,\n      customizeItem: null,\n      onEditorEnterKey: null,\n      minColWidth: 200,\n      alignItemLabels: true,\n      alignItemLabelsInAllGroups: true,\n      alignRootItemLabels: true,\n      showColonAfterLabel: true,\n      showRequiredMark: true,\n      showOptionalMark: false,\n      requiredMark: \"*\",\n      optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\n      requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\"),\n      showValidationSummary: false,\n      items: void 0,\n      scrollingEnabled: false,\n      validationGroup: void 0,\n      stylingMode: config().editorStylingMode,\n      labelMode: \"outside\"\n    });\n  },\n  _defaultOptionsRules: function () {\n    return this.callBase().concat([{\n      device: function () {\n        return isMaterial();\n      },\n      options: {\n        showColonAfterLabel: false,\n        labelLocation: \"top\"\n      }\n    }]);\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      formData: true,\n      validationGroup: true\n    });\n  },\n  _getGroupColCount: function ($element) {\n    return parseInt($element.attr(GROUP_COL_COUNT_ATTR));\n  },\n  _applyLabelsWidthByCol: function ($container, index) {\n    var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\n    var labelMarkOptions = arguments.length > 3 ? arguments[3] : void 0;\n    var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index;\n    var cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\".concat(FIELD_ITEM_TAB_CLASS, \")\") : \"\";\n    setLabelWidthByMaxLabelWidth($container, \".\".concat(fieldItemClass).concat(cssExcludeTabbedSelector), labelMarkOptions);\n    return;\n  },\n  _applyLabelsWidth: function ($container, excludeTabbed, inOneColumn, colCount, labelMarkOptions) {\n    colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);\n    var applyLabelsOptions = {\n      excludeTabbed: excludeTabbed,\n      inOneColumn: inOneColumn\n    };\n    var i;\n\n    for (i = 0; i < colCount; i++) {\n      this._applyLabelsWidthByCol($container, i, applyLabelsOptions, labelMarkOptions);\n    }\n  },\n  _getGroupElementsInColumn: function ($container, columnIndex, colCount) {\n    var cssColCountSelector = isDefined(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\";\n    var groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\n    return $container.find(groupSelector);\n  },\n  _applyLabelsWidthWithGroups: function ($container, colCount, excludeTabbed, labelMarkOptions) {\n    if (true === this.option(\"alignRootItemLabels\")) {\n      var $rootSimpleItems = $container.find(\".\".concat(ROOT_SIMPLE_ITEM_CLASS));\n\n      for (var colIndex = 0; colIndex < colCount; colIndex++) {\n        this._applyLabelsWidthByCol($rootSimpleItems, colIndex, excludeTabbed, labelMarkOptions);\n      }\n    }\n\n    var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\n\n    if (alignItemLabelsInAllGroups) {\n      this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions);\n    } else {\n      var $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\n      var i;\n\n      for (i = 0; i < $groups.length; i++) {\n        this._applyLabelsWidth($groups.eq(i), excludeTabbed, void 0, void 0, labelMarkOptions);\n      }\n    }\n  },\n  _applyLabelsWidthWithNestedGroups: function ($container, colCount, excludeTabbed, labelMarkOptions) {\n    var applyLabelsOptions = {\n      excludeTabbed: excludeTabbed\n    };\n    var colIndex;\n    var groupsColIndex;\n    var groupColIndex;\n    var $groupsByCol;\n\n    for (colIndex = 0; colIndex < colCount; colIndex++) {\n      $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\n\n      this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions, labelMarkOptions);\n\n      for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\n        $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\n\n        var groupColCount = this._getGroupColCount($groupsByCol);\n\n        for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\n          this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions, labelMarkOptions);\n        }\n      }\n    }\n  },\n  _labelLocation: function () {\n    return this.option(\"labelLocation\");\n  },\n  _alignLabelsInColumn: function (_ref) {\n    var {\n      layoutManager: layoutManager,\n      inOneColumn: inOneColumn,\n      $container: $container,\n      excludeTabbed: excludeTabbed,\n      items: items\n    } = _ref;\n\n    if (!hasWindow() || \"top\" === this._labelLocation()) {\n      return;\n    }\n\n    var labelMarkOptions = convertToLabelMarkOptions(layoutManager._getMarkOptions());\n\n    if (inOneColumn) {\n      this._applyLabelsWidth($container, excludeTabbed, true, void 0, labelMarkOptions);\n    } else if (this._checkGrouping(items)) {\n      this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed, labelMarkOptions);\n    } else {\n      this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount(), labelMarkOptions);\n    }\n  },\n  _prepareFormData: function () {\n    if (!isDefined(this.option(\"formData\"))) {\n      this.option(\"formData\", {});\n    }\n  },\n  _setStylingModeClass: function () {\n    if (\"underlined\" === this.option(\"stylingMode\")) {\n      this.$element().addClass(FORM_UNDERLINED_CLASS);\n    }\n  },\n  _initMarkup: function () {\n    ValidationEngine.addGroup(this._getValidationGroup());\n\n    this._clearCachedInstances();\n\n    this._prepareFormData();\n\n    this.$element().addClass(FORM_CLASS);\n\n    this._setStylingModeClass();\n\n    this.callBase();\n    this.setAria(\"role\", \"form\", this.$element());\n\n    if (this.option(\"scrollingEnabled\")) {\n      this._renderScrollable();\n    }\n\n    this._renderLayout();\n\n    this._renderValidationSummary();\n\n    this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor();\n\n    this._attachResizeObserverSubscription();\n  },\n  _attachResizeObserverSubscription: function () {\n    if (hasWindow()) {\n      var formRootElement = this.$element().get(0);\n      resizeObserverSingleton.unobserve(formRootElement);\n      resizeObserverSingleton.observe(formRootElement, () => {\n        this._resizeHandler();\n      });\n    }\n  },\n  _resizeHandler: function () {\n    if (this._cachedLayoutManagers.length) {\n      each(this._cachedLayoutManagers, (_, layoutManager) => {\n        var _layoutManager$option;\n\n        null === (_layoutManager$option = layoutManager.option(\"onLayoutChanged\")) || void 0 === _layoutManager$option ? void 0 : _layoutManager$option(layoutManager.isSingleColumnMode());\n      });\n    }\n  },\n  _getCurrentScreenFactor: function () {\n    return hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\";\n  },\n  _clearCachedInstances: function () {\n    this._itemsRunTimeInfo.clear();\n\n    this._cachedLayoutManagers = [];\n  },\n  _alignLabels: function (layoutManager, inOneColumn) {\n    this._alignLabelsInColumn({\n      $container: this.$element(),\n      layoutManager: layoutManager,\n      excludeTabbed: true,\n      items: this.option(\"items\"),\n      inOneColumn: inOneColumn\n    });\n\n    triggerResizeEvent(this.$element().find(\".\".concat(TOOLBAR_CLASS)));\n  },\n  _clean: function () {\n    this._clearValidationSummary();\n\n    this.callBase();\n    this._groupsColCount = [];\n    this._cachedColCountOptions = [];\n    this._lastMarkupScreenFactor = void 0;\n    resizeObserverSingleton.unobserve(this.$element().get(0));\n  },\n  _renderScrollable: function () {\n    var useNativeScrolling = this.option(\"useNativeScrolling\");\n    this._scrollable = new Scrollable(this.$element(), {\n      useNative: !!useNativeScrolling,\n      useSimulatedScrollbar: !useNativeScrolling,\n      useKeyboard: false,\n      direction: \"both\",\n      bounceEnabled: false\n    });\n  },\n  _getContent: function () {\n    return this.option(\"scrollingEnabled\") ? $(this._scrollable.content()) : this.$element();\n  },\n  _clearValidationSummary: function () {\n    var _this$_$validationSum;\n\n    null === (_this$_$validationSum = this._$validationSummary) || void 0 === _this$_$validationSum ? void 0 : _this$_$validationSum.remove();\n    this._$validationSummary = void 0;\n    this._validationSummary = void 0;\n  },\n  _renderValidationSummary: function () {\n    this._clearValidationSummary();\n\n    if (this.option(\"showValidationSummary\")) {\n      this._$validationSummary = $(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).appendTo(this._getContent());\n      this._validationSummary = this._$validationSummary.dxValidationSummary({\n        validationGroup: this._getValidationGroup()\n      }).dxValidationSummary(\"instance\");\n    }\n  },\n\n  _prepareItems(items, parentIsTabbedItem, currentPath, isTabs) {\n    if (items) {\n      var result = [];\n\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n        var path = concatPaths(currentPath, createItemPathByIndex(i, isTabs));\n        var itemRunTimeInfo = {\n          item: item,\n          itemIndex: i,\n          path: path\n        };\n\n        var guid = this._itemsRunTimeInfo.add(itemRunTimeInfo);\n\n        if (isString(item)) {\n          item = {\n            dataField: item\n          };\n        }\n\n        if (isObject(item)) {\n          var preparedItem = _extends({}, item);\n\n          itemRunTimeInfo.preparedItem = preparedItem;\n          preparedItem.guid = guid;\n\n          this._tryPrepareGroupItem(preparedItem);\n\n          this._tryPrepareTabbedItem(preparedItem, path);\n\n          this._tryPrepareItemTemplate(preparedItem);\n\n          if (parentIsTabbedItem) {\n            preparedItem.cssItemClass = FIELD_ITEM_TAB_CLASS;\n          }\n\n          if (preparedItem.items) {\n            preparedItem.items = this._prepareItems(preparedItem.items, parentIsTabbedItem, path);\n          }\n\n          result.push(preparedItem);\n        } else {\n          result.push(item);\n        }\n      }\n\n      return result;\n    }\n  },\n\n  _tryPrepareGroupItem: function (item) {\n    if (\"group\" === item.itemType) {\n      item.alignItemLabels = ensureDefined(item.alignItemLabels, true);\n\n      item._prepareGroupItemTemplate = itemTemplate => {\n        if (item.template) {\n          item.groupContentTemplate = this._getTemplate(itemTemplate);\n        }\n\n        item.template = this._itemGroupTemplate.bind(this, item);\n      };\n\n      item._prepareGroupItemTemplate(item.template);\n    }\n  },\n  _tryPrepareTabbedItem: function (item, path) {\n    if (\"tabbed\" === item.itemType) {\n      item.template = this._itemTabbedTemplate.bind(this, item);\n      item.tabs = this._prepareItems(item.tabs, true, path, true);\n    }\n  },\n  _tryPrepareItemTemplate: function (item) {\n    if (item.template) {\n      item.template = this._getTemplate(item.template);\n    }\n  },\n  _checkGrouping: function (items) {\n    if (items) {\n      for (var i = 0; i < items.length; i++) {\n        var item = items[i];\n\n        if (\"group\" === item.itemType) {\n          return true;\n        }\n      }\n    }\n  },\n  _renderLayout: function () {\n    var that = this;\n    var items = that.option(\"items\");\n\n    var $content = that._getContent();\n\n    items = that._prepareItems(items);\n    that._rootLayoutManager = that._renderLayoutManager($content, this._createLayoutManagerOptions(items, {\n      isRoot: true,\n      colCount: that.option(\"colCount\"),\n      alignItemLabels: that.option(\"alignItemLabels\"),\n      screenByWidth: this.option(\"screenByWidth\"),\n      colCountByScreen: this.option(\"colCountByScreen\"),\n      onLayoutChanged: function (inOneColumn) {\n        that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn);\n      },\n      onContentReady: function (e) {\n        that._alignLabels(e.component, e.component.isSingleColumnMode());\n      }\n    }));\n  },\n  _tryGetItemsForTemplate: function (item) {\n    return item.items || [];\n  },\n  _itemTabbedTemplate: function (item, e, $container) {\n    var $tabPanel = $(\"<div>\").appendTo($container);\n    var tabPanelOptions = extend({}, item.tabPanelOptions, {\n      dataSource: item.tabs,\n      onItemRendered: args => {\n        var _item$tabPanelOptions, _item$tabPanelOptions2;\n\n        null === (_item$tabPanelOptions = item.tabPanelOptions) || void 0 === _item$tabPanelOptions ? void 0 : null === (_item$tabPanelOptions2 = _item$tabPanelOptions.onItemRendered) || void 0 === _item$tabPanelOptions2 ? void 0 : _item$tabPanelOptions2.call(_item$tabPanelOptions, args);\n        triggerShownEvent(args.itemElement);\n      },\n      itemTemplate: (itemData, e, container) => {\n        var $container = $(container);\n        var alignItemLabels = ensureDefined(itemData.alignItemLabels, true);\n\n        var layoutManager = this._renderLayoutManager($container, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(itemData), {\n          colCount: itemData.colCount,\n          alignItemLabels: alignItemLabels,\n          screenByWidth: this.option(\"screenByWidth\"),\n          colCountByScreen: itemData.colCountByScreen,\n          cssItemClass: itemData.cssItemClass,\n          onLayoutChanged: inOneColumn => {\n            this._alignLabelsInColumn({\n              $container: $container,\n              layoutManager: layoutManager,\n              items: itemData.items,\n              inOneColumn: inOneColumn\n            });\n          }\n        }));\n\n        if (this._itemsRunTimeInfo) {\n          this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {\n            layoutManager: layoutManager\n          });\n        }\n\n        if (alignItemLabels) {\n          this._alignLabelsInColumn({\n            $container: $container,\n            layoutManager: layoutManager,\n            items: itemData.items,\n            inOneColumn: layoutManager.isSingleColumnMode()\n          });\n        }\n      }\n    });\n\n    var tryUpdateTabPanelInstance = (items, instance) => {\n      if (Array.isArray(items)) {\n        items.forEach(item => this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\n          widgetInstance: instance\n        }));\n      }\n    };\n\n    var tabPanel = this._createComponent($tabPanel, TabPanel, tabPanelOptions);\n\n    $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_TABS_CLASS);\n    tabPanel.on(\"optionChanged\", e => {\n      if (\"dataSource\" === e.fullName) {\n        tryUpdateTabPanelInstance(e.value, e.component);\n      }\n    });\n    tryUpdateTabPanelInstance([{\n      guid: item.guid\n    }, ...item.tabs], tabPanel);\n  },\n  _itemGroupTemplate: function (item, e, $container) {\n    var $group = $(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, isDefined(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\n    $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_GROUP_CLASS);\n    var colCount;\n    var layoutManager;\n\n    if (item.caption) {\n      $(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group);\n    }\n\n    var $groupContent = $(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\n\n    if (item.groupContentTemplate) {\n      item._renderGroupContentTemplate = () => {\n        $groupContent.empty();\n        var data = {\n          formData: this.option(\"formData\"),\n          component: this\n        };\n        item.groupContentTemplate.render({\n          model: data,\n          container: getPublicElement($groupContent)\n        });\n      };\n\n      item._renderGroupContentTemplate();\n    } else {\n      layoutManager = this._renderLayoutManager($groupContent, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(item), {\n        colCount: item.colCount,\n        colCountByScreen: item.colCountByScreen,\n        alignItemLabels: item.alignItemLabels,\n        cssItemClass: item.cssItemClass\n      }));\n      this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\n        layoutManager: layoutManager\n      });\n      colCount = layoutManager._getColCount();\n\n      if (!this._groupsColCount.includes(colCount)) {\n        this._groupsColCount.push(colCount);\n      }\n\n      $group.addClass(GROUP_COL_COUNT_CLASS + colCount);\n      $group.attr(GROUP_COL_COUNT_ATTR, colCount);\n    }\n  },\n  _createLayoutManagerOptions: function (items, extendedLayoutManagerOptions) {\n    return convertToLayoutManagerOptions({\n      form: this,\n      formOptions: this.option(),\n      $formElement: this.$element(),\n      items: items,\n      validationGroup: this._getValidationGroup(),\n      extendedLayoutManagerOptions: extendedLayoutManagerOptions,\n      onFieldDataChanged: args => {\n        if (!this._isDataUpdating) {\n          this._triggerOnFieldDataChanged(args);\n        }\n      },\n      onContentReady: args => {\n        this._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);\n\n        extendedLayoutManagerOptions.onContentReady && extendedLayoutManagerOptions.onContentReady(args);\n      },\n      onDisposing: _ref2 => {\n        var {\n          component: component\n        } = _ref2;\n        var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();\n\n        this._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo);\n      },\n      onFieldItemRendered: () => {\n        var _this$_validationSumm;\n\n        null === (_this$_validationSumm = this._validationSummary) || void 0 === _this$_validationSumm ? void 0 : _this$_validationSumm.refreshValidationGroup();\n      }\n    });\n  },\n  _renderLayoutManager: function ($parent, layoutManagerOptions) {\n    var baseColCountByScreen = {\n      lg: layoutManagerOptions.colCount,\n      md: layoutManagerOptions.colCount,\n      sm: layoutManagerOptions.colCount,\n      xs: 1\n    };\n\n    this._cachedColCountOptions.push({\n      colCountByScreen: extend(baseColCountByScreen, layoutManagerOptions.colCountByScreen)\n    });\n\n    var $element = $(\"<div>\");\n    $element.appendTo($parent);\n\n    var instance = this._createComponent($element, \"dxLayoutManager\", layoutManagerOptions);\n\n    instance.on(\"autoColCountChanged\", () => {\n      this._clearAutoColCountChangedTimeout();\n\n      this.autoColCountChangedTimeoutId = setTimeout(() => !this._disposed && this._refresh(), 0);\n    });\n\n    this._cachedLayoutManagers.push(instance);\n\n    return instance;\n  },\n  _getValidationGroup: function () {\n    return this.option(\"validationGroup\") || this;\n  },\n  _createComponent: function ($element, type, config) {\n    config = config || {};\n\n    this._extendConfig(config, {\n      readOnly: this.option(\"readOnly\")\n    });\n\n    return this.callBase($element, type, config);\n  },\n  _attachSyncSubscriptions: function () {\n    var that = this;\n    that.on(\"optionChanged\", function (args) {\n      var optionFullName = args.fullName;\n\n      if (\"formData\" === optionFullName) {\n        if (!isDefined(args.value)) {\n          that._options.silent(\"formData\", args.value = {});\n        }\n\n        that._triggerOnFieldDataChangedByDataSet(args.value);\n      }\n\n      if (that._cachedLayoutManagers.length) {\n        each(that._cachedLayoutManagers, function (index, layoutManager) {\n          if (\"formData\" === optionFullName) {\n            that._isDataUpdating = true;\n            layoutManager.option(\"layoutData\", args.value);\n            that._isDataUpdating = false;\n          }\n\n          if (\"readOnly\" === args.name || \"disabled\" === args.name) {\n            layoutManager.option(optionFullName, args.value);\n          }\n        });\n      }\n    });\n  },\n  _optionChanged: function (args) {\n    var splitFullName = args.fullName.split(\".\");\n\n    if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"items\") && this._itemsOptionChangedHandler(args)) {\n      return;\n    }\n\n    if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"formData\") && this._formDataOptionChangedHandler(args)) {\n      return;\n    }\n\n    this._defaultOptionChangedHandler(args);\n  },\n  _defaultOptionChangedHandler: function (args) {\n    switch (args.name) {\n      case \"formData\":\n        if (!this.option(\"items\")) {\n          this._invalidate();\n        } else if (isEmptyObject(args.value)) {\n          this._resetValues();\n        }\n\n        break;\n\n      case \"onFieldDataChanged\":\n        break;\n\n      case \"items\":\n      case \"colCount\":\n      case \"onEditorEnterKey\":\n      case \"labelLocation\":\n      case \"labelMode\":\n      case \"alignItemLabels\":\n      case \"showColonAfterLabel\":\n      case \"customizeItem\":\n      case \"alignItemLabelsInAllGroups\":\n      case \"showRequiredMark\":\n      case \"showOptionalMark\":\n      case \"requiredMark\":\n      case \"optionalMark\":\n      case \"requiredMessage\":\n      case \"scrollingEnabled\":\n      case \"formID\":\n      case \"colCountByScreen\":\n      case \"screenByWidth\":\n      case \"stylingMode\":\n        this._invalidate();\n\n        break;\n\n      case \"showValidationSummary\":\n        this._renderValidationSummary();\n\n        break;\n\n      case \"minColWidth\":\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._invalidate();\n        }\n\n        break;\n\n      case \"alignRootItemLabels\":\n      case \"readOnly\":\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        this._rootLayoutManager.option(args.name, args.value);\n\n        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\n\n        break;\n\n      case \"validationGroup\":\n        ValidationEngine.removeGroup(args.previousValue || this);\n\n        this._invalidate();\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _itemsOptionChangedHandler: function (args) {\n    var nameParts = args.fullName.split(\".\");\n    var value = args.value;\n\n    var itemPath = this._getItemPath(nameParts);\n\n    var item = this.option(itemPath);\n    var optionNameWithoutPath = args.fullName.replace(itemPath + \".\", \"\");\n    var simpleOptionName = optionNameWithoutPath.split(\".\")[0].replace(/\\[\\d+]/, \"\");\n\n    var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);\n\n    var result = this._tryExecuteItemOptionAction(itemAction) || this._tryChangeLayoutManagerItemOption(args.fullName, value);\n\n    if (!result && item) {\n      this._changeItemOption(item, optionNameWithoutPath, value);\n\n      var items = this._generateItemsFromData(this.option(\"items\"));\n\n      this.option(\"items\", items);\n      result = true;\n    }\n\n    return result;\n  },\n  _formDataOptionChangedHandler: function (args) {\n    var nameParts = args.fullName.split(\".\");\n    var value = args.value;\n    var dataField = nameParts.slice(1).join(\".\");\n    var editor = this.getEditor(dataField);\n\n    if (editor) {\n      editor.option(\"value\", value);\n    } else {\n      this._triggerOnFieldDataChanged({\n        dataField: dataField,\n        value: value\n      });\n    }\n\n    return true;\n  },\n  _tryCreateItemOptionAction: function (optionName, item, value, previousValue, itemPath) {\n    if (\"tabs\" === optionName) {\n      this._itemsRunTimeInfo.removeItemsByPathStartWith(\"\".concat(itemPath, \".tabs\"));\n\n      value = this._prepareItems(value, true, itemPath, true);\n    }\n\n    return tryCreateItemOptionAction(optionName, {\n      item: item,\n      value: value,\n      previousValue: previousValue,\n      itemsRunTimeInfo: this._itemsRunTimeInfo\n    });\n  },\n  _tryExecuteItemOptionAction: function (action) {\n    return action && action.tryExecute();\n  },\n  _updateValidationGroupAndSummaryIfNeeded: function (fullName) {\n    var optionName = getOptionNameFromFullName(fullName);\n\n    if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {\n      ValidationEngine.addGroup(this._getValidationGroup());\n\n      if (this.option(\"showValidationSummary\")) {\n        var _this$_validationSumm2;\n\n        null === (_this$_validationSumm2 = this._validationSummary) || void 0 === _this$_validationSumm2 ? void 0 : _this$_validationSumm2.refreshValidationGroup();\n      }\n    }\n  },\n\n  _setLayoutManagerItemOption(layoutManager, optionName, value, path) {\n    if (this._updateLockCount > 0) {\n      !layoutManager._updateLockCount && layoutManager.beginUpdate();\n\n      var key = this._itemsRunTimeInfo.findKeyByPath(path);\n\n      this.postponedOperations.add(key, () => {\n        !layoutManager._disposed && layoutManager.endUpdate();\n        return new Deferred().resolve();\n      });\n    }\n\n    var contentReadyHandler = e => {\n      e.component.off(\"contentReady\", contentReadyHandler);\n\n      if (isFullPathContainsTabs(path)) {\n        var tabPath = tryGetTabPath(path);\n\n        var tabLayoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(tabPath);\n\n        if (tabLayoutManager) {\n          this._alignLabelsInColumn({\n            items: tabLayoutManager.option(\"items\"),\n            layoutManager: tabLayoutManager,\n            $container: tabLayoutManager.$element(),\n            inOneColumn: tabLayoutManager.isSingleColumnMode()\n          });\n        }\n      } else {\n        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\n      }\n    };\n\n    layoutManager.on(\"contentReady\", contentReadyHandler);\n    layoutManager.option(optionName, value);\n\n    this._updateValidationGroupAndSummaryIfNeeded(optionName);\n  },\n\n  _tryChangeLayoutManagerItemOption(fullName, value) {\n    var nameParts = fullName.split(\".\");\n    var optionName = getOptionNameFromFullName(fullName);\n\n    if (\"items\" === optionName && nameParts.length > 1) {\n      var itemPath = this._getItemPath(nameParts);\n\n      var layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(itemPath);\n\n      if (layoutManager) {\n        this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());\n\n        var items = this._prepareItems(value, false, itemPath);\n\n        this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);\n\n        return true;\n      }\n    } else if (nameParts.length > 2) {\n      var endPartIndex = nameParts.length - 2;\n\n      var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));\n\n      var _layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(_itemPath);\n\n      if (_layoutManager) {\n        var fullOptionName = getFullOptionName(nameParts[endPartIndex], optionName);\n\n        if (\"editorType\" === optionName) {\n          if (_layoutManager.option(fullOptionName) !== value) {\n            return false;\n          }\n        }\n\n        if (\"visible\" === optionName) {\n          var formItems = this.option(getFullOptionName(_itemPath, \"items\"));\n\n          if (formItems && formItems.length) {\n            var layoutManagerItems = _layoutManager.option(\"items\");\n\n            formItems.forEach((item, index) => {\n              var layoutItem = layoutManagerItems[index];\n              layoutItem.visibleIndex = item.visibleIndex;\n            });\n          }\n        }\n\n        this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  _tryChangeLayoutManagerItemOptions(itemPath, options) {\n    var result;\n    this.beginUpdate();\n    each(options, (optionName, optionValue) => {\n      result = this._tryChangeLayoutManagerItemOption(getFullOptionName(itemPath, optionName), optionValue);\n\n      if (!result) {\n        return false;\n      }\n    });\n    this.endUpdate();\n    return result;\n  },\n\n  _getItemPath: function (nameParts) {\n    var itemPath = nameParts[0];\n    var i;\n\n    for (i = 1; i < nameParts.length; i++) {\n      if (-1 !== nameParts[i].search(/items\\[\\d+]|tabs\\[\\d+]/)) {\n        itemPath += \".\" + nameParts[i];\n      } else {\n        break;\n      }\n    }\n\n    return itemPath;\n  },\n  _triggerOnFieldDataChanged: function (args) {\n    this._createActionByOption(\"onFieldDataChanged\")(args);\n  },\n  _triggerOnFieldDataChangedByDataSet: function (data) {\n    var that = this;\n\n    if (data && isObject(data)) {\n      each(data, function (dataField, value) {\n        that._triggerOnFieldDataChanged({\n          dataField: dataField,\n          value: value\n        });\n      });\n    }\n  },\n  _updateFieldValue: function (dataField, value) {\n    if (isDefined(this.option(\"formData\"))) {\n      var editor = this.getEditor(dataField);\n      this.option(\"formData.\" + dataField, value);\n\n      if (editor) {\n        var editorValue = editor.option(\"value\");\n\n        if (editorValue !== value) {\n          editor.option(\"value\", value);\n        }\n      }\n    }\n  },\n  _generateItemsFromData: function (items) {\n    var formData = this.option(\"formData\");\n    var result = [];\n\n    if (!items && isDefined(formData)) {\n      each(formData, function (dataField) {\n        result.push({\n          dataField: dataField\n        });\n      });\n    }\n\n    if (items) {\n      each(items, function (index, item) {\n        if (isObject(item)) {\n          result.push(item);\n        } else {\n          result.push({\n            dataField: item\n          });\n        }\n      });\n    }\n\n    return result;\n  },\n  _getItemByField: function (field, items) {\n    var that = this;\n    var fieldParts = isObject(field) ? field : that._getFieldParts(field);\n    var fieldName = fieldParts.fieldName;\n    var fieldPath = fieldParts.fieldPath;\n    var resultItem;\n\n    if (items.length) {\n      each(items, function (index, item) {\n        var itemType = item.itemType;\n\n        if (fieldPath.length) {\n          var path = fieldPath.slice();\n          item = that._getItemByFieldPath(path, fieldName, item);\n        } else if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType && !item.name) {\n          var subItemsField = that._getSubItemField(itemType);\n\n          item.items = that._generateItemsFromData(item.items);\n          item = that._getItemByField({\n            fieldName: fieldName,\n            fieldPath: fieldPath\n          }, item[subItemsField]);\n        }\n\n        if (isEqualToDataFieldOrNameOrTitleOrCaption(item, fieldName)) {\n          resultItem = item;\n          return false;\n        }\n      });\n    }\n\n    return resultItem;\n  },\n  _getFieldParts: function (field) {\n    var fieldName = field;\n    var separatorIndex = fieldName.indexOf(\".\");\n    var resultPath = [];\n\n    while (-1 !== separatorIndex) {\n      resultPath.push(fieldName.substr(0, separatorIndex));\n      fieldName = fieldName.substr(separatorIndex + 1);\n      separatorIndex = fieldName.indexOf(\".\");\n    }\n\n    return {\n      fieldName: fieldName,\n      fieldPath: resultPath.reverse()\n    };\n  },\n  _getItemByFieldPath: function (path, fieldName, item) {\n    var itemType = item.itemType;\n\n    var subItemsField = this._getSubItemField(itemType);\n\n    var isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\n    var result;\n\n    do {\n      if (isItemWithSubItems) {\n        var name = item.name || item.caption || item.title;\n        var isGroupWithName = isDefined(name);\n        var nameWithoutSpaces = getTextWithoutSpaces(name);\n        var pathNode = void 0;\n        item[subItemsField] = this._generateItemsFromData(item[subItemsField]);\n\n        if (isGroupWithName) {\n          pathNode = path.pop();\n        }\n\n        if (!path.length) {\n          result = this._getItemByField(fieldName, item[subItemsField]);\n\n          if (result) {\n            break;\n          }\n        }\n\n        if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\n          if (path.length) {\n            result = this._searchItemInEverySubItem(path, fieldName, item[subItemsField]);\n          }\n        }\n      } else {\n        break;\n      }\n    } while (path.length && !isDefined(result));\n\n    return result;\n  },\n  _getSubItemField: function (itemType) {\n    return \"tabbed\" === itemType ? \"tabs\" : \"items\";\n  },\n  _searchItemInEverySubItem: function (path, fieldName, items) {\n    var that = this;\n    var result;\n    each(items, function (index, groupItem) {\n      result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\n\n      if (result) {\n        return false;\n      }\n    });\n\n    if (!result) {\n      result = false;\n    }\n\n    return result;\n  },\n  _changeItemOption: function (item, option, value) {\n    if (isObject(item)) {\n      item[option] = value;\n    }\n  },\n  _dimensionChanged: function () {\n    var currentScreenFactor = this._getCurrentScreenFactor();\n\n    if (this._lastMarkupScreenFactor !== currentScreenFactor) {\n      if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {\n        this._targetScreenFactor = currentScreenFactor;\n\n        this._refresh();\n\n        this._targetScreenFactor = void 0;\n      }\n\n      this._lastMarkupScreenFactor = currentScreenFactor;\n    }\n  },\n  _isColCountChanged: function (oldScreenSize, newScreenSize) {\n    var isChanged = false;\n    each(this._cachedColCountOptions, function (index, item) {\n      if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\n        isChanged = true;\n        return false;\n      }\n    });\n    return isChanged;\n  },\n  _refresh: function () {\n    var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\n    eventsEngine.trigger(this.$element().find(editorSelector), \"change\");\n    this.callBase();\n  },\n  _resetValues: function () {\n    this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {\n      if (isDefined(itemRunTimeInfo.widgetInstance) && Editor.isEditor(itemRunTimeInfo.widgetInstance)) {\n        itemRunTimeInfo.widgetInstance.reset();\n        itemRunTimeInfo.widgetInstance.option(\"isValid\", true);\n      }\n    });\n\n    ValidationEngine.resetGroup(this._getValidationGroup());\n  },\n  _updateData: function (data, value, isComplexData) {\n    var that = this;\n\n    var _data = isComplexData ? value : data;\n\n    if (isObject(_data)) {\n      each(_data, function (dataField, fieldValue) {\n        that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, isObject(fieldValue));\n      });\n    } else if (isString(data)) {\n      that._updateFieldValue(data, value);\n    }\n  },\n  registerKeyHandler: function (key, handler) {\n    this.callBase(key, handler);\n\n    this._itemsRunTimeInfo.each(function (_, itemRunTimeInfo) {\n      if (isDefined(itemRunTimeInfo.widgetInstance)) {\n        itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler);\n      }\n    });\n  },\n  _focusTarget: function () {\n    return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first();\n  },\n  _visibilityChanged: function () {\n    this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\n  },\n  _clearAutoColCountChangedTimeout: function () {\n    if (this.autoColCountChangedTimeoutId) {\n      clearTimeout(this.autoColCountChangedTimeoutId);\n      this.autoColCountChangedTimeoutId = void 0;\n    }\n  },\n  _dispose: function () {\n    this._clearAutoColCountChangedTimeout();\n\n    ValidationEngine.removeGroup(this._getValidationGroup());\n    this.callBase();\n  },\n  resetValues: function () {\n    this._resetValues();\n  },\n  updateData: function (data, value) {\n    this._updateData(data, value);\n  },\n  getEditor: function (dataField) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField);\n  },\n  getButton: function (name) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByName(name);\n  },\n  updateDimensions: function () {\n    var that = this;\n    var deferred = new Deferred();\n\n    if (that._scrollable) {\n      that._scrollable.update().done(function () {\n        deferred.resolveWith(that);\n      });\n    } else {\n      deferred.resolveWith(that);\n    }\n\n    return deferred.promise();\n  },\n  itemOption: function (id, option, value) {\n    var items = this._generateItemsFromData(this.option(\"items\"));\n\n    var item = this._getItemByField(id, items);\n\n    var path = getItemPath(items, item);\n\n    if (!item) {\n      return;\n    }\n\n    switch (arguments.length) {\n      case 1:\n        return item;\n\n      case 3:\n        var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);\n\n        this._changeItemOption(item, option, value);\n\n        var fullName = getFullOptionName(path, option);\n\n        if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {\n          this.option(\"items\", items);\n        }\n\n        break;\n\n      default:\n        if (isObject(option)) {\n          if (!this._tryChangeLayoutManagerItemOptions(path, option)) {\n            var allowUpdateItems;\n            each(option, (optionName, optionValue) => {\n              var itemAction = this._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);\n\n              this._changeItemOption(item, optionName, optionValue);\n\n              if (!allowUpdateItems && !this._tryExecuteItemOptionAction(itemAction)) {\n                allowUpdateItems = true;\n              }\n            });\n            allowUpdateItems && this.option(\"items\", items);\n          }\n        }\n\n    }\n  },\n  validate: function () {\n    return ValidationEngine.validateGroup(this._getValidationGroup());\n  },\n  getItemID: function (name) {\n    return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new Guid());\n  },\n  getTargetScreenFactor: function () {\n    return this._targetScreenFactor;\n  }\n});\nregisterComponent(\"dxForm\", Form);\nexport default Form;","map":{"version":3,"names":["_extends","$","eventsEngine","registerComponent","Guid","ensureDefined","config","isDefined","isEmptyObject","isObject","isString","each","extend","triggerResizeEvent","triggerShownEvent","getPublicElement","messageLocalization","Widget","Editor","defaultScreenFactorFunc","getCurrentScreenFactor","hasWindow","ValidationEngine","default","FormItemsRunTimeInfo","TabPanel","Scrollable","Deferred","isMaterial","tryCreateItemOptionAction","resizeObserverSingleton","concatPaths","createItemPathByIndex","getFullOptionName","getOptionNameFromFullName","tryGetTabPath","getTextWithoutSpaces","isEqualToDataFieldOrNameOrTitleOrCaption","isFullPathContainsTabs","getItemPath","convertToLayoutManagerOptions","convertToLabelMarkOptions","setLabelWidthByMaxLabelWidth","FORM_CLASS","FIELD_ITEM_CLASS","FORM_GROUP_CLASS","FORM_GROUP_CONTENT_CLASS","FIELD_ITEM_CONTENT_HAS_GROUP_CLASS","FIELD_ITEM_CONTENT_HAS_TABS_CLASS","FORM_GROUP_WITH_CAPTION_CLASS","FORM_GROUP_CAPTION_CLASS","FIELD_ITEM_TAB_CLASS","FORM_FIELD_ITEM_COL_CLASS","GROUP_COL_COUNT_CLASS","GROUP_COL_COUNT_ATTR","FIELD_ITEM_CONTENT_CLASS","FORM_VALIDATION_SUMMARY","ROOT_SIMPLE_ITEM_CLASS","FORM_UNDERLINED_CLASS","TOOLBAR_CLASS","FOCUSED_STATE_CLASS","ITEM_OPTIONS_FOR_VALIDATION_UPDATING","Form","inherit","_init","callBase","_cachedColCountOptions","_itemsRunTimeInfo","_groupsColCount","_attachSyncSubscriptions","_getDefaultOptions","formID","formData","colCount","screenByWidth","colCountByScreen","labelLocation","readOnly","onFieldDataChanged","customizeItem","onEditorEnterKey","minColWidth","alignItemLabels","alignItemLabelsInAllGroups","alignRootItemLabels","showColonAfterLabel","showRequiredMark","showOptionalMark","requiredMark","optionalMark","format","requiredMessage","getFormatter","showValidationSummary","items","scrollingEnabled","validationGroup","stylingMode","editorStylingMode","labelMode","_defaultOptionsRules","concat","device","options","_setOptionsByReference","_optionsByReference","_getGroupColCount","$element","parseInt","attr","_applyLabelsWidthByCol","$container","index","arguments","length","labelMarkOptions","fieldItemClass","inOneColumn","cssExcludeTabbedSelector","excludeTabbed","_applyLabelsWidth","applyLabelsOptions","i","_getGroupElementsInColumn","columnIndex","cssColCountSelector","groupSelector","find","_applyLabelsWidthWithGroups","option","$rootSimpleItems","colIndex","_applyLabelsWidthWithNestedGroups","$groups","eq","groupsColIndex","groupColIndex","$groupsByCol","groupColCount","_labelLocation","_alignLabelsInColumn","_ref","layoutManager","_getMarkOptions","_checkGrouping","_getColCount","_prepareFormData","_setStylingModeClass","addClass","_initMarkup","addGroup","_getValidationGroup","_clearCachedInstances","setAria","_renderScrollable","_renderLayout","_renderValidationSummary","_lastMarkupScreenFactor","_targetScreenFactor","_getCurrentScreenFactor","_attachResizeObserverSubscription","formRootElement","get","unobserve","observe","_resizeHandler","_cachedLayoutManagers","_","_layoutManager$option","isSingleColumnMode","clear","_alignLabels","_clean","_clearValidationSummary","useNativeScrolling","_scrollable","useNative","useSimulatedScrollbar","useKeyboard","direction","bounceEnabled","_getContent","content","_this$_$validationSum","_$validationSummary","remove","_validationSummary","appendTo","dxValidationSummary","_prepareItems","parentIsTabbedItem","currentPath","isTabs","result","item","path","itemRunTimeInfo","itemIndex","guid","add","dataField","preparedItem","_tryPrepareGroupItem","_tryPrepareTabbedItem","_tryPrepareItemTemplate","cssItemClass","push","itemType","_prepareGroupItemTemplate","itemTemplate","template","groupContentTemplate","_getTemplate","_itemGroupTemplate","bind","_itemTabbedTemplate","tabs","that","$content","_rootLayoutManager","_renderLayoutManager","_createLayoutManagerOptions","isRoot","onLayoutChanged","onContentReady","e","component","_tryGetItemsForTemplate","$tabPanel","tabPanelOptions","dataSource","onItemRendered","args","_item$tabPanelOptions","_item$tabPanelOptions2","call","itemElement","itemData","container","extendRunTimeItemInfoByKey","tryUpdateTabPanelInstance","instance","Array","isArray","forEach","widgetInstance","tabPanel","_createComponent","parent","on","fullName","value","$group","toggleClass","caption","text","$groupContent","_renderGroupContentTemplate","empty","data","render","model","includes","extendedLayoutManagerOptions","form","formOptions","$formElement","_isDataUpdating","_triggerOnFieldDataChanged","addItemsOrExtendFrom","onDisposing","_ref2","nestedItemsRunTimeInfo","getItemsRunTimeInfo","removeItemsByItems","onFieldItemRendered","_this$_validationSumm","refreshValidationGroup","$parent","layoutManagerOptions","baseColCountByScreen","lg","md","sm","xs","_clearAutoColCountChangedTimeout","autoColCountChangedTimeoutId","setTimeout","_disposed","_refresh","type","_extendConfig","optionFullName","_options","silent","_triggerOnFieldDataChangedByDataSet","name","_optionChanged","splitFullName","split","search","_itemsOptionChangedHandler","_formDataOptionChangedHandler","_defaultOptionChangedHandler","_invalidate","_resetValues","removeGroup","previousValue","nameParts","itemPath","_getItemPath","optionNameWithoutPath","replace","simpleOptionName","itemAction","_tryCreateItemOptionAction","_tryExecuteItemOptionAction","_tryChangeLayoutManagerItemOption","_changeItemOption","_generateItemsFromData","slice","join","editor","getEditor","optionName","removeItemsByPathStartWith","itemsRunTimeInfo","action","tryExecute","_updateValidationGroupAndSummaryIfNeeded","indexOf","_this$_validationSumm2","_setLayoutManagerItemOption","_updateLockCount","beginUpdate","key","findKeyByPath","postponedOperations","endUpdate","resolve","contentReadyHandler","off","tabPath","tabLayoutManager","findGroupOrTabLayoutManagerByPath","endPartIndex","_itemPath","_layoutManager","fullOptionName","formItems","layoutManagerItems","layoutItem","visibleIndex","_tryChangeLayoutManagerItemOptions","optionValue","_createActionByOption","_updateFieldValue","editorValue","_getItemByField","field","fieldParts","_getFieldParts","fieldName","fieldPath","resultItem","_getItemByFieldPath","subItemsField","_getSubItemField","separatorIndex","resultPath","substr","reverse","isItemWithSubItems","title","isGroupWithName","nameWithoutSpaces","pathNode","pop","_searchItemInEverySubItem","groupItem","_dimensionChanged","currentScreenFactor","_isColCountChanged","oldScreenSize","newScreenSize","isChanged","editorSelector","trigger","isEditor","reset","resetGroup","_updateData","isComplexData","_data","fieldValue","registerKeyHandler","handler","_focusTarget","first","_visibilityChanged","clearTimeout","_dispose","resetValues","updateData","findWidgetInstanceByDataField","findWidgetInstanceByName","getButton","updateDimensions","deferred","update","done","resolveWith","promise","itemOption","id","allowUpdateItems","validate","validateGroup","getItemID","getTargetScreenFactor"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/form/ui.form.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport Guid from \"../../core/guid\";\r\nimport {\r\n    ensureDefined\r\n} from \"../../core/utils/common\";\r\nimport config from \"../../core/config\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isObject,\r\n    isString\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    triggerResizeEvent,\r\n    triggerShownEvent\r\n} from \"../../events/visibility_change\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport Editor from \"../editor/editor\";\r\nimport {\r\n    defaultScreenFactorFunc,\r\n    getCurrentScreenFactor,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport ValidationEngine from \"../validation_engine\";\r\nimport {\r\n    default as FormItemsRunTimeInfo\r\n} from \"./ui.form.items_runtime_info\";\r\nimport TabPanel from \"../tab_panel\";\r\nimport Scrollable from \"../scroll_view/ui.scrollable\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport tryCreateItemOptionAction from \"./ui.form.item_options_actions\";\r\nimport resizeObserverSingleton from \"../../core/resize_observer\";\r\nimport \"./ui.form.layout_manager\";\r\nimport {\r\n    concatPaths,\r\n    createItemPathByIndex,\r\n    getFullOptionName,\r\n    getOptionNameFromFullName,\r\n    tryGetTabPath,\r\n    getTextWithoutSpaces,\r\n    isEqualToDataFieldOrNameOrTitleOrCaption,\r\n    isFullPathContainsTabs,\r\n    getItemPath,\r\n    convertToLayoutManagerOptions\r\n} from \"./ui.form.utils\";\r\nimport {\r\n    convertToLabelMarkOptions\r\n} from \"./ui.form.layout_manager.utils\";\r\nimport {\r\n    setLabelWidthByMaxLabelWidth\r\n} from \"./components/label\";\r\nimport \"../validation_summary\";\r\nimport \"../validation_group\";\r\nimport {\r\n    FORM_CLASS,\r\n    FIELD_ITEM_CLASS,\r\n    FORM_GROUP_CLASS,\r\n    FORM_GROUP_CONTENT_CLASS,\r\n    FIELD_ITEM_CONTENT_HAS_GROUP_CLASS,\r\n    FIELD_ITEM_CONTENT_HAS_TABS_CLASS,\r\n    FORM_GROUP_WITH_CAPTION_CLASS,\r\n    FORM_GROUP_CAPTION_CLASS,\r\n    FIELD_ITEM_TAB_CLASS,\r\n    FORM_FIELD_ITEM_COL_CLASS,\r\n    GROUP_COL_COUNT_CLASS,\r\n    GROUP_COL_COUNT_ATTR,\r\n    FIELD_ITEM_CONTENT_CLASS,\r\n    FORM_VALIDATION_SUMMARY,\r\n    ROOT_SIMPLE_ITEM_CLASS,\r\n    FORM_UNDERLINED_CLASS\r\n} from \"./constants\";\r\nimport {\r\n    TOOLBAR_CLASS\r\n} from \"../toolbar/constants\";\r\nvar FOCUSED_STATE_CLASS = \"dx-state-focused\";\r\nvar ITEM_OPTIONS_FOR_VALIDATION_UPDATING = [\"items\", \"isRequired\", \"validationRules\", \"visible\"];\r\nvar Form = Widget.inherit({\r\n    _init: function() {\r\n        this.callBase();\r\n        this._cachedColCountOptions = [];\r\n        this._itemsRunTimeInfo = new FormItemsRunTimeInfo;\r\n        this._groupsColCount = [];\r\n        this._attachSyncSubscriptions()\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            formID: \"dx-\" + new Guid,\r\n            formData: {},\r\n            colCount: 1,\r\n            screenByWidth: defaultScreenFactorFunc,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            readOnly: false,\r\n            onFieldDataChanged: null,\r\n            customizeItem: null,\r\n            onEditorEnterKey: null,\r\n            minColWidth: 200,\r\n            alignItemLabels: true,\r\n            alignItemLabelsInAllGroups: true,\r\n            alignRootItemLabels: true,\r\n            showColonAfterLabel: true,\r\n            showRequiredMark: true,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\"),\r\n            showValidationSummary: false,\r\n            items: void 0,\r\n            scrollingEnabled: false,\r\n            validationGroup: void 0,\r\n            stylingMode: config().editorStylingMode,\r\n            labelMode: \"outside\"\r\n        })\r\n    },\r\n    _defaultOptionsRules: function() {\r\n        return this.callBase().concat([{\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                showColonAfterLabel: false,\r\n                labelLocation: \"top\"\r\n            }\r\n        }])\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            formData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _getGroupColCount: function($element) {\r\n        return parseInt($element.attr(GROUP_COL_COUNT_ATTR))\r\n    },\r\n    _applyLabelsWidthByCol: function($container, index) {\r\n        var options = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};\r\n        var labelMarkOptions = arguments.length > 3 ? arguments[3] : void 0;\r\n        var fieldItemClass = options.inOneColumn ? FIELD_ITEM_CLASS : FORM_FIELD_ITEM_COL_CLASS + index;\r\n        var cssExcludeTabbedSelector = options.excludeTabbed ? \":not(.\".concat(FIELD_ITEM_TAB_CLASS, \")\") : \"\";\r\n        setLabelWidthByMaxLabelWidth($container, \".\".concat(fieldItemClass).concat(cssExcludeTabbedSelector), labelMarkOptions);\r\n        return\r\n    },\r\n    _applyLabelsWidth: function($container, excludeTabbed, inOneColumn, colCount, labelMarkOptions) {\r\n        colCount = inOneColumn ? 1 : colCount || this._getGroupColCount($container);\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed,\r\n            inOneColumn: inOneColumn\r\n        };\r\n        var i;\r\n        for (i = 0; i < colCount; i++) {\r\n            this._applyLabelsWidthByCol($container, i, applyLabelsOptions, labelMarkOptions)\r\n        }\r\n    },\r\n    _getGroupElementsInColumn: function($container, columnIndex, colCount) {\r\n        var cssColCountSelector = isDefined(colCount) ? \".\" + GROUP_COL_COUNT_CLASS + colCount : \"\";\r\n        var groupSelector = \".\" + FORM_FIELD_ITEM_COL_CLASS + columnIndex + \" > .\" + FIELD_ITEM_CONTENT_CLASS + \" > .\" + FORM_GROUP_CLASS + cssColCountSelector;\r\n        return $container.find(groupSelector)\r\n    },\r\n    _applyLabelsWidthWithGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {\r\n        if (true === this.option(\"alignRootItemLabels\")) {\r\n            var $rootSimpleItems = $container.find(\".\".concat(ROOT_SIMPLE_ITEM_CLASS));\r\n            for (var colIndex = 0; colIndex < colCount; colIndex++) {\r\n                this._applyLabelsWidthByCol($rootSimpleItems, colIndex, excludeTabbed, labelMarkOptions)\r\n            }\r\n        }\r\n        var alignItemLabelsInAllGroups = this.option(\"alignItemLabelsInAllGroups\");\r\n        if (alignItemLabelsInAllGroups) {\r\n            this._applyLabelsWidthWithNestedGroups($container, colCount, excludeTabbed, labelMarkOptions)\r\n        } else {\r\n            var $groups = this.$element().find(\".\" + FORM_GROUP_CLASS);\r\n            var i;\r\n            for (i = 0; i < $groups.length; i++) {\r\n                this._applyLabelsWidth($groups.eq(i), excludeTabbed, void 0, void 0, labelMarkOptions)\r\n            }\r\n        }\r\n    },\r\n    _applyLabelsWidthWithNestedGroups: function($container, colCount, excludeTabbed, labelMarkOptions) {\r\n        var applyLabelsOptions = {\r\n            excludeTabbed: excludeTabbed\r\n        };\r\n        var colIndex;\r\n        var groupsColIndex;\r\n        var groupColIndex;\r\n        var $groupsByCol;\r\n        for (colIndex = 0; colIndex < colCount; colIndex++) {\r\n            $groupsByCol = this._getGroupElementsInColumn($container, colIndex);\r\n            this._applyLabelsWidthByCol($groupsByCol, 0, applyLabelsOptions, labelMarkOptions);\r\n            for (groupsColIndex = 0; groupsColIndex < this._groupsColCount.length; groupsColIndex++) {\r\n                $groupsByCol = this._getGroupElementsInColumn($container, colIndex, this._groupsColCount[groupsColIndex]);\r\n                var groupColCount = this._getGroupColCount($groupsByCol);\r\n                for (groupColIndex = 1; groupColIndex < groupColCount; groupColIndex++) {\r\n                    this._applyLabelsWidthByCol($groupsByCol, groupColIndex, applyLabelsOptions, labelMarkOptions)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _labelLocation: function() {\r\n        return this.option(\"labelLocation\")\r\n    },\r\n    _alignLabelsInColumn: function(_ref) {\r\n        var {\r\n            layoutManager: layoutManager,\r\n            inOneColumn: inOneColumn,\r\n            $container: $container,\r\n            excludeTabbed: excludeTabbed,\r\n            items: items\r\n        } = _ref;\r\n        if (!hasWindow() || \"top\" === this._labelLocation()) {\r\n            return\r\n        }\r\n        var labelMarkOptions = convertToLabelMarkOptions(layoutManager._getMarkOptions());\r\n        if (inOneColumn) {\r\n            this._applyLabelsWidth($container, excludeTabbed, true, void 0, labelMarkOptions)\r\n        } else if (this._checkGrouping(items)) {\r\n            this._applyLabelsWidthWithGroups($container, layoutManager._getColCount(), excludeTabbed, labelMarkOptions)\r\n        } else {\r\n            this._applyLabelsWidth($container, excludeTabbed, false, layoutManager._getColCount(), labelMarkOptions)\r\n        }\r\n    },\r\n    _prepareFormData: function() {\r\n        if (!isDefined(this.option(\"formData\"))) {\r\n            this.option(\"formData\", {})\r\n        }\r\n    },\r\n    _setStylingModeClass: function() {\r\n        if (\"underlined\" === this.option(\"stylingMode\")) {\r\n            this.$element().addClass(FORM_UNDERLINED_CLASS)\r\n        }\r\n    },\r\n    _initMarkup: function() {\r\n        ValidationEngine.addGroup(this._getValidationGroup());\r\n        this._clearCachedInstances();\r\n        this._prepareFormData();\r\n        this.$element().addClass(FORM_CLASS);\r\n        this._setStylingModeClass();\r\n        this.callBase();\r\n        this.setAria(\"role\", \"form\", this.$element());\r\n        if (this.option(\"scrollingEnabled\")) {\r\n            this._renderScrollable()\r\n        }\r\n        this._renderLayout();\r\n        this._renderValidationSummary();\r\n        this._lastMarkupScreenFactor = this._targetScreenFactor || this._getCurrentScreenFactor();\r\n        this._attachResizeObserverSubscription()\r\n    },\r\n    _attachResizeObserverSubscription: function() {\r\n        if (hasWindow()) {\r\n            var formRootElement = this.$element().get(0);\r\n            resizeObserverSingleton.unobserve(formRootElement);\r\n            resizeObserverSingleton.observe(formRootElement, () => {\r\n                this._resizeHandler()\r\n            })\r\n        }\r\n    },\r\n    _resizeHandler: function() {\r\n        if (this._cachedLayoutManagers.length) {\r\n            each(this._cachedLayoutManagers, (_, layoutManager) => {\r\n                var _layoutManager$option;\r\n                null === (_layoutManager$option = layoutManager.option(\"onLayoutChanged\")) || void 0 === _layoutManager$option ? void 0 : _layoutManager$option(layoutManager.isSingleColumnMode())\r\n            })\r\n        }\r\n    },\r\n    _getCurrentScreenFactor: function() {\r\n        return hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n    },\r\n    _clearCachedInstances: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this._cachedLayoutManagers = []\r\n    },\r\n    _alignLabels: function(layoutManager, inOneColumn) {\r\n        this._alignLabelsInColumn({\r\n            $container: this.$element(),\r\n            layoutManager: layoutManager,\r\n            excludeTabbed: true,\r\n            items: this.option(\"items\"),\r\n            inOneColumn: inOneColumn\r\n        });\r\n        triggerResizeEvent(this.$element().find(\".\".concat(TOOLBAR_CLASS)))\r\n    },\r\n    _clean: function() {\r\n        this._clearValidationSummary();\r\n        this.callBase();\r\n        this._groupsColCount = [];\r\n        this._cachedColCountOptions = [];\r\n        this._lastMarkupScreenFactor = void 0;\r\n        resizeObserverSingleton.unobserve(this.$element().get(0))\r\n    },\r\n    _renderScrollable: function() {\r\n        var useNativeScrolling = this.option(\"useNativeScrolling\");\r\n        this._scrollable = new Scrollable(this.$element(), {\r\n            useNative: !!useNativeScrolling,\r\n            useSimulatedScrollbar: !useNativeScrolling,\r\n            useKeyboard: false,\r\n            direction: \"both\",\r\n            bounceEnabled: false\r\n        })\r\n    },\r\n    _getContent: function() {\r\n        return this.option(\"scrollingEnabled\") ? $(this._scrollable.content()) : this.$element()\r\n    },\r\n    _clearValidationSummary: function() {\r\n        var _this$_$validationSum;\r\n        null === (_this$_$validationSum = this._$validationSummary) || void 0 === _this$_$validationSum ? void 0 : _this$_$validationSum.remove();\r\n        this._$validationSummary = void 0;\r\n        this._validationSummary = void 0\r\n    },\r\n    _renderValidationSummary: function() {\r\n        this._clearValidationSummary();\r\n        if (this.option(\"showValidationSummary\")) {\r\n            this._$validationSummary = $(\"<div>\").addClass(FORM_VALIDATION_SUMMARY).appendTo(this._getContent());\r\n            this._validationSummary = this._$validationSummary.dxValidationSummary({\r\n                validationGroup: this._getValidationGroup()\r\n            }).dxValidationSummary(\"instance\")\r\n        }\r\n    },\r\n    _prepareItems(items, parentIsTabbedItem, currentPath, isTabs) {\r\n        if (items) {\r\n            var result = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                var path = concatPaths(currentPath, createItemPathByIndex(i, isTabs));\r\n                var itemRunTimeInfo = {\r\n                    item: item,\r\n                    itemIndex: i,\r\n                    path: path\r\n                };\r\n                var guid = this._itemsRunTimeInfo.add(itemRunTimeInfo);\r\n                if (isString(item)) {\r\n                    item = {\r\n                        dataField: item\r\n                    }\r\n                }\r\n                if (isObject(item)) {\r\n                    var preparedItem = _extends({}, item);\r\n                    itemRunTimeInfo.preparedItem = preparedItem;\r\n                    preparedItem.guid = guid;\r\n                    this._tryPrepareGroupItem(preparedItem);\r\n                    this._tryPrepareTabbedItem(preparedItem, path);\r\n                    this._tryPrepareItemTemplate(preparedItem);\r\n                    if (parentIsTabbedItem) {\r\n                        preparedItem.cssItemClass = FIELD_ITEM_TAB_CLASS\r\n                    }\r\n                    if (preparedItem.items) {\r\n                        preparedItem.items = this._prepareItems(preparedItem.items, parentIsTabbedItem, path)\r\n                    }\r\n                    result.push(preparedItem)\r\n                } else {\r\n                    result.push(item)\r\n                }\r\n            }\r\n            return result\r\n        }\r\n    },\r\n    _tryPrepareGroupItem: function(item) {\r\n        if (\"group\" === item.itemType) {\r\n            item.alignItemLabels = ensureDefined(item.alignItemLabels, true);\r\n            item._prepareGroupItemTemplate = itemTemplate => {\r\n                if (item.template) {\r\n                    item.groupContentTemplate = this._getTemplate(itemTemplate)\r\n                }\r\n                item.template = this._itemGroupTemplate.bind(this, item)\r\n            };\r\n            item._prepareGroupItemTemplate(item.template)\r\n        }\r\n    },\r\n    _tryPrepareTabbedItem: function(item, path) {\r\n        if (\"tabbed\" === item.itemType) {\r\n            item.template = this._itemTabbedTemplate.bind(this, item);\r\n            item.tabs = this._prepareItems(item.tabs, true, path, true)\r\n        }\r\n    },\r\n    _tryPrepareItemTemplate: function(item) {\r\n        if (item.template) {\r\n            item.template = this._getTemplate(item.template)\r\n        }\r\n    },\r\n    _checkGrouping: function(items) {\r\n        if (items) {\r\n            for (var i = 0; i < items.length; i++) {\r\n                var item = items[i];\r\n                if (\"group\" === item.itemType) {\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _renderLayout: function() {\r\n        var that = this;\r\n        var items = that.option(\"items\");\r\n        var $content = that._getContent();\r\n        items = that._prepareItems(items);\r\n        that._rootLayoutManager = that._renderLayoutManager($content, this._createLayoutManagerOptions(items, {\r\n            isRoot: true,\r\n            colCount: that.option(\"colCount\"),\r\n            alignItemLabels: that.option(\"alignItemLabels\"),\r\n            screenByWidth: this.option(\"screenByWidth\"),\r\n            colCountByScreen: this.option(\"colCountByScreen\"),\r\n            onLayoutChanged: function(inOneColumn) {\r\n                that._alignLabels.bind(that)(that._rootLayoutManager, inOneColumn)\r\n            },\r\n            onContentReady: function(e) {\r\n                that._alignLabels(e.component, e.component.isSingleColumnMode())\r\n            }\r\n        }))\r\n    },\r\n    _tryGetItemsForTemplate: function(item) {\r\n        return item.items || []\r\n    },\r\n    _itemTabbedTemplate: function(item, e, $container) {\r\n        var $tabPanel = $(\"<div>\").appendTo($container);\r\n        var tabPanelOptions = extend({}, item.tabPanelOptions, {\r\n            dataSource: item.tabs,\r\n            onItemRendered: args => {\r\n                var _item$tabPanelOptions, _item$tabPanelOptions2;\r\n                null === (_item$tabPanelOptions = item.tabPanelOptions) || void 0 === _item$tabPanelOptions ? void 0 : null === (_item$tabPanelOptions2 = _item$tabPanelOptions.onItemRendered) || void 0 === _item$tabPanelOptions2 ? void 0 : _item$tabPanelOptions2.call(_item$tabPanelOptions, args);\r\n                triggerShownEvent(args.itemElement)\r\n            },\r\n            itemTemplate: (itemData, e, container) => {\r\n                var $container = $(container);\r\n                var alignItemLabels = ensureDefined(itemData.alignItemLabels, true);\r\n                var layoutManager = this._renderLayoutManager($container, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(itemData), {\r\n                    colCount: itemData.colCount,\r\n                    alignItemLabels: alignItemLabels,\r\n                    screenByWidth: this.option(\"screenByWidth\"),\r\n                    colCountByScreen: itemData.colCountByScreen,\r\n                    cssItemClass: itemData.cssItemClass,\r\n                    onLayoutChanged: inOneColumn => {\r\n                        this._alignLabelsInColumn({\r\n                            $container: $container,\r\n                            layoutManager: layoutManager,\r\n                            items: itemData.items,\r\n                            inOneColumn: inOneColumn\r\n                        })\r\n                    }\r\n                }));\r\n                if (this._itemsRunTimeInfo) {\r\n                    this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(itemData.guid, {\r\n                        layoutManager: layoutManager\r\n                    })\r\n                }\r\n                if (alignItemLabels) {\r\n                    this._alignLabelsInColumn({\r\n                        $container: $container,\r\n                        layoutManager: layoutManager,\r\n                        items: itemData.items,\r\n                        inOneColumn: layoutManager.isSingleColumnMode()\r\n                    })\r\n                }\r\n            }\r\n        });\r\n        var tryUpdateTabPanelInstance = (items, instance) => {\r\n            if (Array.isArray(items)) {\r\n                items.forEach(item => this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                    widgetInstance: instance\r\n                }))\r\n            }\r\n        };\r\n        var tabPanel = this._createComponent($tabPanel, TabPanel, tabPanelOptions);\r\n        $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_TABS_CLASS);\r\n        tabPanel.on(\"optionChanged\", e => {\r\n            if (\"dataSource\" === e.fullName) {\r\n                tryUpdateTabPanelInstance(e.value, e.component)\r\n            }\r\n        });\r\n        tryUpdateTabPanelInstance([{\r\n            guid: item.guid\r\n        }, ...item.tabs], tabPanel)\r\n    },\r\n    _itemGroupTemplate: function(item, e, $container) {\r\n        var $group = $(\"<div>\").toggleClass(FORM_GROUP_WITH_CAPTION_CLASS, isDefined(item.caption) && item.caption.length).addClass(FORM_GROUP_CLASS).appendTo($container);\r\n        $($container).parent().addClass(FIELD_ITEM_CONTENT_HAS_GROUP_CLASS);\r\n        var colCount;\r\n        var layoutManager;\r\n        if (item.caption) {\r\n            $(\"<span>\").addClass(FORM_GROUP_CAPTION_CLASS).text(item.caption).appendTo($group)\r\n        }\r\n        var $groupContent = $(\"<div>\").addClass(FORM_GROUP_CONTENT_CLASS).appendTo($group);\r\n        if (item.groupContentTemplate) {\r\n            item._renderGroupContentTemplate = () => {\r\n                $groupContent.empty();\r\n                var data = {\r\n                    formData: this.option(\"formData\"),\r\n                    component: this\r\n                };\r\n                item.groupContentTemplate.render({\r\n                    model: data,\r\n                    container: getPublicElement($groupContent)\r\n                })\r\n            };\r\n            item._renderGroupContentTemplate()\r\n        } else {\r\n            layoutManager = this._renderLayoutManager($groupContent, this._createLayoutManagerOptions(this._tryGetItemsForTemplate(item), {\r\n                colCount: item.colCount,\r\n                colCountByScreen: item.colCountByScreen,\r\n                alignItemLabels: item.alignItemLabels,\r\n                cssItemClass: item.cssItemClass\r\n            }));\r\n            this._itemsRunTimeInfo && this._itemsRunTimeInfo.extendRunTimeItemInfoByKey(item.guid, {\r\n                layoutManager: layoutManager\r\n            });\r\n            colCount = layoutManager._getColCount();\r\n            if (!this._groupsColCount.includes(colCount)) {\r\n                this._groupsColCount.push(colCount)\r\n            }\r\n            $group.addClass(GROUP_COL_COUNT_CLASS + colCount);\r\n            $group.attr(GROUP_COL_COUNT_ATTR, colCount)\r\n        }\r\n    },\r\n    _createLayoutManagerOptions: function(items, extendedLayoutManagerOptions) {\r\n        return convertToLayoutManagerOptions({\r\n            form: this,\r\n            formOptions: this.option(),\r\n            $formElement: this.$element(),\r\n            items: items,\r\n            validationGroup: this._getValidationGroup(),\r\n            extendedLayoutManagerOptions: extendedLayoutManagerOptions,\r\n            onFieldDataChanged: args => {\r\n                if (!this._isDataUpdating) {\r\n                    this._triggerOnFieldDataChanged(args)\r\n                }\r\n            },\r\n            onContentReady: args => {\r\n                this._itemsRunTimeInfo.addItemsOrExtendFrom(args.component._itemsRunTimeInfo);\r\n                extendedLayoutManagerOptions.onContentReady && extendedLayoutManagerOptions.onContentReady(args)\r\n            },\r\n            onDisposing: _ref2 => {\r\n                var {\r\n                    component: component\r\n                } = _ref2;\r\n                var nestedItemsRunTimeInfo = component.getItemsRunTimeInfo();\r\n                this._itemsRunTimeInfo.removeItemsByItems(nestedItemsRunTimeInfo)\r\n            },\r\n            onFieldItemRendered: () => {\r\n                var _this$_validationSumm;\r\n                null === (_this$_validationSumm = this._validationSummary) || void 0 === _this$_validationSumm ? void 0 : _this$_validationSumm.refreshValidationGroup()\r\n            }\r\n        })\r\n    },\r\n    _renderLayoutManager: function($parent, layoutManagerOptions) {\r\n        var baseColCountByScreen = {\r\n            lg: layoutManagerOptions.colCount,\r\n            md: layoutManagerOptions.colCount,\r\n            sm: layoutManagerOptions.colCount,\r\n            xs: 1\r\n        };\r\n        this._cachedColCountOptions.push({\r\n            colCountByScreen: extend(baseColCountByScreen, layoutManagerOptions.colCountByScreen)\r\n        });\r\n        var $element = $(\"<div>\");\r\n        $element.appendTo($parent);\r\n        var instance = this._createComponent($element, \"dxLayoutManager\", layoutManagerOptions);\r\n        instance.on(\"autoColCountChanged\", () => {\r\n            this._clearAutoColCountChangedTimeout();\r\n            this.autoColCountChangedTimeoutId = setTimeout(() => !this._disposed && this._refresh(), 0)\r\n        });\r\n        this._cachedLayoutManagers.push(instance);\r\n        return instance\r\n    },\r\n    _getValidationGroup: function() {\r\n        return this.option(\"validationGroup\") || this\r\n    },\r\n    _createComponent: function($element, type, config) {\r\n        config = config || {};\r\n        this._extendConfig(config, {\r\n            readOnly: this.option(\"readOnly\")\r\n        });\r\n        return this.callBase($element, type, config)\r\n    },\r\n    _attachSyncSubscriptions: function() {\r\n        var that = this;\r\n        that.on(\"optionChanged\", (function(args) {\r\n            var optionFullName = args.fullName;\r\n            if (\"formData\" === optionFullName) {\r\n                if (!isDefined(args.value)) {\r\n                    that._options.silent(\"formData\", args.value = {})\r\n                }\r\n                that._triggerOnFieldDataChangedByDataSet(args.value)\r\n            }\r\n            if (that._cachedLayoutManagers.length) {\r\n                each(that._cachedLayoutManagers, (function(index, layoutManager) {\r\n                    if (\"formData\" === optionFullName) {\r\n                        that._isDataUpdating = true;\r\n                        layoutManager.option(\"layoutData\", args.value);\r\n                        that._isDataUpdating = false\r\n                    }\r\n                    if (\"readOnly\" === args.name || \"disabled\" === args.name) {\r\n                        layoutManager.option(optionFullName, args.value)\r\n                    }\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _optionChanged: function(args) {\r\n        var splitFullName = args.fullName.split(\".\");\r\n        if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"items\") && this._itemsOptionChangedHandler(args)) {\r\n            return\r\n        }\r\n        if (splitFullName.length > 1 && -1 !== splitFullName[0].search(\"formData\") && this._formDataOptionChangedHandler(args)) {\r\n            return\r\n        }\r\n        this._defaultOptionChangedHandler(args)\r\n    },\r\n    _defaultOptionChangedHandler: function(args) {\r\n        switch (args.name) {\r\n            case \"formData\":\r\n                if (!this.option(\"items\")) {\r\n                    this._invalidate()\r\n                } else if (isEmptyObject(args.value)) {\r\n                    this._resetValues()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            case \"items\":\r\n            case \"colCount\":\r\n            case \"onEditorEnterKey\":\r\n            case \"labelLocation\":\r\n            case \"labelMode\":\r\n            case \"alignItemLabels\":\r\n            case \"showColonAfterLabel\":\r\n            case \"customizeItem\":\r\n            case \"alignItemLabelsInAllGroups\":\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n            case \"requiredMessage\":\r\n            case \"scrollingEnabled\":\r\n            case \"formID\":\r\n            case \"colCountByScreen\":\r\n            case \"screenByWidth\":\r\n            case \"stylingMode\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showValidationSummary\":\r\n                this._renderValidationSummary();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"alignRootItemLabels\":\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._rootLayoutManager.option(args.name, args.value);\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode());\r\n                break;\r\n            case \"validationGroup\":\r\n                ValidationEngine.removeGroup(args.previousValue || this);\r\n                this._invalidate();\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _itemsOptionChangedHandler: function(args) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        var value = args.value;\r\n        var itemPath = this._getItemPath(nameParts);\r\n        var item = this.option(itemPath);\r\n        var optionNameWithoutPath = args.fullName.replace(itemPath + \".\", \"\");\r\n        var simpleOptionName = optionNameWithoutPath.split(\".\")[0].replace(/\\[\\d+]/, \"\");\r\n        var itemAction = this._tryCreateItemOptionAction(simpleOptionName, item, item[simpleOptionName], args.previousValue, itemPath);\r\n        var result = this._tryExecuteItemOptionAction(itemAction) || this._tryChangeLayoutManagerItemOption(args.fullName, value);\r\n        if (!result && item) {\r\n            this._changeItemOption(item, optionNameWithoutPath, value);\r\n            var items = this._generateItemsFromData(this.option(\"items\"));\r\n            this.option(\"items\", items);\r\n            result = true\r\n        }\r\n        return result\r\n    },\r\n    _formDataOptionChangedHandler: function(args) {\r\n        var nameParts = args.fullName.split(\".\");\r\n        var value = args.value;\r\n        var dataField = nameParts.slice(1).join(\".\");\r\n        var editor = this.getEditor(dataField);\r\n        if (editor) {\r\n            editor.option(\"value\", value)\r\n        } else {\r\n            this._triggerOnFieldDataChanged({\r\n                dataField: dataField,\r\n                value: value\r\n            })\r\n        }\r\n        return true\r\n    },\r\n    _tryCreateItemOptionAction: function(optionName, item, value, previousValue, itemPath) {\r\n        if (\"tabs\" === optionName) {\r\n            this._itemsRunTimeInfo.removeItemsByPathStartWith(\"\".concat(itemPath, \".tabs\"));\r\n            value = this._prepareItems(value, true, itemPath, true)\r\n        }\r\n        return tryCreateItemOptionAction(optionName, {\r\n            item: item,\r\n            value: value,\r\n            previousValue: previousValue,\r\n            itemsRunTimeInfo: this._itemsRunTimeInfo\r\n        })\r\n    },\r\n    _tryExecuteItemOptionAction: function(action) {\r\n        return action && action.tryExecute()\r\n    },\r\n    _updateValidationGroupAndSummaryIfNeeded: function(fullName) {\r\n        var optionName = getOptionNameFromFullName(fullName);\r\n        if (ITEM_OPTIONS_FOR_VALIDATION_UPDATING.indexOf(optionName) > -1) {\r\n            ValidationEngine.addGroup(this._getValidationGroup());\r\n            if (this.option(\"showValidationSummary\")) {\r\n                var _this$_validationSumm2;\r\n                null === (_this$_validationSumm2 = this._validationSummary) || void 0 === _this$_validationSumm2 ? void 0 : _this$_validationSumm2.refreshValidationGroup()\r\n            }\r\n        }\r\n    },\r\n    _setLayoutManagerItemOption(layoutManager, optionName, value, path) {\r\n        if (this._updateLockCount > 0) {\r\n            !layoutManager._updateLockCount && layoutManager.beginUpdate();\r\n            var key = this._itemsRunTimeInfo.findKeyByPath(path);\r\n            this.postponedOperations.add(key, () => {\r\n                !layoutManager._disposed && layoutManager.endUpdate();\r\n                return (new Deferred).resolve()\r\n            })\r\n        }\r\n        var contentReadyHandler = e => {\r\n            e.component.off(\"contentReady\", contentReadyHandler);\r\n            if (isFullPathContainsTabs(path)) {\r\n                var tabPath = tryGetTabPath(path);\r\n                var tabLayoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(tabPath);\r\n                if (tabLayoutManager) {\r\n                    this._alignLabelsInColumn({\r\n                        items: tabLayoutManager.option(\"items\"),\r\n                        layoutManager: tabLayoutManager,\r\n                        $container: tabLayoutManager.$element(),\r\n                        inOneColumn: tabLayoutManager.isSingleColumnMode()\r\n                    })\r\n                }\r\n            } else {\r\n                this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode())\r\n            }\r\n        };\r\n        layoutManager.on(\"contentReady\", contentReadyHandler);\r\n        layoutManager.option(optionName, value);\r\n        this._updateValidationGroupAndSummaryIfNeeded(optionName)\r\n    },\r\n    _tryChangeLayoutManagerItemOption(fullName, value) {\r\n        var nameParts = fullName.split(\".\");\r\n        var optionName = getOptionNameFromFullName(fullName);\r\n        if (\"items\" === optionName && nameParts.length > 1) {\r\n            var itemPath = this._getItemPath(nameParts);\r\n            var layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(itemPath);\r\n            if (layoutManager) {\r\n                this._itemsRunTimeInfo.removeItemsByItems(layoutManager.getItemsRunTimeInfo());\r\n                var items = this._prepareItems(value, false, itemPath);\r\n                this._setLayoutManagerItemOption(layoutManager, optionName, items, itemPath);\r\n                return true\r\n            }\r\n        } else if (nameParts.length > 2) {\r\n            var endPartIndex = nameParts.length - 2;\r\n            var _itemPath = this._getItemPath(nameParts.slice(0, endPartIndex));\r\n            var _layoutManager = this._itemsRunTimeInfo.findGroupOrTabLayoutManagerByPath(_itemPath);\r\n            if (_layoutManager) {\r\n                var fullOptionName = getFullOptionName(nameParts[endPartIndex], optionName);\r\n                if (\"editorType\" === optionName) {\r\n                    if (_layoutManager.option(fullOptionName) !== value) {\r\n                        return false\r\n                    }\r\n                }\r\n                if (\"visible\" === optionName) {\r\n                    var formItems = this.option(getFullOptionName(_itemPath, \"items\"));\r\n                    if (formItems && formItems.length) {\r\n                        var layoutManagerItems = _layoutManager.option(\"items\");\r\n                        formItems.forEach((item, index) => {\r\n                            var layoutItem = layoutManagerItems[index];\r\n                            layoutItem.visibleIndex = item.visibleIndex\r\n                        })\r\n                    }\r\n                }\r\n                this._setLayoutManagerItemOption(_layoutManager, fullOptionName, value, _itemPath);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    },\r\n    _tryChangeLayoutManagerItemOptions(itemPath, options) {\r\n        var result;\r\n        this.beginUpdate();\r\n        each(options, (optionName, optionValue) => {\r\n            result = this._tryChangeLayoutManagerItemOption(getFullOptionName(itemPath, optionName), optionValue);\r\n            if (!result) {\r\n                return false\r\n            }\r\n        });\r\n        this.endUpdate();\r\n        return result\r\n    },\r\n    _getItemPath: function(nameParts) {\r\n        var itemPath = nameParts[0];\r\n        var i;\r\n        for (i = 1; i < nameParts.length; i++) {\r\n            if (-1 !== nameParts[i].search(/items\\[\\d+]|tabs\\[\\d+]/)) {\r\n                itemPath += \".\" + nameParts[i]\r\n            } else {\r\n                break\r\n            }\r\n        }\r\n        return itemPath\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _triggerOnFieldDataChangedByDataSet: function(data) {\r\n        var that = this;\r\n        if (data && isObject(data)) {\r\n            each(data, (function(dataField, value) {\r\n                that._triggerOnFieldDataChanged({\r\n                    dataField: dataField,\r\n                    value: value\r\n                })\r\n            }))\r\n        }\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        if (isDefined(this.option(\"formData\"))) {\r\n            var editor = this.getEditor(dataField);\r\n            this.option(\"formData.\" + dataField, value);\r\n            if (editor) {\r\n                var editorValue = editor.option(\"value\");\r\n                if (editorValue !== value) {\r\n                    editor.option(\"value\", value)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    _generateItemsFromData: function(items) {\r\n        var formData = this.option(\"formData\");\r\n        var result = [];\r\n        if (!items && isDefined(formData)) {\r\n            each(formData, (function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            }))\r\n        }\r\n        if (items) {\r\n            each(items, (function(index, item) {\r\n                if (isObject(item)) {\r\n                    result.push(item)\r\n                } else {\r\n                    result.push({\r\n                        dataField: item\r\n                    })\r\n                }\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    _getItemByField: function(field, items) {\r\n        var that = this;\r\n        var fieldParts = isObject(field) ? field : that._getFieldParts(field);\r\n        var fieldName = fieldParts.fieldName;\r\n        var fieldPath = fieldParts.fieldPath;\r\n        var resultItem;\r\n        if (items.length) {\r\n            each(items, (function(index, item) {\r\n                var itemType = item.itemType;\r\n                if (fieldPath.length) {\r\n                    var path = fieldPath.slice();\r\n                    item = that._getItemByFieldPath(path, fieldName, item)\r\n                } else if (\"group\" === itemType && !(item.caption || item.name) || \"tabbed\" === itemType && !item.name) {\r\n                    var subItemsField = that._getSubItemField(itemType);\r\n                    item.items = that._generateItemsFromData(item.items);\r\n                    item = that._getItemByField({\r\n                        fieldName: fieldName,\r\n                        fieldPath: fieldPath\r\n                    }, item[subItemsField])\r\n                }\r\n                if (isEqualToDataFieldOrNameOrTitleOrCaption(item, fieldName)) {\r\n                    resultItem = item;\r\n                    return false\r\n                }\r\n            }))\r\n        }\r\n        return resultItem\r\n    },\r\n    _getFieldParts: function(field) {\r\n        var fieldName = field;\r\n        var separatorIndex = fieldName.indexOf(\".\");\r\n        var resultPath = [];\r\n        while (-1 !== separatorIndex) {\r\n            resultPath.push(fieldName.substr(0, separatorIndex));\r\n            fieldName = fieldName.substr(separatorIndex + 1);\r\n            separatorIndex = fieldName.indexOf(\".\")\r\n        }\r\n        return {\r\n            fieldName: fieldName,\r\n            fieldPath: resultPath.reverse()\r\n        }\r\n    },\r\n    _getItemByFieldPath: function(path, fieldName, item) {\r\n        var itemType = item.itemType;\r\n        var subItemsField = this._getSubItemField(itemType);\r\n        var isItemWithSubItems = \"group\" === itemType || \"tabbed\" === itemType || item.title;\r\n        var result;\r\n        do {\r\n            if (isItemWithSubItems) {\r\n                var name = item.name || item.caption || item.title;\r\n                var isGroupWithName = isDefined(name);\r\n                var nameWithoutSpaces = getTextWithoutSpaces(name);\r\n                var pathNode = void 0;\r\n                item[subItemsField] = this._generateItemsFromData(item[subItemsField]);\r\n                if (isGroupWithName) {\r\n                    pathNode = path.pop()\r\n                }\r\n                if (!path.length) {\r\n                    result = this._getItemByField(fieldName, item[subItemsField]);\r\n                    if (result) {\r\n                        break\r\n                    }\r\n                }\r\n                if (!isGroupWithName || isGroupWithName && nameWithoutSpaces === pathNode) {\r\n                    if (path.length) {\r\n                        result = this._searchItemInEverySubItem(path, fieldName, item[subItemsField])\r\n                    }\r\n                }\r\n            } else {\r\n                break\r\n            }\r\n        } while (path.length && !isDefined(result));\r\n        return result\r\n    },\r\n    _getSubItemField: function(itemType) {\r\n        return \"tabbed\" === itemType ? \"tabs\" : \"items\"\r\n    },\r\n    _searchItemInEverySubItem: function(path, fieldName, items) {\r\n        var that = this;\r\n        var result;\r\n        each(items, (function(index, groupItem) {\r\n            result = that._getItemByFieldPath(path.slice(), fieldName, groupItem);\r\n            if (result) {\r\n                return false\r\n            }\r\n        }));\r\n        if (!result) {\r\n            result = false\r\n        }\r\n        return result\r\n    },\r\n    _changeItemOption: function(item, option, value) {\r\n        if (isObject(item)) {\r\n            item[option] = value\r\n        }\r\n    },\r\n    _dimensionChanged: function() {\r\n        var currentScreenFactor = this._getCurrentScreenFactor();\r\n        if (this._lastMarkupScreenFactor !== currentScreenFactor) {\r\n            if (this._isColCountChanged(this._lastMarkupScreenFactor, currentScreenFactor)) {\r\n                this._targetScreenFactor = currentScreenFactor;\r\n                this._refresh();\r\n                this._targetScreenFactor = void 0\r\n            }\r\n            this._lastMarkupScreenFactor = currentScreenFactor\r\n        }\r\n    },\r\n    _isColCountChanged: function(oldScreenSize, newScreenSize) {\r\n        var isChanged = false;\r\n        each(this._cachedColCountOptions, (function(index, item) {\r\n            if (item.colCountByScreen[oldScreenSize] !== item.colCountByScreen[newScreenSize]) {\r\n                isChanged = true;\r\n                return false\r\n            }\r\n        }));\r\n        return isChanged\r\n    },\r\n    _refresh: function() {\r\n        var editorSelector = \".\" + FOCUSED_STATE_CLASS + \" input, .\" + FOCUSED_STATE_CLASS + \" textarea\";\r\n        eventsEngine.trigger(this.$element().find(editorSelector), \"change\");\r\n        this.callBase()\r\n    },\r\n    _resetValues: function() {\r\n        this._itemsRunTimeInfo.each((function(_, itemRunTimeInfo) {\r\n            if (isDefined(itemRunTimeInfo.widgetInstance) && Editor.isEditor(itemRunTimeInfo.widgetInstance)) {\r\n                itemRunTimeInfo.widgetInstance.reset();\r\n                itemRunTimeInfo.widgetInstance.option(\"isValid\", true)\r\n            }\r\n        }));\r\n        ValidationEngine.resetGroup(this._getValidationGroup())\r\n    },\r\n    _updateData: function(data, value, isComplexData) {\r\n        var that = this;\r\n        var _data = isComplexData ? value : data;\r\n        if (isObject(_data)) {\r\n            each(_data, (function(dataField, fieldValue) {\r\n                that._updateData(isComplexData ? data + \".\" + dataField : dataField, fieldValue, isObject(fieldValue))\r\n            }))\r\n        } else if (isString(data)) {\r\n            that._updateFieldValue(data, value)\r\n        }\r\n    },\r\n    registerKeyHandler: function(key, handler) {\r\n        this.callBase(key, handler);\r\n        this._itemsRunTimeInfo.each((function(_, itemRunTimeInfo) {\r\n            if (isDefined(itemRunTimeInfo.widgetInstance)) {\r\n                itemRunTimeInfo.widgetInstance.registerKeyHandler(key, handler)\r\n            }\r\n        }))\r\n    },\r\n    _focusTarget: function() {\r\n        return this.$element().find(\".\" + FIELD_ITEM_CONTENT_CLASS + \" [tabindex]\").first()\r\n    },\r\n    _visibilityChanged: function() {\r\n        this._alignLabels(this._rootLayoutManager, this._rootLayoutManager.isSingleColumnMode())\r\n    },\r\n    _clearAutoColCountChangedTimeout: function() {\r\n        if (this.autoColCountChangedTimeoutId) {\r\n            clearTimeout(this.autoColCountChangedTimeoutId);\r\n            this.autoColCountChangedTimeoutId = void 0\r\n        }\r\n    },\r\n    _dispose: function() {\r\n        this._clearAutoColCountChangedTimeout();\r\n        ValidationEngine.removeGroup(this._getValidationGroup());\r\n        this.callBase()\r\n    },\r\n    resetValues: function() {\r\n        this._resetValues()\r\n    },\r\n    updateData: function(data, value) {\r\n        this._updateData(data, value)\r\n    },\r\n    getEditor: function(dataField) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(dataField) || this._itemsRunTimeInfo.findWidgetInstanceByName(dataField)\r\n    },\r\n    getButton: function(name) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByName(name)\r\n    },\r\n    updateDimensions: function() {\r\n        var that = this;\r\n        var deferred = new Deferred;\r\n        if (that._scrollable) {\r\n            that._scrollable.update().done((function() {\r\n                deferred.resolveWith(that)\r\n            }))\r\n        } else {\r\n            deferred.resolveWith(that)\r\n        }\r\n        return deferred.promise()\r\n    },\r\n    itemOption: function(id, option, value) {\r\n        var items = this._generateItemsFromData(this.option(\"items\"));\r\n        var item = this._getItemByField(id, items);\r\n        var path = getItemPath(items, item);\r\n        if (!item) {\r\n            return\r\n        }\r\n        switch (arguments.length) {\r\n            case 1:\r\n                return item;\r\n            case 3:\r\n                var itemAction = this._tryCreateItemOptionAction(option, item, value, item[option], path);\r\n                this._changeItemOption(item, option, value);\r\n                var fullName = getFullOptionName(path, option);\r\n                if (!this._tryExecuteItemOptionAction(itemAction) && !this._tryChangeLayoutManagerItemOption(fullName, value)) {\r\n                    this.option(\"items\", items)\r\n                }\r\n                break;\r\n            default:\r\n                if (isObject(option)) {\r\n                    if (!this._tryChangeLayoutManagerItemOptions(path, option)) {\r\n                        var allowUpdateItems;\r\n                        each(option, (optionName, optionValue) => {\r\n                            var itemAction = this._tryCreateItemOptionAction(optionName, item, optionValue, item[optionName], path);\r\n                            this._changeItemOption(item, optionName, optionValue);\r\n                            if (!allowUpdateItems && !this._tryExecuteItemOptionAction(itemAction)) {\r\n                                allowUpdateItems = true\r\n                            }\r\n                        });\r\n                        allowUpdateItems && this.option(\"items\", items)\r\n                    }\r\n                }\r\n        }\r\n    },\r\n    validate: function() {\r\n        return ValidationEngine.validateGroup(this._getValidationGroup())\r\n    },\r\n    getItemID: function(name) {\r\n        return \"dx_\" + this.option(\"formID\") + \"_\" + (name || new Guid)\r\n    },\r\n    getTargetScreenFactor: function() {\r\n        return this._targetScreenFactor\r\n    }\r\n});\r\nregisterComponent(\"dxForm\", Form);\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}