{"ast":null,"code":"/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Column } from \"./Column\";\nimport { Slice } from \"../../core/elements/Slice\";\nimport { registry } from \"../../core/Registry\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar RadarColumn =\n/** @class */\nfunction (_super) {\n  __extends(RadarColumn, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function RadarColumn() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"RadarColumn\";\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  RadarColumn.prototype.createAssets = function () {\n    this.radarColumn = this.createChild(Slice);\n    this.radarColumn.shouldClone = false;\n    this.radarColumn.strokeOpacity = undefined; // some dirty hack so that if user access column, it won't get error\n\n    this.column = this.radarColumn;\n  };\n  /**\r\n   * Copies all parameters from another [[RadarColumn]].\r\n   *\r\n   * @param source Source RadarColumn\r\n   */\n\n\n  RadarColumn.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.radarColumn) {\n      this.radarColumn.copyFrom(source.radarColumn);\n    }\n  };\n  /**\r\n   * X coordinate for the slice tooltip.\r\n   *\r\n   * @return X\r\n   * @ignore\r\n   */\n\n\n  RadarColumn.prototype.getTooltipX = function () {\n    var value = this.getPropertyValue(\"tooltipX\");\n\n    if (!$type.isNumber(value)) {\n      return this.radarColumn.getTooltipX();\n    }\n\n    return value;\n  };\n  /**\r\n   * Y coordinate for the slice tooltip.\r\n   *\r\n   * @return Y\r\n   * @ignore\r\n   */\n\n\n  RadarColumn.prototype.getTooltipY = function () {\n    var value = this.getPropertyValue(\"tooltipX\");\n\n    if (!$type.isNumber(value)) {\n      return this.radarColumn.getTooltipY();\n    }\n\n    return value;\n  };\n\n  return RadarColumn;\n}(Column);\n\nexport { RadarColumn };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"RadarColumn\"] = RadarColumn;","map":{"version":3,"names":["__extends","Column","Slice","registry","$type","RadarColumn","_super","_this","call","className","prototype","createAssets","radarColumn","createChild","shouldClone","strokeOpacity","undefined","column","copyFrom","source","getTooltipX","value","getPropertyValue","isNumber","getTooltipY","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js"],"sourcesContent":["/**\r\n * Module that defines everything related to building RadarColumns.\r\n * It is a container which has radarColumn element which is a Slice.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Column } from \"./Column\";\r\nimport { Slice } from \"../../core/elements/Slice\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates RadarColumns.\r\n *\r\n * @see {@link IRadarColumnEvents} for a list of available events\r\n * @see {@link IRadarColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar RadarColumn = /** @class */ (function (_super) {\r\n    __extends(RadarColumn, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function RadarColumn() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"RadarColumn\";\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.createAssets = function () {\r\n        this.radarColumn = this.createChild(Slice);\r\n        this.radarColumn.shouldClone = false;\r\n        this.radarColumn.strokeOpacity = undefined;\r\n        // some dirty hack so that if user access column, it won't get error\r\n        this.column = this.radarColumn;\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[RadarColumn]].\r\n     *\r\n     * @param source Source RadarColumn\r\n     */\r\n    RadarColumn.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.radarColumn) {\r\n            this.radarColumn.copyFrom(source.radarColumn);\r\n        }\r\n    };\r\n    /**\r\n     * X coordinate for the slice tooltip.\r\n     *\r\n     * @return X\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.getTooltipX = function () {\r\n        var value = this.getPropertyValue(\"tooltipX\");\r\n        if (!$type.isNumber(value)) {\r\n            return this.radarColumn.getTooltipX();\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Y coordinate for the slice tooltip.\r\n     *\r\n     * @return Y\r\n     * @ignore\r\n     */\r\n    RadarColumn.prototype.getTooltipY = function () {\r\n        var value = this.getPropertyValue(\"tooltipX\");\r\n        if (!$type.isNumber(value)) {\r\n            return this.radarColumn.getTooltipY();\r\n        }\r\n        return value;\r\n    };\r\n    return RadarColumn;\r\n}(Column));\r\nexport { RadarColumn };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"RadarColumn\"] = RadarColumn;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC/CN,SAAS,CAACK,WAAD,EAAcC,MAAd,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,WAAT,GAAuB;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,aAAlB;IACA,OAAOF,KAAP;EACH;EACD;AACJ;AACA;;;EACIF,WAAW,CAACK,SAAZ,CAAsBC,YAAtB,GAAqC,YAAY;IAC7C,KAAKC,WAAL,GAAmB,KAAKC,WAAL,CAAiBX,KAAjB,CAAnB;IACA,KAAKU,WAAL,CAAiBE,WAAjB,GAA+B,KAA/B;IACA,KAAKF,WAAL,CAAiBG,aAAjB,GAAiCC,SAAjC,CAH6C,CAI7C;;IACA,KAAKC,MAAL,GAAc,KAAKL,WAAnB;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;;;EACIP,WAAW,CAACK,SAAZ,CAAsBQ,QAAtB,GAAiC,UAAUC,MAAV,EAAkB;IAC/Cb,MAAM,CAACI,SAAP,CAAiBQ,QAAjB,CAA0BV,IAA1B,CAA+B,IAA/B,EAAqCW,MAArC;;IACA,IAAI,KAAKP,WAAT,EAAsB;MAClB,KAAKA,WAAL,CAAiBM,QAAjB,CAA0BC,MAAM,CAACP,WAAjC;IACH;EACJ,CALD;EAMA;AACJ;AACA;AACA;AACA;AACA;;;EACIP,WAAW,CAACK,SAAZ,CAAsBU,WAAtB,GAAoC,YAAY;IAC5C,IAAIC,KAAK,GAAG,KAAKC,gBAAL,CAAsB,UAAtB,CAAZ;;IACA,IAAI,CAAClB,KAAK,CAACmB,QAAN,CAAeF,KAAf,CAAL,EAA4B;MACxB,OAAO,KAAKT,WAAL,CAAiBQ,WAAjB,EAAP;IACH;;IACD,OAAOC,KAAP;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;AACA;;;EACIhB,WAAW,CAACK,SAAZ,CAAsBc,WAAtB,GAAoC,YAAY;IAC5C,IAAIH,KAAK,GAAG,KAAKC,gBAAL,CAAsB,UAAtB,CAAZ;;IACA,IAAI,CAAClB,KAAK,CAACmB,QAAN,CAAeF,KAAf,CAAL,EAA4B;MACxB,OAAO,KAAKT,WAAL,CAAiBY,WAAjB,EAAP;IACH;;IACD,OAAOH,KAAP;EACH,CAND;;EAOA,OAAOhB,WAAP;AACH,CA1DgC,CA0D/BJ,MA1D+B,CAAjC;;AA2DA,SAASI,WAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,QAAQ,CAACsB,iBAAT,CAA2B,aAA3B,IAA4CpB,WAA5C"},"metadata":{},"sourceType":"module"}