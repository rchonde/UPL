{"ast":null,"code":"/**\r\n * Module, defining base Axis Renderer.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../../core/Container\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { AxisDataItem } from \"./Axis\";\nimport { AxisLine } from \"./AxisLine\";\nimport { AxisFill } from \"./AxisFill\";\nimport { Grid } from \"./Grid\";\nimport { AxisLabel } from \"./AxisLabel\";\nimport { AxisTick } from \"./AxisTick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { registry } from \"../../core/Registry\";\nimport { percent } from \"../../core/utils/Percent\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\n\nvar AxisRenderer =\n/** @class */\nfunction (_super) {\n  __extends(AxisRenderer, _super);\n  /**\r\n   * Constructor.\r\n   *\r\n   * @param axis Related axis\r\n   */\n\n\n  function AxisRenderer() {\n    var _this = // Init\n    _super.call(this) || this;\n    /**\r\n     * A related chart.\r\n     */\n\n\n    _this._chart = new MutableValueDisposer();\n    _this.className = \"AxisRenderer\"; // Set defaults\n\n    _this.minGridDistance = 50;\n    _this.inside = false;\n    _this.inversed = false;\n    _this.tooltipLocation = 0.5;\n    _this.fullWidthTooltip = false;\n    _this.cellStartLocation = 0;\n    _this.cellEndLocation = 1;\n    _this.minLabelPosition = 0;\n    _this.maxLabelPosition = 1;\n    _this.shouldClone = false;\n\n    var gridContainer = _this.createChild(Container);\n\n    gridContainer.shouldClone = false;\n    gridContainer.layout = \"none\"; //\tgridContainer.isMeasured = false;\n\n    gridContainer.virtualParent = _this;\n    gridContainer.width = percent(100);\n    gridContainer.height = percent(100);\n    _this.gridContainer = gridContainer; // not good without this\n\n    gridContainer.events.on(\"maxsizechanged\", function () {\n      if (_this.inited) {\n        _this.invalidateAxisItems();\n      }\n    }, _this, false);\n\n    var breakContainer = _this.createChild(Container);\n\n    breakContainer.shouldClone = false;\n    breakContainer.isMeasured = false;\n    breakContainer.layout = \"none\";\n    breakContainer.width = percent(100);\n    breakContainer.height = percent(100);\n    _this.breakContainer = breakContainer;\n\n    var bulletsContainer = _this.createChild(Container);\n\n    bulletsContainer.shouldClone = false;\n    bulletsContainer.isMeasured = false;\n    bulletsContainer.layout = \"none\";\n    bulletsContainer.width = percent(100);\n    bulletsContainer.height = percent(100);\n    _this.bulletsContainer = bulletsContainer;\n    _this.line = _this.createChild(AxisLine);\n    _this.line.shouldClone = false;\n    _this.line.strokeOpacity = 0;\n\n    var baseGrid = _this.createChild(Grid);\n\n    baseGrid.shouldClone = false;\n    _this.baseGrid = baseGrid; // Make elements disposable\n\n    var disposers = _this._disposers;\n    disposers.push(baseGrid);\n    disposers.push(_this.line);\n    disposers.push(gridContainer);\n    disposers.push(breakContainer);\n    disposers.push(bulletsContainer);\n    disposers.push(_this._chart);\n    _this.ticks.template.disabled = true;\n    _this.axisFills.template.disabled = true;\n    _this.axisFills.template.interactionsEnabled = false; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(AxisRenderer.prototype, \"axis\", {\n    /**\r\n     * Axis of a renderer\r\n     * @return axis Axis\r\n     */\n    get: function () {\n      return this._axis;\n    },\n\n    /**\r\n     * Axis of a renderer\r\n     * @param axis Axis\r\n     */\n    set: function (axis) {\n      this.setAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n  * @ignore\r\n  */\n\n  AxisRenderer.prototype.setAxis = function (axis) {\n    this._axis = axis;\n    this.baseGrid.parent = axis;\n    this.line.parent = axis;\n    this.gridContainer.bind(\"opacity\", axis);\n  };\n  /**\r\n   * Called when rendered is attached to an Axis, as well as a property of\r\n   * Axis that might affect the appearance is updated.\r\n   *\r\n   * E.g. `axis.opposite`, `axis.inside`, etc.\r\n   *\r\n   * This method is called **before** draw, so that any related setting\r\n   * changed in this method can be changed.\r\n   *\r\n   * @todo Description (review)\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  AxisRenderer.prototype.processRenderer = function () {\n    this.events.on(\"sizechanged\", this.updateTooltip, this, false);\n    this.events.on(\"positionchanged\", this.updateTooltip, this, false);\n    this.labels.template.inside = this.inside;\n    this.ticks.template.inside = this.inside;\n  };\n  /**\r\n   * Updates Axis' tooltip.\r\n   *\r\n   * @todo Description (review)\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  AxisRenderer.prototype.updateTooltip = function () {// This is a placeholder method for extending classes to override.\n  };\n\n  Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\n    /**\r\n     * Returns actual length of the Axis, in pixels.\r\n     *\r\n     * @return Length (px)\r\n     */\n    get: function () {\n      // This is a placeholder method for extending classes to override.\n      return 0;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Re-positions an element to new coordinates.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item   A target element\r\n   * @param point  New coordinates\r\n   */\n\n  AxisRenderer.prototype.positionItem = function (item, point) {\n    if (item) {\n      item.moveTo(point);\n    }\n  };\n  /**\r\n   * Converts relative position on axis to point coordinates.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Point\r\n   */\n\n\n  AxisRenderer.prototype.positionToPoint = function (position, position2) {\n    // This is a placeholder method for extending classes to override.\n    return {\n      x: 0,\n      y: 0\n    };\n  };\n  /**\r\n   * Converts relative position on axis to angle.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review / units)\r\n   * @param position  Position (0-1)\r\n   * @return Angle\r\n   */\n\n\n  AxisRenderer.prototype.positionToAngle = function (position) {\n    // This is a placeholder method for extending classes to override.\n    return 0;\n  };\n  /**\r\n   * Converts relative position (0-1) on axis to a pixel coordinate.\r\n   *\r\n   * @param position  Position (0-1)\r\n   * @return Coordinate (px)\r\n   */\n\n\n  AxisRenderer.prototype.positionToCoordinate = function (position) {\n    var coordinate;\n    var axis = this.axis;\n    var axisFullLength = axis.axisFullLength;\n\n    if (axis.renderer.inversed) {\n      coordinate = (axis.end - position) * axisFullLength;\n    } else {\n      coordinate = (position - axis.start) * axisFullLength;\n    }\n\n    return coordinate;\n  };\n\n  AxisRenderer.prototype.updateGridContainer = function () {};\n\n  AxisRenderer.prototype.getHeight = function () {\n    var gridContainer = this.gridContainer;\n\n    if (gridContainer.parent) {\n      return gridContainer.parent.pixelHeight;\n    }\n\n    return this.gridContainer.pixelHeight || 0;\n  };\n\n  AxisRenderer.prototype.getWidth = function () {\n    var gridContainer = this.gridContainer;\n\n    if (gridContainer.parent) {\n      return gridContainer.parent.pixelWidth;\n    }\n\n    return this.gridContainer.pixelWidth || 0;\n  };\n  /**\r\n   * Converts a coordinate in pixels to a relative position. (0-1)\r\n   *\r\n   * @param coordinate  Coordinate (px)\r\n   * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n   * @return Position (0-1)\r\n   */\n\n\n  AxisRenderer.prototype.coordinateToPosition = function (coordinate, coordinate2) {\n    var position;\n    var axis = this.axis;\n    var axisFullLength = axis.axisFullLength;\n\n    if (axis.renderer.inversed) {\n      position = axis.end - coordinate / axisFullLength;\n    } else {\n      position = coordinate / axisFullLength + axis.start;\n    }\n\n    return $math.round(position, 5);\n  };\n  /**\r\n   * Converts a point at specific coordinates to a relative position (0-1)\r\n   * on the axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param point  Point\r\n   * @return Position (0-1)\r\n   */\n\n\n  AxisRenderer.prototype.pointToPosition = function (point) {\n    // This is a placeholder method for extending classes to override.\n    return 0;\n  };\n  /**\r\n   * [getPositionRangePath description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param startPosition  Starting position\r\n   * @param endPosition    End position\r\n   * @return SVG path\r\n   */\n\n\n  AxisRenderer.prototype.getPositionRangePath = function (startPosition, endPosition) {\n    return \"\";\n  };\n  /**\r\n   * Invalidates all axis data items, effectively causing them re-evaluated.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description (review)\r\n   */\n\n\n  AxisRenderer.prototype.invalidateAxisItems = function () {\n    var axis = this.axis;\n\n    if (axis) {\n      axis.invalidateDataItems();\n    }\n  };\n  /**\r\n   * Updates and positions a grid element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param grid         Grid element\r\n   * @param position     Starting position\r\n   * @param endPosition  End position\r\n   */\n\n\n  AxisRenderer.prototype.updateGridElement = function (grid, position, endPosition) {// This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions a tick element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param tick         Tick element\r\n   * @param position     Starting position\r\n   * @param endPosition  End position\r\n   */\n\n\n  AxisRenderer.prototype.updateTickElement = function (tick, position, endPosition) {// This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions axis bullet.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param bullet       AxisBullet element\r\n   * @param position     Starting position\r\n   * @param endPosition  End position\r\n   */\n\n\n  AxisRenderer.prototype.updateBullet = function (bullet, position, endPosition) {// This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions a label element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param label        Label element\r\n   * @param position     Starting position\r\n   * @param endPosition  Ending position\r\n   */\n\n\n  AxisRenderer.prototype.updateLabelElement = function (label, position, endPosition, location) {// This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions the axis fill element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fill         Fill element\r\n   * @param position     Starting position\r\n   * @param endPosition  Ending position\r\n   */\n\n\n  AxisRenderer.prototype.updateFillElement = function (fill, position, endPosition) {\n    fill.startPosition = position;\n    fill.endPosition = endPosition;\n  };\n  /**\r\n   * Updates and positions the axis line element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  AxisRenderer.prototype.updateAxisLine = function () {// This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions the base grid element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  AxisRenderer.prototype.updateBaseGridElement = function () {// This is a placeholder method for extending classes to override.\n  };\n  /**\r\n   * Updates and positions an axis break element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axisBreak Break element\r\n   */\n\n\n  AxisRenderer.prototype.updateBreakElement = function (axisBreak) {\n    this.positionItem(axisBreak.startLine, axisBreak.startPoint);\n    this.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\n    this.positionItem(axisBreak.endLine, axisBreak.endPoint);\n    this.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\n  };\n\n  Object.defineProperty(AxisRenderer.prototype, \"minGridDistance\", {\n    /**\r\n     * @return Min distance (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"minGridDistance\");\n    },\n\n    /**\r\n     * Minimum distance in pixels between grid elements.\r\n     *\r\n     * Use it to control density of the grid/labels on the axis.element.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n     * @param value  Min distance (px)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"minGridDistance\", value)) {\n        if (this.axis) {\n          this.axis.invalidateDataItems();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"chart\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Chart\r\n     */\n    get: function () {\n      return this._chart.get();\n    },\n\n    /**\r\n     * A chart, associated with the Axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param value  Chart\r\n     */\n    set: function (value) {\n      this._chart.set(value, null);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Toggles visibility of an element, based on its current position and\r\n   * min/max position settings.\r\n   *\r\n   * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param sprite       An element to toggle\r\n   * @param position     Elements current position\r\n   * @param minPosition  Min position setting\r\n   * @param maxPosition  Max position setting\r\n   */\n\n  AxisRenderer.prototype.toggleVisibility = function (sprite, position, minPosition, maxPosition) {\n    var axis = this.axis;\n    var dataItem = sprite.dataItem;\n\n    if (dataItem && dataItem instanceof AxisDataItem) {\n      if ($type.isNumber(dataItem.minPosition)) {\n        minPosition = dataItem.minPosition;\n      }\n\n      if ($type.isNumber(dataItem.maxPosition)) {\n        maxPosition = dataItem.maxPosition;\n      }\n    }\n\n    var updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\n    var updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\n\n    if (!sprite.disabled) {\n      if (position < updatedStart || position > updatedEnd) {\n        sprite.__disabled = true;\n      } else {\n        sprite.__disabled = false;\n      }\n    }\n  };\n  /**\r\n   * Creates visual elements for and axis break.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axisBreak Axis break\r\n   */\n\n\n  AxisRenderer.prototype.createBreakSprites = function (axisBreak) {// This is a placeholder method for extending classes to override.\n  };\n\n  Object.defineProperty(AxisRenderer.prototype, \"axisFills\", {\n    /**\r\n     * A list of Axis' Fill elements.\r\n     *\r\n     * Those are fill elements that cover the space between every second set\r\n     * of grid lines, and can be configured to create striped charts.\r\n     *\r\n     * Please note that these are disabled by default. To enable them, set\r\n     * template to true.\r\n     *\r\n     * ```TypeScript\r\n     * categoryAxis.renderer.axisFills.template.disabled = false;\r\n     * ```\r\n     * ```JavaScript\r\n     * categoryAxis.renderer.axisFills.template.disabled = false;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     // ...\r\n     *     \"renderer\": {\r\n     *       \"axisFills\": {\r\n     *         \"disabled\": false\r\n     *       }\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n     * @return Fill elements\r\n     */\n    get: function () {\n      if (!this._axisFills) {\n        var fill = this.createFill(this.axis);\n        this._axisFills = new ListTemplate(fill);\n        fill.applyOnClones = true;\n        fill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n\n        this._disposers.push(new ListDisposer(this._axisFills));\n\n        this._disposers.push(this._axisFills.template);\n      }\n\n      return this._axisFills;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new fill element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Fill element\r\n   */\n\n  AxisRenderer.prototype.createFill = function (axis) {\n    return new AxisFill(axis);\n  };\n\n  Object.defineProperty(AxisRenderer.prototype, \"grid\", {\n    /**\r\n     * A list of Axis' Grid elements.\r\n     *\r\n     * @return Grid elements\r\n     */\n    get: function () {\n      if (!this._grid) {\n        var grid = this.createGrid();\n        this._grid = new ListTemplate(grid);\n        grid.applyOnClones = true;\n        grid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n\n        this._disposers.push(new ListDisposer(this._grid));\n\n        this._disposers.push(this._grid.template);\n      }\n\n      return this._grid;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new grid element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Grid element\r\n   */\n\n  AxisRenderer.prototype.createGrid = function () {\n    return new Grid();\n  };\n\n  Object.defineProperty(AxisRenderer.prototype, \"ticks\", {\n    /**\r\n     * A list of Axis' Tick elements.\r\n     *\r\n     * Please note that these are disabled by default. To enable ticks, you'll\r\n     * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n     *\r\n     * ```TypeScript\r\n     * categoryAxis.renderer.ticks.template.disabled = false;\r\n     * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n     * ```\r\n     * ```JavaScript\r\n     * categoryAxis.renderer.ticks.template.disabled = false;\r\n     * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     // ...\r\n     *     \"renderer\": {\r\n     *       \"ticks\": {\r\n     *         \"disabled\": false,\r\n     *         \"strokeOpacity\": 0.5\r\n     *       }\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @return Tick elements\r\n     */\n    get: function () {\n      if (!this._ticks) {\n        var tick = this.createTick();\n        tick.applyOnClones = true;\n        tick.isMeasured = false;\n        tick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n        this._ticks = new ListTemplate(tick);\n\n        this._disposers.push(new ListDisposer(this._ticks));\n\n        this._disposers.push(this._ticks.template);\n      }\n\n      return this._ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new tick element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Tick element\r\n   */\n\n  AxisRenderer.prototype.createTick = function () {\n    return new AxisTick();\n  };\n\n  Object.defineProperty(AxisRenderer.prototype, \"labels\", {\n    /**\r\n     * A list of Axis' Label elements.\r\n     *\r\n     * @return Label elements\r\n     */\n    get: function () {\n      if (!this._labels) {\n        var label = this.createLabel();\n        this._labels = new ListTemplate(label);\n        label.applyOnClones = true;\n        label.events.on(\"enabled\", this.invalidateAxisItems, this, false);\n\n        this._disposers.push(new ListDisposer(this._labels));\n\n        this._disposers.push(this._labels.template);\n      }\n\n      return this._labels;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new label element, suitable for this Axis Renderer type.\r\n   *\r\n   * @return Label element\r\n   */\n\n  AxisRenderer.prototype.createLabel = function () {\n    return new AxisLabel();\n  };\n\n  Object.defineProperty(AxisRenderer.prototype, \"inside\", {\n    /**\r\n     * @return Labels inside?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inside\");\n    },\n\n    /**\r\n     * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n     *\r\n     * Does not work with all renderers, like AxisRendererRadial.\r\n     *\r\n     * @param value  Labels inside?\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"inside\", value)) {\n        if (this.axis) {\n          this.axis.invalidate();\n        }\n      }\n\n      if (value) {\n        this.width = 0;\n        this.height = 0;\n      } else {\n        this.width = undefined;\n        this.height = undefined;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"opposite\", {\n    /**\r\n     * @return Draw axis on opposite side?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"opposite\");\n    },\n\n    /**\r\n     * Indicates whether Axis should be drawn on the opposite side of the plot\r\n     * area than it would normally be drawn based on chart's settings.\r\n     *\r\n     * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n     * [[AxisRenderer Circular].\r\n     *\r\n     * @param value  Draw axis on opposite side?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"opposite\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"fullWidthTooltip\", {\n    /**\r\n     * @return Full width tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"fullWidthTooltip\");\n    },\n\n    /**\r\n     * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n     * (between two grid lines)\r\n     *\r\n     * NOTE: this setting is ignored on circular axis types.\r\n     *\r\n     * @param value Full width tooltip?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"fullWidthTooltip\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation\", {\n    /**\r\n     * @return Tooltip location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"tooltipLocation\");\n    },\n\n    /**\r\n     * Location within axis cell to show tooltip on. (0-1)\r\n     *\r\n     * 0 - show at the start\r\n     * 0.5 - show right in the middle\r\n     * 1 - show at the end\r\n     *\r\n     * @param value Tooltip location\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"tooltipLocation\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation2\", {\n    /**\r\n     * @return Tooltip location\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"tooltipLocation2\");\n    },\n\n    /**\r\n     * Location within secondary axis cell to show tooltip on. (0-1)\r\n     *\r\n     * 0 - show at the start\r\n     * 0.5 - show right in the middle\r\n     * 1 - show at the end\r\n     *\r\n     * @param value Tooltip location\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"tooltipLocation2\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"cellStartLocation\", {\n    /**\r\n     * @return Cell start (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cellStartLocation\");\n    },\n\n    /**\r\n     * Location for the cell start.\r\n     *\r\n     * Normally a \"cell\" is the whole available width in a category.\r\n     *\r\n     * If there are several clustered column-like series available, the whole\r\n     * space is divided between each clustered column, or column stacks.\r\n     *\r\n     * `cellStartLocation` identifies where, within available space, the actual\r\n     * cell starts.\r\n     *\r\n     * This, together with column series' `width` will affect actual width of\r\n     * columns, and thus gaps between them.\r\n     *\r\n     * This will affect category-like axes only, like [[DateAxis]], or\r\n     * [[CategoryAxis]].\r\n     *\r\n     * This is used to limit a space occupied by series like column.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value Cell start (0-1)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"cellStartLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"cellEndLocation\", {\n    /**\r\n     * @return Cell end (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cellEndLocation\");\n    },\n\n    /**\r\n     * Location for the cell end.\r\n     *\r\n     * Normally a \"cell\" is the whole available width in a category.\r\n     *\r\n     * If there are several clustered column-like series available, the whole\r\n     * space is divided between each clustered column, or column stacks.\r\n     *\r\n     * `cellEndLocation` identifies where, within available space, the actual\r\n     * cell ends.\r\n     *\r\n     * This, together with column series' `width` will affect actual width of\r\n     * columns, and thus gaps between them.\r\n     *\r\n     * This will affect category-like axes only, like [[DateAxis]], or\r\n     * [[CategoryAxis]].\r\n     *\r\n     * This is used to limit a space occupied by series like column.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value Cell end (0-1)\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"cellEndLocation\", value)) {\n        if (this.axis) {\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"inversed\", {\n    /**\r\n     * @return Flip axis?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"inversed\");\n    },\n\n    /**\r\n     * Indicates if the scale of the axis should be flipped.\r\n     *\r\n     * @param value Flip axis?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"inversed\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"minLabelPosition\", {\n    /**\r\n     * @return Min label position (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"minLabelPosition\");\n    },\n\n    /**\r\n     * Minimum position along the Axis, for labels.\r\n     *\r\n     * Labels, which have their position closer to the start of the Axis, will be\r\n     * automatically hidden.\r\n     *\r\n     * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n     * that would otherwise be drawn very near start of the Axis.\r\n     *\r\n     * This is especially usefull with `inside = true`, or if the chart hasn't\r\n     * got any extra margins.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value  Min label position (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"minLabelPosition\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(AxisRenderer.prototype, \"maxLabelPosition\", {\n    /**\r\n     * @return Max label position (0-1)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"maxLabelPosition\");\n    },\n\n    /**\r\n     * Maximum position along the Axis, for labels.\r\n     *\r\n     * Labels, which have their position closer to the and of the Axis, will be\r\n     * automatically hidden.\r\n     *\r\n     * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n     * that would otherwise be drawn very near end of the Axis.\r\n     *\r\n     * This is especially usefull with `inside = true`, or if the chart hasn't\r\n     * got any extra margins.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n     * @param value  Max label position (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"maxLabelPosition\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies all settings and related items from another object of the same\r\n   * type.\r\n   *\r\n   * @param source  Source object\r\n   */\n\n  AxisRenderer.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.grid.template.copyFrom(source.grid.template);\n    this.ticks.template.copyFrom(source.ticks.template);\n    this.labels.template.copyFrom(source.labels.template);\n    this.axisFills.template.copyFrom(source.axisFills.template);\n    this.line.copyFrom(source.line);\n    this.baseGrid.copyFrom(source.baseGrid);\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  AxisRenderer.prototype.toAxisPosition = function (value) {\n    return value;\n  };\n  /**\r\n   * Sets `visibility` property:\r\n   *\r\n   * * `true` - visible\r\n   * * `false` - hidden\r\n   *\r\n   * @param value  true - visible, false - hidden\r\n   * @return Current visibility\r\n   */\n\n\n  AxisRenderer.prototype.setVisibility = function (value) {\n    _super.prototype.setVisibility.call(this, value);\n\n    this.bulletsContainer.visible = value;\n  };\n\n  return AxisRenderer;\n}(Container);\n\nexport { AxisRenderer };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;","map":{"version":3,"names":["__extends","Container","MutableValueDisposer","AxisDataItem","AxisLine","AxisFill","Grid","AxisLabel","AxisTick","ListTemplate","ListDisposer","registry","percent","$math","$type","AxisRenderer","_super","_this","call","_chart","className","minGridDistance","inside","inversed","tooltipLocation","fullWidthTooltip","cellStartLocation","cellEndLocation","minLabelPosition","maxLabelPosition","shouldClone","gridContainer","createChild","layout","virtualParent","width","height","events","on","inited","invalidateAxisItems","breakContainer","isMeasured","bulletsContainer","line","strokeOpacity","baseGrid","disposers","_disposers","push","ticks","template","disabled","axisFills","interactionsEnabled","applyTheme","Object","defineProperty","prototype","get","_axis","set","axis","setAxis","enumerable","configurable","parent","bind","processRenderer","updateTooltip","labels","positionItem","item","point","moveTo","positionToPoint","position","position2","x","y","positionToAngle","positionToCoordinate","coordinate","axisFullLength","renderer","end","start","updateGridContainer","getHeight","pixelHeight","getWidth","pixelWidth","coordinateToPosition","coordinate2","round","pointToPosition","getPositionRangePath","startPosition","endPosition","invalidateDataItems","updateGridElement","grid","updateTickElement","tick","updateBullet","bullet","updateLabelElement","label","location","updateFillElement","fill","updateAxisLine","updateBaseGridElement","updateBreakElement","axisBreak","startLine","startPoint","toggleVisibility","endLine","endPoint","getPropertyValue","value","setPropertyValue","sprite","minPosition","maxPosition","dataItem","isNumber","updatedStart","updatedEnd","__disabled","createBreakSprites","_axisFills","createFill","applyOnClones","_grid","createGrid","_ticks","createTick","_labels","createLabel","invalidate","undefined","invalidateSeries","copyFrom","source","toAxisPosition","setVisibility","visible","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js"],"sourcesContent":["/**\r\n * Module, defining base Axis Renderer.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { AxisDataItem } from \"./Axis\";\r\nimport { AxisLine } from \"./AxisLine\";\r\nimport { AxisFill } from \"./AxisFill\";\r\nimport { Grid } from \"./Grid\";\r\nimport { AxisLabel } from \"./AxisLabel\";\r\nimport { AxisTick } from \"./AxisTick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all axis renderers.\r\n *\r\n * @see {@link IAxisRendererEvents} for a list of available events\r\n * @see {@link IAxisRendererAdapters} for a list of available Adapters\r\n */\r\nvar AxisRenderer = /** @class */ (function (_super) {\r\n    __extends(AxisRenderer, _super);\r\n    /**\r\n     * Constructor.\r\n     *\r\n     * @param axis Related axis\r\n     */\r\n    function AxisRenderer() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A related chart.\r\n         */\r\n        _this._chart = new MutableValueDisposer();\r\n        _this.className = \"AxisRenderer\";\r\n        // Set defaults\r\n        _this.minGridDistance = 50;\r\n        _this.inside = false;\r\n        _this.inversed = false;\r\n        _this.tooltipLocation = 0.5;\r\n        _this.fullWidthTooltip = false;\r\n        _this.cellStartLocation = 0;\r\n        _this.cellEndLocation = 1;\r\n        _this.minLabelPosition = 0;\r\n        _this.maxLabelPosition = 1;\r\n        _this.shouldClone = false;\r\n        var gridContainer = _this.createChild(Container);\r\n        gridContainer.shouldClone = false;\r\n        gridContainer.layout = \"none\";\r\n        //\tgridContainer.isMeasured = false;\r\n        gridContainer.virtualParent = _this;\r\n        gridContainer.width = percent(100);\r\n        gridContainer.height = percent(100);\r\n        _this.gridContainer = gridContainer;\r\n        // not good without this\r\n        gridContainer.events.on(\"maxsizechanged\", function () {\r\n            if (_this.inited) {\r\n                _this.invalidateAxisItems();\r\n            }\r\n        }, _this, false);\r\n        var breakContainer = _this.createChild(Container);\r\n        breakContainer.shouldClone = false;\r\n        breakContainer.isMeasured = false;\r\n        breakContainer.layout = \"none\";\r\n        breakContainer.width = percent(100);\r\n        breakContainer.height = percent(100);\r\n        _this.breakContainer = breakContainer;\r\n        var bulletsContainer = _this.createChild(Container);\r\n        bulletsContainer.shouldClone = false;\r\n        bulletsContainer.isMeasured = false;\r\n        bulletsContainer.layout = \"none\";\r\n        bulletsContainer.width = percent(100);\r\n        bulletsContainer.height = percent(100);\r\n        _this.bulletsContainer = bulletsContainer;\r\n        _this.line = _this.createChild(AxisLine);\r\n        _this.line.shouldClone = false;\r\n        _this.line.strokeOpacity = 0;\r\n        var baseGrid = _this.createChild(Grid);\r\n        baseGrid.shouldClone = false;\r\n        _this.baseGrid = baseGrid;\r\n        // Make elements disposable\r\n        var disposers = _this._disposers;\r\n        disposers.push(baseGrid);\r\n        disposers.push(_this.line);\r\n        disposers.push(gridContainer);\r\n        disposers.push(breakContainer);\r\n        disposers.push(bulletsContainer);\r\n        disposers.push(_this._chart);\r\n        _this.ticks.template.disabled = true;\r\n        _this.axisFills.template.disabled = true;\r\n        _this.axisFills.template.interactionsEnabled = false;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(AxisRenderer.prototype, \"axis\", {\r\n        /**\r\n         * Axis of a renderer\r\n         * @return axis Axis\r\n         */\r\n        get: function () {\r\n            return this._axis;\r\n        },\r\n        /**\r\n         * Axis of a renderer\r\n         * @param axis Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n    * @ignore\r\n    */\r\n    AxisRenderer.prototype.setAxis = function (axis) {\r\n        this._axis = axis;\r\n        this.baseGrid.parent = axis;\r\n        this.line.parent = axis;\r\n        this.gridContainer.bind(\"opacity\", axis);\r\n    };\r\n    /**\r\n     * Called when rendered is attached to an Axis, as well as a property of\r\n     * Axis that might affect the appearance is updated.\r\n     *\r\n     * E.g. `axis.opposite`, `axis.inside`, etc.\r\n     *\r\n     * This method is called **before** draw, so that any related setting\r\n     * changed in this method can be changed.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.processRenderer = function () {\r\n        this.events.on(\"sizechanged\", this.updateTooltip, this, false);\r\n        this.events.on(\"positionchanged\", this.updateTooltip, this, false);\r\n        this.labels.template.inside = this.inside;\r\n        this.ticks.template.inside = this.inside;\r\n    };\r\n    /**\r\n     * Updates Axis' tooltip.\r\n     *\r\n     * @todo Description (review)\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateTooltip = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"axisLength\", {\r\n        /**\r\n         * Returns actual length of the Axis, in pixels.\r\n         *\r\n         * @return Length (px)\r\n         */\r\n        get: function () {\r\n            // This is a placeholder method for extending classes to override.\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Re-positions an element to new coordinates.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item   A target element\r\n     * @param point  New coordinates\r\n     */\r\n    AxisRenderer.prototype.positionItem = function (item, point) {\r\n        if (item) {\r\n            item.moveTo(point);\r\n        }\r\n    };\r\n    /**\r\n     * Converts relative position on axis to point coordinates.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Point\r\n     */\r\n    AxisRenderer.prototype.positionToPoint = function (position, position2) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return { x: 0, y: 0 };\r\n    };\r\n    /**\r\n     * Converts relative position on axis to angle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review / units)\r\n     * @param position  Position (0-1)\r\n     * @return Angle\r\n     */\r\n    AxisRenderer.prototype.positionToAngle = function (position) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return 0;\r\n    };\r\n    /**\r\n     * Converts relative position (0-1) on axis to a pixel coordinate.\r\n     *\r\n     * @param position  Position (0-1)\r\n     * @return Coordinate (px)\r\n     */\r\n    AxisRenderer.prototype.positionToCoordinate = function (position) {\r\n        var coordinate;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (axis.renderer.inversed) {\r\n            coordinate = (axis.end - position) * axisFullLength;\r\n        }\r\n        else {\r\n            coordinate = (position - axis.start) * axisFullLength;\r\n        }\r\n        return coordinate;\r\n    };\r\n    AxisRenderer.prototype.updateGridContainer = function () {\r\n    };\r\n    AxisRenderer.prototype.getHeight = function () {\r\n        var gridContainer = this.gridContainer;\r\n        if (gridContainer.parent) {\r\n            return gridContainer.parent.pixelHeight;\r\n        }\r\n        return this.gridContainer.pixelHeight || 0;\r\n    };\r\n    AxisRenderer.prototype.getWidth = function () {\r\n        var gridContainer = this.gridContainer;\r\n        if (gridContainer.parent) {\r\n            return gridContainer.parent.pixelWidth;\r\n        }\r\n        return this.gridContainer.pixelWidth || 0;\r\n    };\r\n    /**\r\n     * Converts a coordinate in pixels to a relative position. (0-1)\r\n     *\r\n     * @param coordinate  Coordinate (px)\r\n     * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRenderer.prototype.coordinateToPosition = function (coordinate, coordinate2) {\r\n        var position;\r\n        var axis = this.axis;\r\n        var axisFullLength = axis.axisFullLength;\r\n        if (axis.renderer.inversed) {\r\n            position = axis.end - coordinate / axisFullLength;\r\n        }\r\n        else {\r\n            position = coordinate / axisFullLength + axis.start;\r\n        }\r\n        return $math.round(position, 5);\r\n    };\r\n    /**\r\n     * Converts a point at specific coordinates to a relative position (0-1)\r\n     * on the axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param point  Point\r\n     * @return Position (0-1)\r\n     */\r\n    AxisRenderer.prototype.pointToPosition = function (point) {\r\n        // This is a placeholder method for extending classes to override.\r\n        return 0;\r\n    };\r\n    /**\r\n     * [getPositionRangePath description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param startPosition  Starting position\r\n     * @param endPosition    End position\r\n     * @return SVG path\r\n     */\r\n    AxisRenderer.prototype.getPositionRangePath = function (startPosition, endPosition) {\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Invalidates all axis data items, effectively causing them re-evaluated.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description (review)\r\n     */\r\n    AxisRenderer.prototype.invalidateAxisItems = function () {\r\n        var axis = this.axis;\r\n        if (axis) {\r\n            axis.invalidateDataItems();\r\n        }\r\n    };\r\n    /**\r\n     * Updates and positions a grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param grid         Grid element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateGridElement = function (grid, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions a tick element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param tick         Tick element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateTickElement = function (tick, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions axis bullet.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param bullet       AxisBullet element\r\n     * @param position     Starting position\r\n     * @param endPosition  End position\r\n     */\r\n    AxisRenderer.prototype.updateBullet = function (bullet, position, endPosition) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions a label element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param label        Label element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRenderer.prototype.updateLabelElement = function (label, position, endPosition, location) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions the axis fill element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fill         Fill element\r\n     * @param position     Starting position\r\n     * @param endPosition  Ending position\r\n     */\r\n    AxisRenderer.prototype.updateFillElement = function (fill, position, endPosition) {\r\n        fill.startPosition = position;\r\n        fill.endPosition = endPosition;\r\n    };\r\n    /**\r\n     * Updates and positions the axis line element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateAxisLine = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions the base grid element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    AxisRenderer.prototype.updateBaseGridElement = function () {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    /**\r\n     * Updates and positions an axis break element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Break element\r\n     */\r\n    AxisRenderer.prototype.updateBreakElement = function (axisBreak) {\r\n        this.positionItem(axisBreak.startLine, axisBreak.startPoint);\r\n        this.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);\r\n        this.positionItem(axisBreak.endLine, axisBreak.endPoint);\r\n        this.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"minGridDistance\", {\r\n        /**\r\n         * @return Min distance (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minGridDistance\");\r\n        },\r\n        /**\r\n         * Minimum distance in pixels between grid elements.\r\n         *\r\n         * Use it to control density of the grid/labels on the axis.element.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info\r\n         * @param value  Min distance (px)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"minGridDistance\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateDataItems();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"chart\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Chart\r\n         */\r\n        get: function () {\r\n            return this._chart.get();\r\n        },\r\n        /**\r\n         * A chart, associated with the Axis.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param value  Chart\r\n         */\r\n        set: function (value) {\r\n            this._chart.set(value, null);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Toggles visibility of an element, based on its current position and\r\n     * min/max position settings.\r\n     *\r\n     * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param sprite       An element to toggle\r\n     * @param position     Elements current position\r\n     * @param minPosition  Min position setting\r\n     * @param maxPosition  Max position setting\r\n     */\r\n    AxisRenderer.prototype.toggleVisibility = function (sprite, position, minPosition, maxPosition) {\r\n        var axis = this.axis;\r\n        var dataItem = sprite.dataItem;\r\n        if (dataItem && dataItem instanceof AxisDataItem) {\r\n            if ($type.isNumber(dataItem.minPosition)) {\r\n                minPosition = dataItem.minPosition;\r\n            }\r\n            if ($type.isNumber(dataItem.maxPosition)) {\r\n                maxPosition = dataItem.maxPosition;\r\n            }\r\n        }\r\n        var updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);\r\n        var updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);\r\n        if (!sprite.disabled) {\r\n            if (position < updatedStart || position > updatedEnd) {\r\n                sprite.__disabled = true;\r\n            }\r\n            else {\r\n                sprite.__disabled = false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Creates visual elements for and axis break.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axisBreak Axis break\r\n     */\r\n    AxisRenderer.prototype.createBreakSprites = function (axisBreak) {\r\n        // This is a placeholder method for extending classes to override.\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"axisFills\", {\r\n        /**\r\n         * A list of Axis' Fill elements.\r\n         *\r\n         * Those are fill elements that cover the space between every second set\r\n         * of grid lines, and can be configured to create striped charts.\r\n         *\r\n         * Please note that these are disabled by default. To enable them, set\r\n         * template to true.\r\n         *\r\n         * ```TypeScript\r\n         * categoryAxis.renderer.axisFills.template.disabled = false;\r\n         * ```\r\n         * ```JavaScript\r\n         * categoryAxis.renderer.axisFills.template.disabled = false;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"renderer\": {\r\n         *       \"axisFills\": {\r\n         *         \"disabled\": false\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.\r\n         * @return Fill elements\r\n         */\r\n        get: function () {\r\n            if (!this._axisFills) {\r\n                var fill = this.createFill(this.axis);\r\n                this._axisFills = new ListTemplate(fill);\r\n                fill.applyOnClones = true;\r\n                fill.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._axisFills));\r\n                this._disposers.push(this._axisFills.template);\r\n            }\r\n            return this._axisFills;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new fill element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Fill element\r\n     */\r\n    AxisRenderer.prototype.createFill = function (axis) {\r\n        return new AxisFill(axis);\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"grid\", {\r\n        /**\r\n         * A list of Axis' Grid elements.\r\n         *\r\n         * @return Grid elements\r\n         */\r\n        get: function () {\r\n            if (!this._grid) {\r\n                var grid = this.createGrid();\r\n                this._grid = new ListTemplate(grid);\r\n                grid.applyOnClones = true;\r\n                grid.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._grid));\r\n                this._disposers.push(this._grid.template);\r\n            }\r\n            return this._grid;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new grid element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Grid element\r\n     */\r\n    AxisRenderer.prototype.createGrid = function () {\r\n        return new Grid();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"ticks\", {\r\n        /**\r\n         * A list of Axis' Tick elements.\r\n         *\r\n         * Please note that these are disabled by default. To enable ticks, you'll\r\n         * need to set `disabled` and `strokeOpacity` properties of the tick template.\r\n         *\r\n         * ```TypeScript\r\n         * categoryAxis.renderer.ticks.template.disabled = false;\r\n         * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n         * ```\r\n         * ```JavaScript\r\n         * categoryAxis.renderer.ticks.template.disabled = false;\r\n         * categoryAxis.renderer.ticks.template.strokeOpacity = 0.5;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     // ...\r\n         *     \"renderer\": {\r\n         *       \"ticks\": {\r\n         *         \"disabled\": false,\r\n         *         \"strokeOpacity\": 0.5\r\n         *       }\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @return Tick elements\r\n         */\r\n        get: function () {\r\n            if (!this._ticks) {\r\n                var tick = this.createTick();\r\n                tick.applyOnClones = true;\r\n                tick.isMeasured = false;\r\n                tick.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._ticks = new ListTemplate(tick);\r\n                this._disposers.push(new ListDisposer(this._ticks));\r\n                this._disposers.push(this._ticks.template);\r\n            }\r\n            return this._ticks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new tick element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Tick element\r\n     */\r\n    AxisRenderer.prototype.createTick = function () {\r\n        return new AxisTick();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"labels\", {\r\n        /**\r\n         * A list of Axis' Label elements.\r\n         *\r\n         * @return Label elements\r\n         */\r\n        get: function () {\r\n            if (!this._labels) {\r\n                var label = this.createLabel();\r\n                this._labels = new ListTemplate(label);\r\n                label.applyOnClones = true;\r\n                label.events.on(\"enabled\", this.invalidateAxisItems, this, false);\r\n                this._disposers.push(new ListDisposer(this._labels));\r\n                this._disposers.push(this._labels.template);\r\n            }\r\n            return this._labels;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new label element, suitable for this Axis Renderer type.\r\n     *\r\n     * @return Label element\r\n     */\r\n    AxisRenderer.prototype.createLabel = function () {\r\n        return new AxisLabel();\r\n    };\r\n    Object.defineProperty(AxisRenderer.prototype, \"inside\", {\r\n        /**\r\n         * @return Labels inside?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inside\");\r\n        },\r\n        /**\r\n         * Indicates whether Axis' labels and ticks should be drawn inside Plot area.\r\n         *\r\n         * Does not work with all renderers, like AxisRendererRadial.\r\n         *\r\n         * @param value  Labels inside?\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"inside\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                }\r\n            }\r\n            if (value) {\r\n                this.width = 0;\r\n                this.height = 0;\r\n            }\r\n            else {\r\n                this.width = undefined;\r\n                this.height = undefined;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"opposite\", {\r\n        /**\r\n         * @return Draw axis on opposite side?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"opposite\");\r\n        },\r\n        /**\r\n         * Indicates whether Axis should be drawn on the opposite side of the plot\r\n         * area than it would normally be drawn based on chart's settings.\r\n         *\r\n         * Does not work with all renderers, like [[AxisRendererRadial]] and\r\n         * [[AxisRenderer Circular].\r\n         *\r\n         * @param value  Draw axis on opposite side?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"opposite\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"fullWidthTooltip\", {\r\n        /**\r\n         * @return Full width tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"fullWidthTooltip\");\r\n        },\r\n        /**\r\n         * Indicates if Axis tooltip should take the whole width of the axis cell.\r\n         * (between two grid lines)\r\n         *\r\n         * NOTE: this setting is ignored on circular axis types.\r\n         *\r\n         * @param value Full width tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"fullWidthTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation\", {\r\n        /**\r\n         * @return Tooltip location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation\");\r\n        },\r\n        /**\r\n         * Location within axis cell to show tooltip on. (0-1)\r\n         *\r\n         * 0 - show at the start\r\n         * 0.5 - show right in the middle\r\n         * 1 - show at the end\r\n         *\r\n         * @param value Tooltip location\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"tooltipLocation2\", {\r\n        /**\r\n         * @return Tooltip location\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"tooltipLocation2\");\r\n        },\r\n        /**\r\n         * Location within secondary axis cell to show tooltip on. (0-1)\r\n         *\r\n         * 0 - show at the start\r\n         * 0.5 - show right in the middle\r\n         * 1 - show at the end\r\n         *\r\n         * @param value Tooltip location\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"tooltipLocation2\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"cellStartLocation\", {\r\n        /**\r\n         * @return Cell start (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cellStartLocation\");\r\n        },\r\n        /**\r\n         * Location for the cell start.\r\n         *\r\n         * Normally a \"cell\" is the whole available width in a category.\r\n         *\r\n         * If there are several clustered column-like series available, the whole\r\n         * space is divided between each clustered column, or column stacks.\r\n         *\r\n         * `cellStartLocation` identifies where, within available space, the actual\r\n         * cell starts.\r\n         *\r\n         * This, together with column series' `width` will affect actual width of\r\n         * columns, and thus gaps between them.\r\n         *\r\n         * This will affect category-like axes only, like [[DateAxis]], or\r\n         * [[CategoryAxis]].\r\n         *\r\n         * This is used to limit a space occupied by series like column.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value Cell start (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cellStartLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"cellEndLocation\", {\r\n        /**\r\n         * @return Cell end (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cellEndLocation\");\r\n        },\r\n        /**\r\n         * Location for the cell end.\r\n         *\r\n         * Normally a \"cell\" is the whole available width in a category.\r\n         *\r\n         * If there are several clustered column-like series available, the whole\r\n         * space is divided between each clustered column, or column stacks.\r\n         *\r\n         * `cellEndLocation` identifies where, within available space, the actual\r\n         * cell ends.\r\n         *\r\n         * This, together with column series' `width` will affect actual width of\r\n         * columns, and thus gaps between them.\r\n         *\r\n         * This will affect category-like axes only, like [[DateAxis]], or\r\n         * [[CategoryAxis]].\r\n         *\r\n         * This is used to limit a space occupied by series like column.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value Cell end (0-1)\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"cellEndLocation\", value)) {\r\n                if (this.axis) {\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"inversed\", {\r\n        /**\r\n         * @return Flip axis?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"inversed\");\r\n        },\r\n        /**\r\n         * Indicates if the scale of the axis should be flipped.\r\n         *\r\n         * @param value Flip axis?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"inversed\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"minLabelPosition\", {\r\n        /**\r\n         * @return Min label position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"minLabelPosition\");\r\n        },\r\n        /**\r\n         * Minimum position along the Axis, for labels.\r\n         *\r\n         * Labels, which have their position closer to the start of the Axis, will be\r\n         * automatically hidden.\r\n         *\r\n         * E.g., setting this to 0.05 (5% of total axis length) would hide labels,\r\n         * that would otherwise be drawn very near start of the Axis.\r\n         *\r\n         * This is especially usefull with `inside = true`, or if the chart hasn't\r\n         * got any extra margins.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value  Min label position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"minLabelPosition\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(AxisRenderer.prototype, \"maxLabelPosition\", {\r\n        /**\r\n         * @return Max label position (0-1)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maxLabelPosition\");\r\n        },\r\n        /**\r\n         * Maximum position along the Axis, for labels.\r\n         *\r\n         * Labels, which have their position closer to the and of the Axis, will be\r\n         * automatically hidden.\r\n         *\r\n         * E.g., setting this to 0.95 (95% of total axis length) would hide labels,\r\n         * that would otherwise be drawn very near end of the Axis.\r\n         *\r\n         * This is especially usefull with `inside = true`, or if the chart hasn't\r\n         * got any extra margins.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.\r\n         * @param value  Max label position (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maxLabelPosition\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all settings and related items from another object of the same\r\n     * type.\r\n     *\r\n     * @param source  Source object\r\n     */\r\n    AxisRenderer.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.grid.template.copyFrom(source.grid.template);\r\n        this.ticks.template.copyFrom(source.ticks.template);\r\n        this.labels.template.copyFrom(source.labels.template);\r\n        this.axisFills.template.copyFrom(source.axisFills.template);\r\n        this.line.copyFrom(source.line);\r\n        this.baseGrid.copyFrom(source.baseGrid);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    AxisRenderer.prototype.toAxisPosition = function (value) {\r\n        return value;\r\n    };\r\n    /**\r\n     * Sets `visibility` property:\r\n     *\r\n     * * `true` - visible\r\n     * * `false` - hidden\r\n     *\r\n     * @param value  true - visible, false - hidden\r\n     * @return Current visibility\r\n     */\r\n    AxisRenderer.prototype.setVisibility = function (value) {\r\n        _super.prototype.setVisibility.call(this, value);\r\n        this.bulletsContainer.visible = value;\r\n    };\r\n    return AxisRenderer;\r\n}(Container));\r\nexport { AxisRenderer };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"AxisRenderer\"] = AxisRenderer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}