{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Bullet } from \"./Bullet\";\nimport { Circle } from \"../../core/elements/Circle\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar CircleBullet =\n/** @class */\nfunction (_super) {\n  __extends(CircleBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function CircleBullet() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"CircleBullet\";\n\n    var circle = _this.createChild(Circle);\n\n    circle.shouldClone = false;\n    circle.radius = 5;\n    circle.isMeasured = false;\n    _this.circle = circle;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[CircleBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n\n\n  CircleBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.circle.copyFrom(source.circle);\n  };\n\n  return CircleBullet;\n}(Bullet);\n\nexport { CircleBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;","map":{"version":3,"names":["__extends","Bullet","Circle","registry","CircleBullet","_super","_this","call","className","circle","createChild","shouldClone","radius","isMeasured","applyTheme","prototype","copyFrom","source","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar CircleBullet = /** @class */ (function (_super) {\r\n    __extends(CircleBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function CircleBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"CircleBullet\";\r\n        var circle = _this.createChild(Circle);\r\n        circle.shouldClone = false;\r\n        circle.radius = 5;\r\n        circle.isMeasured = false;\r\n        _this.circle = circle;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[CircleBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    CircleBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.circle.copyFrom(source.circle);\r\n    };\r\n    return CircleBullet;\r\n}(Bullet));\r\nexport { CircleBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"CircleBullet\"] = CircleBullet;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,YAAY;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAChDL,SAAS,CAACI,YAAD,EAAeC,MAAf,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,YAAT,GAAwB;IACpB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,cAAlB;;IACA,IAAIC,MAAM,GAAGH,KAAK,CAACI,WAAN,CAAkBR,MAAlB,CAAb;;IACAO,MAAM,CAACE,WAAP,GAAqB,KAArB;IACAF,MAAM,CAACG,MAAP,GAAgB,CAAhB;IACAH,MAAM,CAACI,UAAP,GAAoB,KAApB;IACAP,KAAK,CAACG,MAAN,GAAeA,MAAf;;IACAH,KAAK,CAACQ,UAAN;;IACA,OAAOR,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;;;EACIF,YAAY,CAACW,SAAb,CAAuBC,QAAvB,GAAkC,UAAUC,MAAV,EAAkB;IAChDZ,MAAM,CAACU,SAAP,CAAiBC,QAAjB,CAA0BT,IAA1B,CAA+B,IAA/B,EAAqCU,MAArC;;IACA,KAAKR,MAAL,CAAYO,QAAZ,CAAqBC,MAAM,CAACR,MAA5B;EACH,CAHD;;EAIA,OAAOL,YAAP;AACH,CA3BiC,CA2BhCH,MA3BgC,CAAlC;;AA4BA,SAASG,YAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,QAAQ,CAACe,iBAAT,CAA2B,cAA3B,IAA6Cd,YAA7C"},"metadata":{},"sourceType":"module"}