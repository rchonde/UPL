{"ast":null,"code":"/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../../core/Container\";\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\nimport { registry } from \"../../core/Registry\";\nimport { percent } from \"../../core/utils/Percent\";\nimport * as $math from \"../../core/utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar Column =\n/** @class */\nfunction (_super) {\n  __extends(Column, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Column() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Column\";\n    _this.width = percent(80);\n    _this.height = percent(80); //this.isMeasured = true; // for correct position of the tooltip\n\n    _this.events.disableType(\"transformed\"); // not to bug parent\n\n\n    _this.applyOnClones = true;\n    _this.strokeOpacity = 1;\n    _this.layout = \"none\";\n\n    _this.createAssets(); // otherwise users will have to set layout themselves if they'll want to align, scale etc children\n\n\n    _this.events.on(\"childadded\", _this.handleKidAdded, _this, false);\n\n    return _this;\n  }\n  /**\r\n   * @ignore\r\n   */\n\n\n  Column.prototype.handleKidAdded = function () {\n    if (this.layout == \"none\") {\n      this.layout = \"absolute\";\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  Column.prototype.createAssets = function () {\n    this.column = this.createChild(RoundedRectangle);\n    this.column.shouldClone = false;\n    this.column.isMeasured = false;\n    this.column.cornerRadius(0, 0, 0, 0);\n\n    this._disposers.push(this.column);\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Column.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    var column = this.column;\n\n    if (column) {\n      column.width = $math.min(this.pixelWidth, this.maxWidth);\n      column.height = $math.min(this.pixelHeight, this.maxHeight);\n\n      if (column.invalid) {\n        column.validate(); // important!\n      }\n    }\n  };\n  /**\r\n   * Copies all parameters from another [[Column]].\r\n   *\r\n   * @param source Source Column\r\n   */\n\n\n  Column.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    if (this.column) {\n      this.column.copyFrom(source.column);\n    }\n  };\n\n  Object.defineProperty(Column.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n\n      if (this.column) {\n        return {\n          x: 0,\n          y: 0,\n          width: this.column.measuredWidth,\n          height: this.column.measuredHeight\n        };\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: $math.min(this.pixelWidth, this.maxWidth),\n          height: $math.min(this.pixelHeight, this.maxHeight)\n        };\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Column;\n}(Container);\n\nexport { Column };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Column\"] = Column;","map":{"version":3,"names":["__extends","Container","RoundedRectangle","registry","percent","$math","Column","_super","_this","call","className","width","height","events","disableType","applyOnClones","strokeOpacity","layout","createAssets","on","handleKidAdded","prototype","column","createChild","shouldClone","isMeasured","cornerRadius","_disposers","push","validate","min","pixelWidth","maxWidth","pixelHeight","maxHeight","invalid","copyFrom","source","Object","defineProperty","get","definedBBox","x","y","measuredWidth","measuredHeight","enumerable","configurable","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js"],"sourcesContent":["/**\r\n * Module that defines everything related to building Columns.\r\n * It is a container which has column element which is a RoundedRectangle.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../../core/Container\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to creates Columns.\r\n *\r\n * @see {@link IColumnEvents} for a list of available events\r\n * @see {@link IColumnAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar Column = /** @class */ (function (_super) {\r\n    __extends(Column, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Column() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Column\";\r\n        _this.width = percent(80);\r\n        _this.height = percent(80);\r\n        //this.isMeasured = true; // for correct position of the tooltip\r\n        _this.events.disableType(\"transformed\"); // not to bug parent\r\n        _this.applyOnClones = true;\r\n        _this.strokeOpacity = 1;\r\n        _this.layout = \"none\";\r\n        _this.createAssets();\r\n        // otherwise users will have to set layout themselves if they'll want to align, scale etc children\r\n        _this.events.on(\"childadded\", _this.handleKidAdded, _this, false);\r\n        return _this;\r\n    }\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column.prototype.handleKidAdded = function () {\r\n        if (this.layout == \"none\") {\r\n            this.layout = \"absolute\";\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    Column.prototype.createAssets = function () {\r\n        this.column = this.createChild(RoundedRectangle);\r\n        this.column.shouldClone = false;\r\n        this.column.isMeasured = false;\r\n        this.column.cornerRadius(0, 0, 0, 0);\r\n        this._disposers.push(this.column);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    Column.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        var column = this.column;\r\n        if (column) {\r\n            column.width = $math.min(this.pixelWidth, this.maxWidth);\r\n            column.height = $math.min(this.pixelHeight, this.maxHeight);\r\n            if (column.invalid) {\r\n                column.validate(); // important!\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Copies all parameters from another [[Column]].\r\n     *\r\n     * @param source Source Column\r\n     */\r\n    Column.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        if (this.column) {\r\n            this.column.copyFrom(source.column);\r\n        }\r\n    };\r\n    Object.defineProperty(Column.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.column) {\r\n                return { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: $math.min(this.pixelWidth, this.maxWidth), height: $math.min(this.pixelHeight, this.maxHeight) };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Column;\r\n}(Container));\r\nexport { Column };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Column\"] = Column;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}