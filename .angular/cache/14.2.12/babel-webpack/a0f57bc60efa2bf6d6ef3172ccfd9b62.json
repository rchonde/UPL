{"ast":null,"code":"import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { forwardRef, PLATFORM_ID, Component, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport DxSwitch from 'devextreme/ui/switch';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DxSwitchComponent),\n  multi: true\n};\n/**\r\n * The Switch is a UI component that can be in two states: &apos;On&apos; and &apos;Off&apos;.\r\n\r\n */\n\nclass DxSwitchComponent extends DxComponent {\n  constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    this._watcherHelper = _watcherHelper;\n    this._idh = _idh;\n\n    this.touched = _ => {};\n\n    this._createEventEmitters([{\n      subscribe: 'contentReady',\n      emit: 'onContentReady'\n    }, {\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      subscribe: 'valueChanged',\n      emit: 'onValueChanged'\n    }, {\n      emit: 'accessKeyChange'\n    }, {\n      emit: 'activeStateEnabledChange'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'focusStateEnabledChange'\n    }, {\n      emit: 'heightChange'\n    }, {\n      emit: 'hintChange'\n    }, {\n      emit: 'hoverStateEnabledChange'\n    }, {\n      emit: 'isValidChange'\n    }, {\n      emit: 'nameChange'\n    }, {\n      emit: 'readOnlyChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'switchedOffTextChange'\n    }, {\n      emit: 'switchedOnTextChange'\n    }, {\n      emit: 'tabIndexChange'\n    }, {\n      emit: 'validationErrorChange'\n    }, {\n      emit: 'validationErrorsChange'\n    }, {\n      emit: 'validationMessageModeChange'\n    }, {\n      emit: 'validationMessagePositionChange'\n    }, {\n      emit: 'validationStatusChange'\n    }, {\n      emit: 'valueChange'\n    }, {\n      emit: 'visibleChange'\n    }, {\n      emit: 'widthChange'\n    }, {\n      emit: 'onBlur'\n    }]);\n\n    this._idh.setHost(this);\n\n    optionHost.setHost(this);\n  }\n  /**\r\n   * Specifies the shortcut key that sets focus on the UI component.\r\n  \r\n   */\n\n\n  get accessKey() {\n    return this._getOption('accessKey');\n  }\n\n  set accessKey(value) {\n    this._setOption('accessKey', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n  \r\n   */\n\n\n  get activeStateEnabled() {\n    return this._getOption('activeStateEnabled');\n  }\n\n  set activeStateEnabled(value) {\n    this._setOption('activeStateEnabled', value);\n  }\n  /**\r\n   * Specifies whether the UI component responds to user interaction.\r\n  \r\n   */\n\n\n  get disabled() {\n    return this._getOption('disabled');\n  }\n\n  set disabled(value) {\n    this._setOption('disabled', value);\n  }\n  /**\r\n   * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n  \r\n   */\n\n\n  get elementAttr() {\n    return this._getOption('elementAttr');\n  }\n\n  set elementAttr(value) {\n    this._setOption('elementAttr', value);\n  }\n  /**\r\n   * Specifies whether the UI component can be focused using keyboard navigation.\r\n  \r\n   */\n\n\n  get focusStateEnabled() {\n    return this._getOption('focusStateEnabled');\n  }\n\n  set focusStateEnabled(value) {\n    this._setOption('focusStateEnabled', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s height.\r\n  \r\n   */\n\n\n  get height() {\n    return this._getOption('height');\n  }\n\n  set height(value) {\n    this._setOption('height', value);\n  }\n  /**\r\n   * Specifies text for a hint that appears when a user pauses on the UI component.\r\n  \r\n   */\n\n\n  get hint() {\n    return this._getOption('hint');\n  }\n\n  set hint(value) {\n    this._setOption('hint', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its state when a user pauses on it.\r\n  \r\n   */\n\n\n  get hoverStateEnabled() {\n    return this._getOption('hoverStateEnabled');\n  }\n\n  set hoverStateEnabled(value) {\n    this._setOption('hoverStateEnabled', value);\n  }\n  /**\r\n   * Specifies or indicates whether the editor&apos;s value is valid.\r\n  \r\n   */\n\n\n  get isValid() {\n    return this._getOption('isValid');\n  }\n\n  set isValid(value) {\n    this._setOption('isValid', value);\n  }\n  /**\r\n   * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n  \r\n   */\n\n\n  get name() {\n    return this._getOption('name');\n  }\n\n  set name(value) {\n    this._setOption('name', value);\n  }\n  /**\r\n   * Specifies whether the editor is read-only.\r\n  \r\n   */\n\n\n  get readOnly() {\n    return this._getOption('readOnly');\n  }\n\n  set readOnly(value) {\n    this._setOption('readOnly', value);\n  }\n  /**\r\n   * Switches the UI component to a right-to-left representation.\r\n  \r\n   */\n\n\n  get rtlEnabled() {\n    return this._getOption('rtlEnabled');\n  }\n\n  set rtlEnabled(value) {\n    this._setOption('rtlEnabled', value);\n  }\n  /**\r\n   * Specifies the text displayed when the UI component is switched off.\r\n  \r\n   */\n\n\n  get switchedOffText() {\n    return this._getOption('switchedOffText');\n  }\n\n  set switchedOffText(value) {\n    this._setOption('switchedOffText', value);\n  }\n  /**\r\n   * Specifies the text displayed when the UI component is switched on.\r\n  \r\n   */\n\n\n  get switchedOnText() {\n    return this._getOption('switchedOnText');\n  }\n\n  set switchedOnText(value) {\n    this._setOption('switchedOnText', value);\n  }\n  /**\r\n   * Specifies the number of the element when the Tab key is used for navigating.\r\n  \r\n   */\n\n\n  get tabIndex() {\n    return this._getOption('tabIndex');\n  }\n\n  set tabIndex(value) {\n    this._setOption('tabIndex', value);\n  }\n  /**\r\n   * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n  \r\n   */\n\n\n  get validationError() {\n    return this._getOption('validationError');\n  }\n\n  set validationError(value) {\n    this._setOption('validationError', value);\n  }\n  /**\r\n   * An array of the validation rules that failed.\r\n  \r\n   */\n\n\n  get validationErrors() {\n    return this._getOption('validationErrors');\n  }\n\n  set validationErrors(value) {\n    this._setOption('validationErrors', value);\n  }\n  /**\r\n   * Specifies how the message about the validation rules that are not satisfied by this editor&apos;s value is displayed.\r\n  \r\n   */\n\n\n  get validationMessageMode() {\n    return this._getOption('validationMessageMode');\n  }\n\n  set validationMessageMode(value) {\n    this._setOption('validationMessageMode', value);\n  }\n  /**\r\n   * Specifies the position of a validation message relative to the component. The validation message describes the validation rules that this component&apos;s value does not satisfy.\r\n  \r\n   */\n\n\n  get validationMessagePosition() {\n    return this._getOption('validationMessagePosition');\n  }\n\n  set validationMessagePosition(value) {\n    this._setOption('validationMessagePosition', value);\n  }\n  /**\r\n   * Indicates or specifies the current validation status.\r\n  \r\n   */\n\n\n  get validationStatus() {\n    return this._getOption('validationStatus');\n  }\n\n  set validationStatus(value) {\n    this._setOption('validationStatus', value);\n  }\n  /**\r\n   * A Boolean value specifying whether the current switch state is &apos;On&apos; or &apos;Off&apos;.\r\n  \r\n   */\n\n\n  get value() {\n    return this._getOption('value');\n  }\n\n  set value(value) {\n    this._setOption('value', value);\n  }\n  /**\r\n   * Specifies whether the UI component is visible.\r\n  \r\n   */\n\n\n  get visible() {\n    return this._getOption('visible');\n  }\n\n  set visible(value) {\n    this._setOption('visible', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s width.\r\n  \r\n   */\n\n\n  get width() {\n    return this._getOption('width');\n  }\n\n  set width(value) {\n    this._setOption('width', value);\n  }\n\n  change(_) {}\n\n  _createInstance(element, options) {\n    return new DxSwitch(element, options);\n  }\n\n  writeValue(value) {\n    this.eventHelper.lockedValueChangeEvent = true;\n    this.value = value;\n    this.eventHelper.lockedValueChangeEvent = false;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  registerOnChange(fn) {\n    this.change = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.touched = fn;\n  }\n\n  _createWidget(element) {\n    super._createWidget(element);\n\n    this.instance.on('focusOut', e => {\n      this.eventHelper.fireNgEvent('onBlur', [e]);\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyWidget();\n  }\n\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n    this.setupChanges('validationErrors', changes);\n  }\n\n  setupChanges(prop, changes) {\n    if (!(prop in this._optionsToUpdate)) {\n      this._idh.setup(prop, changes);\n    }\n  }\n\n  ngDoCheck() {\n    this._idh.doCheck('validationErrors');\n\n    this._watcherHelper.checkWatchers();\n\n    super.ngDoCheck();\n    super.clearChangedOptions();\n  }\n\n  _setOption(name, value) {\n    let isSetup = this._idh.setupSingle(name, value);\n\n    let isChanged = this._idh.getChanges(name, value) !== null;\n\n    if (isSetup || isChanged) {\n      super._setOption(name, value);\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nDxSwitchComponent.ɵfac = function DxSwitchComponent_Factory(t) {\n  return new (t || DxSwitchComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n/** @nocollapse */\n\n\nDxSwitchComponent.ɵcmp =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineComponent({\n  type: DxSwitchComponent,\n  selectors: [[\"dx-switch\"]],\n  hostBindings: function DxSwitchComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"valueChange\", function DxSwitchComponent_valueChange_HostBindingHandler($event) {\n        return ctx.change($event);\n      })(\"onBlur\", function DxSwitchComponent_onBlur_HostBindingHandler($event) {\n        return ctx.touched($event);\n      });\n    }\n  },\n  inputs: {\n    accessKey: \"accessKey\",\n    activeStateEnabled: \"activeStateEnabled\",\n    disabled: \"disabled\",\n    elementAttr: \"elementAttr\",\n    focusStateEnabled: \"focusStateEnabled\",\n    height: \"height\",\n    hint: \"hint\",\n    hoverStateEnabled: \"hoverStateEnabled\",\n    isValid: \"isValid\",\n    name: \"name\",\n    readOnly: \"readOnly\",\n    rtlEnabled: \"rtlEnabled\",\n    switchedOffText: \"switchedOffText\",\n    switchedOnText: \"switchedOnText\",\n    tabIndex: \"tabIndex\",\n    validationError: \"validationError\",\n    validationErrors: \"validationErrors\",\n    validationMessageMode: \"validationMessageMode\",\n    validationMessagePosition: \"validationMessagePosition\",\n    validationStatus: \"validationStatus\",\n    value: \"value\",\n    visible: \"visible\",\n    width: \"width\"\n  },\n  outputs: {\n    onContentReady: \"onContentReady\",\n    onDisposing: \"onDisposing\",\n    onInitialized: \"onInitialized\",\n    onOptionChanged: \"onOptionChanged\",\n    onValueChanged: \"onValueChanged\",\n    accessKeyChange: \"accessKeyChange\",\n    activeStateEnabledChange: \"activeStateEnabledChange\",\n    disabledChange: \"disabledChange\",\n    elementAttrChange: \"elementAttrChange\",\n    focusStateEnabledChange: \"focusStateEnabledChange\",\n    heightChange: \"heightChange\",\n    hintChange: \"hintChange\",\n    hoverStateEnabledChange: \"hoverStateEnabledChange\",\n    isValidChange: \"isValidChange\",\n    nameChange: \"nameChange\",\n    readOnlyChange: \"readOnlyChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    switchedOffTextChange: \"switchedOffTextChange\",\n    switchedOnTextChange: \"switchedOnTextChange\",\n    tabIndexChange: \"tabIndexChange\",\n    validationErrorChange: \"validationErrorChange\",\n    validationErrorsChange: \"validationErrorsChange\",\n    validationMessageModeChange: \"validationMessageModeChange\",\n    validationMessagePositionChange: \"validationMessagePositionChange\",\n    validationStatusChange: \"validationStatusChange\",\n    valueChange: \"valueChange\",\n    visibleChange: \"visibleChange\",\n    widthChange: \"widthChange\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxSwitchComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxSwitchComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-switch',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.DxTemplateHost\n    }, {\n      type: i1.WatcherHelper\n    }, {\n      type: i1.IterableDifferHelper\n    }, {\n      type: i1.NestedOptionHost\n    }, {\n      type: i2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    accessKey: [{\n      type: Input\n    }],\n    activeStateEnabled: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    focusStateEnabled: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    hint: [{\n      type: Input\n    }],\n    hoverStateEnabled: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    switchedOffText: [{\n      type: Input\n    }],\n    switchedOnText: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    validationError: [{\n      type: Input\n    }],\n    validationErrors: [{\n      type: Input\n    }],\n    validationMessageMode: [{\n      type: Input\n    }],\n    validationMessagePosition: [{\n      type: Input\n    }],\n    validationStatus: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    onContentReady: [{\n      type: Output\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    onValueChanged: [{\n      type: Output\n    }],\n    accessKeyChange: [{\n      type: Output\n    }],\n    activeStateEnabledChange: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    focusStateEnabledChange: [{\n      type: Output\n    }],\n    heightChange: [{\n      type: Output\n    }],\n    hintChange: [{\n      type: Output\n    }],\n    hoverStateEnabledChange: [{\n      type: Output\n    }],\n    isValidChange: [{\n      type: Output\n    }],\n    nameChange: [{\n      type: Output\n    }],\n    readOnlyChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    switchedOffTextChange: [{\n      type: Output\n    }],\n    switchedOnTextChange: [{\n      type: Output\n    }],\n    tabIndexChange: [{\n      type: Output\n    }],\n    validationErrorChange: [{\n      type: Output\n    }],\n    validationErrorsChange: [{\n      type: Output\n    }],\n    validationMessageModeChange: [{\n      type: Output\n    }],\n    validationMessagePositionChange: [{\n      type: Output\n    }],\n    validationStatusChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    widthChange: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    change: [{\n      type: HostListener,\n      args: ['valueChange', ['$event']]\n    }],\n    touched: [{\n      type: HostListener,\n      args: ['onBlur', ['$event']]\n    }]\n  });\n})();\n\nclass DxSwitchModule {}\n/** @nocollapse */\n\n\nDxSwitchModule.ɵfac = function DxSwitchModule_Factory(t) {\n  return new (t || DxSwitchModule)();\n};\n/** @nocollapse */\n\n\nDxSwitchModule.ɵmod =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineNgModule({\n  type: DxSwitchModule\n});\n/** @nocollapse */\n\nDxSwitchModule.ɵinj =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineInjector({\n  imports: [[DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxSwitchModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxSwitchComponent],\n      exports: [DxSwitchComponent, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxSwitchModule, {\n    declarations: [DxSwitchComponent],\n    imports: [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n    exports: [DxSwitchComponent, DxTemplateModule]\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxSwitchComponent, DxSwitchModule };","map":{"version":3,"names":["i2","BrowserTransferStateModule","i0","forwardRef","PLATFORM_ID","Component","Inject","Input","Output","HostListener","NgModule","DxSwitch","NG_VALUE_ACCESSOR","i1","DxComponent","DxTemplateHost","WatcherHelper","NestedOptionHost","IterableDifferHelper","DxIntegrationModule","DxTemplateModule","CUSTOM_VALUE_ACCESSOR_PROVIDER","provide","useExisting","DxSwitchComponent","multi","constructor","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","touched","_","_createEventEmitters","subscribe","emit","setHost","accessKey","_getOption","value","_setOption","activeStateEnabled","disabled","elementAttr","focusStateEnabled","height","hint","hoverStateEnabled","isValid","name","readOnly","rtlEnabled","switchedOffText","switchedOnText","tabIndex","validationError","validationErrors","validationMessageMode","validationMessagePosition","validationStatus","visible","width","change","_createInstance","element","options","writeValue","eventHelper","lockedValueChangeEvent","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","_createWidget","instance","on","e","fireNgEvent","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","isSetup","setupSingle","isChanged","getChanges","ɵfac","DxSwitchComponent_Factory","t","ɵɵdirectiveInject","ElementRef","NgZone","TransferState","ɵcmp","ɵɵdefineComponent","type","selectors","hostBindings","DxSwitchComponent_HostBindings","rf","ctx","ɵɵlistener","DxSwitchComponent_valueChange_HostBindingHandler","$event","DxSwitchComponent_onBlur_HostBindingHandler","inputs","outputs","onContentReady","onDisposing","onInitialized","onOptionChanged","onValueChanged","accessKeyChange","activeStateEnabledChange","disabledChange","elementAttrChange","focusStateEnabledChange","heightChange","hintChange","hoverStateEnabledChange","isValidChange","nameChange","readOnlyChange","rtlEnabledChange","switchedOffTextChange","switchedOnTextChange","tabIndexChange","validationErrorChange","validationErrorsChange","validationMessageModeChange","validationMessagePositionChange","validationStatusChange","valueChange","visibleChange","widthChange","onBlur","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","decls","vars","template","DxSwitchComponent_Template","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","providers","undefined","decorators","DxSwitchModule","DxSwitchModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-switch.js"],"sourcesContent":["import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { forwardRef, PLATFORM_ID, Component, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport DxSwitch from 'devextreme/ui/switch';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxSwitchComponent),\r\n    multi: true\r\n};\r\n/**\r\n * The Switch is a UI component that can be in two states: &apos;On&apos; and &apos;Off&apos;.\r\n\r\n */\r\nclass DxSwitchComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._watcherHelper = _watcherHelper;\r\n        this._idh = _idh;\r\n        this.touched = (_) => { };\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'switchedOffTextChange' },\r\n            { emit: 'switchedOnTextChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationErrorsChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'validationMessagePositionChange' },\r\n            { emit: 'validationStatusChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\r\n    get accessKey() {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n    \r\n     */\r\n    get activeStateEnabled() {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    get disabled() {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value) {\r\n        this._setOption('disabled', value);\r\n    }\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component can be focused using keyboard navigation.\r\n    \r\n     */\r\n    get focusStateEnabled() {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    get hint() {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value) {\r\n        this._setOption('hint', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    get hoverStateEnabled() {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies or indicates whether the editor&apos;s value is valid.\r\n    \r\n     */\r\n    get isValid() {\r\n        return this._getOption('isValid');\r\n    }\r\n    set isValid(value) {\r\n        this._setOption('isValid', value);\r\n    }\r\n    /**\r\n     * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n    \r\n     */\r\n    get name() {\r\n        return this._getOption('name');\r\n    }\r\n    set name(value) {\r\n        this._setOption('name', value);\r\n    }\r\n    /**\r\n     * Specifies whether the editor is read-only.\r\n    \r\n     */\r\n    get readOnly() {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the text displayed when the UI component is switched off.\r\n    \r\n     */\r\n    get switchedOffText() {\r\n        return this._getOption('switchedOffText');\r\n    }\r\n    set switchedOffText(value) {\r\n        this._setOption('switchedOffText', value);\r\n    }\r\n    /**\r\n     * Specifies the text displayed when the UI component is switched on.\r\n    \r\n     */\r\n    get switchedOnText() {\r\n        return this._getOption('switchedOnText');\r\n    }\r\n    set switchedOnText(value) {\r\n        this._setOption('switchedOnText', value);\r\n    }\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n    \r\n     */\r\n    get tabIndex() {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n    /**\r\n     * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n    \r\n     */\r\n    get validationError() {\r\n        return this._getOption('validationError');\r\n    }\r\n    set validationError(value) {\r\n        this._setOption('validationError', value);\r\n    }\r\n    /**\r\n     * An array of the validation rules that failed.\r\n    \r\n     */\r\n    get validationErrors() {\r\n        return this._getOption('validationErrors');\r\n    }\r\n    set validationErrors(value) {\r\n        this._setOption('validationErrors', value);\r\n    }\r\n    /**\r\n     * Specifies how the message about the validation rules that are not satisfied by this editor&apos;s value is displayed.\r\n    \r\n     */\r\n    get validationMessageMode() {\r\n        return this._getOption('validationMessageMode');\r\n    }\r\n    set validationMessageMode(value) {\r\n        this._setOption('validationMessageMode', value);\r\n    }\r\n    /**\r\n     * Specifies the position of a validation message relative to the component. The validation message describes the validation rules that this component&apos;s value does not satisfy.\r\n    \r\n     */\r\n    get validationMessagePosition() {\r\n        return this._getOption('validationMessagePosition');\r\n    }\r\n    set validationMessagePosition(value) {\r\n        this._setOption('validationMessagePosition', value);\r\n    }\r\n    /**\r\n     * Indicates or specifies the current validation status.\r\n    \r\n     */\r\n    get validationStatus() {\r\n        return this._getOption('validationStatus');\r\n    }\r\n    set validationStatus(value) {\r\n        this._setOption('validationStatus', value);\r\n    }\r\n    /**\r\n     * A Boolean value specifying whether the current switch state is &apos;On&apos; or &apos;Off&apos;.\r\n    \r\n     */\r\n    get value() {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value) {\r\n        this._setOption('value', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component is visible.\r\n    \r\n     */\r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value) {\r\n        this._setOption('visible', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    change(_) { }\r\n    _createInstance(element, options) {\r\n        return new DxSwitch(element, options);\r\n    }\r\n    writeValue(value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    }\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    registerOnChange(fn) { this.change = fn; }\r\n    registerOnTouched(fn) { this.touched = fn; }\r\n    _createWidget(element) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('validationErrors', changes);\r\n    }\r\n    setupChanges(prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        this._idh.doCheck('validationErrors');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n    _setOption(name, value) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ DxSwitchComponent.ɵfac = function DxSwitchComponent_Factory(t) { return new (t || DxSwitchComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\r\n/** @nocollapse */ DxSwitchComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxSwitchComponent, selectors: [[\"dx-switch\"]], hostBindings: function DxSwitchComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵlistener(\"valueChange\", function DxSwitchComponent_valueChange_HostBindingHandler($event) { return ctx.change($event); })(\"onBlur\", function DxSwitchComponent_onBlur_HostBindingHandler($event) { return ctx.touched($event); });\r\n    } }, inputs: { accessKey: \"accessKey\", activeStateEnabled: \"activeStateEnabled\", disabled: \"disabled\", elementAttr: \"elementAttr\", focusStateEnabled: \"focusStateEnabled\", height: \"height\", hint: \"hint\", hoverStateEnabled: \"hoverStateEnabled\", isValid: \"isValid\", name: \"name\", readOnly: \"readOnly\", rtlEnabled: \"rtlEnabled\", switchedOffText: \"switchedOffText\", switchedOnText: \"switchedOnText\", tabIndex: \"tabIndex\", validationError: \"validationError\", validationErrors: \"validationErrors\", validationMessageMode: \"validationMessageMode\", validationMessagePosition: \"validationMessagePosition\", validationStatus: \"validationStatus\", value: \"value\", visible: \"visible\", width: \"width\" }, outputs: { onContentReady: \"onContentReady\", onDisposing: \"onDisposing\", onInitialized: \"onInitialized\", onOptionChanged: \"onOptionChanged\", onValueChanged: \"onValueChanged\", accessKeyChange: \"accessKeyChange\", activeStateEnabledChange: \"activeStateEnabledChange\", disabledChange: \"disabledChange\", elementAttrChange: \"elementAttrChange\", focusStateEnabledChange: \"focusStateEnabledChange\", heightChange: \"heightChange\", hintChange: \"hintChange\", hoverStateEnabledChange: \"hoverStateEnabledChange\", isValidChange: \"isValidChange\", nameChange: \"nameChange\", readOnlyChange: \"readOnlyChange\", rtlEnabledChange: \"rtlEnabledChange\", switchedOffTextChange: \"switchedOffTextChange\", switchedOnTextChange: \"switchedOnTextChange\", tabIndexChange: \"tabIndexChange\", validationErrorChange: \"validationErrorChange\", validationErrorsChange: \"validationErrorsChange\", validationMessageModeChange: \"validationMessageModeChange\", validationMessagePositionChange: \"validationMessagePositionChange\", validationStatusChange: \"validationStatusChange\", valueChange: \"valueChange\", visibleChange: \"visibleChange\", widthChange: \"widthChange\", onBlur: \"onBlur\" }, features: [i0.ɵɵProvidersFeature([\r\n            DxTemplateHost,\r\n            WatcherHelper,\r\n            CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n            NestedOptionHost,\r\n            IterableDifferHelper\r\n        ]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DxSwitchComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxSwitchComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'dx-switch',\r\n                template: '',\r\n                providers: [\r\n                    DxTemplateHost,\r\n                    WatcherHelper,\r\n                    CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                    NestedOptionHost,\r\n                    IterableDifferHelper\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.DxTemplateHost }, { type: i1.WatcherHelper }, { type: i1.IterableDifferHelper }, { type: i1.NestedOptionHost }, { type: i2.TransferState }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, { accessKey: [{\r\n            type: Input\r\n        }], activeStateEnabled: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], elementAttr: [{\r\n            type: Input\r\n        }], focusStateEnabled: [{\r\n            type: Input\r\n        }], height: [{\r\n            type: Input\r\n        }], hint: [{\r\n            type: Input\r\n        }], hoverStateEnabled: [{\r\n            type: Input\r\n        }], isValid: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], readOnly: [{\r\n            type: Input\r\n        }], rtlEnabled: [{\r\n            type: Input\r\n        }], switchedOffText: [{\r\n            type: Input\r\n        }], switchedOnText: [{\r\n            type: Input\r\n        }], tabIndex: [{\r\n            type: Input\r\n        }], validationError: [{\r\n            type: Input\r\n        }], validationErrors: [{\r\n            type: Input\r\n        }], validationMessageMode: [{\r\n            type: Input\r\n        }], validationMessagePosition: [{\r\n            type: Input\r\n        }], validationStatus: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], visible: [{\r\n            type: Input\r\n        }], width: [{\r\n            type: Input\r\n        }], onContentReady: [{\r\n            type: Output\r\n        }], onDisposing: [{\r\n            type: Output\r\n        }], onInitialized: [{\r\n            type: Output\r\n        }], onOptionChanged: [{\r\n            type: Output\r\n        }], onValueChanged: [{\r\n            type: Output\r\n        }], accessKeyChange: [{\r\n            type: Output\r\n        }], activeStateEnabledChange: [{\r\n            type: Output\r\n        }], disabledChange: [{\r\n            type: Output\r\n        }], elementAttrChange: [{\r\n            type: Output\r\n        }], focusStateEnabledChange: [{\r\n            type: Output\r\n        }], heightChange: [{\r\n            type: Output\r\n        }], hintChange: [{\r\n            type: Output\r\n        }], hoverStateEnabledChange: [{\r\n            type: Output\r\n        }], isValidChange: [{\r\n            type: Output\r\n        }], nameChange: [{\r\n            type: Output\r\n        }], readOnlyChange: [{\r\n            type: Output\r\n        }], rtlEnabledChange: [{\r\n            type: Output\r\n        }], switchedOffTextChange: [{\r\n            type: Output\r\n        }], switchedOnTextChange: [{\r\n            type: Output\r\n        }], tabIndexChange: [{\r\n            type: Output\r\n        }], validationErrorChange: [{\r\n            type: Output\r\n        }], validationErrorsChange: [{\r\n            type: Output\r\n        }], validationMessageModeChange: [{\r\n            type: Output\r\n        }], validationMessagePositionChange: [{\r\n            type: Output\r\n        }], validationStatusChange: [{\r\n            type: Output\r\n        }], valueChange: [{\r\n            type: Output\r\n        }], visibleChange: [{\r\n            type: Output\r\n        }], widthChange: [{\r\n            type: Output\r\n        }], onBlur: [{\r\n            type: Output\r\n        }], change: [{\r\n            type: HostListener,\r\n            args: ['valueChange', ['$event']]\r\n        }], touched: [{\r\n            type: HostListener,\r\n            args: ['onBlur', ['$event']]\r\n        }] }); })();\r\nclass DxSwitchModule {\r\n}\r\n/** @nocollapse */ DxSwitchModule.ɵfac = function DxSwitchModule_Factory(t) { return new (t || DxSwitchModule)(); };\r\n/** @nocollapse */ DxSwitchModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxSwitchModule });\r\n/** @nocollapse */ DxSwitchModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[\r\n            DxIntegrationModule,\r\n            DxTemplateModule,\r\n            BrowserTransferStateModule\r\n        ], DxTemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxSwitchModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    DxIntegrationModule,\r\n                    DxTemplateModule,\r\n                    BrowserTransferStateModule\r\n                ],\r\n                declarations: [\r\n                    DxSwitchComponent\r\n                ],\r\n                exports: [\r\n                    DxSwitchComponent,\r\n                    DxTemplateModule\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxSwitchModule, { declarations: [DxSwitchComponent], imports: [DxIntegrationModule,\r\n        DxTemplateModule,\r\n        BrowserTransferStateModule], exports: [DxSwitchComponent, DxTemplateModule] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxSwitchComponent, DxSwitchModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}