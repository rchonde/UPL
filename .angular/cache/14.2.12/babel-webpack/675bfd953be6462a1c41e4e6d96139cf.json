{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/drawer/ui.drawer.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { isFunction, isDefined } from \"../../core/utils/type\";\nimport { getPublicElement } from \"../../core/element\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport Widget from \"../widget/ui.widget\";\nimport { EmptyTemplate } from \"../../core/templates/empty_template\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport PushStrategy from \"./ui.drawer.rendering.strategy.push\";\nimport ShrinkStrategy from \"./ui.drawer.rendering.strategy.shrink\";\nimport OverlapStrategy from \"./ui.drawer.rendering.strategy.overlap\";\nimport { animation } from \"./ui.drawer.animation\";\nimport { name as CLICK_EVENT_NAME } from \"../../events/click\";\nimport fx from \"../../animation/fx\";\nimport { Deferred } from \"../../core/utils/deferred\";\nimport { triggerResizeEvent } from \"../../events/visibility_change\";\nvar DRAWER_CLASS = \"dx-drawer\";\nvar DRAWER_WRAPPER_CLASS = \"dx-drawer-wrapper\";\nvar DRAWER_PANEL_CONTENT_CLASS = \"dx-drawer-panel-content\";\nvar DRAWER_VIEW_CONTENT_CLASS = \"dx-drawer-content\";\nvar DRAWER_SHADER_CLASS = \"dx-drawer-shader\";\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\nvar OPENED_STATE_CLASS = \"dx-drawer-opened\";\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\nvar PANEL_TEMPLATE_NAME = \"panel\";\nvar Drawer = Widget.inherit({\n  _getDefaultOptions() {\n    return extend(this.callBase(), {\n      position: \"left\",\n      opened: false,\n      minSize: null,\n      maxSize: null,\n      shading: false,\n      template: PANEL_TEMPLATE_NAME,\n      openedStateMode: \"shrink\",\n      revealMode: \"slide\",\n      animationEnabled: true,\n      animationDuration: 400,\n      closeOnOutsideClick: false,\n      contentTemplate: ANONYMOUS_TEMPLATE_NAME\n    });\n  },\n\n  _init() {\n    this.callBase();\n\n    this._initStrategy();\n\n    this.$element().addClass(DRAWER_CLASS);\n    this._whenAnimationCompleted = void 0;\n    this._whenPanelContentRendered = void 0;\n    this._whenPanelContentRefreshed = void 0;\n    this._$wrapper = $(\"<div>\").addClass(DRAWER_WRAPPER_CLASS);\n    this._$viewContentWrapper = $(\"<div>\").addClass(DRAWER_VIEW_CONTENT_CLASS);\n\n    this._$wrapper.append(this._$viewContentWrapper);\n\n    this.$element().append(this._$wrapper);\n  },\n\n  _initStrategy() {\n    switch (this.option(\"openedStateMode\")) {\n      case \"push\":\n        this._strategy = new PushStrategy(this);\n        break;\n\n      case \"shrink\":\n        this._strategy = new ShrinkStrategy(this);\n        break;\n\n      case \"overlap\":\n        this._strategy = new OverlapStrategy(this);\n        break;\n\n      default:\n        this._strategy = new PushStrategy(this);\n    }\n  },\n\n  _getAnonymousTemplateName: function () {\n    return ANONYMOUS_TEMPLATE_NAME;\n  },\n\n  _initTemplates() {\n    var defaultTemplates = {};\n    defaultTemplates[PANEL_TEMPLATE_NAME] = new EmptyTemplate();\n    defaultTemplates[ANONYMOUS_TEMPLATE_NAME] = new EmptyTemplate();\n\n    this._templateManager.addDefaultTemplates(defaultTemplates);\n\n    this.callBase();\n  },\n\n  _viewContentWrapperClickHandler(e) {\n    var closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\n\n    if (isFunction(closeOnOutsideClick)) {\n      closeOnOutsideClick = closeOnOutsideClick(e);\n    }\n\n    if (closeOnOutsideClick && this.option(\"opened\")) {\n      this.stopAnimations();\n\n      if (this.option(\"shading\")) {\n        e.preventDefault();\n      }\n\n      this.hide();\n    }\n  },\n\n  _initMarkup() {\n    this.callBase();\n\n    this._toggleOpenedStateClass(this.option(\"opened\"));\n\n    this._renderPanelContentWrapper();\n\n    this._refreshOpenedStateModeClass();\n\n    this._refreshRevealModeClass();\n\n    this._renderShader();\n\n    this._refreshPositionClass();\n\n    this._whenPanelContentRendered = new Deferred();\n\n    this._strategy.renderPanelContent(this._whenPanelContentRendered);\n\n    this._strategy.onPanelContentRendered();\n\n    this._renderViewContent();\n\n    eventsEngine.off(this._$viewContentWrapper, CLICK_EVENT_NAME);\n    eventsEngine.on(this._$viewContentWrapper, CLICK_EVENT_NAME, this._viewContentWrapperClickHandler.bind(this));\n\n    this._refreshWrapperChildrenOrder();\n  },\n\n  _render() {\n    this._initMinMaxSize();\n\n    this.callBase();\n\n    this._whenPanelContentRendered.always(() => {\n      this._initMinMaxSize();\n\n      this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\") || !this.isHorizontalDirection());\n\n      this._renderPosition(this.option(\"opened\"), true);\n\n      this._removePanelManualPosition();\n    });\n  },\n\n  _removePanelManualPosition() {\n    if (this._$panelContentWrapper.attr(\"manualposition\")) {\n      this._$panelContentWrapper.removeAttr(\"manualPosition\");\n\n      this._$panelContentWrapper.css({\n        position: \"\",\n        top: \"\",\n        left: \"\",\n        right: \"\",\n        bottom: \"\"\n      });\n    }\n  },\n\n  _renderPanelContentWrapper() {\n    this._$panelContentWrapper = $(\"<div>\").addClass(DRAWER_PANEL_CONTENT_CLASS);\n    var position = this.calcTargetPosition();\n\n    if (\"push\" === this.option(\"openedStateMode\") && [\"top\", \"bottom\"].indexOf(position) > -1) {\n      this._$panelContentWrapper.addClass(DRAWER_PANEL_CONTENT_CLASS + \"-push-top-or-bottom\");\n    }\n\n    if (\"overlap\" !== this.option(\"openedStateMode\") && !this.option(\"opened\") && !this.option(\"minSize\")) {\n      this._$panelContentWrapper.attr(\"manualposition\", true);\n\n      this._$panelContentWrapper.css({\n        position: \"absolute\",\n        top: \"-10000px\",\n        left: \"-10000px\",\n        right: \"auto\",\n        bottom: \"auto\"\n      });\n    }\n\n    this._$wrapper.append(this._$panelContentWrapper);\n  },\n\n  _refreshOpenedStateModeClass(prevOpenedStateMode) {\n    if (prevOpenedStateMode) {\n      this.$element().removeClass(DRAWER_CLASS + \"-\" + prevOpenedStateMode);\n    }\n\n    this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"openedStateMode\"));\n  },\n\n  _refreshPositionClass(prevPosition) {\n    if (prevPosition) {\n      this.$element().removeClass(DRAWER_CLASS + \"-\" + prevPosition);\n    }\n\n    this.$element().addClass(DRAWER_CLASS + \"-\" + this.calcTargetPosition());\n  },\n\n  _refreshWrapperChildrenOrder() {\n    var position = this.calcTargetPosition();\n\n    if (this._strategy.isViewContentFirst(position, this.option(\"rtlEnabled\"))) {\n      this._$wrapper.prepend(this._$viewContentWrapper);\n    } else {\n      this._$wrapper.prepend(this._$panelContentWrapper);\n    }\n  },\n\n  _refreshRevealModeClass(prevRevealMode) {\n    if (prevRevealMode) {\n      this.$element().removeClass(DRAWER_CLASS + \"-\" + prevRevealMode);\n    }\n\n    this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"revealMode\"));\n  },\n\n  _renderViewContent() {\n    var contentTemplateOption = this.option(\"contentTemplate\");\n\n    var contentTemplate = this._getTemplate(contentTemplateOption);\n\n    if (contentTemplate) {\n      var $viewTemplate = contentTemplate.render({\n        container: this.viewContent(),\n        noModel: true,\n        transclude: this._templateManager.anonymousTemplateName === contentTemplateOption\n      });\n\n      if ($viewTemplate.hasClass(\"ng-scope\")) {\n        $(this._$viewContentWrapper).children().not(\".\".concat(DRAWER_SHADER_CLASS)).replaceWith($viewTemplate);\n      }\n    }\n  },\n\n  _renderShader() {\n    this._$shader = this._$shader || $(\"<div>\").addClass(DRAWER_SHADER_CLASS);\n\n    this._$shader.appendTo(this.viewContent());\n\n    this._toggleShaderVisibility(this.option(\"opened\"));\n  },\n\n  _initSize() {\n    this._initMinMaxSize();\n  },\n\n  _initMinMaxSize() {\n    var realPanelSize = this.isHorizontalDirection() ? this.getRealPanelWidth() : this.getRealPanelHeight();\n    this._maxSize = this.option(\"maxSize\") || realPanelSize;\n    this._minSize = this.option(\"minSize\") || 0;\n  },\n\n  calcTargetPosition() {\n    var position = this.option(\"position\");\n    var rtl = this.option(\"rtlEnabled\");\n    var result = position;\n\n    if (\"before\" === position) {\n      result = rtl ? \"right\" : \"left\";\n    } else if (\"after\" === position) {\n      result = rtl ? \"left\" : \"right\";\n    }\n\n    return result;\n  },\n\n  getOverlayTarget() {\n    return this._$wrapper;\n  },\n\n  getOverlay() {\n    return this._overlay;\n  },\n\n  getMaxSize() {\n    return this._maxSize;\n  },\n\n  getMinSize() {\n    return this._minSize;\n  },\n\n  getRealPanelWidth() {\n    if (hasWindow()) {\n      if (isDefined(this.option(\"templateSize\"))) {\n        return this.option(\"templateSize\");\n      } else {\n        return getBoundingRect(this._getPanelTemplateElement()).width;\n      }\n    } else {\n      return 0;\n    }\n  },\n\n  getRealPanelHeight() {\n    if (hasWindow()) {\n      if (isDefined(this.option(\"templateSize\"))) {\n        return this.option(\"templateSize\");\n      } else {\n        return getBoundingRect(this._getPanelTemplateElement()).height;\n      }\n    } else {\n      return 0;\n    }\n  },\n\n  _getPanelTemplateElement() {\n    var $panelContent = this._strategy.getPanelContent();\n\n    var $result = $panelContent;\n\n    if ($panelContent.children().length) {\n      $result = $panelContent.children().eq(0);\n\n      if ($panelContent.hasClass(\"dx-overlay-content\") && $result.hasClass(\"dx-template-wrapper\") && $result.children().length) {\n        $result = $result.children().eq(0);\n      }\n    }\n\n    return $result.get(0);\n  },\n\n  getElementHeight($element) {\n    var $children = $element.children();\n    return $children.length ? getBoundingRect($children.eq(0).get(0)).height : getBoundingRect($element.get(0)).height;\n  },\n\n  isHorizontalDirection() {\n    var position = this.calcTargetPosition();\n    return \"left\" === position || \"right\" === position;\n  },\n\n  stopAnimations(jumpToEnd) {\n    fx.stop(this._$shader, jumpToEnd);\n    fx.stop($(this.content()), jumpToEnd);\n    fx.stop($(this.viewContent()), jumpToEnd);\n    var overlay = this.getOverlay();\n\n    if (overlay) {\n      fx.stop($(overlay.$content()), jumpToEnd);\n    }\n  },\n\n  setZIndex(zIndex) {\n    this._$shader.css(\"zIndex\", zIndex - 1);\n\n    this._$panelContentWrapper.css(\"zIndex\", zIndex);\n  },\n\n  resizeContent() {\n    this.resizeViewContent;\n  },\n\n  resizeViewContent() {\n    triggerResizeEvent(this.viewContent());\n  },\n\n  _isInvertedPosition() {\n    var position = this.calcTargetPosition();\n    return \"right\" === position || \"bottom\" === position;\n  },\n\n  _renderPosition(isDrawerOpened, disableAnimation, jumpToEnd) {\n    this.stopAnimations(jumpToEnd);\n\n    if (!hasWindow()) {\n      return;\n    }\n\n    $(this.viewContent()).css(\"paddingLeft\", 0);\n    $(this.viewContent()).css(\"paddingRight\", 0);\n    $(this.viewContent()).css(\"paddingTop\", 0);\n    $(this.viewContent()).css(\"paddingBottom\", 0);\n    var animationEnabled = this.option(\"animationEnabled\");\n\n    if (true === disableAnimation) {\n      animationEnabled = false;\n    }\n\n    if (isDrawerOpened) {\n      this._toggleShaderVisibility(isDrawerOpened);\n    }\n\n    this._strategy.renderPosition(animationEnabled, this.option(\"animationDuration\"));\n  },\n\n  _animationCompleteHandler() {\n    this.resizeViewContent();\n\n    if (this._whenAnimationCompleted) {\n      this._whenAnimationCompleted.resolve();\n    }\n  },\n\n  _getPositionCorrection() {\n    return this._isInvertedPosition() ? -1 : 1;\n  },\n\n  _dispose() {\n    animation.complete($(this.viewContent()));\n    this.callBase();\n  },\n\n  _visibilityChanged(visible) {\n    if (visible) {\n      this._dimensionChanged();\n    }\n  },\n\n  _dimensionChanged() {\n    this._initMinMaxSize();\n\n    this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\"));\n\n    this._renderPosition(this.option(\"opened\"), true);\n  },\n\n  _toggleShaderVisibility(visible) {\n    if (this.option(\"shading\")) {\n      this._$shader.toggleClass(INVISIBLE_STATE_CLASS, !visible);\n\n      this._$shader.css(\"visibility\", visible ? \"visible\" : \"hidden\");\n    } else {\n      this._$shader.toggleClass(INVISIBLE_STATE_CLASS, true);\n    }\n  },\n\n  _toggleOpenedStateClass(opened) {\n    this.$element().toggleClass(OPENED_STATE_CLASS, opened);\n  },\n\n  _refreshPanel() {\n    $(this.viewContent()).css(\"left\", 0);\n    $(this.viewContent()).css(\"transform\", \"translate(0px, 0px)\");\n    $(this.viewContent()).removeClass(\"dx-theme-background-color\");\n\n    this._removePanelContentWrapper();\n\n    this._removeOverlay();\n\n    this._renderPanelContentWrapper();\n\n    this._refreshWrapperChildrenOrder();\n\n    this._whenPanelContentRefreshed = new Deferred();\n\n    this._strategy.renderPanelContent(this._whenPanelContentRefreshed);\n\n    this._strategy.onPanelContentRendered();\n\n    if (hasWindow()) {\n      this._whenPanelContentRefreshed.always(() => {\n        this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\"));\n\n        this._renderPosition(this.option(\"opened\"), true, true);\n\n        this._removePanelManualPosition();\n      });\n    }\n  },\n\n  _clean() {\n    this._cleanFocusState();\n\n    this._removePanelContentWrapper();\n\n    this._removeOverlay();\n  },\n\n  _removePanelContentWrapper() {\n    if (this._$panelContentWrapper) {\n      this._$panelContentWrapper.remove();\n    }\n  },\n\n  _removeOverlay() {\n    if (this._overlay) {\n      this._overlay.dispose();\n\n      delete this._overlay;\n      delete this._$panelContentWrapper;\n    }\n  },\n\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"width\":\n        this.callBase(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"opened\":\n        this._renderPosition(this.option(\"opened\"));\n\n        this._toggleOpenedStateClass(args.value);\n\n        break;\n\n      case \"position\":\n        this._refreshPositionClass(args.previousValue);\n\n        this._refreshWrapperChildrenOrder();\n\n        this._invalidate();\n\n        break;\n\n      case \"contentTemplate\":\n      case \"template\":\n        this._invalidate();\n\n        break;\n\n      case \"openedStateMode\":\n        this._initStrategy();\n\n        this._refreshOpenedStateModeClass(args.previousValue);\n\n        this._refreshPanel();\n\n        break;\n\n      case \"minSize\":\n      case \"maxSize\":\n        this._initMinMaxSize();\n\n        this._renderPosition(this.option(\"opened\"), true);\n\n        break;\n\n      case \"revealMode\":\n        this._refreshRevealModeClass(args.previousValue);\n\n        this._refreshPanel();\n\n        break;\n\n      case \"shading\":\n        this._toggleShaderVisibility(this.option(\"opened\"));\n\n        break;\n\n      case \"animationEnabled\":\n      case \"animationDuration\":\n      case \"closeOnOutsideClick\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n\n  content() {\n    return getPublicElement(this._$panelContentWrapper);\n  },\n\n  viewContent() {\n    return getPublicElement(this._$viewContentWrapper);\n  },\n\n  show() {\n    return this.toggle(true);\n  },\n\n  hide() {\n    return this.toggle(false);\n  },\n\n  toggle(opened) {\n    var targetOpened = void 0 === opened ? !this.option(\"opened\") : opened;\n    this._whenAnimationCompleted = new Deferred();\n    this.option(\"opened\", targetOpened);\n    return this._whenAnimationCompleted.promise();\n  }\n\n});\nregisterComponent(\"dxDrawer\", Drawer);\nexport default Drawer;","map":{"version":3,"names":["$","eventsEngine","isFunction","isDefined","getPublicElement","registerComponent","extend","getBoundingRect","Widget","EmptyTemplate","hasWindow","PushStrategy","ShrinkStrategy","OverlapStrategy","animation","name","CLICK_EVENT_NAME","fx","Deferred","triggerResizeEvent","DRAWER_CLASS","DRAWER_WRAPPER_CLASS","DRAWER_PANEL_CONTENT_CLASS","DRAWER_VIEW_CONTENT_CLASS","DRAWER_SHADER_CLASS","INVISIBLE_STATE_CLASS","OPENED_STATE_CLASS","ANONYMOUS_TEMPLATE_NAME","PANEL_TEMPLATE_NAME","Drawer","inherit","_getDefaultOptions","callBase","position","opened","minSize","maxSize","shading","template","openedStateMode","revealMode","animationEnabled","animationDuration","closeOnOutsideClick","contentTemplate","_init","_initStrategy","$element","addClass","_whenAnimationCompleted","_whenPanelContentRendered","_whenPanelContentRefreshed","_$wrapper","_$viewContentWrapper","append","option","_strategy","_getAnonymousTemplateName","_initTemplates","defaultTemplates","_templateManager","addDefaultTemplates","_viewContentWrapperClickHandler","e","stopAnimations","preventDefault","hide","_initMarkup","_toggleOpenedStateClass","_renderPanelContentWrapper","_refreshOpenedStateModeClass","_refreshRevealModeClass","_renderShader","_refreshPositionClass","renderPanelContent","onPanelContentRendered","_renderViewContent","off","on","bind","_refreshWrapperChildrenOrder","_render","_initMinMaxSize","always","refreshPanelElementSize","isHorizontalDirection","_renderPosition","_removePanelManualPosition","_$panelContentWrapper","attr","removeAttr","css","top","left","right","bottom","calcTargetPosition","indexOf","prevOpenedStateMode","removeClass","prevPosition","isViewContentFirst","prepend","prevRevealMode","contentTemplateOption","_getTemplate","$viewTemplate","render","container","viewContent","noModel","transclude","anonymousTemplateName","hasClass","children","not","concat","replaceWith","_$shader","appendTo","_toggleShaderVisibility","_initSize","realPanelSize","getRealPanelWidth","getRealPanelHeight","_maxSize","_minSize","rtl","result","getOverlayTarget","getOverlay","_overlay","getMaxSize","getMinSize","_getPanelTemplateElement","width","height","$panelContent","getPanelContent","$result","length","eq","get","getElementHeight","$children","jumpToEnd","stop","content","overlay","$content","setZIndex","zIndex","resizeContent","resizeViewContent","_isInvertedPosition","isDrawerOpened","disableAnimation","renderPosition","_animationCompleteHandler","resolve","_getPositionCorrection","_dispose","complete","_visibilityChanged","visible","_dimensionChanged","toggleClass","_refreshPanel","_removePanelContentWrapper","_removeOverlay","_clean","_cleanFocusState","remove","dispose","_optionChanged","args","value","previousValue","_invalidate","show","toggle","targetOpened","promise"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/drawer/ui.drawer.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/drawer/ui.drawer.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    isFunction,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../core/element\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../../core/templates/empty_template\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport PushStrategy from \"./ui.drawer.rendering.strategy.push\";\r\nimport ShrinkStrategy from \"./ui.drawer.rendering.strategy.shrink\";\r\nimport OverlapStrategy from \"./ui.drawer.rendering.strategy.overlap\";\r\nimport {\r\n    animation\r\n} from \"./ui.drawer.animation\";\r\nimport {\r\n    name as CLICK_EVENT_NAME\r\n} from \"../../events/click\";\r\nimport fx from \"../../animation/fx\";\r\nimport {\r\n    Deferred\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../events/visibility_change\";\r\nvar DRAWER_CLASS = \"dx-drawer\";\r\nvar DRAWER_WRAPPER_CLASS = \"dx-drawer-wrapper\";\r\nvar DRAWER_PANEL_CONTENT_CLASS = \"dx-drawer-panel-content\";\r\nvar DRAWER_VIEW_CONTENT_CLASS = \"dx-drawer-content\";\r\nvar DRAWER_SHADER_CLASS = \"dx-drawer-shader\";\r\nvar INVISIBLE_STATE_CLASS = \"dx-state-invisible\";\r\nvar OPENED_STATE_CLASS = \"dx-drawer-opened\";\r\nvar ANONYMOUS_TEMPLATE_NAME = \"content\";\r\nvar PANEL_TEMPLATE_NAME = \"panel\";\r\nvar Drawer = Widget.inherit({\r\n    _getDefaultOptions() {\r\n        return extend(this.callBase(), {\r\n            position: \"left\",\r\n            opened: false,\r\n            minSize: null,\r\n            maxSize: null,\r\n            shading: false,\r\n            template: PANEL_TEMPLATE_NAME,\r\n            openedStateMode: \"shrink\",\r\n            revealMode: \"slide\",\r\n            animationEnabled: true,\r\n            animationDuration: 400,\r\n            closeOnOutsideClick: false,\r\n            contentTemplate: ANONYMOUS_TEMPLATE_NAME\r\n        })\r\n    },\r\n    _init() {\r\n        this.callBase();\r\n        this._initStrategy();\r\n        this.$element().addClass(DRAWER_CLASS);\r\n        this._whenAnimationCompleted = void 0;\r\n        this._whenPanelContentRendered = void 0;\r\n        this._whenPanelContentRefreshed = void 0;\r\n        this._$wrapper = $(\"<div>\").addClass(DRAWER_WRAPPER_CLASS);\r\n        this._$viewContentWrapper = $(\"<div>\").addClass(DRAWER_VIEW_CONTENT_CLASS);\r\n        this._$wrapper.append(this._$viewContentWrapper);\r\n        this.$element().append(this._$wrapper)\r\n    },\r\n    _initStrategy() {\r\n        switch (this.option(\"openedStateMode\")) {\r\n            case \"push\":\r\n                this._strategy = new PushStrategy(this);\r\n                break;\r\n            case \"shrink\":\r\n                this._strategy = new ShrinkStrategy(this);\r\n                break;\r\n            case \"overlap\":\r\n                this._strategy = new OverlapStrategy(this);\r\n                break;\r\n            default:\r\n                this._strategy = new PushStrategy(this)\r\n        }\r\n    },\r\n    _getAnonymousTemplateName: function() {\r\n        return ANONYMOUS_TEMPLATE_NAME\r\n    },\r\n    _initTemplates() {\r\n        var defaultTemplates = {};\r\n        defaultTemplates[PANEL_TEMPLATE_NAME] = new EmptyTemplate;\r\n        defaultTemplates[ANONYMOUS_TEMPLATE_NAME] = new EmptyTemplate;\r\n        this._templateManager.addDefaultTemplates(defaultTemplates);\r\n        this.callBase()\r\n    },\r\n    _viewContentWrapperClickHandler(e) {\r\n        var closeOnOutsideClick = this.option(\"closeOnOutsideClick\");\r\n        if (isFunction(closeOnOutsideClick)) {\r\n            closeOnOutsideClick = closeOnOutsideClick(e)\r\n        }\r\n        if (closeOnOutsideClick && this.option(\"opened\")) {\r\n            this.stopAnimations();\r\n            if (this.option(\"shading\")) {\r\n                e.preventDefault()\r\n            }\r\n            this.hide()\r\n        }\r\n    },\r\n    _initMarkup() {\r\n        this.callBase();\r\n        this._toggleOpenedStateClass(this.option(\"opened\"));\r\n        this._renderPanelContentWrapper();\r\n        this._refreshOpenedStateModeClass();\r\n        this._refreshRevealModeClass();\r\n        this._renderShader();\r\n        this._refreshPositionClass();\r\n        this._whenPanelContentRendered = new Deferred;\r\n        this._strategy.renderPanelContent(this._whenPanelContentRendered);\r\n        this._strategy.onPanelContentRendered();\r\n        this._renderViewContent();\r\n        eventsEngine.off(this._$viewContentWrapper, CLICK_EVENT_NAME);\r\n        eventsEngine.on(this._$viewContentWrapper, CLICK_EVENT_NAME, this._viewContentWrapperClickHandler.bind(this));\r\n        this._refreshWrapperChildrenOrder()\r\n    },\r\n    _render() {\r\n        this._initMinMaxSize();\r\n        this.callBase();\r\n        this._whenPanelContentRendered.always(() => {\r\n            this._initMinMaxSize();\r\n            this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\") || !this.isHorizontalDirection());\r\n            this._renderPosition(this.option(\"opened\"), true);\r\n            this._removePanelManualPosition()\r\n        })\r\n    },\r\n    _removePanelManualPosition() {\r\n        if (this._$panelContentWrapper.attr(\"manualposition\")) {\r\n            this._$panelContentWrapper.removeAttr(\"manualPosition\");\r\n            this._$panelContentWrapper.css({\r\n                position: \"\",\r\n                top: \"\",\r\n                left: \"\",\r\n                right: \"\",\r\n                bottom: \"\"\r\n            })\r\n        }\r\n    },\r\n    _renderPanelContentWrapper() {\r\n        this._$panelContentWrapper = $(\"<div>\").addClass(DRAWER_PANEL_CONTENT_CLASS);\r\n        var position = this.calcTargetPosition();\r\n        if (\"push\" === this.option(\"openedStateMode\") && [\"top\", \"bottom\"].indexOf(position) > -1) {\r\n            this._$panelContentWrapper.addClass(DRAWER_PANEL_CONTENT_CLASS + \"-push-top-or-bottom\")\r\n        }\r\n        if (\"overlap\" !== this.option(\"openedStateMode\") && !this.option(\"opened\") && !this.option(\"minSize\")) {\r\n            this._$panelContentWrapper.attr(\"manualposition\", true);\r\n            this._$panelContentWrapper.css({\r\n                position: \"absolute\",\r\n                top: \"-10000px\",\r\n                left: \"-10000px\",\r\n                right: \"auto\",\r\n                bottom: \"auto\"\r\n            })\r\n        }\r\n        this._$wrapper.append(this._$panelContentWrapper)\r\n    },\r\n    _refreshOpenedStateModeClass(prevOpenedStateMode) {\r\n        if (prevOpenedStateMode) {\r\n            this.$element().removeClass(DRAWER_CLASS + \"-\" + prevOpenedStateMode)\r\n        }\r\n        this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"openedStateMode\"))\r\n    },\r\n    _refreshPositionClass(prevPosition) {\r\n        if (prevPosition) {\r\n            this.$element().removeClass(DRAWER_CLASS + \"-\" + prevPosition)\r\n        }\r\n        this.$element().addClass(DRAWER_CLASS + \"-\" + this.calcTargetPosition())\r\n    },\r\n    _refreshWrapperChildrenOrder() {\r\n        var position = this.calcTargetPosition();\r\n        if (this._strategy.isViewContentFirst(position, this.option(\"rtlEnabled\"))) {\r\n            this._$wrapper.prepend(this._$viewContentWrapper)\r\n        } else {\r\n            this._$wrapper.prepend(this._$panelContentWrapper)\r\n        }\r\n    },\r\n    _refreshRevealModeClass(prevRevealMode) {\r\n        if (prevRevealMode) {\r\n            this.$element().removeClass(DRAWER_CLASS + \"-\" + prevRevealMode)\r\n        }\r\n        this.$element().addClass(DRAWER_CLASS + \"-\" + this.option(\"revealMode\"))\r\n    },\r\n    _renderViewContent() {\r\n        var contentTemplateOption = this.option(\"contentTemplate\");\r\n        var contentTemplate = this._getTemplate(contentTemplateOption);\r\n        if (contentTemplate) {\r\n            var $viewTemplate = contentTemplate.render({\r\n                container: this.viewContent(),\r\n                noModel: true,\r\n                transclude: this._templateManager.anonymousTemplateName === contentTemplateOption\r\n            });\r\n            if ($viewTemplate.hasClass(\"ng-scope\")) {\r\n                $(this._$viewContentWrapper).children().not(\".\".concat(DRAWER_SHADER_CLASS)).replaceWith($viewTemplate)\r\n            }\r\n        }\r\n    },\r\n    _renderShader() {\r\n        this._$shader = this._$shader || $(\"<div>\").addClass(DRAWER_SHADER_CLASS);\r\n        this._$shader.appendTo(this.viewContent());\r\n        this._toggleShaderVisibility(this.option(\"opened\"))\r\n    },\r\n    _initSize() {\r\n        this._initMinMaxSize()\r\n    },\r\n    _initMinMaxSize() {\r\n        var realPanelSize = this.isHorizontalDirection() ? this.getRealPanelWidth() : this.getRealPanelHeight();\r\n        this._maxSize = this.option(\"maxSize\") || realPanelSize;\r\n        this._minSize = this.option(\"minSize\") || 0\r\n    },\r\n    calcTargetPosition() {\r\n        var position = this.option(\"position\");\r\n        var rtl = this.option(\"rtlEnabled\");\r\n        var result = position;\r\n        if (\"before\" === position) {\r\n            result = rtl ? \"right\" : \"left\"\r\n        } else if (\"after\" === position) {\r\n            result = rtl ? \"left\" : \"right\"\r\n        }\r\n        return result\r\n    },\r\n    getOverlayTarget() {\r\n        return this._$wrapper\r\n    },\r\n    getOverlay() {\r\n        return this._overlay\r\n    },\r\n    getMaxSize() {\r\n        return this._maxSize\r\n    },\r\n    getMinSize() {\r\n        return this._minSize\r\n    },\r\n    getRealPanelWidth() {\r\n        if (hasWindow()) {\r\n            if (isDefined(this.option(\"templateSize\"))) {\r\n                return this.option(\"templateSize\")\r\n            } else {\r\n                return getBoundingRect(this._getPanelTemplateElement()).width\r\n            }\r\n        } else {\r\n            return 0\r\n        }\r\n    },\r\n    getRealPanelHeight() {\r\n        if (hasWindow()) {\r\n            if (isDefined(this.option(\"templateSize\"))) {\r\n                return this.option(\"templateSize\")\r\n            } else {\r\n                return getBoundingRect(this._getPanelTemplateElement()).height\r\n            }\r\n        } else {\r\n            return 0\r\n        }\r\n    },\r\n    _getPanelTemplateElement() {\r\n        var $panelContent = this._strategy.getPanelContent();\r\n        var $result = $panelContent;\r\n        if ($panelContent.children().length) {\r\n            $result = $panelContent.children().eq(0);\r\n            if ($panelContent.hasClass(\"dx-overlay-content\") && $result.hasClass(\"dx-template-wrapper\") && $result.children().length) {\r\n                $result = $result.children().eq(0)\r\n            }\r\n        }\r\n        return $result.get(0)\r\n    },\r\n    getElementHeight($element) {\r\n        var $children = $element.children();\r\n        return $children.length ? getBoundingRect($children.eq(0).get(0)).height : getBoundingRect($element.get(0)).height\r\n    },\r\n    isHorizontalDirection() {\r\n        var position = this.calcTargetPosition();\r\n        return \"left\" === position || \"right\" === position\r\n    },\r\n    stopAnimations(jumpToEnd) {\r\n        fx.stop(this._$shader, jumpToEnd);\r\n        fx.stop($(this.content()), jumpToEnd);\r\n        fx.stop($(this.viewContent()), jumpToEnd);\r\n        var overlay = this.getOverlay();\r\n        if (overlay) {\r\n            fx.stop($(overlay.$content()), jumpToEnd)\r\n        }\r\n    },\r\n    setZIndex(zIndex) {\r\n        this._$shader.css(\"zIndex\", zIndex - 1);\r\n        this._$panelContentWrapper.css(\"zIndex\", zIndex)\r\n    },\r\n    resizeContent() {\r\n        this.resizeViewContent\r\n    },\r\n    resizeViewContent() {\r\n        triggerResizeEvent(this.viewContent())\r\n    },\r\n    _isInvertedPosition() {\r\n        var position = this.calcTargetPosition();\r\n        return \"right\" === position || \"bottom\" === position\r\n    },\r\n    _renderPosition(isDrawerOpened, disableAnimation, jumpToEnd) {\r\n        this.stopAnimations(jumpToEnd);\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        $(this.viewContent()).css(\"paddingLeft\", 0);\r\n        $(this.viewContent()).css(\"paddingRight\", 0);\r\n        $(this.viewContent()).css(\"paddingTop\", 0);\r\n        $(this.viewContent()).css(\"paddingBottom\", 0);\r\n        var animationEnabled = this.option(\"animationEnabled\");\r\n        if (true === disableAnimation) {\r\n            animationEnabled = false\r\n        }\r\n        if (isDrawerOpened) {\r\n            this._toggleShaderVisibility(isDrawerOpened)\r\n        }\r\n        this._strategy.renderPosition(animationEnabled, this.option(\"animationDuration\"))\r\n    },\r\n    _animationCompleteHandler() {\r\n        this.resizeViewContent();\r\n        if (this._whenAnimationCompleted) {\r\n            this._whenAnimationCompleted.resolve()\r\n        }\r\n    },\r\n    _getPositionCorrection() {\r\n        return this._isInvertedPosition() ? -1 : 1\r\n    },\r\n    _dispose() {\r\n        animation.complete($(this.viewContent()));\r\n        this.callBase()\r\n    },\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    },\r\n    _dimensionChanged() {\r\n        this._initMinMaxSize();\r\n        this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\"));\r\n        this._renderPosition(this.option(\"opened\"), true)\r\n    },\r\n    _toggleShaderVisibility(visible) {\r\n        if (this.option(\"shading\")) {\r\n            this._$shader.toggleClass(INVISIBLE_STATE_CLASS, !visible);\r\n            this._$shader.css(\"visibility\", visible ? \"visible\" : \"hidden\")\r\n        } else {\r\n            this._$shader.toggleClass(INVISIBLE_STATE_CLASS, true)\r\n        }\r\n    },\r\n    _toggleOpenedStateClass(opened) {\r\n        this.$element().toggleClass(OPENED_STATE_CLASS, opened)\r\n    },\r\n    _refreshPanel() {\r\n        $(this.viewContent()).css(\"left\", 0);\r\n        $(this.viewContent()).css(\"transform\", \"translate(0px, 0px)\");\r\n        $(this.viewContent()).removeClass(\"dx-theme-background-color\");\r\n        this._removePanelContentWrapper();\r\n        this._removeOverlay();\r\n        this._renderPanelContentWrapper();\r\n        this._refreshWrapperChildrenOrder();\r\n        this._whenPanelContentRefreshed = new Deferred;\r\n        this._strategy.renderPanelContent(this._whenPanelContentRefreshed);\r\n        this._strategy.onPanelContentRendered();\r\n        if (hasWindow()) {\r\n            this._whenPanelContentRefreshed.always(() => {\r\n                this._strategy.refreshPanelElementSize(\"slide\" === this.option(\"revealMode\"));\r\n                this._renderPosition(this.option(\"opened\"), true, true);\r\n                this._removePanelManualPosition()\r\n            })\r\n        }\r\n    },\r\n    _clean() {\r\n        this._cleanFocusState();\r\n        this._removePanelContentWrapper();\r\n        this._removeOverlay()\r\n    },\r\n    _removePanelContentWrapper() {\r\n        if (this._$panelContentWrapper) {\r\n            this._$panelContentWrapper.remove()\r\n        }\r\n    },\r\n    _removeOverlay() {\r\n        if (this._overlay) {\r\n            this._overlay.dispose();\r\n            delete this._overlay;\r\n            delete this._$panelContentWrapper\r\n        }\r\n    },\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"opened\":\r\n                this._renderPosition(this.option(\"opened\"));\r\n                this._toggleOpenedStateClass(args.value);\r\n                break;\r\n            case \"position\":\r\n                this._refreshPositionClass(args.previousValue);\r\n                this._refreshWrapperChildrenOrder();\r\n                this._invalidate();\r\n                break;\r\n            case \"contentTemplate\":\r\n            case \"template\":\r\n                this._invalidate();\r\n                break;\r\n            case \"openedStateMode\":\r\n                this._initStrategy();\r\n                this._refreshOpenedStateModeClass(args.previousValue);\r\n                this._refreshPanel();\r\n                break;\r\n            case \"minSize\":\r\n            case \"maxSize\":\r\n                this._initMinMaxSize();\r\n                this._renderPosition(this.option(\"opened\"), true);\r\n                break;\r\n            case \"revealMode\":\r\n                this._refreshRevealModeClass(args.previousValue);\r\n                this._refreshPanel();\r\n                break;\r\n            case \"shading\":\r\n                this._toggleShaderVisibility(this.option(\"opened\"));\r\n                break;\r\n            case \"animationEnabled\":\r\n            case \"animationDuration\":\r\n            case \"closeOnOutsideClick\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    content() {\r\n        return getPublicElement(this._$panelContentWrapper)\r\n    },\r\n    viewContent() {\r\n        return getPublicElement(this._$viewContentWrapper)\r\n    },\r\n    show() {\r\n        return this.toggle(true)\r\n    },\r\n    hide() {\r\n        return this.toggle(false)\r\n    },\r\n    toggle(opened) {\r\n        var targetOpened = void 0 === opened ? !this.option(\"opened\") : opened;\r\n        this._whenAnimationCompleted = new Deferred;\r\n        this.option(\"opened\", targetOpened);\r\n        return this._whenAnimationCompleted.promise()\r\n    }\r\n});\r\nregisterComponent(\"dxDrawer\", Drawer);\r\nexport default Drawer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}