{"ast":null,"code":"/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport exportCSS from \"./ExportCSS\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { List } from \"../utils/List\";\nimport { getInteraction } from \"../interaction/Interaction\";\nimport { MutableValueDisposer } from \"../utils/Disposer\";\nimport { Language } from \"../utils/Language\";\nimport { Validatable } from \"../utils/Validatable\";\nimport { keyboard } from \"../utils/Keyboard\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $iter from \"../utils/Iterator\";\nimport * as $dom from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\n\nvar ExportMenu =\n/** @class */\nfunction (_super) {\n  __extends(ExportMenu, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ExportMenu() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * An [[Adapter]].\r\n     */\n\n\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n     * hover, before auto-closing it.\r\n     *\r\n     * @default 1000\r\n     */\n\n    _this.closeDelay = 1000;\n    /**\r\n     * Close the menu automatically when some export operation is triggered.\r\n     *\r\n     * @default true\r\n     * @since 4.2.2\r\n     */\n\n    _this.closeOnClick = true;\n    /**\r\n     * An instance of [[Language]].\r\n     */\n\n    _this._language = new MutableValueDisposer();\n    /**\r\n     * What HTML tags to use to build menu.\r\n     */\n\n    _this._menuTag = \"ul\";\n    /**\r\n     * Which tag to use to enclose individual menu items.\r\n     */\n\n    _this._itemTag = \"li\";\n    /**\r\n     * Tag to wrap menu item labels in.\r\n     */\n\n    _this._labelTag = \"a\";\n    /**\r\n     * Tag to use for icons\r\n     */\n\n    _this._iconTag = \"img\";\n    /**\r\n     * Prefix for class names applied to menu elements.\r\n     */\n\n    _this._classPrefix = \"amexport\";\n    /**\r\n     * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n     * instantiated.\r\n     */\n\n    _this._defaultStyles = true;\n    /**\r\n     * Horizontal positioning.\r\n     */\n\n    _this._align = \"right\";\n    /**\r\n     * Vertical positioning.\r\n     */\n\n    _this._verticalAlign = \"top\";\n    /**\r\n     * A tabindex to apply to Export Menu.\r\n     */\n\n    _this._tabindex = 0;\n    /**\r\n     * Whether next menu close event should be ignored.\r\n     */\n\n    _this._ignoreNextClose = false;\n    /**\r\n     * Default menu items.\r\n     */\n\n    _this._items = [{\n      \"label\": \"...\",\n      \"menu\": [{\n        \"label\": \"Image\",\n        \"menu\": [{\n          \"type\": \"png\",\n          \"label\": \"PNG\"\n        }, {\n          \"type\": \"jpg\",\n          \"label\": \"JPG\"\n        }, {\n          \"type\": \"svg\",\n          \"label\": \"SVG\"\n        }, {\n          \"type\": \"pdf\",\n          \"label\": \"PDF\"\n        }]\n      }, {\n        \"label\": \"Data\",\n        \"menu\": [{\n          \"type\": \"json\",\n          \"label\": \"JSON\"\n        }, {\n          \"type\": \"csv\",\n          \"label\": \"CSV\"\n        }, {\n          \"type\": \"xlsx\",\n          \"label\": \"XLSX\"\n        }, {\n          \"type\": \"html\",\n          \"label\": \"HTML\"\n        }, {\n          \"type\": \"pdfdata\",\n          \"label\": \"PDF\"\n        }]\n      }, {\n        \"label\": \"Print\",\n        \"type\": \"print\"\n      }]\n    }];\n    _this.className = \"ExportMenu\";\n\n    _this._disposers.push(_this._language);\n\n    _this.invalidate();\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * (Re)draws the Export menu.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  ExportMenu.prototype.validate = function () {\n    this.draw();\n\n    _super.prototype.validate.call(this);\n  };\n  /**\r\n   * Draws the menu based on current items.\r\n   *\r\n   * Normally, there's no need to call this explicitly. The chart, if it has\r\n   * export menu enabled, will automatically draw the menu.\r\n   */\n\n\n  ExportMenu.prototype.draw = function () {\n    var _this = this; // Create top-level menu item, or clear it\n\n\n    if (!this._element) {\n      this._element = this.createMenuElement(0);\n    } else {\n      this._element.innerHTML = \"\";\n      this._element.className = this.getMenuItemClass(0);\n    } // See if we're loading external CSS\n    // Hide it until CSS is loaded\n\n\n    if (this.defaultStyles) {\n      this._element.style.display = \"none\";\n    } // Append to container\n\n\n    $type.getValue(this._container).appendChild(this._element); // Apply adapter to menu items before processing\n\n    var items = this.adapter.apply(\"items\", {\n      items: this._items\n    }).items;\n\n    for (var len = items.length, i = 0; i < len; i++) {\n      this.drawBranch(this._element, items[i], 0);\n    } // Apply adapter to finalized menu element\n\n\n    this._element = this.adapter.apply(\"menuElement\", {\n      menuElement: this._element\n    }).menuElement; // Set up global \"down\" event\n\n    this._disposers.push(getInteraction().body.events.on(\"down\", function (ev) {\n      if (!ev.pointer.touch) {\n        _this._ignoreNextClose = false;\n      }\n\n      _this.close();\n    })); // Set up global event on ESC press to close the menu\n\n\n    this._disposers.push(getInteraction().body.events.on(\"keydown\", function (ev) {\n      var key = keyboard.getEventKey(ev.event);\n\n      switch (key) {\n        case \"esc\":\n          _this.close();\n\n          break;\n\n        case \"up\":\n        case \"down\":\n        case \"left\":\n        case \"right\":\n          if (_this._currentSelection) {\n            ev.event.preventDefault();\n          }\n\n          _this.moveSelection(key);\n\n          break;\n      }\n    }));\n\n    if (this.defaultStyles) {\n      this.loadDefaultCSS();\n    }\n  };\n  /**\r\n   * Creates a new branch in export menu. This function is recursive for\r\n   * building multi-level menus.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param container Container to put branch elements in\r\n   * @param branch    Menu item\r\n   * @param level     Current nesting level\r\n   */\n\n\n  ExportMenu.prototype.drawBranch = function (container, branch, level) {\n    var _this = this; // Apply adapter\n\n\n    branch = this.adapter.apply(\"branch\", {\n      branch: branch,\n      level: level\n    }).branch; // Unsupported?\n    // ExportMenu does not check or know for specific browser/system\n    // capabilities. It must happen in some other code and applied via Adapter.\n    // Export itself will check compatibility, but there might be other plugins\n    // that influence it or even add any specific export functionality.\n\n    if (branch.unsupported === true) {\n      return;\n    } // Init ascendants\n\n\n    if (!branch.ascendants) {\n      branch.ascendants = new List();\n    } // Get type\n\n\n    var type = branch.type; // Create an item\n\n    var element = this.createItemElement(level, type); // Create label\n\n    var label; // Create icon\n\n    if (branch.icon) {\n      label = this.createIconElement(level, type);\n      label.src = branch.icon;\n\n      if (branch.label || branch.title) {\n        label.title = branch.title || branch.label;\n      }\n    } else if (branch.svg) {\n      label = this.createSvgElement(level, type, branch.svg);\n\n      if (branch.label || branch.title) {\n        label.title = branch.title || branch.label;\n      }\n    } else {\n      label = this.createLabelElement(level, type);\n      label.innerHTML = branch.label ? this.language.translate(branch.label) : \"\";\n\n      if (branch.title) {\n        label.title = branch.title;\n      }\n    } // Apply reader text to label\n\n\n    var readerLabel = this.getReaderLabel(branch, label.innerHTML);\n    label.setAttribute(\"aria-label\", readerLabel); // Add Label\n\n    element.appendChild(label); // Create interaction object\n    // TODO clean this up when it's disposed\n\n    branch.interactions = getInteraction().getInteraction(element);\n    branch.element = element; // Create interaction manager we can set event listeners to\n\n    if (this.typeClickable(type)) {\n      //branch.interactions.clickable = true;\n      // TODO clean this up when it's disposed\n      branch.interactions.events.on(\"hit\", function (ev) {\n        if (_this.events.isEnabled(\"hit\") && !_this.isDisposed()) {\n          var event_1 = {\n            \"type\": \"hit\",\n            \"event\": ev.event,\n            \"target\": _this,\n            \"branch\": branch\n          };\n\n          _this.events.dispatchImmediately(\"hit\", event_1);\n        }\n      }); // TODO clean this up when it's disposed\n\n      branch.interactions.events.on(\"keyup\", function (ev) {\n        if (keyboard.isKey(ev.event, \"enter\")) {\n          if (_this.events.isEnabled(\"enter\")) {\n            var event_2 = {\n              \"type\": \"enter\",\n              \"event\": ev.event,\n              \"target\": _this,\n              \"branch\": branch\n            };\n\n            _this.events.dispatchImmediately(\"enter\", event_2);\n          }\n        }\n      });\n    }\n\n    {\n      var submenu_1 = this.getSubMenu(branch); // Add ENTER event to open sub-menus\n\n      if (submenu_1 != null) {\n        // TODO clean this up when it's disposed\n        branch.interactions.events.on(\"keyup\", function (ev) {\n          if (keyboard.isKey(ev.event, \"enter\")) {\n            // This is item has sub-menu, activate the first child on ENTER\n            _this.selectBranch(submenu_1[0]); // Attempt to set focus\n\n\n            _this.setFocus(submenu_1[0]);\n          }\n        });\n        branch.interactions.events.on(\"hit\", function (ev) {\n          _this.selectBranch(branch);\n        });\n      }\n    } // Add events\n    // TODO clean this up when it's disposed\n\n    branch.interactions.events.on(\"over\", function (ev) {\n      if (ev.pointer.touch) {\n        // Cancel pending menu closure\n        _this._ignoreNextClose = true;\n      }\n\n      _this.selectBranch(branch);\n\n      if (_this.events.isEnabled(\"over\")) {\n        var event_3 = {\n          \"type\": \"over\",\n          \"event\": ev.event,\n          \"target\": _this,\n          \"branch\": branch\n        };\n\n        _this.events.dispatchImmediately(\"over\", event_3);\n      }\n    }); // TODO clean this up when it's disposed\n\n    branch.interactions.events.on(\"out\", function (ev) {\n      if (_this.isDisposed()) {\n        return;\n      }\n\n      if (!ev.pointer.touch) {\n        _this.delayUnselectBranch(branch);\n      }\n\n      if (_this.events.isEnabled(\"out\")) {\n        var event_4 = {\n          \"type\": \"out\",\n          \"event\": ev.event,\n          \"target\": _this,\n          \"branch\": branch\n        };\n\n        _this.events.dispatchImmediately(\"out\", event_4);\n      }\n    }); // TODO clean this up when it's disposed\n\n    branch.interactions.events.on(\"focus\", function (ev) {\n      _this.selectBranch(branch);\n    }); // TODO clean this up when it's disposed\n\n    branch.interactions.events.on(\"blur\", function (ev) {\n      _this.delayUnselectBranch(branch);\n    }); // Increment level\n\n    var local_level = level + 1; // Has sub-menu?\n\n    if (branch.menu) {\n      var submenu = this.createMenuElement(local_level);\n      branch.submenuElement = submenu;\n\n      for (var len = branch.menu.length, i = 0; i < len; i++) {\n        var ascendants = new List();\n        branch.menu[i].ascendants = ascendants;\n\n        if (branch.ascendants.length) {\n          ascendants.copyFrom(branch.ascendants);\n        }\n\n        ascendants.push(branch);\n        this.drawBranch(submenu, branch.menu[i], local_level);\n      } // Sub-menu is empty (all items are not supported)\n      // Do not draw this menu item at all\n\n\n      if (submenu.innerHTML == \"\") {\n        return;\n      }\n\n      element.appendChild(submenu);\n    } // Should this item be hidden?\n\n\n    if (branch.hidden) {\n      this.hideBranch(branch);\n    } // Add id?\n\n\n    if (branch.id) {\n      element.setAttribute(\"id\", branch.id);\n    } // Background color?\n\n\n    if (branch.color) {\n      element.style.backgroundColor = branch.color.hex;\n    } // Append to container\n\n\n    container.appendChild(element);\n  };\n  /**\r\n   * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n   * tag.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @return HTML element reference\r\n   */\n\n\n  ExportMenu.prototype.createMenuElement = function (level) {\n    var element = document.createElement(this.menuTag);\n    element.className = this.getMenuItemClass(level); // Accessibility\n\n    if (level === 0) {\n      element.setAttribute(\"role\", \"menubar\");\n    } else {\n      element.setAttribute(\"role\", \"menu\");\n    }\n\n    return element;\n  };\n  /**\r\n   * Generates a class name for the menu element based on its nesting level.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @return Class name(s)\r\n   */\n\n\n  ExportMenu.prototype.getMenuItemClass = function (level) {\n    var className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\n\n    if (level === 0) {\n      className += \" \" + this.classPrefix + \"-menu-root \" + this.classPrefix + \"-\" + this.align + \" \" + this.classPrefix + \"-\" + this.verticalAlign;\n    }\n\n    return this.adapter.apply(\"menuClass\", {\n      className: className,\n      level: level\n    }).className;\n  };\n  /**\r\n   * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n   * into this element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return HTML element reference\r\n   */\n\n\n  ExportMenu.prototype.createItemElement = function (level, type) {\n    var element = document.createElement(this.itemTag);\n    var className = this.classPrefix + \"-item \" + this.classPrefix + \"-item-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n    element.className = this.adapter.apply(\"itemClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className;\n    element.setAttribute(\"role\", \"menuitem\");\n    element.setAttribute(\"tabindex\", this.tabindex.toString());\n    return element;\n  };\n  /**\r\n   * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n   * content.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return An HTML Element\r\n   */\n\n\n  ExportMenu.prototype.createLabelElement = function (level, type) {\n    var element = document.createElement(this.labelTag);\n    var className = this.classPrefix + \"-label \" + this.classPrefix + \"-label-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n\n    if (this.typeClickable(type)) {\n      className += \" \" + this.classPrefix + \"-clickable\";\n    }\n\n    element.className = this.adapter.apply(\"labelClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className; // Accessible navigation\n    //element.setAttribute(\"tabindex\", this.tabindex.toString());\n    //element.setAttribute(\"role\", \"menuitem\");\n\n    return element;\n  };\n  /**\r\n   * Creates a \"icon\" part of the menu item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return An HTML Element\r\n   */\n\n\n  ExportMenu.prototype.createIconElement = function (level, type) {\n    var element = document.createElement(this.iconTag);\n    var className = this.classPrefix + \"-icon \" + this.classPrefix + \"-icon-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n\n    if (this.typeClickable(type)) {\n      className += \" \" + this.classPrefix + \"-clickable\";\n    }\n\n    element.className = this.adapter.apply(\"labelClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className; // Accessible navigation\n\n    element.setAttribute(\"tabindex\", this.tabindex.toString());\n    element.setAttribute(\"role\", \"menuitem\");\n    return element;\n  };\n  /**\r\n   * Creates a a custom element out of raw HTML.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param level  Current nesting level\r\n   * @param type   Type of the menu item\r\n   * @return An HTML Element\r\n   */\n\n\n  ExportMenu.prototype.createSvgElement = function (level, type, svg) {\n    var parser = new DOMParser();\n    var element = parser.parseFromString(svg, \"image/svg+xml\").documentElement;\n    var className = this.classPrefix + \"-icon \" + this.classPrefix + \"-icon-level-\" + level + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\n\n    if (this.typeClickable(type)) {\n      className += \" \" + this.classPrefix + \"-clickable\";\n    }\n\n    element.setAttribute(\"class\", this.adapter.apply(\"labelClass\", {\n      className: className,\n      level: level,\n      type: type\n    }).className); // Accessible navigation\n\n    element.setAttribute(\"tabindex\", this.tabindex.toString());\n    element.setAttribute(\"role\", \"menuitem\");\n    return element;\n  };\n  /**\r\n   * Destroys the menu and all its elements.\r\n   */\n\n\n  ExportMenu.prototype.dispose = function () {\n    if (!this._disposed) {\n      _super.prototype.dispose.call(this);\n\n      if (this._element && this._element.parentNode) {\n        this._element.parentNode.removeChild(this._element);\n      }\n    }\n  };\n  /**\r\n   * Checks whether menu item type is supposed to be clickable.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param type  Menu item type\r\n   * @return Is clickable?\r\n   */\n\n\n  ExportMenu.prototype.typeClickable = function (type) {\n    return $type.hasValue(type);\n  };\n  /**\r\n   * Checks whether menu item has any sub-items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  A menu item\r\n   * @return Has sub-items?\r\n   */\n\n\n  ExportMenu.prototype.hasSubMenu = function (branch) {\n    return branch.menu && branch.menu.length ? true : false;\n  };\n  /**\r\n   * Returns sub-items (if they exist).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  A menu item\r\n   * @return Submenus\r\n   */\n\n\n  ExportMenu.prototype.getSubMenu = function (branch) {\n    if (branch.menu && branch.menu.length) {\n      return branch.menu;\n    }\n  };\n  /**\r\n   * Generates and returns an applicable label to be used for screen readers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item   A menu item instance\r\n   * @param label  Current label\r\n   * @return Reader text\r\n   */\n\n\n  ExportMenu.prototype.getReaderLabel = function (branch, label) {\n    // Strip any HTML from the label\n    label = $utils.stripTags(label); // Add textual note if the branch is clickable\n\n    if (branch.ascendants.length == 0) {\n      label = label == \"...\" ? this.language.translate(\"Export\") : label;\n      label += \" [\" + this.language.translate(\"Press ENTER or use arrow keys to navigate\") + \"]\";\n    } else if (this.hasSubMenu(branch)) {\n      label += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\n    } else if (branch.type == \"print\") {\n      label = this.language.translate(\"Click, tap or press ENTER to print.\");\n    } else if (this.typeClickable(branch.type)) {\n      label = this.language.translate(\"Click, tap or press ENTER to export as %1.\", undefined, label);\n    }\n\n    return this.adapter.apply(\"rederLabel\", {\n      label: label,\n      branch: branch\n    }).label;\n  };\n\n  Object.defineProperty(ExportMenu.prototype, \"container\", {\n    /**\r\n     * @return Container\r\n     */\n    get: function () {\n      return this._container;\n    },\n\n    /**\r\n     * Getters and setters\r\n     */\n\n    /**\r\n     * An HTML container to place the Menu in.\r\n     *\r\n     * A container must be an HTML element, because menu itself is HTML, and\r\n     * cannot be placed into SVG.\r\n     *\r\n     * @param container Reference to container element\r\n     * @todo Check if menu is already build. If it is, just move it to a new container\r\n     */\n    set: function (container) {\n      this._container = container;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"items\", {\n    /**\r\n     * @return Menu items\r\n     */\n    get: function () {\n      return this._items;\n    },\n\n    /**\r\n     * A list of menu items. Can be nested.\r\n     *\r\n     * @param items  Menu items\r\n     */\n    set: function (items) {\n      this._items = items;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"tag\", {\n    /**\r\n     * Sets main menu tag to place menu in.\r\n     *\r\n     * This also sets up how menu items are built.\r\n     *\r\n     * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n     *\r\n     * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n     *\r\n     * @default \"ul\"\r\n     * @param tag Tag to use for menu\r\n     */\n    set: function (tag) {\n      this._menuTag = tag;\n      this._itemTag = tag == \"ul\" ? \"li\" : \"div\";\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"menuTag\", {\n    /**\r\n     * Returns current menu tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Menu tag (item that contains sub-items)\r\n     */\n    get: function () {\n      return this.adapter.apply(\"menuTag\", {\n        tag: this._menuTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"itemTag\", {\n    /**\r\n     * Returns tag to wrap items into.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Item tag\r\n     */\n    get: function () {\n      return this.adapter.apply(\"itemTag\", {\n        tag: this._itemTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"labelTag\", {\n    /**\r\n     * Returns menu label tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Label tag\r\n     */\n    get: function () {\n      return this.adapter.apply(\"labelTag\", {\n        tag: this._labelTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"iconTag\", {\n    /**\r\n     * Returns icon tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Icon tag\r\n     */\n    get: function () {\n      return this.adapter.apply(\"iconTag\", {\n        tag: this._iconTag\n      }).tag;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"align\", {\n    /**\r\n     * @return Horizontal alignment\r\n     */\n    get: function () {\n      return this.adapter.apply(\"align\", {\n        align: this._align\n      }).align;\n    },\n\n    /**\r\n     * A horizontal alignment for the menu placement.\r\n     *\r\n     * @param value Horizontal alignment\r\n     */\n    set: function (value) {\n      this._align = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"verticalAlign\", {\n    /**\r\n     * @return Vertical alignment\r\n     */\n    get: function () {\n      return this.adapter.apply(\"verticalAlign\", {\n        verticalAlign: this._verticalAlign\n      }).verticalAlign;\n    },\n\n    /**\r\n     * A vertical alignment for the menu placement.\r\n     *\r\n     * @param value Vertical alignment\r\n     */\n    set: function (value) {\n      this._verticalAlign = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"classPrefix\", {\n    /**\r\n     * @return Class name prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"classPrefix\", {\n        classPrefix: this._classPrefix\n      }).classPrefix;\n    },\n\n    /**\r\n     * Class name prefix.\r\n     *\r\n     * @default \"amexport\"\r\n     * @param value Class name prefix\r\n     */\n    set: function (value) {\n      this._classPrefix = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"defaultStyles\", {\n    /**\r\n     * @return Should ExportMenu load its own CSS?\r\n     */\n    get: function () {\n      return this.adapter.apply(\"defaultStyles\", {\n        defaultStyles: this._defaultStyles\n      }).defaultStyles;\n    },\n\n    /**\r\n     * Indicates whether [[ExportMenu]] should load external CSS to style itself.\r\n     *\r\n     * If set to `false`, the menu will not be styled, and will rely on some\r\n     * external CSS.\r\n     *\r\n     * @default true\r\n     * @param Should ExportMenu load its own CSS?\r\n     */\n    set: function (value) {\n      if (this._defaultStyles != value) {\n        this._defaultStyles = value;\n\n        if (value) {\n          this.loadDefaultCSS();\n        }\n      }\n\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads the default CSS.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  ExportMenu.prototype.loadDefaultCSS = function () {\n    this._disposers.push(exportCSS($dom.getShadowRoot(this.container), this.classPrefix));\n\n    if (this._element) {\n      this._element.style.display = \"\";\n    }\n  };\n\n  Object.defineProperty(ExportMenu.prototype, \"tabindex\", {\n    /**\r\n     * @return Tab index\r\n     */\n    get: function () {\n      return this.adapter.apply(\"tabindex\", {\n        tabindex: this._tabindex\n      }).tabindex;\n    },\n\n    /**\r\n     * A tab index for the menu.\r\n     *\r\n     * Tab index will influence the order in which elements on the chart and\r\n     * the whole page are selected when pressing TAB key.\r\n     *\r\n     * @param value Tab index\r\n     */\n    set: function (value) {\n      this._tabindex = value;\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ExportMenu.prototype, \"language\", {\n    /**\r\n     * @return A [[Language]] instance to be used\r\n     */\n    get: function () {\n      var _this = this;\n\n      var language = this._language.get();\n\n      if (language == null) {\n        language = new Language(); // TODO code duplication with `set language()`\n\n        this._language.set(language, language.events.on(\"localechanged\", function (ev) {\n          _this.invalidate();\n        }));\n      }\n\n      return language;\n    },\n\n    /**\r\n     * A [[Language]] instance.\r\n     *\r\n     * @param value An instance of [[Language]]\r\n     */\n    set: function (value) {\n      var _this = this;\n\n      this._language.set(value, value.events.on(\"localechanged\", function (ev) {\n        _this.invalidate();\n      }));\n\n      this.invalidate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Controlling the menu\r\n   */\n\n  /**\r\n   * Removes all active classes from menu items. Useful on touch devices and\r\n   * keyboard navigation where open menu can be closed instantly by clicking or\r\n   * tapping outside it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  ExportMenu.prototype.close = function () {\n    var _this = this;\n\n    if (this.isDisposed()) {\n      return;\n    }\n\n    if (this._ignoreNextClose) {\n      this._ignoreNextClose = false;\n      return;\n    }\n\n    if (this.closeOnClick) {\n      this._element.style.pointerEvents = \"none\";\n      setTimeout(function () {\n        _this._element.style.pointerEvents = \"auto\";\n      }, 100);\n    }\n\n    if (this._currentSelection) {\n      this.setBlur(this._currentSelection);\n      this._currentSelection = undefined;\n    }\n\n    if (this._element) {\n      var items = this._element.getElementsByClassName(\"active\");\n\n      for (var len = items.length, i = len - 1; i >= 0; i--) {\n        if (items[i]) {\n          $dom.removeClass(items[i], \"active\");\n        }\n      }\n    }\n\n    this.events.dispatchImmediately(\"closed\", {\n      type: \"closed\",\n      target: this\n    });\n  };\n  /**\r\n   * Selects a branch in the menu.\r\n   *\r\n   * Handles closing of currently open branch.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Branch to select\r\n   */\n\n\n  ExportMenu.prototype.selectBranch = function (branch) {\n    var _this = this;\n\n    if (this.isDisposed()) {\n      return;\n    } // Cancel previous closure\n\n\n    if (branch.closeTimeout) {\n      this.removeDispose(branch.closeTimeout);\n      branch.closeTimeout = undefined;\n    } // Add active class\n\n\n    $dom.addClass(branch.element, \"active\"); // Set expanded\n\n    if (branch.submenuElement) {\n      branch.submenuElement.setAttribute(\"aria-expanded\", \"true\");\n    } // Remove current selection\n\n\n    if (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {\n      $iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), function (ascendant) {\n        if (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\n          _this.unselectBranch(ascendant, true);\n        }\n      });\n    } // Select and/or cancel timeout for current ascendants\n\n\n    $iter.each(branch.ascendants.iterator(), function (ascendant) {\n      if (ascendant.closeTimeout) {\n        _this.removeDispose(ascendant.closeTimeout);\n\n        ascendant.closeTimeout = undefined;\n      }\n\n      $dom.addClass(ascendant.element, \"active\");\n    }); // Log current selection\n\n    this._currentSelection = branch; // Invoke event\n\n    if (this.events.isEnabled(\"branchselected\")) {\n      var event_5 = {\n        type: \"branchselected\",\n        target: this,\n        branch: branch\n      };\n      this.events.dispatchImmediately(\"branchselected\", event_5);\n    }\n  };\n  /**\r\n   * Unselects a branch. Also selects a branch one level up if necessary.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Branch to unselect\r\n   * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n   */\n\n\n  ExportMenu.prototype.unselectBranch = function (branch, simple) {\n    if (this.isDisposed()) {\n      return;\n    } // Remove active class\n\n\n    $dom.removeClass(branch.element, \"active\"); // Set expanded\n\n    if (branch.submenuElement) {\n      branch.submenuElement.removeAttribute(\"aria-expanded\");\n    } // Remove current selection\n\n\n    if (this._currentSelection == branch) {\n      this._currentSelection = undefined;\n    } // Invoke event\n\n\n    if (this.events.isEnabled(\"branchunselected\")) {\n      var event_6 = {\n        type: \"branchunselected\",\n        target: this,\n        branch: branch\n      };\n      this.events.dispatchImmediately(\"branchunselected\", event_6);\n    }\n  };\n  /**\r\n   * Delay unselection of a branch. This can still be cancelled in some other\r\n   * place if the branch or its children regain focus.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Branch to unselect\r\n   * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n   */\n\n\n  ExportMenu.prototype.delayUnselectBranch = function (branch, simple) {\n    var _this = this;\n\n    if (this.isDisposed()) {\n      return;\n    } // Schedule branch unselection\n\n\n    if (branch.closeTimeout) {\n      this.removeDispose(branch.closeTimeout);\n      branch.closeTimeout = undefined;\n    }\n\n    branch.closeTimeout = this.setTimeout(function () {\n      _this.unselectBranch(branch, simple);\n    }, this.closeDelay); // Schedule unselection of all ascendants\n    // In case focus went away from the export menu altogether, this will ensure\n    // that all items will be closed.\n    // In case we're jumping to other menu item, those delayed unselections will\n    // be cancelled by `selectBranch`\n\n    if (simple !== true && branch.ascendants) {\n      $iter.each(branch.ascendants.iterator(), function (ascendant) {\n        _this.delayUnselectBranch(ascendant, true);\n      });\n    }\n  };\n  /**\r\n   * Navigates the menu based on which direction kayboard key was pressed.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param key A key that was pressed\r\n   */\n\n\n  ExportMenu.prototype.moveSelection = function (key) {\n    if (this.isDisposed()) {\n      return;\n    } // Check if there's a current selection\n\n\n    if (!this._currentSelection) {\n      return;\n    }\n\n    var newSelection;\n\n    if (key == \"up\") {\n      // Try moving up in current menu list, or to the last item if already\n      // at the top\n      newSelection = this.getPrevSibling(this._currentSelection);\n    } else if (key == \"down\") {\n      // Try moving down in current menu list, or to the top item if already\n      // at the bottom\n      newSelection = this.getNextSibling(this._currentSelection);\n    } else if (key == \"left\" && this.align == \"right\" || key == \"right\" && this.align == \"left\") {\n      var menu = this.getSubMenu(this._currentSelection); // Go one level-deeper\n\n      if (menu != null) {\n        newSelection = menu[0];\n      }\n    } else if (key == \"right\" && this.align == \"right\" || key == \"left\" && this.align == \"left\") {\n      // Go one level-deeper\n      newSelection = this.getParentItem(this._currentSelection);\n    }\n\n    if (newSelection && newSelection !== this._currentSelection) {\n      this.selectBranch(newSelection);\n      this.setFocus(newSelection);\n      this._currentSelection = newSelection;\n    }\n  };\n  /**\r\n   * Returns all siblings of a menu item, including this same menu item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item\r\n   * @return List of sibling menu items\r\n   */\n\n\n  ExportMenu.prototype.getSiblings = function (branch) {\n    var parent = this.getParentItem(branch);\n\n    if (parent && parent.menu) {\n      return parent.menu;\n    } else {\n      return [];\n    }\n  };\n  /**\r\n   * Returns menu items parent item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item\r\n   * @return Parent menu item\r\n   */\n\n\n  ExportMenu.prototype.getParentItem = function (branch) {\n    if (branch.ascendants && branch.ascendants.length) {\n      return branch.ascendants.getIndex(branch.ascendants.length - 1);\n    } else {\n      return undefined;\n    }\n  };\n  /**\r\n   * Returns next sibling in the same menu branch. If there is no next sibling,\r\n   * the first one is returned. If there is just one item, that item is\r\n   * returned. Unsupported menu items are skipped.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item to search siblings for\r\n   * @return Menu item\r\n   */\n\n\n  ExportMenu.prototype.getNextSibling = function (branch) {\n    var siblings = this.getSiblings(branch);\n\n    if (siblings.length > 1) {\n      var next = siblings.indexOf(branch) + 1;\n      next = siblings.length == next ? 0 : next;\n      return siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\n    } else {\n      return branch;\n    }\n  };\n  /**\r\n   * Returns previous sibling in the same menu branch. If there is no next\r\n   * sibling, the first one is returned. If there is just one item, that item is\r\n   * returned. Unsupported menu items are skipped.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch  Menu item to search siblings for\r\n   * @return Menu item\r\n   */\n\n\n  ExportMenu.prototype.getPrevSibling = function (branch) {\n    var siblings = this.getSiblings(branch);\n\n    if (siblings.length > 1) {\n      var prev = siblings.indexOf(branch) - 1;\n      prev = prev == -1 ? siblings.length - 1 : prev;\n      return siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\n    } else {\n      return branch;\n    }\n  };\n  /**\r\n   * Attempts to set focus on particular menu element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Menu item\r\n   */\n\n\n  ExportMenu.prototype.setFocus = function (branch) {\n    if (branch.interactions) {\n      try {\n        branch.interactions.element.focus();\n      } catch (e) {// nothing\n      }\n    }\n  };\n  /**\r\n   * Attempts to remove focus from the menu element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param branch Menu item\r\n   */\n\n\n  ExportMenu.prototype.setBlur = function (branch) {\n    if (branch.interactions) {\n      try {\n        branch.interactions.element.blur();\n      } catch (e) {// nothing\n      }\n    }\n  };\n  /**\r\n   * Hides the whole branch of menu.\r\n   *\r\n   * @param  branch  branch\r\n   */\n\n\n  ExportMenu.prototype.hideBranch = function (branch) {\n    branch.element.style.display = \"none\";\n  };\n  /**\r\n   * Show the branch of menu.\r\n   *\r\n   * @param  branch  branch\r\n   */\n\n\n  ExportMenu.prototype.showBranch = function (branch) {\n    branch.element.style.display = \"\";\n  };\n\n  Object.defineProperty(ExportMenu.prototype, \"element\", {\n    /**\r\n     * The main element o fthe menu - usually `<ul>`.\r\n     *\r\n     * @since 4.10.6\r\n     * @return Menu element\r\n     */\n    get: function () {\n      return this._element;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ExportMenu;\n}(Validatable);\n\nexport { ExportMenu };","map":{"version":3,"names":["__extends","exportCSS","Adapter","List","getInteraction","MutableValueDisposer","Language","Validatable","keyboard","$utils","$iter","$dom","$type","ExportMenu","_super","_this","call","adapter","closeDelay","closeOnClick","_language","_menuTag","_itemTag","_labelTag","_iconTag","_classPrefix","_defaultStyles","_align","_verticalAlign","_tabindex","_ignoreNextClose","_items","className","_disposers","push","invalidate","applyTheme","prototype","validate","draw","_element","createMenuElement","innerHTML","getMenuItemClass","defaultStyles","style","display","getValue","_container","appendChild","items","apply","len","length","i","drawBranch","menuElement","body","events","on","ev","pointer","touch","close","key","getEventKey","event","_currentSelection","preventDefault","moveSelection","loadDefaultCSS","container","branch","level","unsupported","ascendants","type","element","createItemElement","label","icon","createIconElement","src","title","svg","createSvgElement","createLabelElement","language","translate","readerLabel","getReaderLabel","setAttribute","interactions","typeClickable","isEnabled","isDisposed","event_1","dispatchImmediately","isKey","event_2","submenu_1","getSubMenu","selectBranch","setFocus","event_3","delayUnselectBranch","event_4","local_level","menu","submenu","submenuElement","copyFrom","hidden","hideBranch","id","color","backgroundColor","hex","document","createElement","menuTag","classPrefix","align","verticalAlign","itemTag","tabindex","toString","labelTag","iconTag","parser","DOMParser","parseFromString","documentElement","dispose","_disposed","parentNode","removeChild","hasValue","hasSubMenu","stripTags","undefined","Object","defineProperty","get","set","enumerable","configurable","tag","value","getShadowRoot","pointerEvents","setTimeout","setBlur","getElementsByClassName","removeClass","target","closeTimeout","removeDispose","addClass","each","concat","fromArray","iterator","ascendant","contains","unselectBranch","event_5","simple","removeAttribute","event_6","newSelection","getPrevSibling","getNextSibling","getParentItem","getSiblings","parent","getIndex","siblings","next","indexOf","prev","focus","e","blur","showBranch"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/export/ExportMenu.js"],"sourcesContent":["/**\r\n * ExportMenu provides functionality for building Export menu\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport exportCSS from \"./ExportCSS\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { List } from \"../utils/List\";\r\nimport { getInteraction } from \"../interaction/Interaction\";\r\nimport { MutableValueDisposer } from \"../utils/Disposer\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { keyboard } from \"../utils/Keyboard\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $iter from \"../utils/Iterator\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a menu for Export operations.\r\n *\r\n * To add an export menu to a chart, set this to a new instance of\r\n * [[ExportMenu]].\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n * @important\r\n */\r\nvar ExportMenu = /** @class */ (function (_super) {\r\n    __extends(ExportMenu, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ExportMenu() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * An [[Adapter]].\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * How many milliseconds to hold menu/sub-menu open after it loses focus or\r\n         * hover, before auto-closing it.\r\n         *\r\n         * @default 1000\r\n         */\r\n        _this.closeDelay = 1000;\r\n        /**\r\n         * Close the menu automatically when some export operation is triggered.\r\n         *\r\n         * @default true\r\n         * @since 4.2.2\r\n         */\r\n        _this.closeOnClick = true;\r\n        /**\r\n         * An instance of [[Language]].\r\n         */\r\n        _this._language = new MutableValueDisposer();\r\n        /**\r\n         * What HTML tags to use to build menu.\r\n         */\r\n        _this._menuTag = \"ul\";\r\n        /**\r\n         * Which tag to use to enclose individual menu items.\r\n         */\r\n        _this._itemTag = \"li\";\r\n        /**\r\n         * Tag to wrap menu item labels in.\r\n         */\r\n        _this._labelTag = \"a\";\r\n        /**\r\n         * Tag to use for icons\r\n         */\r\n        _this._iconTag = \"img\";\r\n        /**\r\n         * Prefix for class names applied to menu elements.\r\n         */\r\n        _this._classPrefix = \"amexport\";\r\n        /**\r\n         * If set to `true` [[ExportMenu]] will load it's own external CSS when\r\n         * instantiated.\r\n         */\r\n        _this._defaultStyles = true;\r\n        /**\r\n         * Horizontal positioning.\r\n         */\r\n        _this._align = \"right\";\r\n        /**\r\n         * Vertical positioning.\r\n         */\r\n        _this._verticalAlign = \"top\";\r\n        /**\r\n         * A tabindex to apply to Export Menu.\r\n         */\r\n        _this._tabindex = 0;\r\n        /**\r\n         * Whether next menu close event should be ignored.\r\n         */\r\n        _this._ignoreNextClose = false;\r\n        /**\r\n         * Default menu items.\r\n         */\r\n        _this._items = [\r\n            {\r\n                \"label\": \"...\",\r\n                \"menu\": [\r\n                    {\r\n                        \"label\": \"Image\",\r\n                        \"menu\": [\r\n                            { \"type\": \"png\", \"label\": \"PNG\" },\r\n                            { \"type\": \"jpg\", \"label\": \"JPG\" },\r\n                            { \"type\": \"svg\", \"label\": \"SVG\" },\r\n                            { \"type\": \"pdf\", \"label\": \"PDF\" }\r\n                        ]\r\n                    }, {\r\n                        \"label\": \"Data\",\r\n                        \"menu\": [\r\n                            { \"type\": \"json\", \"label\": \"JSON\" },\r\n                            { \"type\": \"csv\", \"label\": \"CSV\" },\r\n                            { \"type\": \"xlsx\", \"label\": \"XLSX\" },\r\n                            { \"type\": \"html\", \"label\": \"HTML\" },\r\n                            { \"type\": \"pdfdata\", \"label\": \"PDF\" }\r\n                        ]\r\n                    }, {\r\n                        \"label\": \"Print\", \"type\": \"print\"\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n        _this.className = \"ExportMenu\";\r\n        _this._disposers.push(_this._language);\r\n        _this.invalidate();\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)draws the Export menu.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.validate = function () {\r\n        this.draw();\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    /**\r\n     * Draws the menu based on current items.\r\n     *\r\n     * Normally, there's no need to call this explicitly. The chart, if it has\r\n     * export menu enabled, will automatically draw the menu.\r\n     */\r\n    ExportMenu.prototype.draw = function () {\r\n        var _this = this;\r\n        // Create top-level menu item, or clear it\r\n        if (!this._element) {\r\n            this._element = this.createMenuElement(0);\r\n        }\r\n        else {\r\n            this._element.innerHTML = \"\";\r\n            this._element.className = this.getMenuItemClass(0);\r\n        }\r\n        // See if we're loading external CSS\r\n        // Hide it until CSS is loaded\r\n        if (this.defaultStyles) {\r\n            this._element.style.display = \"none\";\r\n        }\r\n        // Append to container\r\n        $type.getValue(this._container).appendChild(this._element);\r\n        // Apply adapter to menu items before processing\r\n        var items = this.adapter.apply(\"items\", {\r\n            items: this._items\r\n        }).items;\r\n        for (var len = items.length, i = 0; i < len; i++) {\r\n            this.drawBranch(this._element, items[i], 0);\r\n        }\r\n        // Apply adapter to finalized menu element\r\n        this._element = this.adapter.apply(\"menuElement\", {\r\n            menuElement: this._element\r\n        }).menuElement;\r\n        // Set up global \"down\" event\r\n        this._disposers.push(getInteraction().body.events.on(\"down\", function (ev) {\r\n            if (!ev.pointer.touch) {\r\n                _this._ignoreNextClose = false;\r\n            }\r\n            _this.close();\r\n        }));\r\n        // Set up global event on ESC press to close the menu\r\n        this._disposers.push(getInteraction().body.events.on(\"keydown\", function (ev) {\r\n            var key = keyboard.getEventKey(ev.event);\r\n            switch (key) {\r\n                case \"esc\":\r\n                    _this.close();\r\n                    break;\r\n                case \"up\":\r\n                case \"down\":\r\n                case \"left\":\r\n                case \"right\":\r\n                    if (_this._currentSelection) {\r\n                        ev.event.preventDefault();\r\n                    }\r\n                    _this.moveSelection(key);\r\n                    break;\r\n            }\r\n        }));\r\n        if (this.defaultStyles) {\r\n            this.loadDefaultCSS();\r\n        }\r\n    };\r\n    /**\r\n     * Creates a new branch in export menu. This function is recursive for\r\n     * building multi-level menus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param container Container to put branch elements in\r\n     * @param branch    Menu item\r\n     * @param level     Current nesting level\r\n     */\r\n    ExportMenu.prototype.drawBranch = function (container, branch, level) {\r\n        var _this = this;\r\n        // Apply adapter\r\n        branch = this.adapter.apply(\"branch\", {\r\n            branch: branch,\r\n            level: level\r\n        }).branch;\r\n        // Unsupported?\r\n        // ExportMenu does not check or know for specific browser/system\r\n        // capabilities. It must happen in some other code and applied via Adapter.\r\n        // Export itself will check compatibility, but there might be other plugins\r\n        // that influence it or even add any specific export functionality.\r\n        if (branch.unsupported === true) {\r\n            return;\r\n        }\r\n        // Init ascendants\r\n        if (!branch.ascendants) {\r\n            branch.ascendants = new List();\r\n        }\r\n        // Get type\r\n        var type = branch.type;\r\n        // Create an item\r\n        var element = this.createItemElement(level, type);\r\n        // Create label\r\n        var label;\r\n        // Create icon\r\n        if (branch.icon) {\r\n            label = this.createIconElement(level, type);\r\n            label.src = branch.icon;\r\n            if (branch.label || branch.title) {\r\n                label.title = branch.title || branch.label;\r\n            }\r\n        }\r\n        else if (branch.svg) {\r\n            label = this.createSvgElement(level, type, branch.svg);\r\n            if (branch.label || branch.title) {\r\n                label.title = branch.title || branch.label;\r\n            }\r\n        }\r\n        else {\r\n            label = this.createLabelElement(level, type);\r\n            label.innerHTML = (branch.label ? this.language.translate(branch.label) : \"\");\r\n            if (branch.title) {\r\n                label.title = branch.title;\r\n            }\r\n        }\r\n        // Apply reader text to label\r\n        var readerLabel = this.getReaderLabel(branch, label.innerHTML);\r\n        label.setAttribute(\"aria-label\", readerLabel);\r\n        // Add Label\r\n        element.appendChild(label);\r\n        // Create interaction object\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions = getInteraction().getInteraction(element);\r\n        branch.element = element;\r\n        // Create interaction manager we can set event listeners to\r\n        if (this.typeClickable(type)) {\r\n            //branch.interactions.clickable = true;\r\n            // TODO clean this up when it's disposed\r\n            branch.interactions.events.on(\"hit\", function (ev) {\r\n                if (_this.events.isEnabled(\"hit\") && !_this.isDisposed()) {\r\n                    var event_1 = {\r\n                        \"type\": \"hit\",\r\n                        \"event\": ev.event,\r\n                        \"target\": _this,\r\n                        \"branch\": branch\r\n                    };\r\n                    _this.events.dispatchImmediately(\"hit\", event_1);\r\n                }\r\n            });\r\n            // TODO clean this up when it's disposed\r\n            branch.interactions.events.on(\"keyup\", function (ev) {\r\n                if (keyboard.isKey(ev.event, \"enter\")) {\r\n                    if (_this.events.isEnabled(\"enter\")) {\r\n                        var event_2 = {\r\n                            \"type\": \"enter\",\r\n                            \"event\": ev.event,\r\n                            \"target\": _this,\r\n                            \"branch\": branch\r\n                        };\r\n                        _this.events.dispatchImmediately(\"enter\", event_2);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        {\r\n            var submenu_1 = this.getSubMenu(branch);\r\n            // Add ENTER event to open sub-menus\r\n            if (submenu_1 != null) {\r\n                // TODO clean this up when it's disposed\r\n                branch.interactions.events.on(\"keyup\", function (ev) {\r\n                    if (keyboard.isKey(ev.event, \"enter\")) {\r\n                        // This is item has sub-menu, activate the first child on ENTER\r\n                        _this.selectBranch(submenu_1[0]);\r\n                        // Attempt to set focus\r\n                        _this.setFocus(submenu_1[0]);\r\n                    }\r\n                });\r\n                branch.interactions.events.on(\"hit\", function (ev) {\r\n                    _this.selectBranch(branch);\r\n                });\r\n            }\r\n        }\r\n        // Add events\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"over\", function (ev) {\r\n            if (ev.pointer.touch) {\r\n                // Cancel pending menu closure\r\n                _this._ignoreNextClose = true;\r\n            }\r\n            _this.selectBranch(branch);\r\n            if (_this.events.isEnabled(\"over\")) {\r\n                var event_3 = {\r\n                    \"type\": \"over\",\r\n                    \"event\": ev.event,\r\n                    \"target\": _this,\r\n                    \"branch\": branch\r\n                };\r\n                _this.events.dispatchImmediately(\"over\", event_3);\r\n            }\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"out\", function (ev) {\r\n            if (_this.isDisposed()) {\r\n                return;\r\n            }\r\n            if (!ev.pointer.touch) {\r\n                _this.delayUnselectBranch(branch);\r\n            }\r\n            if (_this.events.isEnabled(\"out\")) {\r\n                var event_4 = {\r\n                    \"type\": \"out\",\r\n                    \"event\": ev.event,\r\n                    \"target\": _this,\r\n                    \"branch\": branch\r\n                };\r\n                _this.events.dispatchImmediately(\"out\", event_4);\r\n            }\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"focus\", function (ev) {\r\n            _this.selectBranch(branch);\r\n        });\r\n        // TODO clean this up when it's disposed\r\n        branch.interactions.events.on(\"blur\", function (ev) {\r\n            _this.delayUnselectBranch(branch);\r\n        });\r\n        // Increment level\r\n        var local_level = level + 1;\r\n        // Has sub-menu?\r\n        if (branch.menu) {\r\n            var submenu = this.createMenuElement(local_level);\r\n            branch.submenuElement = submenu;\r\n            for (var len = branch.menu.length, i = 0; i < len; i++) {\r\n                var ascendants = new List();\r\n                branch.menu[i].ascendants = ascendants;\r\n                if (branch.ascendants.length) {\r\n                    ascendants.copyFrom(branch.ascendants);\r\n                }\r\n                ascendants.push(branch);\r\n                this.drawBranch(submenu, branch.menu[i], local_level);\r\n            }\r\n            // Sub-menu is empty (all items are not supported)\r\n            // Do not draw this menu item at all\r\n            if (submenu.innerHTML == \"\") {\r\n                return;\r\n            }\r\n            element.appendChild(submenu);\r\n        }\r\n        // Should this item be hidden?\r\n        if (branch.hidden) {\r\n            this.hideBranch(branch);\r\n        }\r\n        // Add id?\r\n        if (branch.id) {\r\n            element.setAttribute(\"id\", branch.id);\r\n        }\r\n        // Background color?\r\n        if (branch.color) {\r\n            element.style.backgroundColor = branch.color.hex;\r\n        }\r\n        // Append to container\r\n        container.appendChild(element);\r\n    };\r\n    /**\r\n     * Creates a menu element to hold its elements in. Usually it's an `<ul>`\r\n     * tag.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @return HTML element reference\r\n     */\r\n    ExportMenu.prototype.createMenuElement = function (level) {\r\n        var element = document.createElement(this.menuTag);\r\n        element.className = this.getMenuItemClass(level);\r\n        // Accessibility\r\n        if (level === 0) {\r\n            element.setAttribute(\"role\", \"menubar\");\r\n        }\r\n        else {\r\n            element.setAttribute(\"role\", \"menu\");\r\n        }\r\n        return element;\r\n    };\r\n    /**\r\n     * Generates a class name for the menu element based on its nesting level.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @return Class name(s)\r\n     */\r\n    ExportMenu.prototype.getMenuItemClass = function (level) {\r\n        var className = this.classPrefix + \"-menu \" + this.classPrefix + \"-menu-level-\" + level;\r\n        if (level === 0) {\r\n            className += \" \" + this.classPrefix + \"-menu-root \" +\r\n                this.classPrefix + \"-\" + this.align + \" \" +\r\n                this.classPrefix + \"-\" + this.verticalAlign;\r\n        }\r\n        return this.adapter.apply(\"menuClass\", {\r\n            className: className,\r\n            level: level\r\n        }).className;\r\n    };\r\n    /**\r\n     * Creates menu item. Usually `<li>` tag. Its label and sub-elements will go\r\n     * into this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return HTML element reference\r\n     */\r\n    ExportMenu.prototype.createItemElement = function (level, type) {\r\n        var element = document.createElement(this.itemTag);\r\n        var className = this.classPrefix + \"-item \" + this.classPrefix\r\n            + \"-item-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        element.className = this.adapter.apply(\"itemClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a \"label\" part of the menu item. It could be text or any HTML\r\n     * content.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createLabelElement = function (level, type) {\r\n        var element = document.createElement(this.labelTag);\r\n        var className = this.classPrefix + \"-label \" + this.classPrefix\r\n            + \"-label-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.className = this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        // Accessible navigation\r\n        //element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        //element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a \"icon\" part of the menu item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createIconElement = function (level, type) {\r\n        var element = document.createElement(this.iconTag);\r\n        var className = this.classPrefix + \"-icon \" + this.classPrefix\r\n            + \"-icon-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.className = this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className;\r\n        // Accessible navigation\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Creates a a custom element out of raw HTML.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param level  Current nesting level\r\n     * @param type   Type of the menu item\r\n     * @return An HTML Element\r\n     */\r\n    ExportMenu.prototype.createSvgElement = function (level, type, svg) {\r\n        var parser = new DOMParser();\r\n        var element = parser.parseFromString(svg, \"image/svg+xml\").documentElement;\r\n        var className = this.classPrefix + \"-icon \" + this.classPrefix\r\n            + \"-icon-level-\" + level\r\n            + \" \" + this.classPrefix + \"-item-\" + (type || \"blank\");\r\n        if (this.typeClickable(type)) {\r\n            className += \" \" + this.classPrefix + \"-clickable\";\r\n        }\r\n        element.setAttribute(\"class\", this.adapter.apply(\"labelClass\", {\r\n            className: className,\r\n            level: level,\r\n            type: type\r\n        }).className);\r\n        // Accessible navigation\r\n        element.setAttribute(\"tabindex\", this.tabindex.toString());\r\n        element.setAttribute(\"role\", \"menuitem\");\r\n        return element;\r\n    };\r\n    /**\r\n     * Destroys the menu and all its elements.\r\n     */\r\n    ExportMenu.prototype.dispose = function () {\r\n        if (!this._disposed) {\r\n            _super.prototype.dispose.call(this);\r\n            if (this._element && this._element.parentNode) {\r\n                this._element.parentNode.removeChild(this._element);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Checks whether menu item type is supposed to be clickable.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param type  Menu item type\r\n     * @return Is clickable?\r\n     */\r\n    ExportMenu.prototype.typeClickable = function (type) {\r\n        return $type.hasValue(type);\r\n    };\r\n    /**\r\n     * Checks whether menu item has any sub-items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  A menu item\r\n     * @return Has sub-items?\r\n     */\r\n    ExportMenu.prototype.hasSubMenu = function (branch) {\r\n        return (branch.menu && branch.menu.length) ? true : false;\r\n    };\r\n    /**\r\n     * Returns sub-items (if they exist).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  A menu item\r\n     * @return Submenus\r\n     */\r\n    ExportMenu.prototype.getSubMenu = function (branch) {\r\n        if (branch.menu && branch.menu.length) {\r\n            return branch.menu;\r\n        }\r\n    };\r\n    /**\r\n     * Generates and returns an applicable label to be used for screen readers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item   A menu item instance\r\n     * @param label  Current label\r\n     * @return Reader text\r\n     */\r\n    ExportMenu.prototype.getReaderLabel = function (branch, label) {\r\n        // Strip any HTML from the label\r\n        label = $utils.stripTags(label);\r\n        // Add textual note if the branch is clickable\r\n        if (branch.ascendants.length == 0) {\r\n            label = label == \"...\" ? this.language.translate(\"Export\") : label;\r\n            label += \" [\" + this.language.translate(\"Press ENTER or use arrow keys to navigate\") + \"]\";\r\n        }\r\n        else if (this.hasSubMenu(branch)) {\r\n            label += \" [\" + this.language.translate(\"Click, tap or press ENTER to open\") + \"]\";\r\n        }\r\n        else if (branch.type == \"print\") {\r\n            label = this.language.translate(\"Click, tap or press ENTER to print.\");\r\n        }\r\n        else if (this.typeClickable(branch.type)) {\r\n            label = this.language.translate(\"Click, tap or press ENTER to export as %1.\", undefined, label);\r\n        }\r\n        return this.adapter.apply(\"rederLabel\", {\r\n            label: label,\r\n            branch: branch\r\n        }).label;\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"container\", {\r\n        /**\r\n         * @return Container\r\n         */\r\n        get: function () {\r\n            return this._container;\r\n        },\r\n        /**\r\n         * Getters and setters\r\n         */\r\n        /**\r\n         * An HTML container to place the Menu in.\r\n         *\r\n         * A container must be an HTML element, because menu itself is HTML, and\r\n         * cannot be placed into SVG.\r\n         *\r\n         * @param container Reference to container element\r\n         * @todo Check if menu is already build. If it is, just move it to a new container\r\n         */\r\n        set: function (container) {\r\n            this._container = container;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"items\", {\r\n        /**\r\n         * @return Menu items\r\n         */\r\n        get: function () {\r\n            return this._items;\r\n        },\r\n        /**\r\n         * A list of menu items. Can be nested.\r\n         *\r\n         * @param items  Menu items\r\n         */\r\n        set: function (items) {\r\n            this._items = items;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"tag\", {\r\n        /**\r\n         * Sets main menu tag to place menu in.\r\n         *\r\n         * This also sets up how menu items are built.\r\n         *\r\n         * If you set this to \"ul\", menu items will be wrapped into `<li>` tags.\r\n         *\r\n         * If set to \"div\", menu items will be wrapped in `<div>` tags.\r\n         *\r\n         * @default \"ul\"\r\n         * @param tag Tag to use for menu\r\n         */\r\n        set: function (tag) {\r\n            this._menuTag = tag;\r\n            this._itemTag = tag == \"ul\" ? \"li\" : \"div\";\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"menuTag\", {\r\n        /**\r\n         * Returns current menu tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Menu tag (item that contains sub-items)\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"menuTag\", {\r\n                tag: this._menuTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"itemTag\", {\r\n        /**\r\n         * Returns tag to wrap items into.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Item tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"itemTag\", {\r\n                tag: this._itemTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"labelTag\", {\r\n        /**\r\n         * Returns menu label tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Label tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"labelTag\", {\r\n                tag: this._labelTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"iconTag\", {\r\n        /**\r\n         * Returns icon tag.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Icon tag\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"iconTag\", {\r\n                tag: this._iconTag\r\n            }).tag;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"align\", {\r\n        /**\r\n         * @return Horizontal alignment\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"align\", {\r\n                align: this._align\r\n            }).align;\r\n        },\r\n        /**\r\n         * A horizontal alignment for the menu placement.\r\n         *\r\n         * @param value Horizontal alignment\r\n         */\r\n        set: function (value) {\r\n            this._align = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"verticalAlign\", {\r\n        /**\r\n         * @return Vertical alignment\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"verticalAlign\", {\r\n                verticalAlign: this._verticalAlign\r\n            }).verticalAlign;\r\n        },\r\n        /**\r\n         * A vertical alignment for the menu placement.\r\n         *\r\n         * @param value Vertical alignment\r\n         */\r\n        set: function (value) {\r\n            this._verticalAlign = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"classPrefix\", {\r\n        /**\r\n         * @return Class name prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"classPrefix\", {\r\n                classPrefix: this._classPrefix\r\n            }).classPrefix;\r\n        },\r\n        /**\r\n         * Class name prefix.\r\n         *\r\n         * @default \"amexport\"\r\n         * @param value Class name prefix\r\n         */\r\n        set: function (value) {\r\n            this._classPrefix = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"defaultStyles\", {\r\n        /**\r\n         * @return Should ExportMenu load its own CSS?\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"defaultStyles\", {\r\n                defaultStyles: this._defaultStyles\r\n            }).defaultStyles;\r\n        },\r\n        /**\r\n         * Indicates whether [[ExportMenu]] should load external CSS to style itself.\r\n         *\r\n         * If set to `false`, the menu will not be styled, and will rely on some\r\n         * external CSS.\r\n         *\r\n         * @default true\r\n         * @param Should ExportMenu load its own CSS?\r\n         */\r\n        set: function (value) {\r\n            if (this._defaultStyles != value) {\r\n                this._defaultStyles = value;\r\n                if (value) {\r\n                    this.loadDefaultCSS();\r\n                }\r\n            }\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads the default CSS.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.loadDefaultCSS = function () {\r\n        this._disposers.push(exportCSS($dom.getShadowRoot(this.container), this.classPrefix));\r\n        if (this._element) {\r\n            this._element.style.display = \"\";\r\n        }\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"tabindex\", {\r\n        /**\r\n         * @return Tab index\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"tabindex\", {\r\n                tabindex: this._tabindex\r\n            }).tabindex;\r\n        },\r\n        /**\r\n         * A tab index for the menu.\r\n         *\r\n         * Tab index will influence the order in which elements on the chart and\r\n         * the whole page are selected when pressing TAB key.\r\n         *\r\n         * @param value Tab index\r\n         */\r\n        set: function (value) {\r\n            this._tabindex = value;\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ExportMenu.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            var language = this._language.get();\r\n            if (language == null) {\r\n                language = new Language();\r\n                // TODO code duplication with `set language()`\r\n                this._language.set(language, language.events.on(\"localechanged\", function (ev) {\r\n                    _this.invalidate();\r\n                }));\r\n            }\r\n            return language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance.\r\n         *\r\n         * @param value An instance of [[Language]]\r\n         */\r\n        set: function (value) {\r\n            var _this = this;\r\n            this._language.set(value, value.events.on(\"localechanged\", function (ev) {\r\n                _this.invalidate();\r\n            }));\r\n            this.invalidate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Controlling the menu\r\n     */\r\n    /**\r\n     * Removes all active classes from menu items. Useful on touch devices and\r\n     * keyboard navigation where open menu can be closed instantly by clicking or\r\n     * tapping outside it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ExportMenu.prototype.close = function () {\r\n        var _this = this;\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        if (this._ignoreNextClose) {\r\n            this._ignoreNextClose = false;\r\n            return;\r\n        }\r\n        if (this.closeOnClick) {\r\n            this._element.style.pointerEvents = \"none\";\r\n            setTimeout(function () {\r\n                _this._element.style.pointerEvents = \"auto\";\r\n            }, 100);\r\n        }\r\n        if (this._currentSelection) {\r\n            this.setBlur(this._currentSelection);\r\n            this._currentSelection = undefined;\r\n        }\r\n        if (this._element) {\r\n            var items = this._element.getElementsByClassName(\"active\");\r\n            for (var len = items.length, i = len - 1; i >= 0; i--) {\r\n                if (items[i]) {\r\n                    $dom.removeClass(items[i], \"active\");\r\n                }\r\n            }\r\n        }\r\n        this.events.dispatchImmediately(\"closed\", {\r\n            type: \"closed\",\r\n            target: this\r\n        });\r\n    };\r\n    /**\r\n     * Selects a branch in the menu.\r\n     *\r\n     * Handles closing of currently open branch.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to select\r\n     */\r\n    ExportMenu.prototype.selectBranch = function (branch) {\r\n        var _this = this;\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Cancel previous closure\r\n        if (branch.closeTimeout) {\r\n            this.removeDispose(branch.closeTimeout);\r\n            branch.closeTimeout = undefined;\r\n        }\r\n        // Add active class\r\n        $dom.addClass(branch.element, \"active\");\r\n        // Set expanded\r\n        if (branch.submenuElement) {\r\n            branch.submenuElement.setAttribute(\"aria-expanded\", \"true\");\r\n        }\r\n        // Remove current selection\r\n        if (this._currentSelection && this._currentSelection !== branch && this._currentSelection.ascendants) {\r\n            $iter.each($iter.concat($iter.fromArray([this._currentSelection]), this._currentSelection.ascendants.iterator()), function (ascendant) {\r\n                if (!branch.ascendants.contains(ascendant) && branch !== ascendant) {\r\n                    _this.unselectBranch(ascendant, true);\r\n                }\r\n            });\r\n        }\r\n        // Select and/or cancel timeout for current ascendants\r\n        $iter.each(branch.ascendants.iterator(), function (ascendant) {\r\n            if (ascendant.closeTimeout) {\r\n                _this.removeDispose(ascendant.closeTimeout);\r\n                ascendant.closeTimeout = undefined;\r\n            }\r\n            $dom.addClass(ascendant.element, \"active\");\r\n        });\r\n        // Log current selection\r\n        this._currentSelection = branch;\r\n        // Invoke event\r\n        if (this.events.isEnabled(\"branchselected\")) {\r\n            var event_5 = {\r\n                type: \"branchselected\",\r\n                target: this,\r\n                branch: branch\r\n            };\r\n            this.events.dispatchImmediately(\"branchselected\", event_5);\r\n        }\r\n    };\r\n    /**\r\n     * Unselects a branch. Also selects a branch one level up if necessary.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to unselect\r\n     * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n     */\r\n    ExportMenu.prototype.unselectBranch = function (branch, simple) {\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Remove active class\r\n        $dom.removeClass(branch.element, \"active\");\r\n        // Set expanded\r\n        if (branch.submenuElement) {\r\n            branch.submenuElement.removeAttribute(\"aria-expanded\");\r\n        }\r\n        // Remove current selection\r\n        if (this._currentSelection == branch) {\r\n            this._currentSelection = undefined;\r\n        }\r\n        // Invoke event\r\n        if (this.events.isEnabled(\"branchunselected\")) {\r\n            var event_6 = {\r\n                type: \"branchunselected\",\r\n                target: this,\r\n                branch: branch\r\n            };\r\n            this.events.dispatchImmediately(\"branchunselected\", event_6);\r\n        }\r\n    };\r\n    /**\r\n     * Delay unselection of a branch. This can still be cancelled in some other\r\n     * place if the branch or its children regain focus.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Branch to unselect\r\n     * @param simple If `true`, only the branch will be unselected without selecting parent branch\r\n     */\r\n    ExportMenu.prototype.delayUnselectBranch = function (branch, simple) {\r\n        var _this = this;\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Schedule branch unselection\r\n        if (branch.closeTimeout) {\r\n            this.removeDispose(branch.closeTimeout);\r\n            branch.closeTimeout = undefined;\r\n        }\r\n        branch.closeTimeout = this.setTimeout(function () {\r\n            _this.unselectBranch(branch, simple);\r\n        }, this.closeDelay);\r\n        // Schedule unselection of all ascendants\r\n        // In case focus went away from the export menu altogether, this will ensure\r\n        // that all items will be closed.\r\n        // In case we're jumping to other menu item, those delayed unselections will\r\n        // be cancelled by `selectBranch`\r\n        if (simple !== true && branch.ascendants) {\r\n            $iter.each(branch.ascendants.iterator(), function (ascendant) {\r\n                _this.delayUnselectBranch(ascendant, true);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Navigates the menu based on which direction kayboard key was pressed.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param key A key that was pressed\r\n     */\r\n    ExportMenu.prototype.moveSelection = function (key) {\r\n        if (this.isDisposed()) {\r\n            return;\r\n        }\r\n        // Check if there's a current selection\r\n        if (!this._currentSelection) {\r\n            return;\r\n        }\r\n        var newSelection;\r\n        if (key == \"up\") {\r\n            // Try moving up in current menu list, or to the last item if already\r\n            // at the top\r\n            newSelection = this.getPrevSibling(this._currentSelection);\r\n        }\r\n        else if (key == \"down\") {\r\n            // Try moving down in current menu list, or to the top item if already\r\n            // at the bottom\r\n            newSelection = this.getNextSibling(this._currentSelection);\r\n        }\r\n        else if ((key == \"left\" && this.align == \"right\") || (key == \"right\" && this.align == \"left\")) {\r\n            var menu = this.getSubMenu(this._currentSelection);\r\n            // Go one level-deeper\r\n            if (menu != null) {\r\n                newSelection = menu[0];\r\n            }\r\n        }\r\n        else if ((key == \"right\" && this.align == \"right\") || (key == \"left\" && this.align == \"left\")) {\r\n            // Go one level-deeper\r\n            newSelection = this.getParentItem(this._currentSelection);\r\n        }\r\n        if (newSelection && newSelection !== this._currentSelection) {\r\n            this.selectBranch(newSelection);\r\n            this.setFocus(newSelection);\r\n            this._currentSelection = newSelection;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all siblings of a menu item, including this same menu item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item\r\n     * @return List of sibling menu items\r\n     */\r\n    ExportMenu.prototype.getSiblings = function (branch) {\r\n        var parent = this.getParentItem(branch);\r\n        if (parent && parent.menu) {\r\n            return parent.menu;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Returns menu items parent item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item\r\n     * @return Parent menu item\r\n     */\r\n    ExportMenu.prototype.getParentItem = function (branch) {\r\n        if (branch.ascendants && branch.ascendants.length) {\r\n            return branch.ascendants.getIndex(branch.ascendants.length - 1);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    };\r\n    /**\r\n     * Returns next sibling in the same menu branch. If there is no next sibling,\r\n     * the first one is returned. If there is just one item, that item is\r\n     * returned. Unsupported menu items are skipped.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item to search siblings for\r\n     * @return Menu item\r\n     */\r\n    ExportMenu.prototype.getNextSibling = function (branch) {\r\n        var siblings = this.getSiblings(branch);\r\n        if (siblings.length > 1) {\r\n            var next = siblings.indexOf(branch) + 1;\r\n            next = siblings.length == next ? 0 : next;\r\n            return siblings[next].unsupported ? this.getNextSibling(siblings[next]) : siblings[next];\r\n        }\r\n        else {\r\n            return branch;\r\n        }\r\n    };\r\n    /**\r\n     * Returns previous sibling in the same menu branch. If there is no next\r\n     * sibling, the first one is returned. If there is just one item, that item is\r\n     * returned. Unsupported menu items are skipped.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch  Menu item to search siblings for\r\n     * @return Menu item\r\n     */\r\n    ExportMenu.prototype.getPrevSibling = function (branch) {\r\n        var siblings = this.getSiblings(branch);\r\n        if (siblings.length > 1) {\r\n            var prev = siblings.indexOf(branch) - 1;\r\n            prev = prev == -1 ? siblings.length - 1 : prev;\r\n            return siblings[prev].unsupported ? this.getPrevSibling(siblings[prev]) : siblings[prev];\r\n        }\r\n        else {\r\n            return branch;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to set focus on particular menu element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Menu item\r\n     */\r\n    ExportMenu.prototype.setFocus = function (branch) {\r\n        if (branch.interactions) {\r\n            try {\r\n                branch.interactions.element.focus();\r\n            }\r\n            catch (e) {\r\n                // nothing\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to remove focus from the menu element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param branch Menu item\r\n     */\r\n    ExportMenu.prototype.setBlur = function (branch) {\r\n        if (branch.interactions) {\r\n            try {\r\n                branch.interactions.element.blur();\r\n            }\r\n            catch (e) {\r\n                // nothing\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Hides the whole branch of menu.\r\n     *\r\n     * @param  branch  branch\r\n     */\r\n    ExportMenu.prototype.hideBranch = function (branch) {\r\n        branch.element.style.display = \"none\";\r\n    };\r\n    /**\r\n     * Show the branch of menu.\r\n     *\r\n     * @param  branch  branch\r\n     */\r\n    ExportMenu.prototype.showBranch = function (branch) {\r\n        branch.element.style.display = \"\";\r\n    };\r\n    Object.defineProperty(ExportMenu.prototype, \"element\", {\r\n        /**\r\n         * The main element o fthe menu - usually `<ul>`.\r\n         *\r\n         * @since 4.10.6\r\n         * @return Menu element\r\n         */\r\n        get: function () {\r\n            return this._element;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ExportMenu;\r\n}(Validatable));\r\nexport { ExportMenu };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}