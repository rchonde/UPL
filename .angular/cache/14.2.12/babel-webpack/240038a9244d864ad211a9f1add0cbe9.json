{"ast":null,"code":"/**\r\n * Module for building Gauge charts.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { RadarChart, RadarChartDataItem } from \"./RadarChart\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { ClockHand } from \"../elements/ClockHand\";\nimport { registry } from \"../../core/Registry\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar GaugeChartDataItem =\n/** @class */\nfunction (_super) {\n  __extends(GaugeChartDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function GaugeChartDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"GaugeChartDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return GaugeChartDataItem;\n}(RadarChartDataItem);\n\nexport { GaugeChartDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\n\nvar GaugeChart =\n/** @class */\nfunction (_super) {\n  __extends(GaugeChart, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function GaugeChart() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"GaugeChart\";\n    _this.startAngle = 180;\n    _this.endAngle = 360;\n    _this.hands = new ListTemplate(new ClockHand());\n\n    _this.hands.events.on(\"inserted\", _this.processHand, _this, false);\n\n    _this._disposers.push(new ListDisposer(_this.hands));\n\n    _this._disposers.push(_this.hands.template); // Apply theme\n\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  GaugeChart.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this); // Add a default screen reader title for accessibility\n    // This will be overridden in screen reader if there are any `titles` set\n\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Gauge chart\");\n    }\n  };\n  /**\r\n   * Decorates a [[ClockHand]] when it is added to the chart.\r\n   *\r\n   * @param event  Event\r\n   */\n\n\n  GaugeChart.prototype.processHand = function (event) {\n    var hand = event.newValue;\n\n    if (!hand.axis) {\n      hand.axis = this.xAxes.getIndex(0);\n    }\n  };\n  /**\r\n   * This function is used to sort element's JSON config properties, so that\r\n   * some properties that absolutely need to be processed last, can be put at\r\n   * the end.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param a  Element 1\r\n   * @param b  Element 2\r\n   * @return Sorting number\r\n   */\n\n\n  GaugeChart.prototype.configOrder = function (a, b) {\n    if (a == b) {\n      return 0;\n    } // Must come last\n    else if (a == \"hands\") {\n      return 1;\n    } else if (b == \"hands\") {\n      return -1;\n    } else {\n      return _super.prototype.configOrder.call(this, a, b);\n    }\n  };\n\n  return GaugeChart;\n}(RadarChart);\n\nexport { GaugeChart };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"GaugeChart\"] = GaugeChart;","map":{"version":3,"names":["__extends","RadarChart","RadarChartDataItem","ListTemplate","ListDisposer","ClockHand","registry","$type","GaugeChartDataItem","_super","_this","call","className","applyTheme","GaugeChart","startAngle","endAngle","hands","events","on","processHand","_disposers","push","template","prototype","applyInternalDefaults","hasValue","readerTitle","language","translate","event","hand","newValue","axis","xAxes","getIndex","configOrder","a","b","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js"],"sourcesContent":["/**\r\n * Module for building Gauge charts.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { RadarChart, RadarChartDataItem } from \"./RadarChart\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { ClockHand } from \"../elements/ClockHand\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[GaugeChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar GaugeChartDataItem = /** @class */ (function (_super) {\r\n    __extends(GaugeChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"GaugeChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return GaugeChartDataItem;\r\n}(RadarChartDataItem));\r\nexport { GaugeChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Gauge chart.\r\n *\r\n * @see {@link IGaugeChartEvents} for a list of available Events\r\n * @see {@link IGaugeChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation\r\n * @important\r\n */\r\nvar GaugeChart = /** @class */ (function (_super) {\r\n    __extends(GaugeChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function GaugeChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"GaugeChart\";\r\n        _this.startAngle = 180;\r\n        _this.endAngle = 360;\r\n        _this.hands = new ListTemplate(new ClockHand());\r\n        _this.hands.events.on(\"inserted\", _this.processHand, _this, false);\r\n        _this._disposers.push(new ListDisposer(_this.hands));\r\n        _this._disposers.push(_this.hands.template);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    GaugeChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Gauge chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Decorates a [[ClockHand]] when it is added to the chart.\r\n     *\r\n     * @param event  Event\r\n     */\r\n    GaugeChart.prototype.processHand = function (event) {\r\n        var hand = event.newValue;\r\n        if (!hand.axis) {\r\n            hand.axis = this.xAxes.getIndex(0);\r\n        }\r\n    };\r\n    /**\r\n     * This function is used to sort element's JSON config properties, so that\r\n     * some properties that absolutely need to be processed last, can be put at\r\n     * the end.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param a  Element 1\r\n     * @param b  Element 2\r\n     * @return Sorting number\r\n     */\r\n    GaugeChart.prototype.configOrder = function (a, b) {\r\n        if (a == b) {\r\n            return 0;\r\n        }\r\n        // Must come last\r\n        else if (a == \"hands\") {\r\n            return 1;\r\n        }\r\n        else if (b == \"hands\") {\r\n            return -1;\r\n        }\r\n        else {\r\n            return _super.prototype.configOrder.call(this, a, b);\r\n        }\r\n    };\r\n    return GaugeChart;\r\n}(RadarChart));\r\nexport { GaugeChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"GaugeChart\"] = GaugeChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}