{"ast":null,"code":"/**\r\n * XY series module.\r\n */\nimport { __extends, __values } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Series, SeriesDataItem } from \"./Series\";\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { Dictionary } from \"../../core/utils/Dictionary\";\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\nimport { XYChart } from \"../types/XYChart\";\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\nimport { DateAxis } from \"../axes/DateAxis\";\nimport { registry } from \"../../core/Registry\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $utils from \"../../core/utils/Utils\";\nimport * as $type from \"../../core/utils/Type\";\nimport * as $time from \"../../core/utils/Time\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $path from \"../../core/rendering/Path\";\nimport { options } from \"../../core/Options\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar XYSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(XYSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function XYSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"XYSeriesDataItem\";\n    _this.values.customValue = {};\n    _this.values.valueX = {\n      stack: 0\n    };\n    _this.values.valueY = {\n      stack: 0\n    };\n    _this.values.openValueX = {};\n    _this.values.openValueY = {};\n    _this.values.dateX = {};\n    _this.values.dateY = {};\n    _this.values.openDateX = {};\n    _this.values.openDateY = {};\n\n    _this.setLocation(\"dateX\", 0.5, 0);\n\n    _this.setLocation(\"dateY\", 0.5, 0);\n\n    _this.setLocation(\"categoryX\", 0.5, 0);\n\n    _this.setLocation(\"categoryY\", 0.5, 0);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.valueX.value;\n    },\n\n    /**\r\n     * Item's numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"valueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.customValue.value;\n    },\n\n    /**\r\n     * Item's custom numeric value.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"customValue\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.valueY.value;\n    },\n\n    /**\r\n     * Item's numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"valueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"dateX\");\n    },\n\n    /**\r\n     * Item's date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"dateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"dateY\");\n    },\n\n    /**\r\n     * Item's date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"dateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.categoryX;\n    },\n\n    /**\r\n     * Item's category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"categoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.categoryY;\n    },\n\n    /**\r\n     * Item's category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"categoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.openValueX.value;\n    },\n\n    /**\r\n     * Item's open numeric value on X value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"openValueX\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\n    /**\r\n     * @return Value\r\n     */\n    get: function () {\n      return this.values.openValueY.value;\n    },\n\n    /**\r\n     * Item's open numeric value on Y value axis.\r\n     *\r\n     * @param value  Value\r\n     */\n    set: function (value) {\n      this.setValue(\"openValueY\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"openDateX\");\n    },\n\n    /**\r\n     * Item's open date value on X date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"openDateX\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\n    /**\r\n     * @return Date\r\n     */\n    get: function () {\n      return this.getDate(\"openDateY\");\n    },\n\n    /**\r\n     * Item's open date value on Y date-based axis.\r\n     *\r\n     * @param date  Date\r\n     */\n    set: function (date) {\n      this.setDate(\"openDateY\", date);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.openCategoryX;\n    },\n\n    /**\r\n     * Item's open category on X category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"openCategoryX\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.categories.openCategoryY;\n    },\n\n    /**\r\n     * Item's open category on Y category axis.\r\n     *\r\n     * @param category  Category\r\n     */\n    set: function (category) {\n      this.setCategory(\"openCategoryY\", category);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Return smallest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n\n  XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\n    var _this = this; //if (this.visible) {  // dumped because of non smooth zooming\n\n\n    var min;\n\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n\n    $array.each(fields, function (field) {\n      var value;\n\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n\n      value += stackValue;\n\n      if (value < min || !$type.isNumber(min)) {\n        min = value;\n      }\n    });\n    return min; //}\n  };\n  /**\r\n   * Return biggest value out of all item's value fields.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param fields      Fields to check in\r\n   * @param working     Include working (temporary) values\r\n   * @param stackValue  If item is in a stack, the value item starts as\r\n   * @return Value\r\n   */\n\n\n  XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\n    var _this = this; //if (this.visible) { // dumped because of non smooth zooming\n\n\n    var max;\n\n    if (!$type.isNumber(stackValue)) {\n      stackValue = 0;\n    }\n\n    $array.each(fields, function (field) {\n      var value;\n\n      if (working) {\n        value = _this.getWorkingValue(field);\n      } else {\n        value = _this.getValue(field);\n      }\n\n      value += stackValue;\n\n      if (value > max || !$type.isNumber(max)) {\n        max = value;\n      }\n    });\n    return max; //}\n  };\n\n  return XYSeriesDataItem;\n}(SeriesDataItem);\n\nexport { XYSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar XYSeries =\n/** @class */\nfunction (_super) {\n  __extends(XYSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function XYSeries() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Indicates which of the series' `dataFields` to calculate aggregate values\r\n     * for.\r\n     *\r\n     * Available data fields for all [[XYSeries]] are:\r\n     * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n     *\r\n     * [[CandlestickSeries]] adds:\r\n     * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n     *\r\n     * Available options:\r\n     * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n     *\r\n     * Defaults are as follows:\r\n     * * `valueX`: `\"close\"`\r\n     * * `valueY`: `\"close\"`\r\n     * * `openValueX`: `\"open\"`\r\n     * * `openValueY`: `\"open\"`\r\n     * * `lowValueX`: `\"low\"`\r\n     * * `lowValueY`: `\"low\"`\r\n     * * `highValueX`: `\"high\"`\r\n     * * `highValueY`: `\"high\"`\r\n     *\r\n     * Is required only if data being plotted on a `DateAxis` and\r\n     * its `groupData` is set to `true`.\r\n     *\r\n     * ```TypeScript\r\n     * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * let series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JavaScript\r\n     * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n     * dateAxis.groupData = true;\r\n     *\r\n     * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n     *\r\n     * var series = chart.series.push(new am4charts.LineSeries());\r\n     * series.dataFields.dateX = \"date\";\r\n     * series.dataFields.valueY = \"value\";\r\n     * series.groupFields.valueY = \"average\";\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"xAxes\": [{\r\n     *     \"type\": \"DateAxis\",\r\n     *     \"groupData\": true\r\n     *   }],\r\n     *   \"yAxes\": [{\r\n     *     \"type\": \"ValueAxis\"\r\n     *   }],\r\n     *   \"series\": [{\r\n     *     \"type\": \"LineSeries\",\r\n     *     \"dataFields\": {\r\n     *       \"dateX\": \"date\",\r\n     *       \"valueY\": \"value\"\r\n     *     },\r\n     *     \"groupFields\": {\r\n     *       \"valueY\": \"average\"\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * The above setup will ensure, that if there are many data items within\r\n     * selected range, they will be grouped into aggregated data points, using\r\n     * average value of all the values.\r\n     *\r\n     * For example if we have 2 years worth of daily data (~700 data items), when\r\n     * fully zoomed out, the chart would show ~100 data items instead: one for\r\n     * each week in those two years.\r\n     *\r\n     * Grouping will occur automatically, based on current selection range, and\r\n     * will change dynamically when user zooms in/out the chart.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n     * @since 4.7.0\r\n     */\n\n\n    _this.groupFields = {};\n    /**\r\n     * X axis the series is attached to.\r\n     */\n\n    _this._xAxis = new MutableValueDisposer();\n    /**\r\n     * Y axis the series is attached to.\r\n     */\n\n    _this._yAxis = new MutableValueDisposer();\n    /**\r\n     * [_xValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n\n    _this._xValueFields = [];\n    /**\r\n     * [_yValueFields description]\r\n     *\r\n     * @todo Description\r\n     */\n\n    _this._yValueFields = [];\n    /**\r\n     * @ignore\r\n     */\n\n    _this._baseInterval = {};\n    /**\r\n     * @ignore\r\n     */\n\n    _this.dataGrouped = false;\n    /**\r\n     * @ignore\r\n     */\n\n    _this.usesShowFields = false;\n    /**\r\n     * @ignore\r\n     */\n\n    _this._dataSetChanged = false;\n    _this._maxxX = 100000;\n    _this._maxxY = 100000;\n    _this._propertiesChanged = false;\n    /**\r\n     * @ignore\r\n     */\n\n    _this.outOfRange = false;\n    _this.className = \"XYSeries\";\n    _this.isMeasured = false;\n    _this.groupFields.valueX = \"close\";\n    _this.groupFields.valueY = \"close\";\n    _this.groupFields.customValue = \"close\";\n    _this.groupFields.openValueX = \"open\";\n    _this.groupFields.openValueY = \"open\";\n    _this.cursorTooltipEnabled = true;\n    _this.cursorHoverEnabled = true;\n    _this.excludeFromTotal = false;\n    _this.mainContainer.mask = new Sprite();\n\n    _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\n\n    _this.stacked = false;\n    _this.snapTooltip = false;\n    _this._showBullets = false;\n    _this.tooltip.pointerOrientation = \"horizontal\";\n    _this.properties.stackToNegative = true;\n    _this.hideTooltipWhileZooming = true;\n\n    _this.setPropertyValue(\"maskBullets\", true);\n\n    _this.tooltip.events.on(\"hidden\", function () {\n      _this.returnBulletDefaultState();\n    }, undefined, false);\n\n    _this._disposers.push(_this._xAxis);\n\n    _this._disposers.push(_this._yAxis);\n\n    _this.observe(visualProperties, function () {\n      if (_this.inited) {\n        _this._propertiesChanged = true;\n\n        if (_this.legendDataItem) {\n          _this.legendDataItem.childrenCreated = false;\n        }\n\n        if (_this.chart && _this.chart.legend) {\n          _this.chart.legend.invalidateDataItems();\n        }\n\n        _this.invalidate();\n      }\n    }, undefined, false);\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  XYSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"X/Y Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  XYSeries.prototype.createDataItem = function () {\n    return new XYSeriesDataItem();\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.resetExtremes = function () {\n    this._tmin.clear();\n\n    this._tmax.clear();\n\n    this._smin.clear();\n\n    this._smax.clear();\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.dataChangeUpdate = function () {\n    this.dataGrouped = false;\n    this._baseInterval = {};\n    this._currentDataSetId = \"\";\n    this.resetExtremes();\n\n    if (this.xAxis) {\n      this.xAxis.seriesDataChangeUpdate(this);\n    }\n\n    if (this.yAxis) {\n      this.yAxis.seriesDataChangeUpdate(this);\n    }\n  };\n  /**\r\n   * (Re)validates the series' data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validateData = function () {\n    this._baseInterval = {};\n    var dataFields = this.dataFields;\n\n    if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\n      this.usesShowFields = true;\n    } else {\n      this.usesShowFields = false;\n    }\n\n    this.defineFields();\n\n    if (this.data.length > 0) {\n      this.dataChangeUpdate();\n    }\n\n    _super.prototype.validateData.call(this);\n\n    this.updateItemReaderText();\n\n    if (this.chart) {\n      if (!$type.hasValue(this.dataFields[this._xField]) || !$type.hasValue(this.dataFields[this._yField])) {\n        throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\n      }\n    } // 4.7.21 solves 51540\n\n\n    if (this.inited && this.isHidden) {\n      this.hide(0);\n    }\n\n    this.dataGrouped = false;\n  };\n  /**\r\n   * Processes data item.\r\n   *\r\n   * @param dataItem     Data item\r\n   * @param dataContext  Raw data\r\n   * @param index        Index of the data item\r\n   */\n\n\n  XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\n    try {\n      _super.prototype.processDataItem.call(this, dataItem, dataContext);\n\n      this.xAxis.processSeriesDataItem(dataItem, \"X\");\n      this.yAxis.processSeriesDataItem(dataItem, \"Y\");\n      this.setInitialWorkingValues(dataItem);\n    } catch (e) {\n      if (this._chart) {\n        this._chart.raiseCriticalError(e);\n      }\n    }\n  };\n  /**\r\n   *\r\n   * When validating raw data, instead of processing data item, we update it\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param item\r\n   */\n\n\n  XYSeries.prototype.updateDataItem = function (dataItem) {\n    _super.prototype.updateDataItem.call(this, dataItem); //dataItem.events.disable();\n\n\n    this.xAxis.processSeriesDataItem(dataItem, \"X\");\n    this.yAxis.processSeriesDataItem(dataItem, \"Y\"); //dataItem.events.enable();\t\t\n  };\n  /**\r\n   * Inits data item's working values.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @param index     Data item's index\r\n   */\n\n\n  XYSeries.prototype.setInitialWorkingValues = function (dataItem) {};\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.disposeData = function () {\n    _super.prototype.disposeData.call(this);\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis) {\n      var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\n\n      if (dataItemsX) {\n        dataItemsX.clear();\n      }\n\n      if (xAxis instanceof CategoryAxis) {\n        this.clearCatAxis(xAxis);\n      }\n    }\n\n    if (yAxis) {\n      var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\n\n      if (dataItemsY) {\n        dataItemsY.clear();\n      }\n\n      if (yAxis instanceof CategoryAxis) {\n        this.clearCatAxis(yAxis);\n      }\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.clearCatAxis = function (axis) {\n    var uid = this.uid;\n    axis.dataItems.each(function (dataItem) {\n      if (dataItem.seriesDataItems[uid]) {\n        dataItem.seriesDataItems[uid] = [];\n      }\n    });\n  };\n  /**\r\n   * Sets up which data fields to use for data access.\r\n   */\n\n\n  XYSeries.prototype.defineFields = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      var xAxisFieldName = xAxis.axisFieldName;\n      var xField = xAxisFieldName + \"X\";\n      var xOpenField = \"open\" + $utils.capitalize(xAxisFieldName) + \"X\";\n      var yAxisFieldName = yAxis.axisFieldName;\n      var yField = yAxisFieldName + \"Y\";\n      var yOpenField = \"open\" + $utils.capitalize(yAxisFieldName) + \"Y\";\n      this._xField = xField;\n      this._yField = yField;\n\n      if (this.dataFields[xOpenField]) {\n        this._xOpenField = xOpenField;\n      }\n\n      if (this.dataFields[yOpenField]) {\n        this._yOpenField = yOpenField;\n      }\n\n      if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n\n      if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n\n      if (this.stacked && this.baseAxis == xAxis) {\n        this._xOpenField = xField;\n      }\n\n      if (this.stacked && this.baseAxis == yAxis) {\n        this._yOpenField = yField;\n      }\n\n      if (xAxis instanceof CategoryAxis && yAxis instanceof CategoryAxis) {\n        if (!this._yOpenField) {\n          this._yOpenField = yField;\n        }\n      }\n\n      this._xValueFields = [];\n      this._yValueFields = [];\n      this.addValueField(xAxis, this._xValueFields, this._xField);\n      this.addValueField(xAxis, this._xValueFields, this._xOpenField);\n      this.addValueField(yAxis, this._yValueFields, this._yField);\n      this.addValueField(yAxis, this._yValueFields, this._yOpenField);\n    }\n  };\n  /**\r\n   * [axis description]\r\n   *\r\n   * @todo Description\r\n   * @param axis    Axis\r\n   * @param fields  Fields (?)\r\n   * @param field   Field\r\n   */\n\n\n  XYSeries.prototype.addValueField = function (axis, fields, field) {\n    if (axis instanceof ValueAxis) {\n      if ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\n        fields.push(field);\n      }\n    }\n  };\n  /**\r\n   * Sets category field from the category axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n\n\n  XYSeries.prototype.setCategoryAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.category;\n    }\n  };\n  /**\r\n   * Sets date field from the date axis.\r\n   *\r\n   * User might set field for category axis only, but not for series. In such\r\n   * case, we take field value from axis and set it for series.\r\n   *\r\n   * @param field  Field\r\n   * @param axis   Axis\r\n   */\n\n\n  XYSeries.prototype.setDateAxisField = function (field, axis) {\n    if (!$type.hasValue(this.dataFields[field])) {\n      this.dataFields[field] = axis.dataFields.date;\n    }\n  };\n  /**\r\n   * Performs after-draw tasks, e.g. creates masks.\r\n   */\n\n\n  XYSeries.prototype.afterDraw = function () {\n    _super.prototype.afterDraw.call(this);\n\n    this.createMask();\n  };\n  /**\r\n   * Create a mask for the series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.createMask = function () {\n    // this mask from which we cut out ranges. does not work well if ranges overlap.\n    if (this.mainContainer.mask) {\n      var path_1 = this.getMaskPath(); // @todo: this approach won't work well on circluar or other non x/y axes\n\n      $iter.each(this.axisRanges.iterator(), function (range) {\n        if (range.axisFill.fillPath) {\n          range.axisFill.validate();\n          path_1 += range.axisFill.fillPath;\n        }\n      });\n      this.mainContainer.mask.path = path_1;\n    }\n  };\n  /**\r\n   * Returns an SVG path to use as series mask.\r\n   *\r\n   * @return SVG path\r\n   */\n\n\n  XYSeries.prototype.getMaskPath = function () {\n    if (this.xAxis && this.yAxis) {\n      return $path.rectToPath({\n        x: 0,\n        y: 0,\n        width: this.xAxis.axisLength,\n        height: this.yAxis.axisLength\n      });\n    }\n\n    return \"\";\n  };\n  /**\r\n   * Returns axis data field to use.\r\n   *\r\n   * @param axis  Axis\r\n   * @return Field name\r\n   */\n\n\n  XYSeries.prototype.getAxisField = function (axis) {\n    if (axis == this.xAxis) {\n      return this.xField;\n    }\n\n    if (axis == this.yAxis) {\n      return this.yField;\n    }\n  };\n  /**\r\n   * Validates data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validateDataItems = function () {\n    var chart = this.chart;\n\n    if (chart) {\n      this._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\n      this._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\n    } // this helps date axis to check which baseInterval we should use\n\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      xAxis.updateAxisBySeries();\n      yAxis.updateAxisBySeries();\n    }\n\n    _super.prototype.validateDataItems.call(this);\n\n    if (xAxis && yAxis) {\n      xAxis.postProcessSeriesDataItems(this);\n      yAxis.postProcessSeriesDataItems(this);\n    }\n  };\n  /**\r\n   * Validates data range.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validateDataRange = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      if (xAxis.dataRangeInvalid) {\n        xAxis.validateDataRange();\n      }\n\n      if (yAxis.dataRangeInvalid) {\n        yAxis.validateDataRange();\n      }\n    }\n\n    _super.prototype.validateDataRange.call(this);\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.validate = function () {\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis && yAxis) {\n      if (xAxis.invalid) {\n        xAxis.validate();\n      }\n\n      if (yAxis.invalid) {\n        yAxis.validate();\n      }\n\n      this.y = yAxis.pixelY;\n      this.x = xAxis.pixelX;\n      this._showBullets = true;\n      var minBulletDistance = this.minBulletDistance;\n\n      if ($type.isNumber(minBulletDistance)) {\n        if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\n          this._showBullets = false;\n        }\n      }\n    }\n\n    this.updateTooltip();\n\n    if (xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped || yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped) {\n      return;\n    }\n\n    _super.prototype.validate.call(this);\n\n    var chart = this.chart;\n    var maskBullets = this.maskBullets;\n\n    if (chart && maskBullets) {\n      if (chart.className == \"XYChart\") {\n        if (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\n          if (this.yAxis) {\n            this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n\n        if (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\n          if (this.xAxis) {\n            this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\n          } else {\n            this.bulletsContainer.mask = undefined;\n          }\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"xAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      if (this.chart) {\n        if (!this._xAxis.get()) {\n          var axis = this.chart.xAxes.getIndex(0);\n\n          if (!axis) {\n            throw Error(\"There are no X axes on chart.\");\n          }\n\n          this.xAxis = axis;\n        }\n\n        return this._xAxis.get();\n      }\n    },\n\n    /**\r\n     * X axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function (axis) {\n      this.setXAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XYSeries.prototype.setXAxis = function (axis) {\n    var oldAxis = this._xAxis.get();\n\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid); // TODO why is this here ?\n\n        this._xAxis.dispose(); // temp @todo: why it is not disposed?\n\n\n        oldAxis.series.removeValue(this);\n      }\n\n      this._xAxis.set(axis, axis.registerSeries(this));\n\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"yAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      if (this.chart) {\n        if (!this._yAxis.get()) {\n          var axis = this.chart.yAxes.getIndex(0);\n\n          if (!axis) {\n            throw Error(\"There are no Y axes on chart.\");\n          }\n\n          this.yAxis = axis;\n        }\n\n        return this._yAxis.get();\n      }\n    },\n\n    /**\r\n     * Y axis the series is attached to.\r\n     *\r\n     * @param axis  Axis\r\n     */\n    set: function (axis) {\n      this.setYAxis(axis);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  XYSeries.prototype.setYAxis = function (axis) {\n    var oldAxis = this._yAxis.get();\n\n    if (oldAxis != axis) {\n      if (oldAxis) {\n        this.dataItemsByAxis.removeKey(oldAxis.uid); // TODO why is this here ?\n\n        this._yAxis.dispose(); // temp @todo: why it is not disposed?\n\n\n        oldAxis.series.removeValue(this);\n      }\n\n      this._yAxis.set(axis, axis.registerSeries(this));\n\n      if (axis.chart instanceof XYChart) {\n        axis.chart.handleYAxisSet(this);\n      }\n\n      this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\n      this.invalidateData();\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\n    /**\r\n     * @return Axis\r\n     */\n    get: function () {\n      var xAxis = this.xAxis;\n      var yAxis = this.yAxis;\n\n      if (!this._baseAxis && xAxis && yAxis) {\n        if (yAxis instanceof DateAxis) {\n          this._baseAxis = yAxis;\n        }\n\n        if (xAxis instanceof DateAxis) {\n          this._baseAxis = xAxis;\n        }\n\n        if (yAxis instanceof CategoryAxis) {\n          this._baseAxis = yAxis;\n        }\n\n        if (xAxis instanceof CategoryAxis) {\n          this._baseAxis = xAxis;\n        }\n\n        if (!this._baseAxis) {\n          this._baseAxis = xAxis;\n        }\n      }\n\n      return this._baseAxis;\n    },\n\n    /**\r\n     * The main (base) axis.\r\n     *\r\n     * This is the axis that series fills will go to, or grow animations will\r\n     * happen from.\r\n     *\r\n     * @param value  Axis\r\n     */\n    set: function (value) {\n      if (this._baseAxis != value) {\n        this._baseAxis = value;\n        this.invalidate();\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Adds one or several (array) of data items to the existing data.\r\n   *\r\n   * @param rawDataItem One or many raw data item objects\r\n   */\n\n  XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {\n    _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);\n\n    var scrollbarSeries = this.scrollbarSeries;\n\n    if (scrollbarSeries) {\n      this.scrollbarSeries.addData(rawDataItem, removeCount, true);\n      this.scrollbarSeries._parseDataFrom = this._parseDataFrom;\n    }\n  };\n\n  XYSeries.prototype.setData = function (value) {\n    _super.prototype.setData.call(this, value);\n\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.setData(value);\n    }\n  };\n  /**\r\n   * Makes the chart use particular data set.\r\n   *\r\n   * If `id` is not provided or there is no such data set, main data will be\r\n   * used.\r\n   *\r\n   * @ignore\r\n   * @since 4.7.0\r\n   * @param  id  Data set id\r\n   */\n\n\n  XYSeries.prototype.setDataSet = function (id) {\n    var changed = _super.prototype.setDataSet.call(this, id);\n\n    if (changed) {\n      this._dataSetChanged = true;\n      var dataItems = this.dataItems;\n      this.resetExtremes();\n\n      if (dataItems && dataItems.length > 0) {\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n        this._prevStartIndex = undefined;\n        this._prevEndIndex = undefined;\n        this._startIndex = undefined;\n        this._endIndex = undefined;\n\n        if (!this.appeared) {\n          this.processValues(false); // this will slow down!\n        }\n\n        if (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\n          this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\n\n          this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\n\n          this.dispatch(\"extremeschanged\");\n        }\n\n        if (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\n          this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\n\n          this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\n\n          this.dispatch(\"extremeschanged\");\n        }\n      }\n    }\n\n    return changed;\n  };\n  /**\r\n   * Processes values after data items' were added.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItems  Data items\r\n   */\n\n\n  XYSeries.prototype.processValues = function (working) {\n    _super.prototype.processValues.call(this, working);\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (!xAxis || !yAxis) {\n      return;\n    }\n\n    var dataItems = this.dataItems;\n    var minX = Infinity;\n    var maxX = -Infinity;\n    var minY = Infinity;\n    var maxY = -Infinity;\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var workingStartIndex = startIndex;\n    var workingEndIndex = endIndex;\n\n    if (!working) {\n      startIndex = 0;\n      endIndex = this.dataItems.length;\n    }\n\n    for (var i = startIndex; i < endIndex; i++) {\n      var dataItem = dataItems.getIndex(i);\n      this.getStackValue(dataItem, working);\n      var stackX = dataItem.getValue(\"valueX\", \"stack\");\n      var stackY = dataItem.getValue(\"valueY\", \"stack\");\n\n      if (!working) {\n        stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\n        stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\n      }\n\n      minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n      minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n      maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n      maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY); // if it's stacked, pay attention to stack value\n\n      if (this.stacked) {\n        if (this.baseAxis == xAxis) {\n          if (stackY < minY) {\n            minY = stackY;\n          }\n\n          if (stackY > maxY) {\n            maxY = stackY;\n          }\n        }\n\n        if (this.baseAxis == yAxis) {\n          if (stackX < minX) {\n            minX = stackX;\n          }\n\n          if (stackX > maxX) {\n            maxX = stackX;\n          }\n        }\n      }\n    } // this is mainly for value axis to calculate total and perecent.total of each series category\n\n\n    xAxis.processSeriesDataItems();\n    yAxis.processSeriesDataItems();\n    var xAxisId = xAxis.uid;\n    var yAxisId = yAxis.uid;\n\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n\n      this._smax.setKey(xAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n\n      this._smax.setKey(yAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (!working) {\n      if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\n        this._tmin.setKey(xAxisId, minX);\n\n        this._tmax.setKey(xAxisId, maxX);\n\n        this._tmin.setKey(yAxisId, minY);\n\n        this._tmax.setKey(yAxisId, maxY);\n\n        var stackedSeries = this.stackedSeries;\n\n        if (stackedSeries) {\n          if (stackedSeries.isDisposed()) {\n            this.stackedSeries = undefined;\n          } else {\n            stackedSeries.processValues(false);\n          }\n        }\n\n        this.dispatchImmediately(\"extremeschanged\");\n      }\n    }\n\n    if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\n      minX = Infinity;\n      maxX = -Infinity;\n      minY = Infinity;\n      maxY = -Infinity;\n\n      for (var i = workingStartIndex; i < workingEndIndex; i++) {\n        var dataItem = dataItems.getIndex(i);\n        this.getStackValue(dataItem, working);\n        var stackX = dataItem.getValue(\"valueX\", \"stack\");\n        var stackY = dataItem.getValue(\"valueY\", \"stack\");\n\n        if (!working) {\n          stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\n          stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\n        }\n\n        minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\n        minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\n        maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\n        maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY); // if it's stacked, pay attention to stack value\n\n        if (this.stacked) {\n          if (this.baseAxis == xAxis) {\n            if (stackY < minY) {\n              minY = stackY;\n            }\n\n            if (stackY > maxY) {\n              maxY = stackY;\n            }\n          }\n\n          if (this.baseAxis == yAxis) {\n            if (stackX < minX) {\n              minX = stackX;\n            }\n\n            if (stackX > maxX) {\n              maxX = stackX;\n            }\n          }\n        }\n      }\n    }\n\n    if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\n      this._smin.setKey(xAxisId, undefined);\n\n      this._smax.setKey(xAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\n      this._smin.setKey(yAxisId, undefined);\n\n      this._smax.setKey(yAxisId, undefined);\n\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      return;\n    }\n\n    if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\n      this._smin.setKey(xAxisId, minX);\n\n      this._smax.setKey(xAxisId, maxX);\n\n      this._smin.setKey(yAxisId, minY);\n\n      this._smax.setKey(yAxisId, maxY);\n\n      if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\n        /// new, helps to handle issues with change percent\n        var changed = false;\n\n        if (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(yAxisId);\n\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && minY < tmin || this.stackedSeries && !this.isHidden && !working) {\n            this._tmin.setKey(yAxisId, minY);\n\n            changed = true;\n          }\n\n          var tmax = this._tmax.getKey(yAxisId);\n\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || xAxis instanceof DateAxis && xAxis.groupData && this.isShowing) && maxY > tmax || this.stackedSeries && !this.isHidden && !working) {\n            this._tmax.setKey(yAxisId, maxY);\n\n            changed = true;\n          }\n        }\n\n        if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\n          var tmin = this._tmin.getKey(xAxisId);\n\n          if (!$type.isNumber(tmin) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && minX < tmin || this.stackedSeries && !this.isHidden && !working) {\n            this._tmin.setKey(xAxisId, minX);\n\n            changed = true;\n          }\n\n          var tmax = this._tmax.getKey(xAxisId);\n\n          if (!$type.isNumber(tmax) || (this.usesShowFields || this._dataSetChanged || yAxis instanceof DateAxis && yAxis.groupData && this.isShowing) && maxX > tmax || this.stackedSeries && !this.isHidden && !working) {\n            this._tmax.setKey(xAxisId, maxX);\n\n            changed = true;\n          }\n        }\n\n        if (changed) {\n          this.dispatchImmediately(\"extremeschanged\");\n        }\n\n        if (this.start == 0 && this.end == 1) {\n          // yes, its ok. otherwise min/max won't be updated when zooming out\n          this._dataSetChanged = false;\n        }\n\n        this.dispatchImmediately(\"selectionextremeschanged\");\n      }\n    }\n\n    if (!working && this.stacked) {\n      this.processValues(true);\n    }\n  };\n  /**\r\n   * Hides element's [[Tooltip]].\r\n   *\r\n   * @see {@link Tooltip}\r\n   */\n\n\n  XYSeries.prototype.hideTooltip = function (duration) {\n    _super.prototype.hideTooltip.call(this, duration);\n\n    this.returnBulletDefaultState();\n    this._prevTooltipDataItem = undefined;\n  };\n  /**\r\n   * Shows series tooltip at specific position.\r\n   *\r\n   * @param xPosition  X\r\n   * @param yPosition  Y\r\n   */\n\n\n  XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\n    var dataItem;\n\n    if (this.visible && !this.isHiding && !this.isShowing) {\n      var xAxis = this._xAxis.get();\n\n      var yAxis = this._yAxis.get();\n\n      if (xAxis == this.baseAxis) {\n        dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\n      }\n\n      if (yAxis == this.baseAxis) {\n        dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\n      }\n\n      var point = this.showTooltipAtDataItem(dataItem);\n\n      if (point) {\n        return point;\n      } // so that if tooltip is shown on columns or bullets for it not to be hidden\n\n\n      if (!this.tooltipText && !this.tooltipHTML) {\n        return;\n      }\n    }\n\n    this.hideTooltip();\n  };\n\n  XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\n    return dataItem.locations[field];\n  };\n\n  XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\n    return dataItem.locations[field];\n  };\n  /**\r\n   * Shows series tooltip at specific dataItem.\r\n   *\r\n   * @param dataItem\r\n   */\n\n\n  XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\n    var e_1, _a;\n\n    var cursor = this.chart.cursor;\n\n    if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\n      this.hideTooltip();\n      return;\n    }\n\n    this.returnBulletDefaultState(dataItem);\n\n    if (dataItem && dataItem.visible) {\n      this.updateLegendValue(dataItem);\n\n      if (this.cursorTooltipEnabled) {\n        this.tooltipDataItem = dataItem; // todo: add tooltipXField and tooltipYField.\n\n        var tooltipXField = this.tooltipXField;\n        var tooltipYField = this.tooltipYField;\n\n        if ($type.hasValue(dataItem[tooltipXField]) && $type.hasValue(dataItem[tooltipYField])) {\n          var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\n\n          if (tooltipPoint) {\n            if (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {// void\n            } else {\n              this.tooltipX = tooltipPoint.x;\n              this.tooltipY = tooltipPoint.y;\n\n              if (this._prevTooltipDataItem != dataItem) {\n                this.dispatchImmediately(\"tooltipshownat\", {\n                  type: \"tooltipshownat\",\n                  target: this,\n                  dataItem: dataItem\n                });\n                this._prevTooltipDataItem = dataItem;\n              }\n\n              if (this.cursorHoverEnabled) {\n                try {\n                  for (var _b = __values(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var sprite = _c.value;\n\n                    if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {} else {\n                      if (!sprite.interactions.isRealHover) {\n                        sprite.dispatchImmediately(\"over\");\n                        sprite.interactions.isRealHover = true;\n                      }\n\n                      sprite.isHover = true;\n                    }\n                  }\n                } catch (e_1_1) {\n                  e_1 = {\n                    error: e_1_1\n                  };\n                } finally {\n                  try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                  } finally {\n                    if (e_1) throw e_1.error;\n                  }\n                }\n              }\n\n              if (this.showTooltip()) {\n                return $utils.spritePointToSvg({\n                  x: tooltipPoint.x,\n                  y: tooltipPoint.y\n                }, this);\n              }\n\n              return;\n            }\n          }\n        }\n      }\n    } else {\n      this.updateLegendValue(dataItem, true);\n    }\n  };\n  /**\r\n   * Returns default state to bullets when tooltip is shown at some other data\r\n   * item or hidden\r\n   */\n\n\n  XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\n    var e_2, _a;\n\n    if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\n      try {\n        for (var _b = __values(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var sprite = _c.value;\n\n          if (!sprite.isDisposed()) {\n            var fireEvent = sprite.interactions.isRealHover;\n            sprite.isHover = false;\n\n            if (fireEvent) {\n              sprite.dispatchImmediately(\"out\");\n            }\n          } else {\n            this._prevTooltipDataItem = undefined;\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  };\n\n  XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\n    // use series xField/yField if bullet doesn't have fields set\n    var xField = bulletTemplate.xField;\n\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n\n    var yField = bulletTemplate.yField;\n\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n\n    if (this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      return false;\n    }\n\n    if (bulletTemplate.disabled) {\n      var disabledField = bulletTemplate.propertyFields.disabled;\n      var dataContext = dataItem.dataContext;\n\n      if (dataContext && dataContext[disabledField] === false) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.updateTooltip = function () {\n    if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\n      this.showTooltipAtDataItem(this.tooltipDataItem);\n    }\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.positionBullet = function (bullet) {\n    _super.prototype.positionBullet.call(this, bullet);\n\n    var dataItem = bullet.dataItem; // use series xField/yField if bullet doesn't have fields set\n\n    var xField = bullet.xField;\n\n    if (!$type.hasValue(xField)) {\n      xField = this.xField;\n    }\n\n    var yField = bullet.yField;\n\n    if (!$type.hasValue(yField)) {\n      yField = this.yField;\n    }\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (xAxis instanceof ValueAxis && !dataItem.hasValue([xField]) || yAxis instanceof ValueAxis && !dataItem.hasValue([yField])) {\n      bullet.visible = false;\n    } else {\n      var bulletLocationX = this.getBulletLocationX(bullet, xField);\n      var bulletLocationY = this.getBulletLocationY(bullet, yField);\n      var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\n\n      if (point) {\n        var xOpenField = this.xOpenField;\n        var yOpenField = this.yOpenField;\n        var positionX = void 0;\n        var positionY = void 0;\n\n        if (xAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n\n          if (!xOpenField) {\n            if (xAxis == this.baseAxis) {\n              openValue = xAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n\n          if (openValue == closeValue) {\n            var baseInterval = xAxis.baseInterval;\n            var dateFormatter = xAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n\n          var middleValue = void 0;\n\n          if (xAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationX;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          }\n\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationX)) {\n            bulletLocationX = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(xField);\n\n          if (!xOpenField) {\n            openValue = xAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(xOpenField);\n          }\n\n          var stack = dataItem.getValue(\"valueX\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\n          positionX = xAxis.valueToPosition(middleValue);\n        } else if (xAxis instanceof CategoryAxis) {\n          var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\n          var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\n          positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\n          var openPositionX = void 0;\n\n          if (xOpenField) {\n            openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\n          }\n\n          if (!$type.isNumber(openPositionX)) {\n            openPositionX = 1;\n          }\n\n          positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\n        }\n\n        if (yAxis instanceof DateAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n\n          if (!yOpenField) {\n            if (yAxis == this.baseAxis) {\n              openValue = yAxis.baseValue;\n            }\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n\n          if (!$type.isNumber(openValue)) {\n            openValue = closeValue;\n          }\n\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n\n          if (openValue == closeValue) {\n            var baseInterval = yAxis.baseInterval;\n            var dateFormatter = yAxis.dateFormatter;\n            openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\n            closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\n          }\n\n          var middleValue = void 0;\n\n          if (yAxis == this.baseAxis) {\n            middleValue = openValue + (closeValue - openValue) * bulletLocationY;\n          } else {\n            middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          }\n\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof ValueAxis) {\n          if (!$type.isNumber(bulletLocationY)) {\n            bulletLocationY = 0;\n          }\n\n          var openValue = void 0;\n          var closeValue = dataItem.getWorkingValue(yField);\n\n          if (!yOpenField) {\n            openValue = yAxis.baseValue;\n          } else {\n            openValue = dataItem.getWorkingValue(yOpenField);\n          }\n\n          var stack = dataItem.getValue(\"valueY\", \"stack\");\n          openValue += stack;\n          closeValue += stack;\n          var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\n          positionY = yAxis.valueToPosition(middleValue);\n        } else if (yAxis instanceof CategoryAxis) {\n          positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\n          var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\n          var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\n          positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\n          var openPositionY = void 0;\n\n          if (yOpenField) {\n            openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\n          }\n\n          if (!$type.isNumber(openPositionY)) {\n            openPositionY = 1;\n          }\n\n          positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\n        }\n\n        bullet.visible = true;\n        this.positionBulletReal(bullet, positionX, positionY);\n      } else {\n        bullet.visible = false;\n      }\n    }\n  };\n\n  XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\n    bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\n    bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\n  };\n  /**\r\n   * returns bullet x location\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.getBulletLocationX = function (bullet, field) {\n    var bulletLocation = bullet.locationX;\n    var dataItem = bullet.dataItem;\n\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n\n    return bulletLocation;\n  };\n  /**\r\n   * Returns bullet x location\r\n   * @ignore\r\n   */\n\n\n  XYSeries.prototype.getBulletLocationY = function (bullet, field) {\n    var bulletLocation = bullet.locationY;\n    var dataItem = bullet.dataItem;\n\n    if (!$type.isNumber(bulletLocation)) {\n      bulletLocation = dataItem.workingLocations[field];\n    }\n\n    return bulletLocation;\n  };\n  /**\r\n   * This method must be called if you update Series' data fields that might\r\n   * affect stacking of the series.\r\n   *\r\n   * Since individual `dataField` changes are not being monitored, you need\r\n   * todo it manually for changes to take affect.\r\n   *\r\n   * @since 4.7.21\r\n   */\n\n\n  XYSeries.prototype.updateStacking = function () {\n    var _this = this;\n\n    this.invalidateDataItems();\n\n    if (this.chart) {\n      this.chart.series.each(function (series) {\n        if (series.baseAxis == _this.baseAxis) {\n          series.stackedSeries = undefined;\n          series.invalidateDataItems();\n          series.invalidateProcessedData();\n        }\n      });\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"stacked\", {\n    /**\r\n     * @return Can be stacked?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"stacked\");\n    },\n\n    /**\r\n     * Can items from this series be included into stacks?\r\n     *\r\n     * Note: proper stacking is only possible if series have the same number\r\n     * of data items. To ensure this, don't set data directly on series\r\n     * but do this on chart instead.\r\n     *\r\n     * @default false\r\n     * @param stacked  Can be stacked?\r\n     */\n    set: function (stacked) {\n      if (this.setPropertyValue(\"stacked\", stacked, true)) {\n        this.updateStacking();\n        var xAxis = this.xAxis;\n        var yAxis = this.yAxis;\n\n        if (!stacked) {\n          var field_1;\n\n          if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n            field_1 = this.xField;\n          }\n\n          if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n            field_1 = this.yField;\n          }\n\n          if (field_1) {\n            this.dataItems.each(function (dataItem) {\n              dataItem.setCalculatedValue(field_1, 0, \"stack\");\n              dataItem.setCalculatedValue(field_1, 0, \"stackTrue\");\n            });\n          }\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\n    /**\r\n     * @return Should snap?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"snapTooltip\");\n    },\n\n    /**\r\n     * Should the nearest tooltip be shown if no data item is found on the\r\n     * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n     *\r\n     * @default false\r\n     * @param value  Should snap?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"snapTooltip\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows hidden series.\r\n   *\r\n   * @param duration  Duration of reveal animation (ms)\r\n   * @return Animation\r\n   */\n\n  XYSeries.prototype.show = function (duration) {\n    var _this = this;\n\n    if (this.isHidden) {\n      if (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\n        this._tmin.setKey(this.yAxis.uid, undefined);\n\n        this._tmax.setKey(this.yAxis.uid, undefined);\n      }\n\n      if (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\n        this._tmin.setKey(this.xAxis.uid, undefined);\n\n        this._tmax.setKey(this.xAxis.uid, undefined);\n      }\n    }\n\n    var fields;\n\n    if (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\n      fields = this._xValueFields;\n    }\n\n    if (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\n      fields = this._yValueFields;\n    }\n\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var delay = 0;\n    var interpolationDuration = this.defaultState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n        delay = 0;\n      }\n\n      if (_this.sequencedInterpolation && realDuration > 0) {\n        delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n      }\n\n      anim = dataItem.show(realDuration, delay, fields);\n    }); // other data sets\n\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.show(0, 0, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.show(0, 0, fields);\n        dataItem.events.enable();\n      });\n    }\n\n    var animation = _super.prototype.show.call(this, duration);\n\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    }\n\n    if (this.hidden) {\n      this.dispatchImmediately(\"selectionextremeschanged\");\n      this.hidden = false;\n    }\n\n    return animation;\n  };\n  /**\r\n   * Hides series.\r\n   *\r\n   * @param duration  Duration of hiding animation (ms)\r\n   * @return Animation\r\n   */\n\n\n  XYSeries.prototype.hide = function (duration) {\n    var _this = this;\n\n    var fields;\n    var value;\n    var xAxis = this.xAxis;\n\n    if (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\n      fields = this._xValueFields; // animate to zero if 0 is within zoomMin/zoomMax\n\n      if (this.stacked || xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue || this.stackedSeries) {\n        value = xAxis.baseValue;\n      } else {\n        value = xAxis.min;\n      }\n    }\n\n    var yAxis = this.yAxis;\n\n    if (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\n      fields = this._yValueFields; // animate to zero if 0 is within zoomMin/zoomMax\n\n      if (this.stacked || yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue || this.stackedSeries) {\n        value = yAxis.baseValue;\n      } else {\n        value = yAxis.min;\n      }\n    } //if ($type.hasValue(fields)) {\n\n\n    var startIndex = this.startIndex;\n    var endIndex = this.endIndex;\n    var interpolationDuration = this.hiddenState.transitionDuration;\n\n    if ($type.isNumber(duration)) {\n      interpolationDuration = duration;\n    }\n\n    if (!options.animationsEnabled) {\n      interpolationDuration = 0;\n    }\n\n    var delay = 0;\n    var anim;\n    $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\n      var i = a[0];\n      var dataItem = a[1];\n      var realDuration = interpolationDuration;\n\n      if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\n        realDuration = 0;\n      }\n\n      if (realDuration == 0) {\n        dataItem.hide(0, 0, value, fields);\n      } else {\n        if (_this.sequencedInterpolation && realDuration > 0) {\n          delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\n        }\n\n        anim = dataItem.hide(realDuration, delay, value, fields);\n      }\n    }); // other data sets\n\n    this.dataSets.each(function (key, dataSet) {\n      if (dataSet != _this.dataItems) {\n        dataSet.each(function (dataItem) {\n          dataItem.events.disable();\n          dataItem.hide(0, 0, value, fields);\n          dataItem.events.enable();\n        });\n      }\n    });\n\n    if (this.mainDataSet != this.dataItems) {\n      this.mainDataSet.each(function (dataItem) {\n        dataItem.events.disable();\n        dataItem.hide(0, 0, value, fields);\n        dataItem.events.enable();\n      });\n    }\n\n    var animation = _super.prototype.hide.call(this, interpolationDuration);\n\n    if (animation && !animation.isFinished()) {\n      animation.delay(delay);\n    }\n\n    if (anim && !anim.isFinished()) {\n      animation = anim;\n    }\n\n    if (this.appeared) {\n      this.dispatch(\"selectionextremeschanged\");\n    } // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\n\n\n    this.validateDataElements(); //}\n\n    return animation;\n  };\n  /**\r\n   * [handleDataItemWorkingValueChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\n    _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name); // to calculate stack values\n\n\n    var axisSeries = this.baseAxis.series;\n    $iter.each(axisSeries.iterator(), function (series) {\n      if (series.stacked || series.stackedSeries) {\n        series.invalidateProcessedData();\n      }\n    });\n  };\n  /**\r\n   * [getStackValue description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Description\r\n   * @param dataItem  Data item\r\n   */\n\n\n  XYSeries.prototype.getStackValue = function (dataItem, working) {\n    // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\n    // if this series is not stacked or new stack begins, return.\n    var _this = this;\n\n    var xAxis = this.xAxis;\n    var yAxis = this.yAxis;\n\n    if (!this.stacked || !xAxis || !yAxis) {\n      return;\n    } else {\n      // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\n      var chart = this.chart;\n      var index = chart.series.indexOf(this);\n      var field_2;\n\n      if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\n        field_2 = this.xField;\n      }\n\n      if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\n        field_2 = this.yField;\n      }\n\n      if (!field_2) {\n        return;\n      } //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\n\n\n      dataItem.setCalculatedValue(field_2, 0, \"stack\");\n      dataItem.setCalculatedValue(field_2, 0, \"stackTrue\");\n      $iter.eachContinue(chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\n        // stacking is only possible if both axes are the same\n        if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {\n          // saving value\n          prevSeries.stackedSeries = _this;\n          var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\n\n          if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\n            var value = dataItem.getValue(field_2);\n            var prevValue = void 0;\n            var prevStack = prevDataItem.getValue(field_2, \"stackTrue\");\n\n            if (prevStack == null) {\n              prevStack = 0;\n            }\n\n            var prevRealValue = prevDataItem.getValue(field_2) + prevStack;\n            prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\n\n            if (_this.stackToNegative) {\n              if (value >= 0 && prevRealValue >= 0 || value < 0 && prevRealValue < 0) {\n                dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n                dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\n                return false;\n              } else if (!prevSeries.stacked) {\n                return false;\n              }\n            } else {\n              dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\n              dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\n              return false;\n            }\n          } else if (!prevSeries.stacked) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"stackToNegative\", {\n    /**\r\n     * @return Stack to base line\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"stackToNegative\");\n    },\n\n    /**\r\n     * This setting indicates how negative values are treated in stacked stacked\r\n     * series.\r\n     *\r\n     * If set to `true` (default), negative values will stack on the base line.\r\n     *\r\n     * If set to `false`, negative value will stack in relation to the previous\r\n     * value in the stack.\r\n     *\r\n     * @since 4.9.34\r\n     * @param  value  Stack to base line\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"stackToNegative\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xField\", {\n    /**\r\n     * [xField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._xField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yField\", {\n    /**\r\n     * [yField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._yField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\n    /**\r\n     * [xOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._xOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\n    /**\r\n     * [yOpenField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this._yOpenField;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      if (this._tooltipXField) {\n        return this._tooltipXField;\n      }\n\n      return this._xField;\n    },\n\n    /**\r\n     * [tooltipXField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this._tooltipXField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      if (this._tooltipYField) {\n        return this._tooltipYField;\n      }\n\n      return this._yField;\n    },\n\n    /**\r\n     * [tooltipYField description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this._tooltipYField = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns lowest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n  XYSeries.prototype.min = function (axis) {\n    return this._tmin.getKey(axis.uid);\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n\n  XYSeries.prototype.max = function (axis) {\n    return this._tmax.getKey(axis.uid);\n  };\n  /**\r\n   * Returns lowest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n\n  XYSeries.prototype.selectionMin = function (axis) {\n    var value = this._smin.getKey(axis.uid); // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.min(axis);\n    //}\t\t\n\n\n    return value;\n  };\n  /**\r\n   * Returns highest value in the series for the specific axis within current\r\n   * selection.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param axis  Axis\r\n   * @return value\r\n   */\n\n\n  XYSeries.prototype.selectionMax = function (axis) {\n    var value = this._smax.getKey(axis.uid); // not good, because bad if there are no items with values in selection\n    //if (!$type.isNumber(value)) {\n    //value = this.max(axis);\n    //}\n\n\n    return value;\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n\n  XYSeries.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up base axes\n      if ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\n        if (this.map.hasKey(config.baseAxis)) {\n          config.baseAxis = this.map.getKey(config.baseAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\n          delete config.baseAxis;\n        }\n      } // Set up axes\n\n\n      if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\n        if (this.map.hasKey(config.xAxis)) {\n          config.xAxis = this.map.getKey(config.xAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\n          delete config.xAxis;\n        }\n      }\n\n      if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\n        if (this.map.hasKey(config.yAxis)) {\n          config.yAxis = this.map.getKey(config.yAxis);\n        } else {\n          this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\n          delete config.yAxis;\n        }\n      } // Set up axis ranges\n\n\n      if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\n        for (var i = 0, len = config.axisRanges.length; i < len; i++) {\n          var range = config.axisRanges[i];\n\n          if (!$type.hasValue(range.type)) {\n            range.type = \"AxisDataItem\";\n          }\n\n          if ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\n            range.component = this.map.getKey(range.axis);\n          } else if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\n            range.component = this.map.getKey(range.component);\n          }\n        }\n      } // Parse date fields based on the series fields\n\n\n      if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\n        this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n   *\r\n   * @param    dataItem   Data item\r\n   * @param    xKey       Name of X data field\r\n   * @param    yKey       Name of Y data field\r\n   * @param    locationX  X location\r\n   * @param    locationY  Y location\r\n   * @param    stackKeyX  ?\r\n   * @param    stackKeyY  ?\r\n   * @returns             Coordinates\r\n   */\n\n\n  XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\n    if (this.xAxis && this.yAxis) {\n      var x = this.xAxis.getX(dataItem, xKey, locationX);\n      var y = this.yAxis.getY(dataItem, yKey, locationY);\n      x = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n\n      y = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  };\n  /**\r\n   * Updates item reader text based on the type and set up of axis.\r\n   */\n\n\n  XYSeries.prototype.updateItemReaderText = function () {\n    // We do not want to overwrite this if `itemReaderText` was changed by\n    // user code.\n    if (this._itemReaderTextChanged) {\n      return;\n    }\n\n    var text = \"\";\n    $object.each(this.dataFields, function (key, val) {\n      text += \"{\" + key + \"} \";\n    });\n    this.itemReaderText = text;\n    this._itemReaderTextChanged = false;\n  };\n\n  Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\n    /**\r\n     * @return Display tooltip?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorTooltipEnabled\");\n    },\n\n    /**\r\n     * Indicates if series should display a tooltip for chart's cursor.\r\n     *\r\n     * If set to `true` (default), the tooltips set for all series item's\r\n     * elements like columns and bullets will be automatically shown\r\n     * when [[XYCursor]] passes over category/date, even if its not hovered\r\n     * directly over the item.\r\n     *\r\n     * Set this to `false` to disable such behavior and display item-specific\r\n     * tooltips only when hovered directly over them\r\n     *\r\n     * @default true\r\n     * @param value Display tooltip?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cursorTooltipEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\n    /**\r\n     * @return Hover enabled?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cursorHoverEnabled\");\n    },\n\n    /**\r\n     * Indicates if series should apply hover state on bullets/columns/etc when\r\n     * cursor is over the data item.\r\n     *\r\n     * If set to `true` (default) and chart cursor is enabled on th chart,\r\n     * hovering over date/category will trigger hover states on related Series\r\n     * items like bullets and columns.\r\n     *\r\n     * @default true\r\n     * @since 4.2.2\r\n     * @param  value  Hover enabled?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cursorHoverEnabled\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\n    /**\r\n     * @return Exclude from totals?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"excludeFromTotal\");\n    },\n\n    /**\r\n     * Indicates if series' values should be excluded when calculating totals.\r\n     *\r\n     * @default false\r\n     * @since 4.4.9\r\n     * @param  value  Exclude from totals?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"excludeFromTotal\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\n    /**\r\n     * @return Hide tooltip while zooming?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"hideTooltipWhileZooming\");\n    },\n\n    /**\r\n     * Indicates if series' tooltip should be hidden while series axis range is\r\n     * animating (zooming).\r\n     *\r\n     * @default true\r\n     * @since 4.7.16\r\n     * @param  value  Hide tooltip while zooming?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"hideTooltipWhileZooming\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(XYSeries.prototype, \"maskBullets\", {\n    /**\r\n     * @return Mask bullets?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"maskBullets\");\n    },\n\n    /**\r\n     * Indicates if series' bullets should be masked.\r\n     *\r\n     * @default true\r\n     * @since 4.7.17\r\n     * @param  value  Mask bullets?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"maskBullets\", value);\n      var chart = this.chart;\n\n      if (chart) {\n        if (value) {\n          this.bulletsContainer.parent = chart.bulletsContainer;\n        } else {\n          this.bulletsContainer.parent = chart.axisBulletsContainer;\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies all properties from another instance of [[Series]].\r\n   *\r\n   * @param source  Source series\r\n   */\n\n  XYSeries.prototype.copyFrom = function (source) {\n    this.groupFields = $utils.copyProperties(source.groupFields, {});\n\n    _super.prototype.copyFrom.call(this, source);\n  };\n  /**\r\n   * Destroys this object and all related data.\r\n   */\n\n\n  XYSeries.prototype.dispose = function () {\n    if (this.scrollbarSeries) {\n      this.scrollbarSeries.dispose();\n    }\n\n    _super.prototype.dispose.call(this);\n  };\n\n  return XYSeries;\n}(Series);\n\nexport { XYSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;","map":{"version":3,"names":["__extends","__values","Series","SeriesDataItem","Sprite","visualProperties","ValueAxis","Dictionary","MutableValueDisposer","XYChart","CategoryAxis","DateAxis","registry","$iter","$math","$utils","$type","$time","$array","$object","$path","options","XYSeriesDataItem","_super","_this","call","className","values","customValue","valueX","stack","valueY","openValueX","openValueY","dateX","dateY","openDateX","openDateY","setLocation","applyTheme","Object","defineProperty","prototype","get","value","set","setValue","enumerable","configurable","getDate","date","setDate","categories","categoryX","category","setCategory","categoryY","openCategoryX","openCategoryY","getMin","fields","working","stackValue","min","isNumber","each","field","getWorkingValue","getValue","getMax","max","XYSeries","groupFields","_xAxis","_yAxis","_xValueFields","_yValueFields","_baseInterval","dataGrouped","usesShowFields","_dataSetChanged","_maxxX","_maxxY","_propertiesChanged","outOfRange","isMeasured","cursorTooltipEnabled","cursorHoverEnabled","excludeFromTotal","mainContainer","mask","setElement","paper","add","stacked","snapTooltip","_showBullets","tooltip","pointerOrientation","properties","stackToNegative","hideTooltipWhileZooming","setPropertyValue","events","on","returnBulletDefaultState","undefined","_disposers","push","observe","inited","legendDataItem","childrenCreated","chart","legend","invalidateDataItems","invalidate","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","resetExtremes","_tmin","clear","_tmax","_smin","_smax","dataChangeUpdate","_currentDataSetId","xAxis","seriesDataChangeUpdate","yAxis","validateData","dataFields","valueYShow","openValueXShow","openValueYShow","defineFields","data","length","updateItemReaderText","_xField","_yField","Error","name","uid","isHidden","hide","processDataItem","dataItem","dataContext","processSeriesDataItem","setInitialWorkingValues","e","_chart","raiseCriticalError","updateDataItem","disposeData","dataItemsX","dataItemsByAxis","getKey","clearCatAxis","dataItemsY","axis","dataItems","seriesDataItems","xAxisFieldName","axisFieldName","xField","xOpenField","capitalize","yAxisFieldName","yField","yOpenField","_xOpenField","_yOpenField","baseAxis","addValueField","indexOf","setCategoryAxisField","setDateAxisField","afterDraw","createMask","path_1","getMaskPath","axisRanges","iterator","range","axisFill","fillPath","validate","path","rectToPath","x","y","width","axisLength","height","getAxisField","validateDataItems","plotContainer","maxWidth","maxHeight","updateAxisBySeries","postProcessSeriesDataItems","validateDataRange","dataRangeInvalid","invalid","pixelY","pixelX","minBulletDistance","endIndex","startIndex","updateTooltip","groupData","maskBullets","leftAxesContainer","layout","rightAxesContainer","bulletsContainer","renderer","gridContainer","topAxesContainer","bottomAxesContainer","xAxes","getIndex","setXAxis","oldAxis","removeKey","dispose","series","removeValue","registerSeries","setKey","invalidateData","yAxes","setYAxis","handleYAxisSet","_baseAxis","addData","rawDataItem","removeCount","skipRaw","scrollbarSeries","_parseDataFrom","setData","setDataSet","id","changed","_prevStartIndex","_prevEndIndex","_startIndex","_endIndex","appeared","processValues","getTime","dispatch","minX","Infinity","maxX","minY","maxY","workingStartIndex","workingEndIndex","i","getStackValue","stackX","stackY","processSeriesDataItems","xAxisId","yAxisId","dispatchImmediately","stackedSeries","isDisposed","start","end","mainDataSet","tmin","isShowing","tmax","hideTooltip","duration","_prevTooltipDataItem","showTooltipAtPosition","xPosition","yPosition","visible","isHiding","getSeriesDataItem","toAxisPosition","point","showTooltipAtDataItem","tooltipText","tooltipHTML","getAdjustedXLocation","bulletLocationX","locations","getAdjustedYLocation","bulletLocationY","e_1","_a","cursor","hideSeriesTooltipsOnSelection","selection","downPoint","updateLegendValue","tooltipDataItem","tooltipXField","tooltipYField","tooltipPoint","getPoint","pixelHeight","pixelWidth","tooltipX","tooltipY","type","target","_b","sprites","_c","next","done","sprite","parent","__disabled","disabled","interactions","isRealHover","isHover","e_1_1","error","return","showTooltip","spritePointToSvg","e_2","fireEvent","e_2_1","shouldCreateBullet","bulletTemplate","disabledField","propertyFields","positionBullet","bullet","getBulletLocationX","getBulletLocationY","positionX","positionY","openValue","closeValue","baseValue","baseInterval","dateFormatter","round","Date","timeUnit","count","firstDayOfWeek","utc","timezoneMinutes","timezone","middleValue","valueToPosition","rightLocation","locationX","leftLocation","categoryToPosition","openPositionX","topLocation","locationY","bottomLocation","openPositionY","positionBulletReal","positionToPoint","bulletLocation","workingLocations","updateStacking","invalidateProcessedData","getPropertyValue","field_1","setCalculatedValue","show","delay","interpolationDuration","defaultState","transitionDuration","animationsEnabled","anim","indexed","a","realDuration","sequencedInterpolation","sequencedInterpolationDelay","dataSets","key","dataSet","disable","enable","animation","isFinished","hidden","minZoomed","maxZoomed","hiddenState","validateDataElements","handleDataItemWorkingValueChange","axisSeries","index","field_2","eachContinue","backwards","prevSeries","prevDataItem","prevValue","prevStack","prevRealValue","_tooltipXField","_tooltipYField","selectionMin","selectionMax","processConfig","config","isString","map","hasKey","processingErrors","isArray","len","component","isObject","xKey","yKey","stackKeyX","stackKeyY","getX","getY","fitToRange","_itemReaderTextChanged","text","val","itemReaderText","axisBulletsContainer","copyFrom","source","copyProperties","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js"],"sourcesContent":["/**\r\n * XY series module.\r\n */\r\nimport { __extends, __values } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem } from \"./Series\";\r\nimport { Sprite, visualProperties } from \"../../core/Sprite\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { MutableValueDisposer } from \"../../core/utils/Disposer\";\r\nimport { XYChart } from \"../types/XYChart\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { DateAxis } from \"../axes/DateAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $time from \"../../core/utils/Time\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\nimport { options } from \"../../core/Options\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[XYSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar XYSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(XYSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"XYSeriesDataItem\";\r\n        _this.values.customValue = {};\r\n        _this.values.valueX = { stack: 0 };\r\n        _this.values.valueY = { stack: 0 };\r\n        _this.values.openValueX = {};\r\n        _this.values.openValueY = {};\r\n        _this.values.dateX = {};\r\n        _this.values.dateY = {};\r\n        _this.values.openDateX = {};\r\n        _this.values.openDateY = {};\r\n        _this.setLocation(\"dateX\", 0.5, 0);\r\n        _this.setLocation(\"dateY\", 0.5, 0);\r\n        _this.setLocation(\"categoryX\", 0.5, 0);\r\n        _this.setLocation(\"categoryY\", 0.5, 0);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueX.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"customValue\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.customValue.value;\r\n        },\r\n        /**\r\n         * Item's custom numeric value.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"customValue\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"valueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.valueY.value;\r\n        },\r\n        /**\r\n         * Item's numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"valueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateX\");\r\n        },\r\n        /**\r\n         * Item's date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"dateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"dateY\");\r\n        },\r\n        /**\r\n         * Item's date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"dateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryX;\r\n        },\r\n        /**\r\n         * Item's category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"categoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.categoryY;\r\n        },\r\n        /**\r\n         * Item's category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"categoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueX\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueX.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on X value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueX\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openValueY\", {\r\n        /**\r\n         * @return Value\r\n         */\r\n        get: function () {\r\n            return this.values.openValueY.value;\r\n        },\r\n        /**\r\n         * Item's open numeric value on Y value axis.\r\n         *\r\n         * @param value  Value\r\n         */\r\n        set: function (value) {\r\n            this.setValue(\"openValueY\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateX\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateX\");\r\n        },\r\n        /**\r\n         * Item's open date value on X date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateX\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openDateY\", {\r\n        /**\r\n         * @return Date\r\n         */\r\n        get: function () {\r\n            return this.getDate(\"openDateY\");\r\n        },\r\n        /**\r\n         * Item's open date value on Y date-based axis.\r\n         *\r\n         * @param date  Date\r\n         */\r\n        set: function (date) {\r\n            this.setDate(\"openDateY\", date);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryX\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryX;\r\n        },\r\n        /**\r\n         * Item's open category on X category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryX\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeriesDataItem.prototype, \"openCategoryY\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.categories.openCategoryY;\r\n        },\r\n        /**\r\n         * Item's open category on Y category axis.\r\n         *\r\n         * @param category  Category\r\n         */\r\n        set: function (category) {\r\n            this.setCategory(\"openCategoryY\", category);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Return smallest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) {  // dumped because of non smooth zooming\r\n        var min;\r\n        if (!$type.isNumber(stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        $array.each(fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value < min || !$type.isNumber(min)) {\r\n                min = value;\r\n            }\r\n        });\r\n        return min;\r\n        //}\r\n    };\r\n    /**\r\n     * Return biggest value out of all item's value fields.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param fields      Fields to check in\r\n     * @param working     Include working (temporary) values\r\n     * @param stackValue  If item is in a stack, the value item starts as\r\n     * @return Value\r\n     */\r\n    XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {\r\n        var _this = this;\r\n        //if (this.visible) { // dumped because of non smooth zooming\r\n        var max;\r\n        if (!$type.isNumber(stackValue)) {\r\n            stackValue = 0;\r\n        }\r\n        $array.each(fields, function (field) {\r\n            var value;\r\n            if (working) {\r\n                value = _this.getWorkingValue(field);\r\n            }\r\n            else {\r\n                value = _this.getValue(field);\r\n            }\r\n            value += stackValue;\r\n            if (value > max || !$type.isNumber(max)) {\r\n                max = value;\r\n            }\r\n        });\r\n        return max;\r\n        //}\r\n    };\r\n    return XYSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { XYSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines Series for [[XYChart]].\r\n *\r\n * @see {@link IXYSeriesEvents} for a list of available Events\r\n * @see {@link IXYSeriesAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar XYSeries = /** @class */ (function (_super) {\r\n    __extends(XYSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function XYSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Indicates which of the series' `dataFields` to calculate aggregate values\r\n         * for.\r\n         *\r\n         * Available data fields for all [[XYSeries]] are:\r\n         * `valueX`, `valueY`, `openValueX`, and `openValueY`.\r\n         *\r\n         * [[CandlestickSeries]] adds:\r\n         * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.\r\n         *\r\n         * Available options:\r\n         * `\"open\"`, `\"close\"`, `\"low\"`, `\"high\"`, `\"average\"`, `\"sum\"`.\r\n         *\r\n         * Defaults are as follows:\r\n         * * `valueX`: `\"close\"`\r\n         * * `valueY`: `\"close\"`\r\n         * * `openValueX`: `\"open\"`\r\n         * * `openValueY`: `\"open\"`\r\n         * * `lowValueX`: `\"low\"`\r\n         * * `lowValueY`: `\"low\"`\r\n         * * `highValueX`: `\"high\"`\r\n         * * `highValueY`: `\"high\"`\r\n         *\r\n         * Is required only if data being plotted on a `DateAxis` and\r\n         * its `groupData` is set to `true`.\r\n         *\r\n         * ```TypeScript\r\n         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * let series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JavaScript\r\n         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());\r\n         * dateAxis.groupData = true;\r\n         *\r\n         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());\r\n         *\r\n         * var series = chart.series.push(new am4charts.LineSeries());\r\n         * series.dataFields.dateX = \"date\";\r\n         * series.dataFields.valueY = \"value\";\r\n         * series.groupFields.valueY = \"average\";\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"xAxes\": [{\r\n         *     \"type\": \"DateAxis\",\r\n         *     \"groupData\": true\r\n         *   }],\r\n         *   \"yAxes\": [{\r\n         *     \"type\": \"ValueAxis\"\r\n         *   }],\r\n         *   \"series\": [{\r\n         *     \"type\": \"LineSeries\",\r\n         *     \"dataFields\": {\r\n         *       \"dateX\": \"date\",\r\n         *       \"valueY\": \"value\"\r\n         *     },\r\n         *     \"groupFields\": {\r\n         *       \"valueY\": \"average\"\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * The above setup will ensure, that if there are many data items within\r\n         * selected range, they will be grouped into aggregated data points, using\r\n         * average value of all the values.\r\n         *\r\n         * For example if we have 2 years worth of daily data (~700 data items), when\r\n         * fully zoomed out, the chart would show ~100 data items instead: one for\r\n         * each week in those two years.\r\n         *\r\n         * Grouping will occur automatically, based on current selection range, and\r\n         * will change dynamically when user zooms in/out the chart.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.\r\n         * @since 4.7.0\r\n         */\r\n        _this.groupFields = {};\r\n        /**\r\n         * X axis the series is attached to.\r\n         */\r\n        _this._xAxis = new MutableValueDisposer();\r\n        /**\r\n         * Y axis the series is attached to.\r\n         */\r\n        _this._yAxis = new MutableValueDisposer();\r\n        /**\r\n         * [_xValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._xValueFields = [];\r\n        /**\r\n         * [_yValueFields description]\r\n         *\r\n         * @todo Description\r\n         */\r\n        _this._yValueFields = [];\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._baseInterval = {};\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.dataGrouped = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.usesShowFields = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this._dataSetChanged = false;\r\n        _this._maxxX = 100000;\r\n        _this._maxxY = 100000;\r\n        _this._propertiesChanged = false;\r\n        /**\r\n         * @ignore\r\n         */\r\n        _this.outOfRange = false;\r\n        _this.className = \"XYSeries\";\r\n        _this.isMeasured = false;\r\n        _this.groupFields.valueX = \"close\";\r\n        _this.groupFields.valueY = \"close\";\r\n        _this.groupFields.customValue = \"close\";\r\n        _this.groupFields.openValueX = \"open\";\r\n        _this.groupFields.openValueY = \"open\";\r\n        _this.cursorTooltipEnabled = true;\r\n        _this.cursorHoverEnabled = true;\r\n        _this.excludeFromTotal = false;\r\n        _this.mainContainer.mask = new Sprite();\r\n        _this.mainContainer.mask.setElement(_this.paper.add(\"path\"));\r\n        _this.stacked = false;\r\n        _this.snapTooltip = false;\r\n        _this._showBullets = false;\r\n        _this.tooltip.pointerOrientation = \"horizontal\";\r\n        _this.properties.stackToNegative = true;\r\n        _this.hideTooltipWhileZooming = true;\r\n        _this.setPropertyValue(\"maskBullets\", true);\r\n        _this.tooltip.events.on(\"hidden\", function () {\r\n            _this.returnBulletDefaultState();\r\n        }, undefined, false);\r\n        _this._disposers.push(_this._xAxis);\r\n        _this._disposers.push(_this._yAxis);\r\n        _this.observe(visualProperties, function () {\r\n            if (_this.inited) {\r\n                _this._propertiesChanged = true;\r\n                if (_this.legendDataItem) {\r\n                    _this.legendDataItem.childrenCreated = false;\r\n                }\r\n                if (_this.chart && _this.chart.legend) {\r\n                    _this.chart.legend.invalidateDataItems();\r\n                }\r\n                _this.invalidate();\r\n            }\r\n        }, undefined, false);\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    XYSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"X/Y Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    XYSeries.prototype.createDataItem = function () {\r\n        return new XYSeriesDataItem();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.resetExtremes = function () {\r\n        this._tmin.clear();\r\n        this._tmax.clear();\r\n        this._smin.clear();\r\n        this._smax.clear();\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.dataChangeUpdate = function () {\r\n        this.dataGrouped = false;\r\n        this._baseInterval = {};\r\n        this._currentDataSetId = \"\";\r\n        this.resetExtremes();\r\n        if (this.xAxis) {\r\n            this.xAxis.seriesDataChangeUpdate(this);\r\n        }\r\n        if (this.yAxis) {\r\n            this.yAxis.seriesDataChangeUpdate(this);\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the series' data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateData = function () {\r\n        this._baseInterval = {};\r\n        var dataFields = this.dataFields;\r\n        if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {\r\n            this.usesShowFields = true;\r\n        }\r\n        else {\r\n            this.usesShowFields = false;\r\n        }\r\n        this.defineFields();\r\n        if (this.data.length > 0) {\r\n            this.dataChangeUpdate();\r\n        }\r\n        _super.prototype.validateData.call(this);\r\n        this.updateItemReaderText();\r\n        if (this.chart) {\r\n            if (!$type.hasValue(this.dataFields[this._xField]) || !$type.hasValue(this.dataFields[this._yField])) {\r\n                throw Error(\"Data fields for series \\\"\" + (this.name ? this.name : this.uid) + \"\\\" are not properly defined.\");\r\n            }\r\n        }\r\n        // 4.7.21 solves 51540\r\n        if (this.inited && this.isHidden) {\r\n            this.hide(0);\r\n        }\r\n        this.dataGrouped = false;\r\n    };\r\n    /**\r\n     * Processes data item.\r\n     *\r\n     * @param dataItem     Data item\r\n     * @param dataContext  Raw data\r\n     * @param index        Index of the data item\r\n     */\r\n    XYSeries.prototype.processDataItem = function (dataItem, dataContext) {\r\n        try {\r\n            _super.prototype.processDataItem.call(this, dataItem, dataContext);\r\n            this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n            this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n            this.setInitialWorkingValues(dataItem);\r\n        }\r\n        catch (e) {\r\n            if (this._chart) {\r\n                this._chart.raiseCriticalError(e);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * When validating raw data, instead of processing data item, we update it\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param item\r\n     */\r\n    XYSeries.prototype.updateDataItem = function (dataItem) {\r\n        _super.prototype.updateDataItem.call(this, dataItem);\r\n        //dataItem.events.disable();\r\n        this.xAxis.processSeriesDataItem(dataItem, \"X\");\r\n        this.yAxis.processSeriesDataItem(dataItem, \"Y\");\r\n        //dataItem.events.enable();\t\t\r\n    };\r\n    /**\r\n     * Inits data item's working values.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @param index     Data item's index\r\n     */\r\n    XYSeries.prototype.setInitialWorkingValues = function (dataItem) {\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis) {\r\n            var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);\r\n            if (dataItemsX) {\r\n                dataItemsX.clear();\r\n            }\r\n            if (xAxis instanceof CategoryAxis) {\r\n                this.clearCatAxis(xAxis);\r\n            }\r\n        }\r\n        if (yAxis) {\r\n            var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);\r\n            if (dataItemsY) {\r\n                dataItemsY.clear();\r\n            }\r\n            if (yAxis instanceof CategoryAxis) {\r\n                this.clearCatAxis(yAxis);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.clearCatAxis = function (axis) {\r\n        var uid = this.uid;\r\n        axis.dataItems.each(function (dataItem) {\r\n            if (dataItem.seriesDataItems[uid]) {\r\n                dataItem.seriesDataItems[uid] = [];\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Sets up which data fields to use for data access.\r\n     */\r\n    XYSeries.prototype.defineFields = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            var xAxisFieldName = xAxis.axisFieldName;\r\n            var xField = (xAxisFieldName + \"X\");\r\n            var xOpenField = (\"open\" + $utils.capitalize(xAxisFieldName) + \"X\");\r\n            var yAxisFieldName = yAxis.axisFieldName;\r\n            var yField = (yAxisFieldName + \"Y\");\r\n            var yOpenField = (\"open\" + $utils.capitalize(yAxisFieldName) + \"Y\");\r\n            this._xField = xField;\r\n            this._yField = yField;\r\n            if (this.dataFields[xOpenField]) {\r\n                this._xOpenField = xOpenField;\r\n            }\r\n            if (this.dataFields[yOpenField]) {\r\n                this._yOpenField = yOpenField;\r\n            }\r\n            if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == xAxis) {\r\n                this._xOpenField = xField;\r\n            }\r\n            if (this.stacked && this.baseAxis == yAxis) {\r\n                this._yOpenField = yField;\r\n            }\r\n            if ((xAxis instanceof CategoryAxis) && (yAxis instanceof CategoryAxis)) {\r\n                if (!this._yOpenField) {\r\n                    this._yOpenField = yField;\r\n                }\r\n            }\r\n            this._xValueFields = [];\r\n            this._yValueFields = [];\r\n            this.addValueField(xAxis, this._xValueFields, this._xField);\r\n            this.addValueField(xAxis, this._xValueFields, this._xOpenField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yField);\r\n            this.addValueField(yAxis, this._yValueFields, this._yOpenField);\r\n        }\r\n    };\r\n    /**\r\n     * [axis description]\r\n     *\r\n     * @todo Description\r\n     * @param axis    Axis\r\n     * @param fields  Fields (?)\r\n     * @param field   Field\r\n     */\r\n    XYSeries.prototype.addValueField = function (axis, fields, field) {\r\n        if (axis instanceof ValueAxis) {\r\n            if ($type.hasValue(this.dataFields[field]) && fields.indexOf(field) == -1) {\r\n                fields.push(field);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets category field from the category axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setCategoryAxisField = function (field, axis) {\r\n        if (!$type.hasValue(this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.category;\r\n        }\r\n    };\r\n    /**\r\n     * Sets date field from the date axis.\r\n     *\r\n     * User might set field for category axis only, but not for series. In such\r\n     * case, we take field value from axis and set it for series.\r\n     *\r\n     * @param field  Field\r\n     * @param axis   Axis\r\n     */\r\n    XYSeries.prototype.setDateAxisField = function (field, axis) {\r\n        if (!$type.hasValue(this.dataFields[field])) {\r\n            this.dataFields[field] = axis.dataFields.date;\r\n        }\r\n    };\r\n    /**\r\n     * Performs after-draw tasks, e.g. creates masks.\r\n     */\r\n    XYSeries.prototype.afterDraw = function () {\r\n        _super.prototype.afterDraw.call(this);\r\n        this.createMask();\r\n    };\r\n    /**\r\n     * Create a mask for the series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.createMask = function () {\r\n        // this mask from which we cut out ranges. does not work well if ranges overlap.\r\n        if (this.mainContainer.mask) {\r\n            var path_1 = this.getMaskPath();\r\n            // @todo: this approach won't work well on circluar or other non x/y axes\r\n            $iter.each(this.axisRanges.iterator(), function (range) {\r\n                if (range.axisFill.fillPath) {\r\n                    range.axisFill.validate();\r\n                    path_1 += range.axisFill.fillPath;\r\n                }\r\n            });\r\n            this.mainContainer.mask.path = path_1;\r\n        }\r\n    };\r\n    /**\r\n     * Returns an SVG path to use as series mask.\r\n     *\r\n     * @return SVG path\r\n     */\r\n    XYSeries.prototype.getMaskPath = function () {\r\n        if (this.xAxis && this.yAxis) {\r\n            return $path.rectToPath({\r\n                x: 0,\r\n                y: 0,\r\n                width: this.xAxis.axisLength,\r\n                height: this.yAxis.axisLength\r\n            });\r\n        }\r\n        return \"\";\r\n    };\r\n    /**\r\n     * Returns axis data field to use.\r\n     *\r\n     * @param axis  Axis\r\n     * @return Field name\r\n     */\r\n    XYSeries.prototype.getAxisField = function (axis) {\r\n        if (axis == this.xAxis) {\r\n            return this.xField;\r\n        }\r\n        if (axis == this.yAxis) {\r\n            return this.yField;\r\n        }\r\n    };\r\n    /**\r\n     * Validates data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataItems = function () {\r\n        var chart = this.chart;\r\n        if (chart) {\r\n            this._maxxX = $math.max(100000, chart.plotContainer.maxWidth * 2);\r\n            this._maxxY = $math.max(100000, chart.plotContainer.maxHeight * 2);\r\n        }\r\n        // this helps date axis to check which baseInterval we should use\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            xAxis.updateAxisBySeries();\r\n            yAxis.updateAxisBySeries();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n        if (xAxis && yAxis) {\r\n            xAxis.postProcessSeriesDataItems(this);\r\n            yAxis.postProcessSeriesDataItems(this);\r\n        }\r\n    };\r\n    /**\r\n     * Validates data range.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validateDataRange = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.dataRangeInvalid) {\r\n                xAxis.validateDataRange();\r\n            }\r\n            if (yAxis.dataRangeInvalid) {\r\n                yAxis.validateDataRange();\r\n            }\r\n        }\r\n        _super.prototype.validateDataRange.call(this);\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.validate = function () {\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (xAxis && yAxis) {\r\n            if (xAxis.invalid) {\r\n                xAxis.validate();\r\n            }\r\n            if (yAxis.invalid) {\r\n                yAxis.validate();\r\n            }\r\n            this.y = yAxis.pixelY;\r\n            this.x = xAxis.pixelX;\r\n            this._showBullets = true;\r\n            var minBulletDistance = this.minBulletDistance;\r\n            if ($type.isNumber(minBulletDistance)) {\r\n                if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {\r\n                    this._showBullets = false;\r\n                }\r\n            }\r\n        }\r\n        this.updateTooltip();\r\n        if ((xAxis instanceof DateAxis && xAxis.groupData && !this.dataGrouped) || (yAxis instanceof DateAxis && yAxis.groupData && !this.dataGrouped)) {\r\n            return;\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        var chart = this.chart;\r\n        var maskBullets = this.maskBullets;\r\n        if (chart && maskBullets) {\r\n            if (chart.className == \"XYChart\") {\r\n                if (chart.leftAxesContainer.layout == \"vertical\" || chart.rightAxesContainer.layout == \"vertical\") {\r\n                    if (this.yAxis) {\r\n                        this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;\r\n                    }\r\n                    else {\r\n                        this.bulletsContainer.mask = undefined;\r\n                    }\r\n                }\r\n                if (chart.topAxesContainer.layout == \"horizontal\" || chart.bottomAxesContainer.layout == \"horizontal\") {\r\n                    if (this.xAxis) {\r\n                        this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;\r\n                    }\r\n                    else {\r\n                        this.bulletsContainer.mask = undefined;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"xAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._xAxis.get()) {\r\n                    var axis = this.chart.xAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no X axes on chart.\");\r\n                    }\r\n                    this.xAxis = axis;\r\n                }\r\n                return this._xAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * X axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setXAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setXAxis = function (axis) {\r\n        var oldAxis = this._xAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._xAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._xAxis.set(axis, axis.registerSeries(this));\r\n            this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"yAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            if (this.chart) {\r\n                if (!this._yAxis.get()) {\r\n                    var axis = this.chart.yAxes.getIndex(0);\r\n                    if (!axis) {\r\n                        throw Error(\"There are no Y axes on chart.\");\r\n                    }\r\n                    this.yAxis = axis;\r\n                }\r\n                return this._yAxis.get();\r\n            }\r\n        },\r\n        /**\r\n         * Y axis the series is attached to.\r\n         *\r\n         * @param axis  Axis\r\n         */\r\n        set: function (axis) {\r\n            this.setYAxis(axis);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    XYSeries.prototype.setYAxis = function (axis) {\r\n        var oldAxis = this._yAxis.get();\r\n        if (oldAxis != axis) {\r\n            if (oldAxis) {\r\n                this.dataItemsByAxis.removeKey(oldAxis.uid);\r\n                // TODO why is this here ?\r\n                this._yAxis.dispose();\r\n                // temp @todo: why it is not disposed?\r\n                oldAxis.series.removeValue(this);\r\n            }\r\n            this._yAxis.set(axis, axis.registerSeries(this));\r\n            if (axis.chart instanceof XYChart) {\r\n                axis.chart.handleYAxisSet(this);\r\n            }\r\n            this.dataItemsByAxis.setKey(axis.uid, new Dictionary());\r\n            this.invalidateData();\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"baseAxis\", {\r\n        /**\r\n         * @return Axis\r\n         */\r\n        get: function () {\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (!this._baseAxis && xAxis && yAxis) {\r\n                if (yAxis instanceof DateAxis) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof DateAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (yAxis instanceof CategoryAxis) {\r\n                    this._baseAxis = yAxis;\r\n                }\r\n                if (xAxis instanceof CategoryAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n                if (!this._baseAxis) {\r\n                    this._baseAxis = xAxis;\r\n                }\r\n            }\r\n            return this._baseAxis;\r\n        },\r\n        /**\r\n         * The main (base) axis.\r\n         *\r\n         * This is the axis that series fills will go to, or grow animations will\r\n         * happen from.\r\n         *\r\n         * @param value  Axis\r\n         */\r\n        set: function (value) {\r\n            if (this._baseAxis != value) {\r\n                this._baseAxis = value;\r\n                this.invalidate();\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds one or several (array) of data items to the existing data.\r\n     *\r\n     * @param rawDataItem One or many raw data item objects\r\n     */\r\n    XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {\r\n        _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);\r\n        var scrollbarSeries = this.scrollbarSeries;\r\n        if (scrollbarSeries) {\r\n            this.scrollbarSeries.addData(rawDataItem, removeCount, true);\r\n            this.scrollbarSeries._parseDataFrom = this._parseDataFrom;\r\n        }\r\n    };\r\n    XYSeries.prototype.setData = function (value) {\r\n        _super.prototype.setData.call(this, value);\r\n        if (this.scrollbarSeries) {\r\n            this.scrollbarSeries.setData(value);\r\n        }\r\n    };\r\n    /**\r\n     * Makes the chart use particular data set.\r\n     *\r\n     * If `id` is not provided or there is no such data set, main data will be\r\n     * used.\r\n     *\r\n     * @ignore\r\n     * @since 4.7.0\r\n     * @param  id  Data set id\r\n     */\r\n    XYSeries.prototype.setDataSet = function (id) {\r\n        var changed = _super.prototype.setDataSet.call(this, id);\r\n        if (changed) {\r\n            this._dataSetChanged = true;\r\n            var dataItems = this.dataItems;\r\n            this.resetExtremes();\r\n            if (dataItems && dataItems.length > 0) {\r\n                var xAxis = this.xAxis;\r\n                var yAxis = this.yAxis;\r\n                this._prevStartIndex = undefined;\r\n                this._prevEndIndex = undefined;\r\n                this._startIndex = undefined;\r\n                this._endIndex = undefined;\r\n                if (!this.appeared) {\r\n                    this.processValues(false); // this will slow down!\r\n                }\r\n                if (xAxis instanceof DateAxis && xAxis == this.baseAxis) {\r\n                    this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());\r\n                    this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());\r\n                    this.dispatch(\"extremeschanged\");\r\n                }\r\n                if (yAxis instanceof DateAxis && yAxis == this.baseAxis) {\r\n                    this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());\r\n                    this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());\r\n                    this.dispatch(\"extremeschanged\");\r\n                }\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Processes values after data items' were added.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    XYSeries.prototype.processValues = function (working) {\r\n        _super.prototype.processValues.call(this, working);\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        var dataItems = this.dataItems;\r\n        var minX = Infinity;\r\n        var maxX = -Infinity;\r\n        var minY = Infinity;\r\n        var maxY = -Infinity;\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var workingStartIndex = startIndex;\r\n        var workingEndIndex = endIndex;\r\n        if (!working) {\r\n            startIndex = 0;\r\n            endIndex = this.dataItems.length;\r\n        }\r\n        for (var i = startIndex; i < endIndex; i++) {\r\n            var dataItem = dataItems.getIndex(i);\r\n            this.getStackValue(dataItem, working);\r\n            var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n            var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n            if (!working) {\r\n                stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\r\n                stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\r\n            }\r\n            minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n            minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n            maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n            maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n            // if it's stacked, pay attention to stack value\r\n            if (this.stacked) {\r\n                if (this.baseAxis == xAxis) {\r\n                    if (stackY < minY) {\r\n                        minY = stackY;\r\n                    }\r\n                    if (stackY > maxY) {\r\n                        maxY = stackY;\r\n                    }\r\n                }\r\n                if (this.baseAxis == yAxis) {\r\n                    if (stackX < minX) {\r\n                        minX = stackX;\r\n                    }\r\n                    if (stackX > maxX) {\r\n                        maxX = stackX;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // this is mainly for value axis to calculate total and perecent.total of each series category\r\n        xAxis.processSeriesDataItems();\r\n        yAxis.processSeriesDataItems();\r\n        var xAxisId = xAxis.uid;\r\n        var yAxisId = yAxis.uid;\r\n        if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n            this._smin.setKey(xAxisId, undefined);\r\n            this._smax.setKey(xAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n            this._smin.setKey(yAxisId, undefined);\r\n            this._smax.setKey(yAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (!working) {\r\n            if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {\r\n                this._tmin.setKey(xAxisId, minX);\r\n                this._tmax.setKey(xAxisId, maxX);\r\n                this._tmin.setKey(yAxisId, minY);\r\n                this._tmax.setKey(yAxisId, maxY);\r\n                var stackedSeries = this.stackedSeries;\r\n                if (stackedSeries) {\r\n                    if (stackedSeries.isDisposed()) {\r\n                        this.stackedSeries = undefined;\r\n                    }\r\n                    else {\r\n                        stackedSeries.processValues(false);\r\n                    }\r\n                }\r\n                this.dispatchImmediately(\"extremeschanged\");\r\n            }\r\n        }\r\n        if (startIndex != workingStartIndex || endIndex != workingEndIndex) {\r\n            minX = Infinity;\r\n            maxX = -Infinity;\r\n            minY = Infinity;\r\n            maxY = -Infinity;\r\n            for (var i = workingStartIndex; i < workingEndIndex; i++) {\r\n                var dataItem = dataItems.getIndex(i);\r\n                this.getStackValue(dataItem, working);\r\n                var stackX = dataItem.getValue(\"valueX\", \"stack\");\r\n                var stackY = dataItem.getValue(\"valueY\", \"stack\");\r\n                if (!working) {\r\n                    stackX = dataItem.getValue(\"valueX\", \"stackTrue\");\r\n                    stackY = dataItem.getValue(\"valueY\", \"stackTrue\");\r\n                }\r\n                minX = $math.min(dataItem.getMin(this._xValueFields, working, stackX), minX);\r\n                minY = $math.min(dataItem.getMin(this._yValueFields, working, stackY), minY);\r\n                maxX = $math.max(dataItem.getMax(this._xValueFields, working, stackX), maxX);\r\n                maxY = $math.max(dataItem.getMax(this._yValueFields, working, stackY), maxY);\r\n                // if it's stacked, pay attention to stack value\r\n                if (this.stacked) {\r\n                    if (this.baseAxis == xAxis) {\r\n                        if (stackY < minY) {\r\n                            minY = stackY;\r\n                        }\r\n                        if (stackY > maxY) {\r\n                            maxY = stackY;\r\n                        }\r\n                    }\r\n                    if (this.baseAxis == yAxis) {\r\n                        if (stackX < minX) {\r\n                            minX = stackX;\r\n                        }\r\n                        if (stackX > maxX) {\r\n                            maxX = stackX;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.xAxis instanceof ValueAxis && (minX == Infinity || maxX == -Infinity)) {\r\n            this._smin.setKey(xAxisId, undefined);\r\n            this._smax.setKey(xAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && (minY == Infinity || maxY == -Infinity)) {\r\n            this._smin.setKey(yAxisId, undefined);\r\n            this._smax.setKey(yAxisId, undefined);\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            return;\r\n        }\r\n        if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {\r\n            this._smin.setKey(xAxisId, minX);\r\n            this._smax.setKey(xAxisId, maxX);\r\n            this._smin.setKey(yAxisId, minY);\r\n            this._smax.setKey(yAxisId, maxY);\r\n            if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {\r\n                /// new, helps to handle issues with change percent\r\n                var changed = false;\r\n                if (yAxis instanceof ValueAxis && !(yAxis instanceof DateAxis)) {\r\n                    var tmin = this._tmin.getKey(yAxisId);\r\n                    if (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && minY < tmin) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmin.setKey(yAxisId, minY);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(yAxisId);\r\n                    if (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof DateAxis && xAxis.groupData && this.isShowing)) && maxY > tmax) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmax.setKey(yAxisId, maxY);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (xAxis instanceof ValueAxis && !(xAxis instanceof DateAxis)) {\r\n                    var tmin = this._tmin.getKey(xAxisId);\r\n                    if (!$type.isNumber(tmin) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && minX < tmin) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmin.setKey(xAxisId, minX);\r\n                        changed = true;\r\n                    }\r\n                    var tmax = this._tmax.getKey(xAxisId);\r\n                    if (!$type.isNumber(tmax) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof DateAxis && yAxis.groupData && this.isShowing)) && maxX > tmax) || (this.stackedSeries && !this.isHidden && !working)) {\r\n                        this._tmax.setKey(xAxisId, maxX);\r\n                        changed = true;\r\n                    }\r\n                }\r\n                if (changed) {\r\n                    this.dispatchImmediately(\"extremeschanged\");\r\n                }\r\n                if (this.start == 0 && this.end == 1) {\r\n                    // yes, its ok. otherwise min/max won't be updated when zooming out\r\n                    this._dataSetChanged = false;\r\n                }\r\n                this.dispatchImmediately(\"selectionextremeschanged\");\r\n            }\r\n        }\r\n        if (!working && this.stacked) {\r\n            this.processValues(true);\r\n        }\r\n    };\r\n    /**\r\n     * Hides element's [[Tooltip]].\r\n     *\r\n     * @see {@link Tooltip}\r\n     */\r\n    XYSeries.prototype.hideTooltip = function (duration) {\r\n        _super.prototype.hideTooltip.call(this, duration);\r\n        this.returnBulletDefaultState();\r\n        this._prevTooltipDataItem = undefined;\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific position.\r\n     *\r\n     * @param xPosition  X\r\n     * @param yPosition  Y\r\n     */\r\n    XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {\r\n        var dataItem;\r\n        if (this.visible && !this.isHiding && !this.isShowing) {\r\n            var xAxis = this._xAxis.get();\r\n            var yAxis = this._yAxis.get();\r\n            if (xAxis == this.baseAxis) {\r\n                dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);\r\n            }\r\n            if (yAxis == this.baseAxis) {\r\n                dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);\r\n            }\r\n            var point = this.showTooltipAtDataItem(dataItem);\r\n            if (point) {\r\n                return point;\r\n            }\r\n            // so that if tooltip is shown on columns or bullets for it not to be hidden\r\n            if (!this.tooltipText && !this.tooltipHTML) {\r\n                return;\r\n            }\r\n        }\r\n        this.hideTooltip();\r\n    };\r\n    XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\r\n        return dataItem.locations[field];\r\n    };\r\n    XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\r\n        return dataItem.locations[field];\r\n    };\r\n    /**\r\n     * Shows series tooltip at specific dataItem.\r\n     *\r\n     * @param dataItem\r\n     */\r\n    XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {\r\n        var e_1, _a;\r\n        var cursor = this.chart.cursor;\r\n        if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {\r\n            this.hideTooltip();\r\n            return;\r\n        }\r\n        this.returnBulletDefaultState(dataItem);\r\n        if (dataItem && dataItem.visible) {\r\n            this.updateLegendValue(dataItem);\r\n            if (this.cursorTooltipEnabled) {\r\n                this.tooltipDataItem = dataItem;\r\n                // todo: add tooltipXField and tooltipYField.\r\n                var tooltipXField = this.tooltipXField;\r\n                var tooltipYField = this.tooltipYField;\r\n                if ($type.hasValue(dataItem[tooltipXField]) && $type.hasValue(dataItem[tooltipYField])) {\r\n                    var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));\r\n                    if (tooltipPoint) {\r\n                        if (this.chart.className == \"XYChart\" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {\r\n                            // void\r\n                        }\r\n                        else {\r\n                            this.tooltipX = tooltipPoint.x;\r\n                            this.tooltipY = tooltipPoint.y;\r\n                            if (this._prevTooltipDataItem != dataItem) {\r\n                                this.dispatchImmediately(\"tooltipshownat\", {\r\n                                    type: \"tooltipshownat\",\r\n                                    target: this,\r\n                                    dataItem: dataItem\r\n                                });\r\n                                this._prevTooltipDataItem = dataItem;\r\n                            }\r\n                            if (this.cursorHoverEnabled) {\r\n                                try {\r\n                                    for (var _b = __values(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                                        var sprite = _c.value;\r\n                                        if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {\r\n                                        }\r\n                                        else {\r\n                                            if (!sprite.interactions.isRealHover) {\r\n                                                sprite.dispatchImmediately(\"over\");\r\n                                                sprite.interactions.isRealHover = true;\r\n                                            }\r\n                                            sprite.isHover = true;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n                                finally {\r\n                                    try {\r\n                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                                    }\r\n                                    finally { if (e_1) throw e_1.error; }\r\n                                }\r\n                            }\r\n                            if (this.showTooltip()) {\r\n                                return $utils.spritePointToSvg({ x: tooltipPoint.x, y: tooltipPoint.y }, this);\r\n                            }\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.updateLegendValue(dataItem, true);\r\n        }\r\n    };\r\n    /**\r\n     * Returns default state to bullets when tooltip is shown at some other data\r\n     * item or hidden\r\n     */\r\n    XYSeries.prototype.returnBulletDefaultState = function (dataItem) {\r\n        var e_2, _a;\r\n        if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {\r\n            try {\r\n                for (var _b = __values(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var sprite = _c.value;\r\n                    if (!sprite.isDisposed()) {\r\n                        var fireEvent = sprite.interactions.isRealHover;\r\n                        sprite.isHover = false;\r\n                        if (fireEvent) {\r\n                            sprite.dispatchImmediately(\"out\");\r\n                        }\r\n                    }\r\n                    else {\r\n                        this._prevTooltipDataItem = undefined;\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n    };\r\n    XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bulletTemplate.xField;\r\n        if (!$type.hasValue(xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bulletTemplate.yField;\r\n        if (!$type.hasValue(yField)) {\r\n            yField = this.yField;\r\n        }\r\n        if ((this.xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (this.yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n            return false;\r\n        }\r\n        if (bulletTemplate.disabled) {\r\n            var disabledField = bulletTemplate.propertyFields.disabled;\r\n            var dataContext = dataItem.dataContext;\r\n            if (dataContext && dataContext[disabledField] === false) {\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.updateTooltip = function () {\r\n        if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {\r\n            this.showTooltipAtDataItem(this.tooltipDataItem);\r\n        }\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.positionBullet = function (bullet) {\r\n        _super.prototype.positionBullet.call(this, bullet);\r\n        var dataItem = bullet.dataItem;\r\n        // use series xField/yField if bullet doesn't have fields set\r\n        var xField = bullet.xField;\r\n        if (!$type.hasValue(xField)) {\r\n            xField = this.xField;\r\n        }\r\n        var yField = bullet.yField;\r\n        if (!$type.hasValue(yField)) {\r\n            yField = this.yField;\r\n        }\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if ((xAxis instanceof ValueAxis && !dataItem.hasValue([xField])) || (yAxis instanceof ValueAxis && !dataItem.hasValue([yField]))) {\r\n            bullet.visible = false;\r\n        }\r\n        else {\r\n            var bulletLocationX = this.getBulletLocationX(bullet, xField);\r\n            var bulletLocationY = this.getBulletLocationY(bullet, yField);\r\n            var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);\r\n            if (point) {\r\n                var xOpenField = this.xOpenField;\r\n                var yOpenField = this.yOpenField;\r\n                var positionX = void 0;\r\n                var positionY = void 0;\r\n                if (xAxis instanceof DateAxis) {\r\n                    if (!$type.isNumber(bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        if (xAxis == this.baseAxis) {\r\n                            openValue = xAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    if (!$type.isNumber(openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = xAxis.baseInterval;\r\n                        var dateFormatter = xAxis.dateFormatter;\r\n                        openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n                        closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (xAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationX;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    }\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof ValueAxis) {\r\n                    if (!$type.isNumber(bulletLocationX)) {\r\n                        bulletLocationX = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(xField);\r\n                    if (!xOpenField) {\r\n                        openValue = xAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(xOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueX\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);\r\n                    positionX = xAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (xAxis instanceof CategoryAxis) {\r\n                    var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);\r\n                    var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);\r\n                    positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);\r\n                    var openPositionX = void 0;\r\n                    if (xOpenField) {\r\n                        openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);\r\n                    }\r\n                    if (!$type.isNumber(openPositionX)) {\r\n                        openPositionX = 1;\r\n                    }\r\n                    positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;\r\n                }\r\n                if (yAxis instanceof DateAxis) {\r\n                    if (!$type.isNumber(bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        if (yAxis == this.baseAxis) {\r\n                            openValue = yAxis.baseValue;\r\n                        }\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    if (!$type.isNumber(openValue)) {\r\n                        openValue = closeValue;\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    if (openValue == closeValue) {\r\n                        var baseInterval = yAxis.baseInterval;\r\n                        var dateFormatter = yAxis.dateFormatter;\r\n                        openValue = $time.round(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes, dateFormatter.timezone).getTime();\r\n                        closeValue = $time.add(new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();\r\n                    }\r\n                    var middleValue = void 0;\r\n                    if (yAxis == this.baseAxis) {\r\n                        middleValue = openValue + (closeValue - openValue) * bulletLocationY;\r\n                    }\r\n                    else {\r\n                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    }\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof ValueAxis) {\r\n                    if (!$type.isNumber(bulletLocationY)) {\r\n                        bulletLocationY = 0;\r\n                    }\r\n                    var openValue = void 0;\r\n                    var closeValue = dataItem.getWorkingValue(yField);\r\n                    if (!yOpenField) {\r\n                        openValue = yAxis.baseValue;\r\n                    }\r\n                    else {\r\n                        openValue = dataItem.getWorkingValue(yOpenField);\r\n                    }\r\n                    var stack = dataItem.getValue(\"valueY\", \"stack\");\r\n                    openValue += stack;\r\n                    closeValue += stack;\r\n                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);\r\n                    positionY = yAxis.valueToPosition(middleValue);\r\n                }\r\n                else if (yAxis instanceof CategoryAxis) {\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);\r\n                    var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);\r\n                    var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);\r\n                    positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);\r\n                    var openPositionY = void 0;\r\n                    if (yOpenField) {\r\n                        openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);\r\n                    }\r\n                    if (!$type.isNumber(openPositionY)) {\r\n                        openPositionY = 1;\r\n                    }\r\n                    positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;\r\n                }\r\n                bullet.visible = true;\r\n                this.positionBulletReal(bullet, positionX, positionY);\r\n            }\r\n            else {\r\n                bullet.visible = false;\r\n            }\r\n        }\r\n    };\r\n    XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {\r\n        bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;\r\n        bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;\r\n    };\r\n    /**\r\n     * returns bullet x location\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        var bulletLocation = bullet.locationX;\r\n        var dataItem = bullet.dataItem;\r\n        if (!$type.isNumber(bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    /**\r\n     * Returns bullet x location\r\n     * @ignore\r\n     */\r\n    XYSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        var bulletLocation = bullet.locationY;\r\n        var dataItem = bullet.dataItem;\r\n        if (!$type.isNumber(bulletLocation)) {\r\n            bulletLocation = dataItem.workingLocations[field];\r\n        }\r\n        return bulletLocation;\r\n    };\r\n    /**\r\n     * This method must be called if you update Series' data fields that might\r\n     * affect stacking of the series.\r\n     *\r\n     * Since individual `dataField` changes are not being monitored, you need\r\n     * todo it manually for changes to take affect.\r\n     *\r\n     * @since 4.7.21\r\n     */\r\n    XYSeries.prototype.updateStacking = function () {\r\n        var _this = this;\r\n        this.invalidateDataItems();\r\n        if (this.chart) {\r\n            this.chart.series.each(function (series) {\r\n                if (series.baseAxis == _this.baseAxis) {\r\n                    series.stackedSeries = undefined;\r\n                    series.invalidateDataItems();\r\n                    series.invalidateProcessedData();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"stacked\", {\r\n        /**\r\n         * @return Can be stacked?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stacked\");\r\n        },\r\n        /**\r\n         * Can items from this series be included into stacks?\r\n         *\r\n         * Note: proper stacking is only possible if series have the same number\r\n         * of data items. To ensure this, don't set data directly on series\r\n         * but do this on chart instead.\r\n         *\r\n         * @default false\r\n         * @param stacked  Can be stacked?\r\n         */\r\n        set: function (stacked) {\r\n            if (this.setPropertyValue(\"stacked\", stacked, true)) {\r\n                this.updateStacking();\r\n                var xAxis = this.xAxis;\r\n                var yAxis = this.yAxis;\r\n                if (!stacked) {\r\n                    var field_1;\r\n                    if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n                        field_1 = this.xField;\r\n                    }\r\n                    if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n                        field_1 = this.yField;\r\n                    }\r\n                    if (field_1) {\r\n                        this.dataItems.each(function (dataItem) {\r\n                            dataItem.setCalculatedValue(field_1, 0, \"stack\");\r\n                            dataItem.setCalculatedValue(field_1, 0, \"stackTrue\");\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"snapTooltip\", {\r\n        /**\r\n         * @return Should snap?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"snapTooltip\");\r\n        },\r\n        /**\r\n         * Should the nearest tooltip be shown if no data item is found on the\r\n         * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.\r\n         *\r\n         * @default false\r\n         * @param value  Should snap?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"snapTooltip\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows hidden series.\r\n     *\r\n     * @param duration  Duration of reveal animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.show = function (duration) {\r\n        var _this = this;\r\n        if (this.isHidden) {\r\n            if (this.appeared && this.xAxis instanceof DateAxis && this.xAxis.groupData) {\r\n                this._tmin.setKey(this.yAxis.uid, undefined);\r\n                this._tmax.setKey(this.yAxis.uid, undefined);\r\n            }\r\n            if (this.appeared && this.yAxis instanceof DateAxis && this.yAxis.groupData) {\r\n                this._tmin.setKey(this.xAxis.uid, undefined);\r\n                this._tmax.setKey(this.xAxis.uid, undefined);\r\n            }\r\n        }\r\n        var fields;\r\n        if (this.xAxis instanceof ValueAxis && this.xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n        }\r\n        if (this.yAxis instanceof ValueAxis && this.yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n        }\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var delay = 0;\r\n        var interpolationDuration = this.defaultState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var anim;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            var realDuration = interpolationDuration;\r\n            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\r\n                realDuration = 0;\r\n                delay = 0;\r\n            }\r\n            if (_this.sequencedInterpolation && realDuration > 0) {\r\n                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n            }\r\n            anim = dataItem.show(realDuration, delay, fields);\r\n        });\r\n        // other data sets\r\n        this.dataSets.each(function (key, dataSet) {\r\n            if (dataSet != _this.dataItems) {\r\n                dataSet.each(function (dataItem) {\r\n                    dataItem.events.disable();\r\n                    dataItem.show(0, 0, fields);\r\n                    dataItem.events.enable();\r\n                });\r\n            }\r\n        });\r\n        if (this.mainDataSet != this.dataItems) {\r\n            this.mainDataSet.each(function (dataItem) {\r\n                dataItem.events.disable();\r\n                dataItem.show(0, 0, fields);\r\n                dataItem.events.enable();\r\n            });\r\n        }\r\n        var animation = _super.prototype.show.call(this, duration);\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        if (this.hidden) {\r\n            this.dispatchImmediately(\"selectionextremeschanged\");\r\n            this.hidden = false;\r\n        }\r\n        return animation;\r\n    };\r\n    /**\r\n     * Hides series.\r\n     *\r\n     * @param duration  Duration of hiding animation (ms)\r\n     * @return Animation\r\n     */\r\n    XYSeries.prototype.hide = function (duration) {\r\n        var _this = this;\r\n        var fields;\r\n        var value;\r\n        var xAxis = this.xAxis;\r\n        if (xAxis instanceof ValueAxis && xAxis != this.baseAxis) {\r\n            fields = this._xValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {\r\n                value = xAxis.baseValue;\r\n            }\r\n            else {\r\n                value = xAxis.min;\r\n            }\r\n        }\r\n        var yAxis = this.yAxis;\r\n        if (yAxis instanceof ValueAxis && yAxis != this.baseAxis) {\r\n            fields = this._yValueFields;\r\n            // animate to zero if 0 is within zoomMin/zoomMax\r\n            if (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {\r\n                value = yAxis.baseValue;\r\n            }\r\n            else {\r\n                value = yAxis.min;\r\n            }\r\n        }\r\n        //if ($type.hasValue(fields)) {\r\n        var startIndex = this.startIndex;\r\n        var endIndex = this.endIndex;\r\n        var interpolationDuration = this.hiddenState.transitionDuration;\r\n        if ($type.isNumber(duration)) {\r\n            interpolationDuration = duration;\r\n        }\r\n        if (!options.animationsEnabled) {\r\n            interpolationDuration = 0;\r\n        }\r\n        var delay = 0;\r\n        var anim;\r\n        $iter.each($iter.indexed(this.dataItems.iterator()), function (a) {\r\n            var i = a[0];\r\n            var dataItem = a[1];\r\n            var realDuration = interpolationDuration;\r\n            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {\r\n                realDuration = 0;\r\n            }\r\n            if (realDuration == 0) {\r\n                dataItem.hide(0, 0, value, fields);\r\n            }\r\n            else {\r\n                if (_this.sequencedInterpolation && realDuration > 0) {\r\n                    delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);\r\n                }\r\n                anim = dataItem.hide(realDuration, delay, value, fields);\r\n            }\r\n        });\r\n        // other data sets\r\n        this.dataSets.each(function (key, dataSet) {\r\n            if (dataSet != _this.dataItems) {\r\n                dataSet.each(function (dataItem) {\r\n                    dataItem.events.disable();\r\n                    dataItem.hide(0, 0, value, fields);\r\n                    dataItem.events.enable();\r\n                });\r\n            }\r\n        });\r\n        if (this.mainDataSet != this.dataItems) {\r\n            this.mainDataSet.each(function (dataItem) {\r\n                dataItem.events.disable();\r\n                dataItem.hide(0, 0, value, fields);\r\n                dataItem.events.enable();\r\n            });\r\n        }\r\n        var animation = _super.prototype.hide.call(this, interpolationDuration);\r\n        if (animation && !animation.isFinished()) {\r\n            animation.delay(delay);\r\n        }\r\n        if (anim && !anim.isFinished()) {\r\n            animation = anim;\r\n        }\r\n        if (this.appeared) {\r\n            this.dispatch(\"selectionextremeschanged\");\r\n        }\r\n        // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0\r\n        this.validateDataElements();\r\n        //}\r\n        return animation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {\r\n        _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name);\r\n        // to calculate stack values\r\n        var axisSeries = this.baseAxis.series;\r\n        $iter.each(axisSeries.iterator(), function (series) {\r\n            if (series.stacked || series.stackedSeries) {\r\n                series.invalidateProcessedData();\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * [getStackValue description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @param dataItem  Data item\r\n     */\r\n    XYSeries.prototype.getStackValue = function (dataItem, working) {\r\n        // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?\r\n        // if this series is not stacked or new stack begins, return.\r\n        var _this = this;\r\n        var xAxis = this.xAxis;\r\n        var yAxis = this.yAxis;\r\n        if (!this.stacked || !xAxis || !yAxis) {\r\n            return;\r\n        }\r\n        else {\r\n            // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.\r\n            var chart = this.chart;\r\n            var index = chart.series.indexOf(this);\r\n            var field_2;\r\n            if (xAxis != this.baseAxis && xAxis instanceof ValueAxis) {\r\n                field_2 = this.xField;\r\n            }\r\n            if (yAxis != this.baseAxis && yAxis instanceof ValueAxis) {\r\n                field_2 = this.yField;\r\n            }\r\n            if (!field_2) {\r\n                return;\r\n            }\r\n            //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series\t\t\t\r\n            dataItem.setCalculatedValue(field_2, 0, \"stack\");\r\n            dataItem.setCalculatedValue(field_2, 0, \"stackTrue\");\r\n            $iter.eachContinue(chart.series.range(0, index).backwards().iterator(), function (prevSeries) {\r\n                // stacking is only possible if both axes are the same\r\n                if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {\r\n                    // saving value\r\n                    prevSeries.stackedSeries = _this;\r\n                    var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match\r\n                    if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {\r\n                        var value = dataItem.getValue(field_2);\r\n                        var prevValue = void 0;\r\n                        var prevStack = prevDataItem.getValue(field_2, \"stackTrue\");\r\n                        if (prevStack == null) {\r\n                            prevStack = 0;\r\n                        }\r\n                        var prevRealValue = prevDataItem.getValue(field_2) + prevStack;\r\n                        prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, \"stack\");\r\n                        if (_this.stackToNegative) {\r\n                            if ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {\r\n                                dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\r\n                                dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\r\n                                return false;\r\n                            }\r\n                            else if (!prevSeries.stacked) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                        else {\r\n                            dataItem.setCalculatedValue(field_2, prevValue, \"stack\");\r\n                            dataItem.setCalculatedValue(field_2, prevRealValue, \"stackTrue\");\r\n                            return false;\r\n                        }\r\n                    }\r\n                    else if (!prevSeries.stacked) {\r\n                        return false;\r\n                    }\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"stackToNegative\", {\r\n        /**\r\n         * @return Stack to base line\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"stackToNegative\");\r\n        },\r\n        /**\r\n         * This setting indicates how negative values are treated in stacked stacked\r\n         * series.\r\n         *\r\n         * If set to `true` (default), negative values will stack on the base line.\r\n         *\r\n         * If set to `false`, negative value will stack in relation to the previous\r\n         * value in the stack.\r\n         *\r\n         * @since 4.9.34\r\n         * @param  value  Stack to base line\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"stackToNegative\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"xField\", {\r\n        /**\r\n         * [xField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yField\", {\r\n        /**\r\n         * [yField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"xOpenField\", {\r\n        /**\r\n         * [xOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._xOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"yOpenField\", {\r\n        /**\r\n         * [yOpenField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this._yOpenField;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipXField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipXField) {\r\n                return this._tooltipXField;\r\n            }\r\n            return this._xField;\r\n        },\r\n        /**\r\n         * [tooltipXField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipXField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"tooltipYField\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            if (this._tooltipYField) {\r\n                return this._tooltipYField;\r\n            }\r\n            return this._yField;\r\n        },\r\n        /**\r\n         * [tooltipYField description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this._tooltipYField = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns lowest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.min = function (axis) {\r\n        return this._tmin.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.max = function (axis) {\r\n        return this._tmax.getKey(axis.uid);\r\n    };\r\n    /**\r\n     * Returns lowest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMin = function (axis) {\r\n        var value = this._smin.getKey(axis.uid);\r\n        // not good, because bad if there are no items with values in selection\r\n        //if (!$type.isNumber(value)) {\r\n        //value = this.min(axis);\r\n        //}\t\t\r\n        return value;\r\n    };\r\n    /**\r\n     * Returns highest value in the series for the specific axis within current\r\n     * selection.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param axis  Axis\r\n     * @return value\r\n     */\r\n    XYSeries.prototype.selectionMax = function (axis) {\r\n        var value = this._smax.getKey(axis.uid);\r\n        // not good, because bad if there are no items with values in selection\r\n        //if (!$type.isNumber(value)) {\r\n        //value = this.max(axis);\r\n        //}\r\n        return value;\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    XYSeries.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up base axes\r\n            if ($type.hasValue(config.baseAxis) && $type.isString(config.baseAxis)) {\r\n                if (this.map.hasKey(config.baseAxis)) {\r\n                    config.baseAxis = this.map.getKey(config.baseAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.baseAxis + \"\\\" found for `baseAxis`.\");\r\n                    delete config.baseAxis;\r\n                }\r\n            }\r\n            // Set up axes\r\n            if ($type.hasValue(config.xAxis) && $type.isString(config.xAxis)) {\r\n                if (this.map.hasKey(config.xAxis)) {\r\n                    config.xAxis = this.map.getKey(config.xAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.xAxis + \"\\\" found for `xAxis`.\");\r\n                    delete config.xAxis;\r\n                }\r\n            }\r\n            if ($type.hasValue(config.yAxis) && $type.isString(config.yAxis)) {\r\n                if (this.map.hasKey(config.yAxis)) {\r\n                    config.yAxis = this.map.getKey(config.yAxis);\r\n                }\r\n                else {\r\n                    this.processingErrors.push(\"[XYSeries (\" + (this.name || \"unnamed\") + \")] No axis with id \\\"\" + config.yAxis + \"\\\" found for `yAxis`.\");\r\n                    delete config.yAxis;\r\n                }\r\n            }\r\n            // Set up axis ranges\r\n            if ($type.hasValue(config.axisRanges) && $type.isArray(config.axisRanges)) {\r\n                for (var i = 0, len = config.axisRanges.length; i < len; i++) {\r\n                    var range = config.axisRanges[i];\r\n                    if (!$type.hasValue(range.type)) {\r\n                        range.type = \"AxisDataItem\";\r\n                    }\r\n                    if ($type.hasValue(range.axis) && $type.isString(range.axis) && this.map.hasKey(range.axis)) {\r\n                        range.component = this.map.getKey(range.axis);\r\n                    }\r\n                    else if ($type.hasValue(range.component) && $type.isString(range.component) && this.map.hasKey(range.component)) {\r\n                        range.component = this.map.getKey(range.component);\r\n                    }\r\n                }\r\n            }\r\n            // Parse date fields based on the series fields\r\n            if (!$type.hasValue(config.dataFields) || !$type.isObject(config.dataFields)) {\r\n                this.processingErrors.push(\"`dataFields` is not set for series [\" + (this.name || \"unnamed\") + \"]\");\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Returns an [[IPoint]] coordinates of the specific Serie's data point.\r\n     *\r\n     * @param    dataItem   Data item\r\n     * @param    xKey       Name of X data field\r\n     * @param    yKey       Name of Y data field\r\n     * @param    locationX  X location\r\n     * @param    locationY  Y location\r\n     * @param    stackKeyX  ?\r\n     * @param    stackKeyY  ?\r\n     * @returns             Coordinates\r\n     */\r\n    XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {\r\n        if (this.xAxis && this.yAxis) {\r\n            var x = this.xAxis.getX(dataItem, xKey, locationX);\r\n            var y = this.yAxis.getY(dataItem, yKey, locationY);\r\n            x = $math.fitToRange(x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            y = $math.fitToRange(y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.\r\n            return { x: x, y: y };\r\n        }\r\n    };\r\n    /**\r\n     * Updates item reader text based on the type and set up of axis.\r\n     */\r\n    XYSeries.prototype.updateItemReaderText = function () {\r\n        // We do not want to overwrite this if `itemReaderText` was changed by\r\n        // user code.\r\n        if (this._itemReaderTextChanged) {\r\n            return;\r\n        }\r\n        var text = \"\";\r\n        $object.each(this.dataFields, function (key, val) {\r\n            text += \"{\" + key + \"} \";\r\n        });\r\n        this.itemReaderText = text;\r\n        this._itemReaderTextChanged = false;\r\n    };\r\n    Object.defineProperty(XYSeries.prototype, \"cursorTooltipEnabled\", {\r\n        /**\r\n         * @return Display tooltip?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorTooltipEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should display a tooltip for chart's cursor.\r\n         *\r\n         * If set to `true` (default), the tooltips set for all series item's\r\n         * elements like columns and bullets will be automatically shown\r\n         * when [[XYCursor]] passes over category/date, even if its not hovered\r\n         * directly over the item.\r\n         *\r\n         * Set this to `false` to disable such behavior and display item-specific\r\n         * tooltips only when hovered directly over them\r\n         *\r\n         * @default true\r\n         * @param value Display tooltip?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorTooltipEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"cursorHoverEnabled\", {\r\n        /**\r\n         * @return Hover enabled?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cursorHoverEnabled\");\r\n        },\r\n        /**\r\n         * Indicates if series should apply hover state on bullets/columns/etc when\r\n         * cursor is over the data item.\r\n         *\r\n         * If set to `true` (default) and chart cursor is enabled on th chart,\r\n         * hovering over date/category will trigger hover states on related Series\r\n         * items like bullets and columns.\r\n         *\r\n         * @default true\r\n         * @since 4.2.2\r\n         * @param  value  Hover enabled?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cursorHoverEnabled\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"excludeFromTotal\", {\r\n        /**\r\n         * @return Exclude from totals?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"excludeFromTotal\");\r\n        },\r\n        /**\r\n         * Indicates if series' values should be excluded when calculating totals.\r\n         *\r\n         * @default false\r\n         * @since 4.4.9\r\n         * @param  value  Exclude from totals?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"excludeFromTotal\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"hideTooltipWhileZooming\", {\r\n        /**\r\n         * @return Hide tooltip while zooming?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"hideTooltipWhileZooming\");\r\n        },\r\n        /**\r\n         * Indicates if series' tooltip should be hidden while series axis range is\r\n         * animating (zooming).\r\n         *\r\n         * @default true\r\n         * @since 4.7.16\r\n         * @param  value  Hide tooltip while zooming?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"hideTooltipWhileZooming\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(XYSeries.prototype, \"maskBullets\", {\r\n        /**\r\n         * @return Mask bullets?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"maskBullets\");\r\n        },\r\n        /**\r\n         * Indicates if series' bullets should be masked.\r\n         *\r\n         * @default true\r\n         * @since 4.7.17\r\n         * @param  value  Mask bullets?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"maskBullets\", value);\r\n            var chart = this.chart;\r\n            if (chart) {\r\n                if (value) {\r\n                    this.bulletsContainer.parent = chart.bulletsContainer;\r\n                }\r\n                else {\r\n                    this.bulletsContainer.parent = chart.axisBulletsContainer;\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    XYSeries.prototype.copyFrom = function (source) {\r\n        this.groupFields = $utils.copyProperties(source.groupFields, {});\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    XYSeries.prototype.dispose = function () {\r\n        if (this.scrollbarSeries) {\r\n            this.scrollbarSeries.dispose();\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    return XYSeries;\r\n}(Series));\r\nexport { XYSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"XYSeries\"] = XYSeries;\r\nregistry.registeredClasses[\"XYSeriesDataItem\"] = XYSeriesDataItem;\r\n"],"mappings":"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KAAN;MACH;IACJ,CAZD;IAaA,OAAO0B,GAAP,CApBuE,CAqBvE;EACH,CAtBD;;EAuBA,OAAOhD,gBAAP;AACH,CAnUqC,CAmUpCnB,cAnUoC,CAAtC;;AAoUA,SAASmB,gBAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIiD,QAAQ;AAAG;AAAe,UAAUhD,MAAV,EAAkB;EAC5CvB,SAAS,CAACuE,QAAD,EAAWhD,MAAX,CAAT;EACA;AACJ;AACA;;;EACI,SAASgD,QAAT,GAAoB;IAChB,IAAI/C,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;IACA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACQD,KAAK,CAACgD,WAAN,GAAoB,EAApB;IACA;AACR;AACA;;IACQhD,KAAK,CAACiD,MAAN,GAAe,IAAIjE,oBAAJ,EAAf;IACA;AACR;AACA;;IACQgB,KAAK,CAACkD,MAAN,GAAe,IAAIlE,oBAAJ,EAAf;IACA;AACR;AACA;AACA;AACA;;IACQgB,KAAK,CAACmD,aAAN,GAAsB,EAAtB;IACA;AACR;AACA;AACA;AACA;;IACQnD,KAAK,CAACoD,aAAN,GAAsB,EAAtB;IACA;AACR;AACA;;IACQpD,KAAK,CAACqD,aAAN,GAAsB,EAAtB;IACA;AACR;AACA;;IACQrD,KAAK,CAACsD,WAAN,GAAo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"},"metadata":{},"sourceType":"module"}