{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/appointments/appointmentCollection.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { setOuterWidth, setOuterHeight } from \"../../../core/utils/size\";\nimport $ from \"../../../core/renderer\";\nimport domAdapter from \"../../../core/dom_adapter\";\nimport eventsEngine from \"../../../events/core/events_engine\";\nimport { data as elementData } from \"../../../core/element_data\";\nimport { locate, move } from \"../../../animation/translator\";\nimport dateUtils from \"../../../core/utils/date\";\nimport { normalizeKey, grep } from \"../../../core/utils/common\";\nimport { isDefined, isDeferred, isString, isPlainObject } from \"../../../core/utils/type\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { deepExtendArraySafe } from \"../../../core/utils/object\";\nimport { wrapToArray } from \"../../../core/utils/array\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { getPublicElement } from \"../../../core/element\";\nimport { getRecurrenceProcessor } from \"../recurrence\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport { Appointment, AgendaAppointment } from \"./appointment\";\nimport { addNamespace, isFakeClickEvent } from \"../../../events/utils/index\";\nimport { name as dblclickEvent } from \"../../../events/double_click\";\nimport CollectionWidget from \"../../collection/ui.collection_widget.edit\";\nimport timeZoneUtils from \"../utils.timeZone\";\nimport { APPOINTMENT_SETTINGS_KEY } from \"../constants\";\nimport { APPOINTMENT_ITEM_CLASS, APPOINTMENT_DRAG_SOURCE_CLASS } from \"../classes\";\nimport { createAgendaAppointmentLayout, createAppointmentLayout } from \"./appointmentLayout\";\nimport { ExpressionUtils } from \"../expressionUtils\";\nimport { createAppointmentAdapter } from \"../appointmentAdapter\";\nimport { getAppointmentTakesSeveralDays, sortAppointmentsByStartDate } from \"./dataProvider/utils\";\nimport { getBoundingRect } from \"../../../core/utils/position\";\nimport { getAppointmentDateRange } from \"./resizing/core\";\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\nvar toMs = dateUtils.dateToMilliseconds;\n\nclass SchedulerAppointments extends CollectionWidget {\n  get isAgendaView() {\n    return this.invoke(\"isCurrentViewAgenda\");\n  }\n\n  get isVirtualScrolling() {\n    return this.invoke(\"isVirtualScrolling\");\n  }\n\n  get appointmentDataProvider() {\n    return this.option(\"getAppointmentDataProvider\")();\n  }\n\n  constructor(element, options) {\n    super(element, options);\n    this._virtualAppointments = {};\n  }\n\n  notifyObserver(subject, args) {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      observer.fire(subject, args);\n    }\n  }\n\n  invoke() {\n    var observer = this.option(\"observer\");\n\n    if (observer) {\n      return observer.fire.apply(observer, arguments);\n    }\n  }\n\n  _dispose() {\n    clearTimeout(this._appointmentClickTimeout);\n\n    super._dispose();\n  }\n\n  _supportedKeys() {\n    var parent = super._supportedKeys();\n\n    var currentAppointment = this._$currentAppointment;\n    return extend(parent, {\n      escape: function () {\n        if (this.resizeOccur) {\n          var _currentAppointment$d, _currentAppointment$d2, _currentAppointment$d3;\n\n          this.moveAppointmentBack();\n          this.resizeOccur = false;\n          null === (_currentAppointment$d = currentAppointment.dxResizable(\"instance\")) || void 0 === _currentAppointment$d ? void 0 : _currentAppointment$d._detachEventHandlers();\n          null === (_currentAppointment$d2 = currentAppointment.dxResizable(\"instance\")) || void 0 === _currentAppointment$d2 ? void 0 : _currentAppointment$d2._attachEventHandlers();\n          null === (_currentAppointment$d3 = currentAppointment.dxResizable(\"instance\")) || void 0 === _currentAppointment$d3 ? void 0 : _currentAppointment$d3._toggleResizingClass(false);\n        }\n      }.bind(this),\n      del: function (e) {\n        if (this.option(\"allowDelete\")) {\n          e.preventDefault();\n\n          var data = this._getItemData(e.target);\n\n          this.notifyObserver(\"onDeleteButtonPress\", {\n            data: data,\n            target: e.target\n          });\n        }\n      }.bind(this),\n      tab: function (e) {\n        var appointments = this._getAccessAppointments();\n\n        var focusedAppointment = appointments.filter(\".dx-state-focused\");\n        var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\n        var lastIndex = appointments.length - 1;\n\n        if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\n          e.preventDefault();\n          e.shiftKey ? index-- : index++;\n\n          var $nextAppointment = this._getAppointmentByIndex(index);\n\n          this._resetTabIndex($nextAppointment);\n\n          eventsEngine.trigger($nextAppointment, \"focus\");\n        }\n      }\n    });\n  }\n\n  _getAppointmentByIndex(sortedIndex) {\n    var appointments = this._getAccessAppointments();\n\n    return appointments.filter(function (_, $item) {\n      return elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex;\n    }).eq(0);\n  }\n\n  _getAccessAppointments() {\n    return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\");\n  }\n\n  _resetTabIndex($appointment) {\n    this._focusTarget().attr(\"tabIndex\", -1);\n\n    $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"));\n  }\n\n  _moveFocus() {}\n\n  _focusTarget() {\n    return this._itemElements();\n  }\n\n  _renderFocusTarget() {\n    var $appointment = this._getAppointmentByIndex(0);\n\n    this._resetTabIndex($appointment);\n  }\n\n  _focusInHandler(e) {\n    super._focusInHandler(e);\n\n    this._$currentAppointment = $(e.target);\n    this.option(\"focusedElement\", getPublicElement($(e.target)));\n  }\n\n  _focusOutHandler(e) {\n    var $appointment = this._getAppointmentByIndex(0);\n\n    this.option(\"focusedElement\", getPublicElement($appointment));\n\n    super._focusOutHandler(e);\n  }\n\n  _eventBindingTarget() {\n    return this._itemContainer();\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      noDataText: null,\n      activeStateEnabled: true,\n      hoverStateEnabled: true,\n      tabIndex: 0,\n      fixedContainer: null,\n      allDayContainer: null,\n      allowDrag: true,\n      allowResize: true,\n      allowAllDayResize: true,\n      onAppointmentDblClick: null,\n      _collectorOffset: 0,\n      groups: [],\n      resources: []\n    });\n  }\n\n  _optionChanged(args) {\n    if (this.option(\"isRenovatedAppointments\")) {\n      return;\n    }\n\n    switch (args.name) {\n      case \"items\":\n        this._cleanFocusState();\n\n        this._clearDropDownItems();\n\n        this._clearDropDownItemsElements();\n\n        this._repaintAppointments(args.value);\n\n        this._renderDropDownAppointments();\n\n        this._attachAppointmentsEvents();\n\n        break;\n\n      case \"fixedContainer\":\n      case \"allDayContainer\":\n      case \"onAppointmentDblClick\":\n        break;\n\n      case \"allowDrag\":\n      case \"allowResize\":\n      case \"allowAllDayResize\":\n        this._invalidate();\n\n        break;\n\n      case \"focusedElement\":\n        this._resetTabIndex($(args.value));\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"allowDelete\":\n        break;\n\n      case \"focusStateEnabled\":\n        this._clearDropDownItemsElements();\n\n        this._renderDropDownAppointments();\n\n        super._optionChanged(args);\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _isAllDayAppointment(appointment) {\n    return appointment.settings.length && appointment.settings[0].allDay || false;\n  }\n\n  _isRepaintAppointment(appointment) {\n    return !isDefined(appointment.needRepaint) || true === appointment.needRepaint;\n  }\n\n  _isRepaintAll(appointments) {\n    if (this.isAgendaView) {\n      return true;\n    }\n\n    for (var i = 0; i < appointments.length; i++) {\n      if (!this._isRepaintAppointment(appointments[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  _applyFragment(fragment, allDay) {\n    if (fragment.children().length > 0) {\n      this._getAppointmentContainer(allDay).append(fragment);\n    }\n  }\n\n  _onEachAppointment(appointment, index, container, isRepaintAll) {\n    if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\n      this._clearItem(appointment);\n    } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\n      (() => {\n        appointment.needRepaint = false;\n\n        this._clearItem(appointment);\n\n        this._renderItem(index, appointment, container);\n      })();\n    }\n  }\n\n  _repaintAppointments(appointments) {\n    this._renderByFragments(($commonFragment, $allDayFragment) => {\n      var isRepaintAll = this._isRepaintAll(appointments);\n\n      if (isRepaintAll) {\n        this._getAppointmentContainer(true).html(\"\");\n\n        this._getAppointmentContainer(false).html(\"\");\n      }\n\n      !appointments.length && this._cleanItemContainer();\n      appointments.forEach((appointment, index) => {\n        var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\n\n        this._onEachAppointment(appointment, index, container, isRepaintAll);\n      });\n    });\n  }\n\n  _renderByFragments(renderFunction) {\n    if (this.isVirtualScrolling) {\n      var $commonFragment = $(domAdapter.createDocumentFragment());\n      var $allDayFragment = $(domAdapter.createDocumentFragment());\n      renderFunction($commonFragment, $allDayFragment);\n\n      this._applyFragment($commonFragment, false);\n\n      this._applyFragment($allDayFragment, true);\n    } else {\n      renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true));\n    }\n  }\n\n  _attachAppointmentsEvents() {\n    this._attachClickEvent();\n\n    this._attachHoldEvent();\n\n    this._attachContextMenuEvent();\n\n    this._attachAppointmentDblClick();\n\n    this._renderFocusState();\n\n    this._attachFeedbackEvents();\n\n    this._attachHoverEvents();\n  }\n\n  _clearItem(item) {\n    var $items = this._findItemElementByItem(item.itemData);\n\n    if (!$items.length) {\n      return;\n    }\n\n    each($items, function (_, $item) {\n      $item.detach();\n      $item.remove();\n    });\n  }\n\n  _clearDropDownItems() {\n    this._virtualAppointments = {};\n  }\n\n  _clearDropDownItemsElements() {\n    this.invoke(\"clearCompactAppointments\");\n  }\n\n  _findItemElementByItem(item) {\n    var result = [];\n    var that = this;\n    this.itemElements().each(function () {\n      var $item = $(this);\n\n      if ($item.data(that._itemDataKey()) === item) {\n        result.push($item);\n      }\n    });\n    return result;\n  }\n\n  _itemClass() {\n    return APPOINTMENT_ITEM_CLASS;\n  }\n\n  _itemContainer() {\n    var $container = super._itemContainer();\n\n    var $result = $container;\n    var $allDayContainer = this.option(\"allDayContainer\");\n\n    if ($allDayContainer) {\n      $result = $container.add($allDayContainer);\n    }\n\n    return $result;\n  }\n\n  _cleanItemContainer() {\n    super._cleanItemContainer();\n\n    var $allDayContainer = this.option(\"allDayContainer\");\n\n    if ($allDayContainer) {\n      $allDayContainer.empty();\n    }\n\n    this._virtualAppointments = {};\n  }\n\n  _clean() {\n    super._clean();\n\n    delete this._$currentAppointment;\n    delete this._initialSize;\n    delete this._initialCoordinates;\n  }\n\n  _init() {\n    super._init();\n\n    this.$element().addClass(COMPONENT_CLASS);\n    this._preventSingleAppointmentClick = false;\n  }\n\n  _renderAppointmentTemplate($container, appointment, model) {\n    var config = {\n      isAllDay: appointment.allDay,\n      isRecurrence: appointment.recurrenceRule,\n      html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\n    };\n    var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\n    $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config));\n  }\n\n  _executeItemRenderAction(index, itemData, itemElement) {\n    var action = this._getItemRenderAction();\n\n    if (action) {\n      action(this.invoke(\"mapAppointmentFields\", {\n        itemData: itemData,\n        itemElement: itemElement\n      }));\n    }\n\n    delete this._currentAppointmentSettings;\n  }\n\n  _itemClickHandler(e) {\n    super._itemClickHandler(e, {}, {\n      afterExecute: function (e) {\n        this._processItemClick(e.args[0].event);\n      }.bind(this)\n    });\n  }\n\n  _processItemClick(e) {\n    var $target = $(e.currentTarget);\n\n    var data = this._getItemData($target);\n\n    if (\"keydown\" === e.type || isFakeClickEvent(e)) {\n      this.notifyObserver(\"showEditAppointmentPopup\", {\n        data: data,\n        target: $target\n      });\n      return;\n    }\n\n    this._appointmentClickTimeout = setTimeout(function () {\n      if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\n        this.notifyObserver(\"showAppointmentTooltip\", {\n          data: data,\n          target: $target\n        });\n      }\n\n      this._preventSingleAppointmentClick = false;\n    }.bind(this), 300);\n  }\n\n  _extendActionArgs($itemElement) {\n    var args = super._extendActionArgs($itemElement);\n\n    return this.invoke(\"mapAppointmentFields\", args);\n  }\n\n  _render() {\n    super._render();\n\n    this._attachAppointmentDblClick();\n  }\n\n  _attachAppointmentDblClick() {\n    var that = this;\n\n    var itemSelector = that._itemSelector();\n\n    var itemContainer = this._itemContainer();\n\n    eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\n    eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, function (e) {\n      that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\n        afterExecute: function (e) {\n          that._dblClickHandler(e.args[0].event);\n        }\n      });\n    });\n  }\n\n  _dblClickHandler(e) {\n    var $targetAppointment = $(e.currentTarget);\n\n    var appointmentData = this._getItemData($targetAppointment);\n\n    clearTimeout(this._appointmentClickTimeout);\n    this._preventSingleAppointmentClick = true;\n    this.notifyObserver(\"showEditAppointmentPopup\", {\n      data: appointmentData,\n      target: $targetAppointment\n    });\n  }\n\n  _renderItem(index, item, container) {\n    var itemData = item.itemData;\n    var $items = [];\n\n    for (var i = 0; i < item.settings.length; i++) {\n      var setting = item.settings[i];\n      this._currentAppointmentSettings = setting;\n\n      var $item = super._renderItem(index, itemData, container);\n\n      $item.data(APPOINTMENT_SETTINGS_KEY, setting);\n      $items.push($item);\n    }\n\n    return $items;\n  }\n\n  _getItemContent($itemFrame) {\n    $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\n\n    var $itemContent = super._getItemContent($itemFrame);\n\n    return $itemContent;\n  }\n\n  _createItemByTemplate(itemTemplate, renderArgs) {\n    var {\n      itemData: itemData,\n      container: container,\n      index: index\n    } = renderArgs;\n    return itemTemplate.render({\n      model: {\n        appointmentData: itemData,\n        targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\n      },\n      container: container,\n      index: index\n    });\n  }\n\n  _getAppointmentContainer(allDay) {\n    var $allDayContainer = this.option(\"allDayContainer\");\n    var $container = this.itemsContainer().not($allDayContainer);\n\n    if (allDay && $allDayContainer) {\n      $container = $allDayContainer;\n    }\n\n    return $container;\n  }\n\n  _postprocessRenderItem(args) {\n    this._renderAppointment(args.itemElement, this._currentAppointmentSettings);\n  }\n\n  _renderAppointment(element, settings) {\n    element.data(APPOINTMENT_SETTINGS_KEY, settings);\n\n    this._applyResourceDataAttr(element);\n\n    var rawAppointment = this._getItemData(element);\n\n    var geometry = this.invoke(\"getAppointmentGeometry\", settings);\n    var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\n    var allowDrag = this.option(\"allowDrag\");\n    var allDay = settings.allDay;\n    this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\n\n    if (settings.virtual) {\n      var appointmentConfig = {\n        itemData: rawAppointment,\n        groupIndex: settings.groupIndex,\n        groups: this.option(\"groups\")\n      };\n      var deferredColor = this.option(\"getAppointmentColor\")(appointmentConfig);\n\n      this._processVirtualAppointment(settings, element, rawAppointment, deferredColor);\n    } else {\n      var _settings$info;\n\n      var config = {\n        data: rawAppointment,\n        groupIndex: settings.groupIndex,\n        observer: this.option(\"observer\"),\n        geometry: geometry,\n        direction: settings.direction || \"vertical\",\n        allowResize: allowResize,\n        allowDrag: allowDrag,\n        allDay: allDay,\n        reduced: settings.appointmentReduced,\n        isCompact: settings.isCompact,\n        startDate: new Date(null === (_settings$info = settings.info) || void 0 === _settings$info ? void 0 : _settings$info.appointment.startDate),\n        cellWidth: this.invoke(\"getCellWidth\"),\n        cellHeight: this.invoke(\"getCellHeight\"),\n        resizableConfig: this._resizableConfig(rawAppointment, settings),\n        groups: this.option(\"groups\"),\n        getAppointmentColor: this.option(\"getAppointmentColor\"),\n        getResourceDataAccessors: this.option(\"getResourceDataAccessors\")\n      };\n\n      if (this.isAgendaView) {\n        var agendaResourceProcessor = this.option(\"getAgendaResourceProcessor\")();\n\n        config.createPlainResourceListAsync = rawAppointment => agendaResourceProcessor.createListAsync(rawAppointment);\n      }\n\n      this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, _extends({}, config, {\n        dataAccessors: this.option(\"dataAccessors\"),\n        getResizableStep: this.option(\"getResizableStep\")\n      }));\n    }\n  }\n\n  _applyResourceDataAttr($appointment) {\n    var dataAccessors = this.option(\"getResourceDataAccessors\")();\n\n    var rawAppointment = this._getItemData($appointment);\n\n    each(dataAccessors.getter, function (key) {\n      var value = dataAccessors.getter[key](rawAppointment);\n\n      if (isDefined(value)) {\n        var prefix = \"data-\".concat(normalizeKey(key.toLowerCase()), \"-\");\n        wrapToArray(value).forEach(value => $appointment.attr(prefix + normalizeKey(value), true));\n      }\n    });\n  }\n\n  _resizableConfig(appointmentData, itemSetting) {\n    return {\n      area: this._calculateResizableArea(itemSetting, appointmentData),\n      onResizeStart: function (e) {\n        this.resizeOccur = true;\n        this._$currentAppointment = $(e.element);\n\n        if (this.invoke(\"needRecalculateResizableArea\")) {\n          var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\n\n          e.component.option(\"area\", updatedArea);\n\n          e.component._renderDragOffsets(e.event);\n        }\n\n        this._initialSize = {\n          width: e.width,\n          height: e.height\n        };\n        this._initialCoordinates = locate(this._$currentAppointment);\n      }.bind(this),\n      onResizeEnd: function (e) {\n        this.resizeOccur = false;\n\n        this._resizeEndHandler(e);\n      }.bind(this)\n    };\n  }\n\n  _calculateResizableArea(itemSetting, appointmentData) {\n    var area = this.$element().closest(\".dx-scrollable-content\");\n    return this.invoke(\"getResizableAppointmentArea\", {\n      coordinates: {\n        left: itemSetting.left,\n        top: 0,\n        groupIndex: itemSetting.groupIndex\n      },\n      allDay: itemSetting.allDay\n    }) || area;\n  }\n\n  _resizeEndHandler(e) {\n    var $element = $(e.element);\n    var {\n      allDay: allDay,\n      info: info\n    } = $element.data(\"dxAppointmentSettings\");\n\n    var sourceAppointment = this._getItemData($element);\n\n    var dateRange = {};\n\n    if (allDay) {\n      dateRange = this.resizeAllDay(e);\n    } else {\n      var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\n\n      var endDate = info.appointment.endDate;\n      dateRange = this._getDateRange(e, startDate, endDate);\n    }\n\n    this.updateResizedAppointment($element, dateRange, this.option(\"dataAccessors\"), this.option(\"timeZoneCalculator\"));\n  }\n\n  resizeAllDay(e) {\n    var $element = $(e.element);\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var dataAccessors = this.option(\"dataAccessors\");\n    return getAppointmentDateRange({\n      handles: e.handles,\n      appointmentSettings: $element.data(\"dxAppointmentSettings\"),\n      isVerticalViewDirection: this.option(\"isVerticalViewDirection\")(),\n      isVerticalGroupedWorkSpace: this.option(\"isVerticalGroupedWorkSpace\")(),\n      appointmentRect: getBoundingRect($element[0]),\n      parentAppointmentRect: getBoundingRect($element.parent()[0]),\n      viewDataProvider: this.option(\"getViewDataProvider\")(),\n      isDateAndTimeView: this.option(\"isDateAndTimeView\")(),\n      startDayHour: this.invoke(\"getStartDayHour\"),\n      endDayHour: this.invoke(\"getEndDayHour\"),\n      timeZoneCalculator: timeZoneCalculator,\n      dataAccessors: dataAccessors,\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      DOMMetaData: this.option(\"getDOMElementsMetaData\")()\n    });\n  }\n\n  updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {\n    var sourceAppointment = this._getItemData($element);\n\n    var modifiedAppointmentAdapter = createAppointmentAdapter(sourceAppointment, dataAccessors, timeZoneCalculator).clone();\n    modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);\n    modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);\n    this.notifyObserver(\"updateAppointmentAfterResize\", {\n      target: sourceAppointment,\n      data: modifiedAppointmentAdapter.clone({\n        pathTimeZone: \"fromGrid\"\n      }).source(),\n      $appointment: $element\n    });\n  }\n\n  _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var appointmentAdapter = createAppointmentAdapter(rawAppointment, this.option(\"dataAccessors\"), timeZoneCalculator);\n    var startDate = appointmentInfo.startDate;\n    var recurrenceProcessor = getRecurrenceProcessor();\n    var {\n      recurrenceRule: recurrenceRule,\n      startDateTimeZone: startDateTimeZone\n    } = appointmentAdapter;\n    var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\n    var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\n\n    if (!e.handles.top && !isRecurrent && !isAllDay) {\n      startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {\n        appointmentTimeZone: startDateTimeZone,\n        path: \"toGrid\"\n      });\n    }\n\n    return startDate;\n  }\n\n  _getDateRange(e, startDate, endDate) {\n    var itemData = this._getItemData(e.element);\n\n    var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\n    var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\n    var isStartDateChanged = false;\n    var isAllDay = this.invoke(\"isAllDay\", itemData);\n    var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\n    var startTime;\n    var endTime;\n\n    if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\n      isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left;\n    } else {\n      isStartDateChanged = e.handles.top;\n    }\n\n    if (isStartDateChanged) {\n      startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\n      startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\n      endTime = endDate.getTime();\n    } else {\n      startTime = startDate.getTime();\n      endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\n      endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime);\n    }\n\n    return {\n      startDate: new Date(startTime),\n      endDate: new Date(endTime)\n    };\n  }\n\n  _correctEndDateByDelta(endDate, deltaTime) {\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var result = endDate.getTime() + deltaTime;\n    var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n    var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n    var maxDate = new Date(endDate);\n    var minDate = new Date(endDate);\n    minDate.setHours(startDayHour, 0, 0, 0);\n    maxDate.setHours(endDayHour, 0, 0, 0);\n\n    if (result > maxDate.getTime() || result <= minDate.getTime()) {\n      var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\n      var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n      var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);\n      var lastDay = new Date(correctedEndDate);\n      lastDay.setHours(startDayHour, 0, 0, 0);\n      result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1);\n    }\n\n    return result;\n  }\n\n  _correctStartDateByDelta(startDate, deltaTime) {\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var result = startDate.getTime() - deltaTime;\n    var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\n    var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\n    var maxDate = new Date(startDate);\n    var minDate = new Date(startDate);\n    minDate.setHours(startDayHour, 0, 0, 0);\n    maxDate.setHours(endDayHour, 0, 0, 0);\n\n    if (result < minDate.getTime() || result >= maxDate.getTime()) {\n      var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\n      var tailOfPrevDays = deltaTime - tailOfCurrentDay;\n      var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\n      firstDay.setHours(endDayHour, 0, 0, 0);\n      result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1);\n    }\n\n    return result;\n  }\n\n  _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\n    var virtualAppointment = appointmentSetting.virtual;\n    var virtualGroupIndex = virtualAppointment.index;\n\n    if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\n      this._virtualAppointments[virtualGroupIndex] = {\n        coordinates: {\n          top: virtualAppointment.top,\n          left: virtualAppointment.left\n        },\n        items: {\n          data: [],\n          colors: [],\n          settings: []\n        },\n        isAllDay: virtualAppointment.isAllDay ? true : false,\n        buttonColor: color\n      };\n    }\n\n    appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\n\n    this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\n\n    this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\n\n    this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\n\n    $appointment.remove();\n  }\n\n  _renderContentImpl() {\n    super._renderContentImpl();\n\n    this._renderDropDownAppointments();\n  }\n\n  _renderDropDownAppointments() {\n    this._renderByFragments(($commonFragment, $allDayFragment) => {\n      each(this._virtualAppointments, function (groupIndex) {\n        var virtualGroup = this._virtualAppointments[groupIndex];\n        var virtualItems = virtualGroup.items;\n        var virtualCoordinates = virtualGroup.coordinates;\n        var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\n        var left = virtualCoordinates.left;\n        var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\n        var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\n        var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\n        this.notifyObserver(\"renderCompactAppointments\", {\n          $container: $fragment,\n          coordinates: {\n            top: virtualCoordinates.top,\n            left: left + rtlOffset\n          },\n          items: virtualItems,\n          buttonColor: virtualGroup.buttonColor,\n          width: buttonWidth - this.option(\"_collectorOffset\"),\n          height: buttonHeight,\n          onAppointmentClick: this.option(\"onItemClick\"),\n          allowDrag: this.option(\"allowDrag\"),\n          cellWidth: this.invoke(\"getCellWidth\"),\n          isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup)\n        });\n      }.bind(this));\n    });\n  }\n\n  _isGroupCompact(virtualGroup) {\n    return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\");\n  }\n\n  _sortAppointmentsByStartDate(appointments) {\n    return sortAppointmentsByStartDate(appointments, this.option(\"dataAccessors\"));\n  }\n\n  _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\n    var recurrenceRule = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceRule\", appointment);\n    var result = {\n      parts: [],\n      indexes: []\n    };\n\n    if (recurrenceRule) {\n      var dates = appointment.settings || appointment;\n      var startDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", dates));\n      var startDateTimeZone = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDateTimeZone\", appointment);\n      var endDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"endDate\", dates));\n      var appointmentDuration = endDate.getTime() - startDate.getTime();\n      var recurrenceException = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceException\", appointment);\n      var startViewDate = this.invoke(\"getStartViewDate\");\n      var endViewDate = this.invoke(\"getEndViewDate\");\n      var timezoneCalculator = this.option(\"timeZoneCalculator\");\n      var recurrentDates = getRecurrenceProcessor().generateDates({\n        rule: recurrenceRule,\n        exception: recurrenceException,\n        start: startDate,\n        end: endDate,\n        min: startViewDate,\n        max: endViewDate,\n        appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)\n      });\n      var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\n\n      for (var i = 0; i < recurrentDateCount; i++) {\n        var appointmentPart = extend({}, appointment, true);\n\n        if (recurrentDates[i]) {\n          var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\n\n          this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\n\n          appointmentPart.settings = appointmentSettings;\n        } else {\n          appointmentPart.settings = dates;\n        }\n\n        result.parts.push(appointmentPart);\n\n        if (!skipLongAppointments) {\n          this._processLongAppointment(appointmentPart, result);\n        }\n      }\n\n      result.indexes.push(index);\n    }\n\n    return result;\n  }\n\n  _processLongAppointment(appointment, result) {\n    var parts = this.splitAppointmentByDay(appointment);\n    var partCount = parts.length;\n    var endViewDate = this.invoke(\"getEndViewDate\").getTime();\n    var startViewDate = this.invoke(\"getStartViewDate\").getTime();\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    result = result || {\n      parts: []\n    };\n\n    if (partCount > 1) {\n      extend(appointment, parts[0]);\n\n      for (var i = 1; i < partCount; i++) {\n        var startDate = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", parts[i].settings).getTime();\n        startDate = timeZoneCalculator.createDate(startDate, {\n          path: \"toGrid\"\n        });\n\n        if (startDate < endViewDate && startDate > startViewDate) {\n          result.parts.push(parts[i]);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\n    each(recurrenceIndexes, function (i, index) {\n      appointments.splice(index - i, 1);\n    });\n  }\n\n  _combineAppointments(appointments, additionalAppointments) {\n    if (additionalAppointments.length) {\n      appointments.push(...additionalAppointments);\n    }\n\n    this._sortAppointmentsByStartDate(appointments);\n  }\n\n  _applyStartDateToObj(startDate, obj) {\n    ExpressionUtils.setField(this.option(\"dataAccessors\"), \"startDate\", obj, startDate);\n    return obj;\n  }\n\n  _applyEndDateToObj(endDate, obj) {\n    ExpressionUtils.setField(this.option(\"dataAccessors\"), \"endDate\", obj, endDate);\n    return obj;\n  }\n\n  moveAppointmentBack(dragEvent) {\n    var $appointment = this._$currentAppointment;\n    var size = this._initialSize;\n    var coords = this._initialCoordinates;\n\n    if (dragEvent) {\n      this._removeDragSourceClassFromDraggedAppointment();\n\n      if (isDeferred(dragEvent.cancel)) {\n        dragEvent.cancel.resolve(true);\n      } else {\n        dragEvent.cancel = true;\n      }\n    }\n\n    if ($appointment && !dragEvent) {\n      if (coords) {\n        move($appointment, coords);\n        delete this._initialSize;\n      }\n\n      if (size) {\n        setOuterWidth($appointment, size.width);\n        setOuterHeight($appointment, size.height);\n        delete this._initialCoordinates;\n      }\n    }\n  }\n\n  focus() {\n    if (this._$currentAppointment) {\n      var focusedElement = getPublicElement(this._$currentAppointment);\n      this.option(\"focusedElement\", focusedElement);\n      eventsEngine.trigger(focusedElement, \"focus\");\n    }\n  }\n\n  splitAppointmentByDay(appointment) {\n    var dates = appointment.settings || appointment;\n    var dataAccessors = this.option(\"dataAccessors\");\n    var originalStartDate = new Date(ExpressionUtils.getField(dataAccessors, \"startDate\", dates));\n    var startDate = dateUtils.makeDate(originalStartDate);\n    var endDate = dateUtils.makeDate(ExpressionUtils.getField(dataAccessors, \"endDate\", dates));\n    var maxAllowedDate = this.invoke(\"getEndViewDate\");\n    var startDayHour = this.invoke(\"getStartDayHour\");\n    var endDayHour = this.invoke(\"getEndDayHour\");\n    var timeZoneCalculator = this.option(\"timeZoneCalculator\");\n    var adapter = createAppointmentAdapter(appointment, dataAccessors, timeZoneCalculator);\n    var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\n    var result = [];\n    startDate = timeZoneCalculator.createDate(startDate, {\n      path: \"toGrid\"\n    });\n    endDate = timeZoneCalculator.createDate(endDate, {\n      path: \"toGrid\"\n    });\n\n    if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\n      result.push(this._applyStartDateToObj(new Date(startDate), {\n        appointmentData: appointment\n      }));\n      startDate.setDate(startDate.getDate() + 1);\n    }\n\n    while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\n      var currentStartDate = new Date(startDate);\n      var currentEndDate = new Date(startDate);\n\n      this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\n\n      this._checkEndDate(currentEndDate, endDate, endDayHour);\n\n      var appointmentData = deepExtendArraySafe({}, appointment, true);\n      var appointmentSettings = {};\n\n      this._applyStartDateToObj(currentStartDate, appointmentSettings);\n\n      this._applyEndDateToObj(currentEndDate, appointmentSettings);\n\n      appointmentData.settings = appointmentSettings;\n      result.push(appointmentData);\n      startDate = dateUtils.trimTime(startDate);\n      startDate.setDate(startDate.getDate() + 1);\n      startDate.setHours(startDayHour);\n    }\n\n    return result;\n  }\n\n  _checkStartDate(currentDate, originalDate, startDayHour) {\n    if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\n      currentDate.setHours(startDayHour, 0, 0, 0);\n    } else {\n      currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n    }\n  }\n\n  _checkEndDate(currentDate, originalDate, endDayHour) {\n    if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\n      currentDate.setHours(endDayHour, 0, 0, 0);\n    } else {\n      currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds());\n    }\n  }\n\n  _removeDragSourceClassFromDraggedAppointment() {\n    var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\n\n    $appointments.each((_, element) => {\n      var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\n      appointmentInstance.option(\"isDragSource\", false);\n    });\n  }\n\n  _setDragSourceAppointment(appointment, settings) {\n    var $appointments = this._findItemElementByItem(appointment);\n\n    var {\n      startDate: startDate,\n      endDate: endDate\n    } = settings.info.sourceAppointment;\n    var {\n      groupIndex: groupIndex\n    } = settings;\n    $appointments.forEach($item => {\n      var {\n        info: itemInfo,\n        groupIndex: itemGroupIndex\n      } = $item.data(APPOINTMENT_SETTINGS_KEY);\n      var {\n        startDate: itemStartDate,\n        endDate: itemEndDate\n      } = itemInfo.sourceAppointment;\n      var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\n      var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\n      appointmentInstance.option(\"isDragSource\", isDragSource);\n    });\n  }\n\n  updateResizableArea() {\n    var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\n    var horizontalResizables = grep($allResizableElements, el => {\n      var $el = $(el);\n      var resizableInst = $el.dxResizable(\"instance\");\n      var {\n        area: area,\n        handles: handles\n      } = resizableInst.option();\n      return (\"right left\" === handles || \"left right\" === handles) && isPlainObject(area);\n    });\n    each(horizontalResizables, (_, el) => {\n      var $el = $(el);\n      var position = locate($el);\n\n      var appointmentData = this._getItemData($el);\n\n      var area = this._calculateResizableArea({\n        left: position.left\n      }, appointmentData);\n\n      $el.dxResizable(\"instance\").option(\"area\", area);\n    });\n  }\n\n}\n\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\nexport default SchedulerAppointments;","map":{"version":3,"names":["_extends","setOuterWidth","setOuterHeight","$","domAdapter","eventsEngine","data","elementData","locate","move","dateUtils","normalizeKey","grep","isDefined","isDeferred","isString","isPlainObject","each","deepExtendArraySafe","wrapToArray","extend","getPublicElement","getRecurrenceProcessor","registerComponent","Appointment","AgendaAppointment","addNamespace","isFakeClickEvent","name","dblclickEvent","CollectionWidget","timeZoneUtils","APPOINTMENT_SETTINGS_KEY","APPOINTMENT_ITEM_CLASS","APPOINTMENT_DRAG_SOURCE_CLASS","createAgendaAppointmentLayout","createAppointmentLayout","ExpressionUtils","createAppointmentAdapter","getAppointmentTakesSeveralDays","sortAppointmentsByStartDate","getBoundingRect","getAppointmentDateRange","COMPONENT_CLASS","DBLCLICK_EVENT_NAME","toMs","dateToMilliseconds","SchedulerAppointments","isAgendaView","invoke","isVirtualScrolling","appointmentDataProvider","option","constructor","element","options","_virtualAppointments","notifyObserver","subject","args","observer","fire","apply","arguments","_dispose","clearTimeout","_appointmentClickTimeout","_supportedKeys","parent","currentAppointment","_$currentAppointment","escape","resizeOccur","_currentAppointment$d","_currentAppointment$d2","_currentAppointment$d3","moveAppointmentBack","dxResizable","_detachEventHandlers","_attachEventHandlers","_toggleResizingClass","bind","del","e","preventDefault","_getItemData","target","tab","appointments","_getAccessAppointments","focusedAppointment","filter","index","sortedIndex","lastIndex","length","shiftKey","$nextAppointment","_getAppointmentByIndex","_resetTabIndex","trigger","_","$item","eq","_itemElements","not","$appointment","_focusTarget","attr","_moveFocus","_renderFocusTarget","_focusInHandler","_focusOutHandler","_eventBindingTarget","_itemContainer","_getDefaultOptions","noDataText","activeStateEnabled","hoverStateEnabled","tabIndex","fixedContainer","allDayContainer","allowDrag","allowResize","allowAllDayResize","onAppointmentDblClick","_collectorOffset","groups","resources","_optionChanged","_cleanFocusState","_clearDropDownItems","_clearDropDownItemsElements","_repaintAppointments","value","_renderDropDownAppointments","_attachAppointmentsEvents","_invalidate","_isAllDayAppointment","appointment","settings","allDay","_isRepaintAppointment","needRepaint","_isRepaintAll","i","_applyFragment","fragment","children","_getAppointmentContainer","append","_onEachAppointment","container","isRepaintAll","needRemove","_clearItem","_renderItem","_renderByFragments","$commonFragment","$allDayFragment","html","_cleanItemContainer","forEach","renderFunction","createDocumentFragment","_attachClickEvent","_attachHoldEvent","_attachContextMenuEvent","_attachAppointmentDblClick","_renderFocusState","_attachFeedbackEvents","_attachHoverEvents","item","$items","_findItemElementByItem","itemData","detach","remove","result","that","itemElements","_itemDataKey","push","_itemClass","$container","$result","$allDayContainer","add","empty","_clean","_initialSize","_initialCoordinates","_init","$element","addClass","_preventSingleAppointmentClick","_renderAppointmentTemplate","model","config","isAllDay","isRecurrence","recurrenceRule","formatText","appointmentData","_currentAppointmentSettings","agendaSettings","targetedAppointmentData","_executeItemRenderAction","itemElement","action","_getItemRenderAction","_itemClickHandler","afterExecute","_processItemClick","event","$target","currentTarget","type","setTimeout","getBody","contains","_extendActionArgs","$itemElement","_render","itemSelector","_itemSelector","itemContainer","off","on","_itemDXEventHandler","_dblClickHandler","$targetAppointment","setting","_getItemContent","$itemFrame","$itemContent","_createItemByTemplate","itemTemplate","renderArgs","render","itemsContainer","_postprocessRenderItem","_renderAppointment","_applyResourceDataAttr","rawAppointment","geometry","skipResizing","virtual","appointmentConfig","groupIndex","deferredColor","_processVirtualAppointment","_settings$info","direction","reduced","appointmentReduced","isCompact","startDate","Date","info","cellWidth","cellHeight","resizableConfig","_resizableConfig","getAppointmentColor","getResourceDataAccessors","agendaResourceProcessor","createPlainResourceListAsync","createListAsync","_createComponent","dataAccessors","getResizableStep","getter","key","prefix","concat","toLowerCase","itemSetting","area","_calculateResizableArea","onResizeStart","updatedArea","component","_renderDragOffsets","width","height","onResizeEnd","_resizeEndHandler","closest","coordinates","left","top","sourceAppointment","dateRange","resizeAllDay","_getEndResizeAppointmentStartDate","endDate","_getDateRange","updateResizedAppointment","timeZoneCalculator","handles","appointmentSettings","isVerticalViewDirection","isVerticalGroupedWorkSpace","appointmentRect","parentAppointmentRect","viewDataProvider","isDateAndTimeView","startDayHour","endDayHour","rtlEnabled","DOMMetaData","modifiedAppointmentAdapter","clone","pathTimeZone","source","appointmentInfo","appointmentAdapter","recurrenceProcessor","startDateTimeZone","isRecurrent","isValidRecurrenceRule","createDate","appointmentTimeZone","path","deltaTime","renderingStrategyDirection","isStartDateChanged","needCorrectDates","startTime","endTime","right","_correctStartDateByDelta","getTime","getTimezoneOffsetChangeInMs","_correctEndDateByDelta","visibleDayDuration","daysCount","Math","ceil","floor","maxDate","minDate","setHours","tailOfCurrentDay","tailOfPrevDays","correctedEndDate","setDate","getDate","lastDay","firstDay","appointmentSetting","color","virtualAppointment","virtualGroupIndex","items","colors","buttonColor","_renderContentImpl","virtualGroup","virtualItems","virtualCoordinates","$fragment","buttonWidth","buttonHeight","rtlOffset","onAppointmentClick","_isGroupCompact","_sortAppointmentsByStartDate","_processRecurrenceAppointment","skipLongAppointments","getField","parts","indexes","dates","appointmentDuration","recurrenceException","startViewDate","endViewDate","timezoneCalculator","recurrentDates","generateDates","rule","exception","start","end","min","max","appointmentTimezoneOffset","getOriginStartDateOffsetInMs","recurrentDateCount","appointmentPart","_applyStartDateToObj","_applyEndDateToObj","_processLongAppointment","splitAppointmentByDay","partCount","_reduceRecurrenceAppointments","recurrenceIndexes","splice","_combineAppointments","additionalAppointments","obj","setField","dragEvent","size","coords","_removeDragSourceClassFromDraggedAppointment","cancel","resolve","focus","focusedElement","originalStartDate","makeDate","maxAllowedDate","adapter","appointmentIsLong","getHours","currentStartDate","currentEndDate","_checkStartDate","_checkEndDate","trimTime","currentDate","originalDate","sameDate","getMinutes","getSeconds","getMilliseconds","$appointments","appointmentInstance","dxSchedulerAppointment","_setDragSourceAppointment","itemInfo","itemGroupIndex","itemStartDate","itemEndDate","isDragSource","updateResizableArea","$allResizableElements","find","horizontalResizables","el","$el","resizableInst","position"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/scheduler/appointments/appointmentCollection.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/appointments/appointmentCollection.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport {\r\n    setOuterWidth,\r\n    setOuterHeight\r\n} from \"../../../core/utils/size\";\r\nimport $ from \"../../../core/renderer\";\r\nimport domAdapter from \"../../../core/dom_adapter\";\r\nimport eventsEngine from \"../../../events/core/events_engine\";\r\nimport {\r\n    data as elementData\r\n} from \"../../../core/element_data\";\r\nimport {\r\n    locate,\r\n    move\r\n} from \"../../../animation/translator\";\r\nimport dateUtils from \"../../../core/utils/date\";\r\nimport {\r\n    normalizeKey,\r\n    grep\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    isDefined,\r\n    isDeferred,\r\n    isString,\r\n    isPlainObject\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    deepExtendArraySafe\r\n} from \"../../../core/utils/object\";\r\nimport {\r\n    wrapToArray\r\n} from \"../../../core/utils/array\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"../recurrence\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    Appointment,\r\n    AgendaAppointment\r\n} from \"./appointment\";\r\nimport {\r\n    addNamespace,\r\n    isFakeClickEvent\r\n} from \"../../../events/utils/index\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../../events/double_click\";\r\nimport CollectionWidget from \"../../collection/ui.collection_widget.edit\";\r\nimport timeZoneUtils from \"../utils.timeZone\";\r\nimport {\r\n    APPOINTMENT_SETTINGS_KEY\r\n} from \"../constants\";\r\nimport {\r\n    APPOINTMENT_ITEM_CLASS,\r\n    APPOINTMENT_DRAG_SOURCE_CLASS\r\n} from \"../classes\";\r\nimport {\r\n    createAgendaAppointmentLayout,\r\n    createAppointmentLayout\r\n} from \"./appointmentLayout\";\r\nimport {\r\n    ExpressionUtils\r\n} from \"../expressionUtils\";\r\nimport {\r\n    createAppointmentAdapter\r\n} from \"../appointmentAdapter\";\r\nimport {\r\n    getAppointmentTakesSeveralDays,\r\n    sortAppointmentsByStartDate\r\n} from \"./dataProvider/utils\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../../core/utils/position\";\r\nimport {\r\n    getAppointmentDateRange\r\n} from \"./resizing/core\";\r\nvar COMPONENT_CLASS = \"dx-scheduler-scrollable-appointments\";\r\nvar DBLCLICK_EVENT_NAME = addNamespace(dblclickEvent, \"dxSchedulerAppointment\");\r\nvar toMs = dateUtils.dateToMilliseconds;\r\nclass SchedulerAppointments extends CollectionWidget {\r\n    get isAgendaView() {\r\n        return this.invoke(\"isCurrentViewAgenda\")\r\n    }\r\n    get isVirtualScrolling() {\r\n        return this.invoke(\"isVirtualScrolling\")\r\n    }\r\n    get appointmentDataProvider() {\r\n        return this.option(\"getAppointmentDataProvider\")()\r\n    }\r\n    constructor(element, options) {\r\n        super(element, options);\r\n        this._virtualAppointments = {}\r\n    }\r\n    notifyObserver(subject, args) {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            observer.fire(subject, args)\r\n        }\r\n    }\r\n    invoke() {\r\n        var observer = this.option(\"observer\");\r\n        if (observer) {\r\n            return observer.fire.apply(observer, arguments)\r\n        }\r\n    }\r\n    _dispose() {\r\n        clearTimeout(this._appointmentClickTimeout);\r\n        super._dispose()\r\n    }\r\n    _supportedKeys() {\r\n        var parent = super._supportedKeys();\r\n        var currentAppointment = this._$currentAppointment;\r\n        return extend(parent, {\r\n            escape: function() {\r\n                if (this.resizeOccur) {\r\n                    var _currentAppointment$d, _currentAppointment$d2, _currentAppointment$d3;\r\n                    this.moveAppointmentBack();\r\n                    this.resizeOccur = false;\r\n                    null === (_currentAppointment$d = currentAppointment.dxResizable(\"instance\")) || void 0 === _currentAppointment$d ? void 0 : _currentAppointment$d._detachEventHandlers();\r\n                    null === (_currentAppointment$d2 = currentAppointment.dxResizable(\"instance\")) || void 0 === _currentAppointment$d2 ? void 0 : _currentAppointment$d2._attachEventHandlers();\r\n                    null === (_currentAppointment$d3 = currentAppointment.dxResizable(\"instance\")) || void 0 === _currentAppointment$d3 ? void 0 : _currentAppointment$d3._toggleResizingClass(false)\r\n                }\r\n            }.bind(this),\r\n            del: function(e) {\r\n                if (this.option(\"allowDelete\")) {\r\n                    e.preventDefault();\r\n                    var data = this._getItemData(e.target);\r\n                    this.notifyObserver(\"onDeleteButtonPress\", {\r\n                        data: data,\r\n                        target: e.target\r\n                    })\r\n                }\r\n            }.bind(this),\r\n            tab: function(e) {\r\n                var appointments = this._getAccessAppointments();\r\n                var focusedAppointment = appointments.filter(\".dx-state-focused\");\r\n                var index = focusedAppointment.data(APPOINTMENT_SETTINGS_KEY).sortedIndex;\r\n                var lastIndex = appointments.length - 1;\r\n                if (index > 0 && e.shiftKey || index < lastIndex && !e.shiftKey) {\r\n                    e.preventDefault();\r\n                    e.shiftKey ? index-- : index++;\r\n                    var $nextAppointment = this._getAppointmentByIndex(index);\r\n                    this._resetTabIndex($nextAppointment);\r\n                    eventsEngine.trigger($nextAppointment, \"focus\")\r\n                }\r\n            }\r\n        })\r\n    }\r\n    _getAppointmentByIndex(sortedIndex) {\r\n        var appointments = this._getAccessAppointments();\r\n        return appointments.filter((function(_, $item) {\r\n            return elementData($item, APPOINTMENT_SETTINGS_KEY).sortedIndex === sortedIndex\r\n        })).eq(0)\r\n    }\r\n    _getAccessAppointments() {\r\n        return this._itemElements().filter(\":visible\").not(\".dx-state-disabled\")\r\n    }\r\n    _resetTabIndex($appointment) {\r\n        this._focusTarget().attr(\"tabIndex\", -1);\r\n        $appointment.attr(\"tabIndex\", this.option(\"tabIndex\"))\r\n    }\r\n    _moveFocus() {}\r\n    _focusTarget() {\r\n        return this._itemElements()\r\n    }\r\n    _renderFocusTarget() {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this._resetTabIndex($appointment)\r\n    }\r\n    _focusInHandler(e) {\r\n        super._focusInHandler(e);\r\n        this._$currentAppointment = $(e.target);\r\n        this.option(\"focusedElement\", getPublicElement($(e.target)))\r\n    }\r\n    _focusOutHandler(e) {\r\n        var $appointment = this._getAppointmentByIndex(0);\r\n        this.option(\"focusedElement\", getPublicElement($appointment));\r\n        super._focusOutHandler(e)\r\n    }\r\n    _eventBindingTarget() {\r\n        return this._itemContainer()\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            noDataText: null,\r\n            activeStateEnabled: true,\r\n            hoverStateEnabled: true,\r\n            tabIndex: 0,\r\n            fixedContainer: null,\r\n            allDayContainer: null,\r\n            allowDrag: true,\r\n            allowResize: true,\r\n            allowAllDayResize: true,\r\n            onAppointmentDblClick: null,\r\n            _collectorOffset: 0,\r\n            groups: [],\r\n            resources: []\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        if (this.option(\"isRenovatedAppointments\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"items\":\r\n                this._cleanFocusState();\r\n                this._clearDropDownItems();\r\n                this._clearDropDownItemsElements();\r\n                this._repaintAppointments(args.value);\r\n                this._renderDropDownAppointments();\r\n                this._attachAppointmentsEvents();\r\n                break;\r\n            case \"fixedContainer\":\r\n            case \"allDayContainer\":\r\n            case \"onAppointmentDblClick\":\r\n                break;\r\n            case \"allowDrag\":\r\n            case \"allowResize\":\r\n            case \"allowAllDayResize\":\r\n                this._invalidate();\r\n                break;\r\n            case \"focusedElement\":\r\n                this._resetTabIndex($(args.value));\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"allowDelete\":\r\n                break;\r\n            case \"focusStateEnabled\":\r\n                this._clearDropDownItemsElements();\r\n                this._renderDropDownAppointments();\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _isAllDayAppointment(appointment) {\r\n        return appointment.settings.length && appointment.settings[0].allDay || false\r\n    }\r\n    _isRepaintAppointment(appointment) {\r\n        return !isDefined(appointment.needRepaint) || true === appointment.needRepaint\r\n    }\r\n    _isRepaintAll(appointments) {\r\n        if (this.isAgendaView) {\r\n            return true\r\n        }\r\n        for (var i = 0; i < appointments.length; i++) {\r\n            if (!this._isRepaintAppointment(appointments[i])) {\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    }\r\n    _applyFragment(fragment, allDay) {\r\n        if (fragment.children().length > 0) {\r\n            this._getAppointmentContainer(allDay).append(fragment)\r\n        }\r\n    }\r\n    _onEachAppointment(appointment, index, container, isRepaintAll) {\r\n        if (true === (null === appointment || void 0 === appointment ? void 0 : appointment.needRemove)) {\r\n            this._clearItem(appointment)\r\n        } else if (isRepaintAll || this._isRepaintAppointment(appointment)) {\r\n            (() => {\r\n                appointment.needRepaint = false;\r\n                this._clearItem(appointment);\r\n                this._renderItem(index, appointment, container)\r\n            })()\r\n        }\r\n    }\r\n    _repaintAppointments(appointments) {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            var isRepaintAll = this._isRepaintAll(appointments);\r\n            if (isRepaintAll) {\r\n                this._getAppointmentContainer(true).html(\"\");\r\n                this._getAppointmentContainer(false).html(\"\")\r\n            }!appointments.length && this._cleanItemContainer();\r\n            appointments.forEach((appointment, index) => {\r\n                var container = this._isAllDayAppointment(appointment) ? $allDayFragment : $commonFragment;\r\n                this._onEachAppointment(appointment, index, container, isRepaintAll)\r\n            })\r\n        })\r\n    }\r\n    _renderByFragments(renderFunction) {\r\n        if (this.isVirtualScrolling) {\r\n            var $commonFragment = $(domAdapter.createDocumentFragment());\r\n            var $allDayFragment = $(domAdapter.createDocumentFragment());\r\n            renderFunction($commonFragment, $allDayFragment);\r\n            this._applyFragment($commonFragment, false);\r\n            this._applyFragment($allDayFragment, true)\r\n        } else {\r\n            renderFunction(this._getAppointmentContainer(false), this._getAppointmentContainer(true))\r\n        }\r\n    }\r\n    _attachAppointmentsEvents() {\r\n        this._attachClickEvent();\r\n        this._attachHoldEvent();\r\n        this._attachContextMenuEvent();\r\n        this._attachAppointmentDblClick();\r\n        this._renderFocusState();\r\n        this._attachFeedbackEvents();\r\n        this._attachHoverEvents()\r\n    }\r\n    _clearItem(item) {\r\n        var $items = this._findItemElementByItem(item.itemData);\r\n        if (!$items.length) {\r\n            return\r\n        }\r\n        each($items, (function(_, $item) {\r\n            $item.detach();\r\n            $item.remove()\r\n        }))\r\n    }\r\n    _clearDropDownItems() {\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clearDropDownItemsElements() {\r\n        this.invoke(\"clearCompactAppointments\")\r\n    }\r\n    _findItemElementByItem(item) {\r\n        var result = [];\r\n        var that = this;\r\n        this.itemElements().each((function() {\r\n            var $item = $(this);\r\n            if ($item.data(that._itemDataKey()) === item) {\r\n                result.push($item)\r\n            }\r\n        }));\r\n        return result\r\n    }\r\n    _itemClass() {\r\n        return APPOINTMENT_ITEM_CLASS\r\n    }\r\n    _itemContainer() {\r\n        var $container = super._itemContainer();\r\n        var $result = $container;\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $result = $container.add($allDayContainer)\r\n        }\r\n        return $result\r\n    }\r\n    _cleanItemContainer() {\r\n        super._cleanItemContainer();\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        if ($allDayContainer) {\r\n            $allDayContainer.empty()\r\n        }\r\n        this._virtualAppointments = {}\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        delete this._$currentAppointment;\r\n        delete this._initialSize;\r\n        delete this._initialCoordinates\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this.$element().addClass(COMPONENT_CLASS);\r\n        this._preventSingleAppointmentClick = false\r\n    }\r\n    _renderAppointmentTemplate($container, appointment, model) {\r\n        var config = {\r\n            isAllDay: appointment.allDay,\r\n            isRecurrence: appointment.recurrenceRule,\r\n            html: isPlainObject(appointment) && appointment.html ? appointment.html : void 0\r\n        };\r\n        var formatText = this.invoke(\"getTextAndFormatDate\", model.appointmentData, this._currentAppointmentSettings.agendaSettings || model.targetedAppointmentData, \"TIME\");\r\n        $container.append(this.isAgendaView ? createAgendaAppointmentLayout(formatText, config) : createAppointmentLayout(formatText, config))\r\n    }\r\n    _executeItemRenderAction(index, itemData, itemElement) {\r\n        var action = this._getItemRenderAction();\r\n        if (action) {\r\n            action(this.invoke(\"mapAppointmentFields\", {\r\n                itemData: itemData,\r\n                itemElement: itemElement\r\n            }))\r\n        }\r\n        delete this._currentAppointmentSettings\r\n    }\r\n    _itemClickHandler(e) {\r\n        super._itemClickHandler(e, {}, {\r\n            afterExecute: function(e) {\r\n                this._processItemClick(e.args[0].event)\r\n            }.bind(this)\r\n        })\r\n    }\r\n    _processItemClick(e) {\r\n        var $target = $(e.currentTarget);\r\n        var data = this._getItemData($target);\r\n        if (\"keydown\" === e.type || isFakeClickEvent(e)) {\r\n            this.notifyObserver(\"showEditAppointmentPopup\", {\r\n                data: data,\r\n                target: $target\r\n            });\r\n            return\r\n        }\r\n        this._appointmentClickTimeout = setTimeout(function() {\r\n            if (!this._preventSingleAppointmentClick && domAdapter.getBody().contains($target[0])) {\r\n                this.notifyObserver(\"showAppointmentTooltip\", {\r\n                    data: data,\r\n                    target: $target\r\n                })\r\n            }\r\n            this._preventSingleAppointmentClick = false\r\n        }.bind(this), 300)\r\n    }\r\n    _extendActionArgs($itemElement) {\r\n        var args = super._extendActionArgs($itemElement);\r\n        return this.invoke(\"mapAppointmentFields\", args)\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._attachAppointmentDblClick()\r\n    }\r\n    _attachAppointmentDblClick() {\r\n        var that = this;\r\n        var itemSelector = that._itemSelector();\r\n        var itemContainer = this._itemContainer();\r\n        eventsEngine.off(itemContainer, DBLCLICK_EVENT_NAME, itemSelector);\r\n        eventsEngine.on(itemContainer, DBLCLICK_EVENT_NAME, itemSelector, (function(e) {\r\n            that._itemDXEventHandler(e, \"onAppointmentDblClick\", {}, {\r\n                afterExecute: function(e) {\r\n                    that._dblClickHandler(e.args[0].event)\r\n                }\r\n            })\r\n        }))\r\n    }\r\n    _dblClickHandler(e) {\r\n        var $targetAppointment = $(e.currentTarget);\r\n        var appointmentData = this._getItemData($targetAppointment);\r\n        clearTimeout(this._appointmentClickTimeout);\r\n        this._preventSingleAppointmentClick = true;\r\n        this.notifyObserver(\"showEditAppointmentPopup\", {\r\n            data: appointmentData,\r\n            target: $targetAppointment\r\n        })\r\n    }\r\n    _renderItem(index, item, container) {\r\n        var itemData = item.itemData;\r\n        var $items = [];\r\n        for (var i = 0; i < item.settings.length; i++) {\r\n            var setting = item.settings[i];\r\n            this._currentAppointmentSettings = setting;\r\n            var $item = super._renderItem(index, itemData, container);\r\n            $item.data(APPOINTMENT_SETTINGS_KEY, setting);\r\n            $items.push($item)\r\n        }\r\n        return $items\r\n    }\r\n    _getItemContent($itemFrame) {\r\n        $itemFrame.data(APPOINTMENT_SETTINGS_KEY, this._currentAppointmentSettings);\r\n        var $itemContent = super._getItemContent($itemFrame);\r\n        return $itemContent\r\n    }\r\n    _createItemByTemplate(itemTemplate, renderArgs) {\r\n        var {\r\n            itemData: itemData,\r\n            container: container,\r\n            index: index\r\n        } = renderArgs;\r\n        return itemTemplate.render({\r\n            model: {\r\n                appointmentData: itemData,\r\n                targetedAppointmentData: this.invoke(\"getTargetedAppointmentData\", itemData, $(container).parent())\r\n            },\r\n            container: container,\r\n            index: index\r\n        })\r\n    }\r\n    _getAppointmentContainer(allDay) {\r\n        var $allDayContainer = this.option(\"allDayContainer\");\r\n        var $container = this.itemsContainer().not($allDayContainer);\r\n        if (allDay && $allDayContainer) {\r\n            $container = $allDayContainer\r\n        }\r\n        return $container\r\n    }\r\n    _postprocessRenderItem(args) {\r\n        this._renderAppointment(args.itemElement, this._currentAppointmentSettings)\r\n    }\r\n    _renderAppointment(element, settings) {\r\n        element.data(APPOINTMENT_SETTINGS_KEY, settings);\r\n        this._applyResourceDataAttr(element);\r\n        var rawAppointment = this._getItemData(element);\r\n        var geometry = this.invoke(\"getAppointmentGeometry\", settings);\r\n        var allowResize = this.option(\"allowResize\") && (!isDefined(settings.skipResizing) || isString(settings.skipResizing));\r\n        var allowDrag = this.option(\"allowDrag\");\r\n        var allDay = settings.allDay;\r\n        this.invoke(\"setCellDataCacheAlias\", this._currentAppointmentSettings, geometry);\r\n        if (settings.virtual) {\r\n            var appointmentConfig = {\r\n                itemData: rawAppointment,\r\n                groupIndex: settings.groupIndex,\r\n                groups: this.option(\"groups\")\r\n            };\r\n            var deferredColor = this.option(\"getAppointmentColor\")(appointmentConfig);\r\n            this._processVirtualAppointment(settings, element, rawAppointment, deferredColor)\r\n        } else {\r\n            var _settings$info;\r\n            var config = {\r\n                data: rawAppointment,\r\n                groupIndex: settings.groupIndex,\r\n                observer: this.option(\"observer\"),\r\n                geometry: geometry,\r\n                direction: settings.direction || \"vertical\",\r\n                allowResize: allowResize,\r\n                allowDrag: allowDrag,\r\n                allDay: allDay,\r\n                reduced: settings.appointmentReduced,\r\n                isCompact: settings.isCompact,\r\n                startDate: new Date(null === (_settings$info = settings.info) || void 0 === _settings$info ? void 0 : _settings$info.appointment.startDate),\r\n                cellWidth: this.invoke(\"getCellWidth\"),\r\n                cellHeight: this.invoke(\"getCellHeight\"),\r\n                resizableConfig: this._resizableConfig(rawAppointment, settings),\r\n                groups: this.option(\"groups\"),\r\n                getAppointmentColor: this.option(\"getAppointmentColor\"),\r\n                getResourceDataAccessors: this.option(\"getResourceDataAccessors\")\r\n            };\r\n            if (this.isAgendaView) {\r\n                var agendaResourceProcessor = this.option(\"getAgendaResourceProcessor\")();\r\n                config.createPlainResourceListAsync = rawAppointment => agendaResourceProcessor.createListAsync(rawAppointment)\r\n            }\r\n            this._createComponent(element, this.isAgendaView ? AgendaAppointment : Appointment, _extends({}, config, {\r\n                dataAccessors: this.option(\"dataAccessors\"),\r\n                getResizableStep: this.option(\"getResizableStep\")\r\n            }))\r\n        }\r\n    }\r\n    _applyResourceDataAttr($appointment) {\r\n        var dataAccessors = this.option(\"getResourceDataAccessors\")();\r\n        var rawAppointment = this._getItemData($appointment);\r\n        each(dataAccessors.getter, (function(key) {\r\n            var value = dataAccessors.getter[key](rawAppointment);\r\n            if (isDefined(value)) {\r\n                var prefix = \"data-\".concat(normalizeKey(key.toLowerCase()), \"-\");\r\n                wrapToArray(value).forEach(value => $appointment.attr(prefix + normalizeKey(value), true))\r\n            }\r\n        }))\r\n    }\r\n    _resizableConfig(appointmentData, itemSetting) {\r\n        return {\r\n            area: this._calculateResizableArea(itemSetting, appointmentData),\r\n            onResizeStart: function(e) {\r\n                this.resizeOccur = true;\r\n                this._$currentAppointment = $(e.element);\r\n                if (this.invoke(\"needRecalculateResizableArea\")) {\r\n                    var updatedArea = this._calculateResizableArea(this._$currentAppointment.data(APPOINTMENT_SETTINGS_KEY), this._$currentAppointment.data(\"dxItemData\"));\r\n                    e.component.option(\"area\", updatedArea);\r\n                    e.component._renderDragOffsets(e.event)\r\n                }\r\n                this._initialSize = {\r\n                    width: e.width,\r\n                    height: e.height\r\n                };\r\n                this._initialCoordinates = locate(this._$currentAppointment)\r\n            }.bind(this),\r\n            onResizeEnd: function(e) {\r\n                this.resizeOccur = false;\r\n                this._resizeEndHandler(e)\r\n            }.bind(this)\r\n        }\r\n    }\r\n    _calculateResizableArea(itemSetting, appointmentData) {\r\n        var area = this.$element().closest(\".dx-scrollable-content\");\r\n        return this.invoke(\"getResizableAppointmentArea\", {\r\n            coordinates: {\r\n                left: itemSetting.left,\r\n                top: 0,\r\n                groupIndex: itemSetting.groupIndex\r\n            },\r\n            allDay: itemSetting.allDay\r\n        }) || area\r\n    }\r\n    _resizeEndHandler(e) {\r\n        var $element = $(e.element);\r\n        var {\r\n            allDay: allDay,\r\n            info: info\r\n        } = $element.data(\"dxAppointmentSettings\");\r\n        var sourceAppointment = this._getItemData($element);\r\n        var dateRange = {};\r\n        if (allDay) {\r\n            dateRange = this.resizeAllDay(e)\r\n        } else {\r\n            var startDate = this._getEndResizeAppointmentStartDate(e, sourceAppointment, info.appointment);\r\n            var endDate = info.appointment.endDate;\r\n            dateRange = this._getDateRange(e, startDate, endDate)\r\n        }\r\n        this.updateResizedAppointment($element, dateRange, this.option(\"dataAccessors\"), this.option(\"timeZoneCalculator\"))\r\n    }\r\n    resizeAllDay(e) {\r\n        var $element = $(e.element);\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var dataAccessors = this.option(\"dataAccessors\");\r\n        return getAppointmentDateRange({\r\n            handles: e.handles,\r\n            appointmentSettings: $element.data(\"dxAppointmentSettings\"),\r\n            isVerticalViewDirection: this.option(\"isVerticalViewDirection\")(),\r\n            isVerticalGroupedWorkSpace: this.option(\"isVerticalGroupedWorkSpace\")(),\r\n            appointmentRect: getBoundingRect($element[0]),\r\n            parentAppointmentRect: getBoundingRect($element.parent()[0]),\r\n            viewDataProvider: this.option(\"getViewDataProvider\")(),\r\n            isDateAndTimeView: this.option(\"isDateAndTimeView\")(),\r\n            startDayHour: this.invoke(\"getStartDayHour\"),\r\n            endDayHour: this.invoke(\"getEndDayHour\"),\r\n            timeZoneCalculator: timeZoneCalculator,\r\n            dataAccessors: dataAccessors,\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            DOMMetaData: this.option(\"getDOMElementsMetaData\")()\r\n        })\r\n    }\r\n    updateResizedAppointment($element, dateRange, dataAccessors, timeZoneCalculator) {\r\n        var sourceAppointment = this._getItemData($element);\r\n        var modifiedAppointmentAdapter = createAppointmentAdapter(sourceAppointment, dataAccessors, timeZoneCalculator).clone();\r\n        modifiedAppointmentAdapter.startDate = new Date(dateRange.startDate);\r\n        modifiedAppointmentAdapter.endDate = new Date(dateRange.endDate);\r\n        this.notifyObserver(\"updateAppointmentAfterResize\", {\r\n            target: sourceAppointment,\r\n            data: modifiedAppointmentAdapter.clone({\r\n                pathTimeZone: \"fromGrid\"\r\n            }).source(),\r\n            $appointment: $element\r\n        })\r\n    }\r\n    _getEndResizeAppointmentStartDate(e, rawAppointment, appointmentInfo) {\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var appointmentAdapter = createAppointmentAdapter(rawAppointment, this.option(\"dataAccessors\"), timeZoneCalculator);\r\n        var startDate = appointmentInfo.startDate;\r\n        var recurrenceProcessor = getRecurrenceProcessor();\r\n        var {\r\n            recurrenceRule: recurrenceRule,\r\n            startDateTimeZone: startDateTimeZone\r\n        } = appointmentAdapter;\r\n        var isAllDay = this.invoke(\"isAllDay\", rawAppointment);\r\n        var isRecurrent = recurrenceProcessor.isValidRecurrenceRule(recurrenceRule);\r\n        if (!e.handles.top && !isRecurrent && !isAllDay) {\r\n            startDate = timeZoneCalculator.createDate(appointmentAdapter.startDate, {\r\n                appointmentTimeZone: startDateTimeZone,\r\n                path: \"toGrid\"\r\n            })\r\n        }\r\n        return startDate\r\n    }\r\n    _getDateRange(e, startDate, endDate) {\r\n        var itemData = this._getItemData(e.element);\r\n        var deltaTime = this.invoke(\"getDeltaTime\", e, this._initialSize, itemData);\r\n        var renderingStrategyDirection = this.invoke(\"getRenderingStrategyDirection\");\r\n        var isStartDateChanged = false;\r\n        var isAllDay = this.invoke(\"isAllDay\", itemData);\r\n        var needCorrectDates = this.invoke(\"needCorrectAppointmentDates\") && !isAllDay;\r\n        var startTime;\r\n        var endTime;\r\n        if (\"vertical\" !== renderingStrategyDirection || isAllDay) {\r\n            isStartDateChanged = this.option(\"rtlEnabled\") ? e.handles.right : e.handles.left\r\n        } else {\r\n            isStartDateChanged = e.handles.top\r\n        }\r\n        if (isStartDateChanged) {\r\n            startTime = needCorrectDates ? this._correctStartDateByDelta(startDate, deltaTime) : startDate.getTime() - deltaTime;\r\n            startTime += timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startTime, endDate);\r\n            endTime = endDate.getTime()\r\n        } else {\r\n            startTime = startDate.getTime();\r\n            endTime = needCorrectDates ? this._correctEndDateByDelta(endDate, deltaTime) : endDate.getTime() + deltaTime;\r\n            endTime -= timeZoneUtils.getTimezoneOffsetChangeInMs(startDate, endDate, startDate, endTime)\r\n        }\r\n        return {\r\n            startDate: new Date(startTime),\r\n            endDate: new Date(endTime)\r\n        }\r\n    }\r\n    _correctEndDateByDelta(endDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = endDate.getTime() + deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(endDate);\r\n        var minDate = new Date(endDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result > maxDate.getTime() || result <= minDate.getTime()) {\r\n            var tailOfCurrentDay = maxDate.getTime() - endDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var correctedEndDate = new Date(endDate).setDate(endDate.getDate() + daysCount);\r\n            var lastDay = new Date(correctedEndDate);\r\n            lastDay.setHours(startDayHour, 0, 0, 0);\r\n            result = lastDay.getTime() + tailOfPrevDays - visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _correctStartDateByDelta(startDate, deltaTime) {\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var result = startDate.getTime() - deltaTime;\r\n        var visibleDayDuration = (endDayHour - startDayHour) * toMs(\"hour\");\r\n        var daysCount = deltaTime > 0 ? Math.ceil(deltaTime / visibleDayDuration) : Math.floor(deltaTime / visibleDayDuration);\r\n        var maxDate = new Date(startDate);\r\n        var minDate = new Date(startDate);\r\n        minDate.setHours(startDayHour, 0, 0, 0);\r\n        maxDate.setHours(endDayHour, 0, 0, 0);\r\n        if (result < minDate.getTime() || result >= maxDate.getTime()) {\r\n            var tailOfCurrentDay = startDate.getTime() - minDate.getTime();\r\n            var tailOfPrevDays = deltaTime - tailOfCurrentDay;\r\n            var firstDay = new Date(startDate.setDate(startDate.getDate() - daysCount));\r\n            firstDay.setHours(endDayHour, 0, 0, 0);\r\n            result = firstDay.getTime() - tailOfPrevDays + visibleDayDuration * (daysCount - 1)\r\n        }\r\n        return result\r\n    }\r\n    _processVirtualAppointment(appointmentSetting, $appointment, appointmentData, color) {\r\n        var virtualAppointment = appointmentSetting.virtual;\r\n        var virtualGroupIndex = virtualAppointment.index;\r\n        if (!isDefined(this._virtualAppointments[virtualGroupIndex])) {\r\n            this._virtualAppointments[virtualGroupIndex] = {\r\n                coordinates: {\r\n                    top: virtualAppointment.top,\r\n                    left: virtualAppointment.left\r\n                },\r\n                items: {\r\n                    data: [],\r\n                    colors: [],\r\n                    settings: []\r\n                },\r\n                isAllDay: virtualAppointment.isAllDay ? true : false,\r\n                buttonColor: color\r\n            }\r\n        }\r\n        appointmentSetting.targetedAppointmentData = this.invoke(\"getTargetedAppointmentData\", appointmentData, $appointment);\r\n        this._virtualAppointments[virtualGroupIndex].items.settings.push(appointmentSetting);\r\n        this._virtualAppointments[virtualGroupIndex].items.data.push(appointmentData);\r\n        this._virtualAppointments[virtualGroupIndex].items.colors.push(color);\r\n        $appointment.remove()\r\n    }\r\n    _renderContentImpl() {\r\n        super._renderContentImpl();\r\n        this._renderDropDownAppointments()\r\n    }\r\n    _renderDropDownAppointments() {\r\n        this._renderByFragments(($commonFragment, $allDayFragment) => {\r\n            each(this._virtualAppointments, function(groupIndex) {\r\n                var virtualGroup = this._virtualAppointments[groupIndex];\r\n                var virtualItems = virtualGroup.items;\r\n                var virtualCoordinates = virtualGroup.coordinates;\r\n                var $fragment = virtualGroup.isAllDay ? $allDayFragment : $commonFragment;\r\n                var left = virtualCoordinates.left;\r\n                var buttonWidth = this.invoke(\"getDropDownAppointmentWidth\", virtualGroup.isAllDay);\r\n                var buttonHeight = this.invoke(\"getDropDownAppointmentHeight\");\r\n                var rtlOffset = this.option(\"rtlEnabled\") ? buttonWidth : 0;\r\n                this.notifyObserver(\"renderCompactAppointments\", {\r\n                    $container: $fragment,\r\n                    coordinates: {\r\n                        top: virtualCoordinates.top,\r\n                        left: left + rtlOffset\r\n                    },\r\n                    items: virtualItems,\r\n                    buttonColor: virtualGroup.buttonColor,\r\n                    width: buttonWidth - this.option(\"_collectorOffset\"),\r\n                    height: buttonHeight,\r\n                    onAppointmentClick: this.option(\"onItemClick\"),\r\n                    allowDrag: this.option(\"allowDrag\"),\r\n                    cellWidth: this.invoke(\"getCellWidth\"),\r\n                    isCompact: this.invoke(\"isAdaptive\") || this._isGroupCompact(virtualGroup)\r\n                })\r\n            }.bind(this))\r\n        })\r\n    }\r\n    _isGroupCompact(virtualGroup) {\r\n        return !virtualGroup.isAllDay && this.invoke(\"supportCompactDropDownAppointments\")\r\n    }\r\n    _sortAppointmentsByStartDate(appointments) {\r\n        return sortAppointmentsByStartDate(appointments, this.option(\"dataAccessors\"))\r\n    }\r\n    _processRecurrenceAppointment(appointment, index, skipLongAppointments) {\r\n        var recurrenceRule = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceRule\", appointment);\r\n        var result = {\r\n            parts: [],\r\n            indexes: []\r\n        };\r\n        if (recurrenceRule) {\r\n            var dates = appointment.settings || appointment;\r\n            var startDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", dates));\r\n            var startDateTimeZone = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDateTimeZone\", appointment);\r\n            var endDate = new Date(ExpressionUtils.getField(this.option(\"dataAccessors\"), \"endDate\", dates));\r\n            var appointmentDuration = endDate.getTime() - startDate.getTime();\r\n            var recurrenceException = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"recurrenceException\", appointment);\r\n            var startViewDate = this.invoke(\"getStartViewDate\");\r\n            var endViewDate = this.invoke(\"getEndViewDate\");\r\n            var timezoneCalculator = this.option(\"timeZoneCalculator\");\r\n            var recurrentDates = getRecurrenceProcessor().generateDates({\r\n                rule: recurrenceRule,\r\n                exception: recurrenceException,\r\n                start: startDate,\r\n                end: endDate,\r\n                min: startViewDate,\r\n                max: endViewDate,\r\n                appointmentTimezoneOffset: timezoneCalculator.getOriginStartDateOffsetInMs(startDate, startDateTimeZone, false)\r\n            });\r\n            var recurrentDateCount = appointment.settings ? 1 : recurrentDates.length;\r\n            for (var i = 0; i < recurrentDateCount; i++) {\r\n                var appointmentPart = extend({}, appointment, true);\r\n                if (recurrentDates[i]) {\r\n                    var appointmentSettings = this._applyStartDateToObj(recurrentDates[i], {});\r\n                    this._applyEndDateToObj(new Date(recurrentDates[i].getTime() + appointmentDuration), appointmentSettings);\r\n                    appointmentPart.settings = appointmentSettings\r\n                } else {\r\n                    appointmentPart.settings = dates\r\n                }\r\n                result.parts.push(appointmentPart);\r\n                if (!skipLongAppointments) {\r\n                    this._processLongAppointment(appointmentPart, result)\r\n                }\r\n            }\r\n            result.indexes.push(index)\r\n        }\r\n        return result\r\n    }\r\n    _processLongAppointment(appointment, result) {\r\n        var parts = this.splitAppointmentByDay(appointment);\r\n        var partCount = parts.length;\r\n        var endViewDate = this.invoke(\"getEndViewDate\").getTime();\r\n        var startViewDate = this.invoke(\"getStartViewDate\").getTime();\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        result = result || {\r\n            parts: []\r\n        };\r\n        if (partCount > 1) {\r\n            extend(appointment, parts[0]);\r\n            for (var i = 1; i < partCount; i++) {\r\n                var startDate = ExpressionUtils.getField(this.option(\"dataAccessors\"), \"startDate\", parts[i].settings).getTime();\r\n                startDate = timeZoneCalculator.createDate(startDate, {\r\n                    path: \"toGrid\"\r\n                });\r\n                if (startDate < endViewDate && startDate > startViewDate) {\r\n                    result.parts.push(parts[i])\r\n                }\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _reduceRecurrenceAppointments(recurrenceIndexes, appointments) {\r\n        each(recurrenceIndexes, (function(i, index) {\r\n            appointments.splice(index - i, 1)\r\n        }))\r\n    }\r\n    _combineAppointments(appointments, additionalAppointments) {\r\n        if (additionalAppointments.length) {\r\n            appointments.push(...additionalAppointments)\r\n        }\r\n        this._sortAppointmentsByStartDate(appointments)\r\n    }\r\n    _applyStartDateToObj(startDate, obj) {\r\n        ExpressionUtils.setField(this.option(\"dataAccessors\"), \"startDate\", obj, startDate);\r\n        return obj\r\n    }\r\n    _applyEndDateToObj(endDate, obj) {\r\n        ExpressionUtils.setField(this.option(\"dataAccessors\"), \"endDate\", obj, endDate);\r\n        return obj\r\n    }\r\n    moveAppointmentBack(dragEvent) {\r\n        var $appointment = this._$currentAppointment;\r\n        var size = this._initialSize;\r\n        var coords = this._initialCoordinates;\r\n        if (dragEvent) {\r\n            this._removeDragSourceClassFromDraggedAppointment();\r\n            if (isDeferred(dragEvent.cancel)) {\r\n                dragEvent.cancel.resolve(true)\r\n            } else {\r\n                dragEvent.cancel = true\r\n            }\r\n        }\r\n        if ($appointment && !dragEvent) {\r\n            if (coords) {\r\n                move($appointment, coords);\r\n                delete this._initialSize\r\n            }\r\n            if (size) {\r\n                setOuterWidth($appointment, size.width);\r\n                setOuterHeight($appointment, size.height);\r\n                delete this._initialCoordinates\r\n            }\r\n        }\r\n    }\r\n    focus() {\r\n        if (this._$currentAppointment) {\r\n            var focusedElement = getPublicElement(this._$currentAppointment);\r\n            this.option(\"focusedElement\", focusedElement);\r\n            eventsEngine.trigger(focusedElement, \"focus\")\r\n        }\r\n    }\r\n    splitAppointmentByDay(appointment) {\r\n        var dates = appointment.settings || appointment;\r\n        var dataAccessors = this.option(\"dataAccessors\");\r\n        var originalStartDate = new Date(ExpressionUtils.getField(dataAccessors, \"startDate\", dates));\r\n        var startDate = dateUtils.makeDate(originalStartDate);\r\n        var endDate = dateUtils.makeDate(ExpressionUtils.getField(dataAccessors, \"endDate\", dates));\r\n        var maxAllowedDate = this.invoke(\"getEndViewDate\");\r\n        var startDayHour = this.invoke(\"getStartDayHour\");\r\n        var endDayHour = this.invoke(\"getEndDayHour\");\r\n        var timeZoneCalculator = this.option(\"timeZoneCalculator\");\r\n        var adapter = createAppointmentAdapter(appointment, dataAccessors, timeZoneCalculator);\r\n        var appointmentIsLong = getAppointmentTakesSeveralDays(adapter);\r\n        var result = [];\r\n        startDate = timeZoneCalculator.createDate(startDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        endDate = timeZoneCalculator.createDate(endDate, {\r\n            path: \"toGrid\"\r\n        });\r\n        if (startDate.getHours() <= endDayHour && startDate.getHours() >= startDayHour && !appointmentIsLong) {\r\n            result.push(this._applyStartDateToObj(new Date(startDate), {\r\n                appointmentData: appointment\r\n            }));\r\n            startDate.setDate(startDate.getDate() + 1)\r\n        }\r\n        while (appointmentIsLong && startDate.getTime() < endDate.getTime() && startDate < maxAllowedDate) {\r\n            var currentStartDate = new Date(startDate);\r\n            var currentEndDate = new Date(startDate);\r\n            this._checkStartDate(currentStartDate, originalStartDate, startDayHour);\r\n            this._checkEndDate(currentEndDate, endDate, endDayHour);\r\n            var appointmentData = deepExtendArraySafe({}, appointment, true);\r\n            var appointmentSettings = {};\r\n            this._applyStartDateToObj(currentStartDate, appointmentSettings);\r\n            this._applyEndDateToObj(currentEndDate, appointmentSettings);\r\n            appointmentData.settings = appointmentSettings;\r\n            result.push(appointmentData);\r\n            startDate = dateUtils.trimTime(startDate);\r\n            startDate.setDate(startDate.getDate() + 1);\r\n            startDate.setHours(startDayHour)\r\n        }\r\n        return result\r\n    }\r\n    _checkStartDate(currentDate, originalDate, startDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() <= startDayHour) {\r\n            currentDate.setHours(startDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _checkEndDate(currentDate, originalDate, endDayHour) {\r\n        if (!dateUtils.sameDate(currentDate, originalDate) || currentDate.getHours() > endDayHour) {\r\n            currentDate.setHours(endDayHour, 0, 0, 0)\r\n        } else {\r\n            currentDate.setHours(originalDate.getHours(), originalDate.getMinutes(), originalDate.getSeconds(), originalDate.getMilliseconds())\r\n        }\r\n    }\r\n    _removeDragSourceClassFromDraggedAppointment() {\r\n        var $appointments = this._itemElements().filter(\".\".concat(APPOINTMENT_DRAG_SOURCE_CLASS));\r\n        $appointments.each((_, element) => {\r\n            var appointmentInstance = $(element).dxSchedulerAppointment(\"instance\");\r\n            appointmentInstance.option(\"isDragSource\", false)\r\n        })\r\n    }\r\n    _setDragSourceAppointment(appointment, settings) {\r\n        var $appointments = this._findItemElementByItem(appointment);\r\n        var {\r\n            startDate: startDate,\r\n            endDate: endDate\r\n        } = settings.info.sourceAppointment;\r\n        var {\r\n            groupIndex: groupIndex\r\n        } = settings;\r\n        $appointments.forEach($item => {\r\n            var {\r\n                info: itemInfo,\r\n                groupIndex: itemGroupIndex\r\n            } = $item.data(APPOINTMENT_SETTINGS_KEY);\r\n            var {\r\n                startDate: itemStartDate,\r\n                endDate: itemEndDate\r\n            } = itemInfo.sourceAppointment;\r\n            var appointmentInstance = $item.dxSchedulerAppointment(\"instance\");\r\n            var isDragSource = startDate.getTime() === itemStartDate.getTime() && endDate.getTime() === itemEndDate.getTime() && groupIndex === itemGroupIndex;\r\n            appointmentInstance.option(\"isDragSource\", isDragSource)\r\n        })\r\n    }\r\n    updateResizableArea() {\r\n        var $allResizableElements = this.$element().find(\".dx-scheduler-appointment.dx-resizable\");\r\n        var horizontalResizables = grep($allResizableElements, el => {\r\n            var $el = $(el);\r\n            var resizableInst = $el.dxResizable(\"instance\");\r\n            var {\r\n                area: area,\r\n                handles: handles\r\n            } = resizableInst.option();\r\n            return (\"right left\" === handles || \"left right\" === handles) && isPlainObject(area)\r\n        });\r\n        each(horizontalResizables, (_, el) => {\r\n            var $el = $(el);\r\n            var position = locate($el);\r\n            var appointmentData = this._getItemData($el);\r\n            var area = this._calculateResizableArea({\r\n                left: position.left\r\n            }, appointmentData);\r\n            $el.dxResizable(\"instance\").option(\"area\", area)\r\n        })\r\n    }\r\n}\r\nregisterComponent(\"dxSchedulerAppointments\", SchedulerAppointments);\r\nexport default SchedulerAppointments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}