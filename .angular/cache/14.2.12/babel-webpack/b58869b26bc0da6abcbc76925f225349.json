{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { datetime, getWeekday, isLeapYear, toOrdinal } from '../dateutil';\nimport { empty, repeat, pymod, includes } from '../helpers';\nimport { M365MASK, MDAY365MASK, NMDAY365MASK, WDAYMASK, M365RANGE, M366MASK, MDAY366MASK, NMDAY366MASK, M366RANGE } from '../masks';\nexport function rebuildYear(year, options) {\n  var firstyday = datetime(year, 1, 1);\n  var yearlen = isLeapYear(year) ? 366 : 365;\n  var nextyearlen = isLeapYear(year + 1) ? 366 : 365;\n  var yearordinal = toOrdinal(firstyday);\n  var yearweekday = getWeekday(firstyday);\n\n  var result = __assign(__assign({\n    yearlen: yearlen,\n    nextyearlen: nextyearlen,\n    yearordinal: yearordinal,\n    yearweekday: yearweekday\n  }, baseYearMasks(year)), {\n    wnomask: null\n  });\n\n  if (empty(options.byweekno)) {\n    return result;\n  }\n\n  result.wnomask = repeat(0, yearlen + 7);\n  var firstwkst;\n  var wyearlen;\n  var no1wkst = firstwkst = pymod(7 - yearweekday + options.wkst, 7);\n\n  if (no1wkst >= 4) {\n    no1wkst = 0; // Number of days in the year, plus the days we got\n    // from last year.\n\n    wyearlen = result.yearlen + pymod(yearweekday - options.wkst, 7);\n  } else {\n    // Number of days in the year, minus the days we\n    // left in last year.\n    wyearlen = yearlen - no1wkst;\n  }\n\n  var div = Math.floor(wyearlen / 7);\n  var mod = pymod(wyearlen, 7);\n  var numweeks = Math.floor(div + mod / 4);\n\n  for (var j = 0; j < options.byweekno.length; j++) {\n    var n = options.byweekno[j];\n\n    if (n < 0) {\n      n += numweeks + 1;\n    }\n\n    if (!(n > 0 && n <= numweeks)) {\n      continue;\n    }\n\n    var i = void 0;\n\n    if (n > 1) {\n      i = no1wkst + (n - 1) * 7;\n\n      if (no1wkst !== firstwkst) {\n        i -= 7 - firstwkst;\n      }\n    } else {\n      i = no1wkst;\n    }\n\n    for (var k = 0; k < 7; k++) {\n      result.wnomask[i] = 1;\n      i++;\n      if (result.wdaymask[i] === options.wkst) break;\n    }\n  }\n\n  if (includes(options.byweekno, 1)) {\n    // Check week number 1 of next year as well\n    // orig-TODO : Check -numweeks for next year.\n    var i = no1wkst + numweeks * 7;\n    if (no1wkst !== firstwkst) i -= 7 - firstwkst;\n\n    if (i < yearlen) {\n      // If week starts in next year, we\n      // don't care about it.\n      for (var j = 0; j < 7; j++) {\n        result.wnomask[i] = 1;\n        i += 1;\n        if (result.wdaymask[i] === options.wkst) break;\n      }\n    }\n  }\n\n  if (no1wkst) {\n    // Check last week number of last year as\n    // well. If no1wkst is 0, either the year\n    // started on week start, or week number 1\n    // got days from last year, so there are no\n    // days from last year's last week number in\n    // this year.\n    var lnumweeks = void 0;\n\n    if (!includes(options.byweekno, -1)) {\n      var lyearweekday = getWeekday(datetime(year - 1, 1, 1));\n      var lno1wkst = pymod(7 - lyearweekday.valueOf() + options.wkst, 7);\n      var lyearlen = isLeapYear(year - 1) ? 366 : 365;\n      var weekst = void 0;\n\n      if (lno1wkst >= 4) {\n        lno1wkst = 0;\n        weekst = lyearlen + pymod(lyearweekday - options.wkst, 7);\n      } else {\n        weekst = yearlen - no1wkst;\n      }\n\n      lnumweeks = Math.floor(52 + pymod(weekst, 7) / 4);\n    } else {\n      lnumweeks = -1;\n    }\n\n    if (includes(options.byweekno, lnumweeks)) {\n      for (var i = 0; i < no1wkst; i++) result.wnomask[i] = 1;\n    }\n  }\n\n  return result;\n}\n\nfunction baseYearMasks(year) {\n  var yearlen = isLeapYear(year) ? 366 : 365;\n  var firstyday = datetime(year, 1, 1);\n  var wday = getWeekday(firstyday);\n\n  if (yearlen === 365) {\n    return {\n      mmask: M365MASK,\n      mdaymask: MDAY365MASK,\n      nmdaymask: NMDAY365MASK,\n      wdaymask: WDAYMASK.slice(wday),\n      mrange: M365RANGE\n    };\n  }\n\n  return {\n    mmask: M366MASK,\n    mdaymask: MDAY366MASK,\n    nmdaymask: NMDAY366MASK,\n    wdaymask: WDAYMASK.slice(wday),\n    mrange: M366RANGE\n  };\n}","map":{"version":3,"names":["__assign","datetime","getWeekday","isLeapYear","toOrdinal","empty","repeat","pymod","includes","M365MASK","MDAY365MASK","NMDAY365MASK","WDAYMASK","M365RANGE","M366MASK","MDAY366MASK","NMDAY366MASK","M366RANGE","rebuildYear","year","options","firstyday","yearlen","nextyearlen","yearordinal","yearweekday","result","baseYearMasks","wnomask","byweekno","firstwkst","wyearlen","no1wkst","wkst","div","Math","floor","mod","numweeks","j","length","n","i","k","wdaymask","lnumweeks","lyearweekday","lno1wkst","valueOf","lyearlen","weekst","wday","mmask","mdaymask","nmdaymask","slice","mrange"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/rrule/dist/esm/iterinfo/yearinfo.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { datetime, getWeekday, isLeapYear, toOrdinal } from '../dateutil';\nimport { empty, repeat, pymod, includes } from '../helpers';\nimport { M365MASK, MDAY365MASK, NMDAY365MASK, WDAYMASK, M365RANGE, M366MASK, MDAY366MASK, NMDAY366MASK, M366RANGE, } from '../masks';\nexport function rebuildYear(year, options) {\n    var firstyday = datetime(year, 1, 1);\n    var yearlen = isLeapYear(year) ? 366 : 365;\n    var nextyearlen = isLeapYear(year + 1) ? 366 : 365;\n    var yearordinal = toOrdinal(firstyday);\n    var yearweekday = getWeekday(firstyday);\n    var result = __assign(__assign({ yearlen: yearlen, nextyearlen: nextyearlen, yearordinal: yearordinal, yearweekday: yearweekday }, baseYearMasks(year)), { wnomask: null });\n    if (empty(options.byweekno)) {\n        return result;\n    }\n    result.wnomask = repeat(0, yearlen + 7);\n    var firstwkst;\n    var wyearlen;\n    var no1wkst = (firstwkst = pymod(7 - yearweekday + options.wkst, 7));\n    if (no1wkst >= 4) {\n        no1wkst = 0;\n        // Number of days in the year, plus the days we got\n        // from last year.\n        wyearlen = result.yearlen + pymod(yearweekday - options.wkst, 7);\n    }\n    else {\n        // Number of days in the year, minus the days we\n        // left in last year.\n        wyearlen = yearlen - no1wkst;\n    }\n    var div = Math.floor(wyearlen / 7);\n    var mod = pymod(wyearlen, 7);\n    var numweeks = Math.floor(div + mod / 4);\n    for (var j = 0; j < options.byweekno.length; j++) {\n        var n = options.byweekno[j];\n        if (n < 0) {\n            n += numweeks + 1;\n        }\n        if (!(n > 0 && n <= numweeks)) {\n            continue;\n        }\n        var i = void 0;\n        if (n > 1) {\n            i = no1wkst + (n - 1) * 7;\n            if (no1wkst !== firstwkst) {\n                i -= 7 - firstwkst;\n            }\n        }\n        else {\n            i = no1wkst;\n        }\n        for (var k = 0; k < 7; k++) {\n            result.wnomask[i] = 1;\n            i++;\n            if (result.wdaymask[i] === options.wkst)\n                break;\n        }\n    }\n    if (includes(options.byweekno, 1)) {\n        // Check week number 1 of next year as well\n        // orig-TODO : Check -numweeks for next year.\n        var i = no1wkst + numweeks * 7;\n        if (no1wkst !== firstwkst)\n            i -= 7 - firstwkst;\n        if (i < yearlen) {\n            // If week starts in next year, we\n            // don't care about it.\n            for (var j = 0; j < 7; j++) {\n                result.wnomask[i] = 1;\n                i += 1;\n                if (result.wdaymask[i] === options.wkst)\n                    break;\n            }\n        }\n    }\n    if (no1wkst) {\n        // Check last week number of last year as\n        // well. If no1wkst is 0, either the year\n        // started on week start, or week number 1\n        // got days from last year, so there are no\n        // days from last year's last week number in\n        // this year.\n        var lnumweeks = void 0;\n        if (!includes(options.byweekno, -1)) {\n            var lyearweekday = getWeekday(datetime(year - 1, 1, 1));\n            var lno1wkst = pymod(7 - lyearweekday.valueOf() + options.wkst, 7);\n            var lyearlen = isLeapYear(year - 1) ? 366 : 365;\n            var weekst = void 0;\n            if (lno1wkst >= 4) {\n                lno1wkst = 0;\n                weekst = lyearlen + pymod(lyearweekday - options.wkst, 7);\n            }\n            else {\n                weekst = yearlen - no1wkst;\n            }\n            lnumweeks = Math.floor(52 + pymod(weekst, 7) / 4);\n        }\n        else {\n            lnumweeks = -1;\n        }\n        if (includes(options.byweekno, lnumweeks)) {\n            for (var i = 0; i < no1wkst; i++)\n                result.wnomask[i] = 1;\n        }\n    }\n    return result;\n}\nfunction baseYearMasks(year) {\n    var yearlen = isLeapYear(year) ? 366 : 365;\n    var firstyday = datetime(year, 1, 1);\n    var wday = getWeekday(firstyday);\n    if (yearlen === 365) {\n        return {\n            mmask: M365MASK,\n            mdaymask: MDAY365MASK,\n            nmdaymask: NMDAY365MASK,\n            wdaymask: WDAYMASK.slice(wday),\n            mrange: M365RANGE,\n        };\n    }\n    return {\n        mmask: M366MASK,\n        mdaymask: MDAY366MASK,\n        nmdaymask: NMDAY366MASK,\n        wdaymask: WDAYMASK.slice(wday),\n        mrange: M366RANGE,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}