{"ast":null,"code":"/**\r\n * Slice module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Container } from \"../Container\";\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport * as $math from \"../utils/Math\";\nimport * as $path from \"../rendering/Path\";\nimport * as $type from \"../utils/Type\";\nimport * as $utils from \"../utils/Utils\";\nimport { Percent } from \"../utils/Percent\";\nimport { RadialGradient } from \"../rendering/fills/RadialGradient\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Draws a wedged semi-circle - slice. Usually used for Pie/Donut charts.\r\n *\r\n * @see {@link ISliceEvents} for a list of available events\r\n * @see {@link ISliceAdapters} for a list of available Adapters\r\n */\n\nvar Slice =\n/** @class */\nfunction (_super) {\n  __extends(Slice, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Slice() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"Slice\"; // Set defaults\n\n    _this.setPropertyValue(\"cornerRadius\", 0);\n\n    _this.setPropertyValue(\"startAngle\", 0);\n\n    _this.setPercentProperty(\"innerRadius\", 0);\n\n    _this.setPercentProperty(\"radius\", 0);\n\n    _this.setPropertyValue(\"arc\", 0);\n\n    _this.setPropertyValue(\"shiftRadius\", 0);\n\n    _this.strokeOpacity = 1;\n\n    _this.setPropertyValue(\"layout\", \"none\"); // Create a slice wedge element\n\n\n    _this.slice = _this.createChild(Sprite);\n    _this.slice.isMeasured = false;\n\n    _this._disposers.push(_this.slice); //this.element.attr({ \"stroke-linejoin\": \"round\" });\n    //this.element.attr({ \"stroke-linecap\": \"round\" });\n    // Apply theme\n\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Slice.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    var radiusY = this.radiusY;\n\n    if (this.radius > 0 && radiusY == 0) {\n      radiusY = 0.01;\n    }\n\n    this.slice.path = $path.arc(this.startAngle, this.arc, this.radius, this.pixelInnerRadius, radiusY, this.cornerRadius, this.innerCornerRadius);\n    this.slice.invalidate();\n    this.shiftRadius = this.shiftRadius;\n\n    if (this.realFill instanceof RadialGradient) {\n      this.updateGradient(this.realFill);\n    }\n\n    if (this.realStroke instanceof RadialGradient) {\n      this.updateGradient(this.realStroke);\n    }\n  };\n\n  Slice.prototype.updateGradient = function (gradient) {\n    gradient.element.attr({\n      \"gradientUnits\": \"userSpaceOnUse\"\n    });\n    gradient.element.attr({\n      \"r\": this.radius\n    });\n    gradient.cx = 0;\n    gradient.cy = 0;\n    gradient.element.attr({\n      radius: this.radius\n    });\n  };\n\n  Object.defineProperty(Slice.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n\n      if (this.isMeasured) {\n        var innerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.pixelInnerRadius);\n        var outerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.radius);\n        return $math.getCommonRectangle([innerRect, outerRect]);\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"startAngle\", {\n    /**\r\n     * @return Angle (0-360)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startAngle\");\n    },\n\n    /**\r\n     * The angle at which left edge of the slice is drawn. (0-360)\r\n     *\r\n     * 0 is to the right of the center.\r\n     *\r\n     * @param value  Angle (0-360)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"arc\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"arc\");\n    },\n\n    /**\r\n     * [arc description]\r\n     *\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      if (!$type.isNumber(value)) {\n        value = 0;\n      }\n\n      this.setPropertyValue(\"arc\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"radius\", {\n    /**\r\n     * @return Radius (px)\r\n     */\n    get: function () {\n      var radius = this.getPropertyValue(\"radius\");\n\n      if (!$type.isNumber(radius)) {\n        radius = 0;\n      }\n\n      return radius;\n    },\n\n    /**\r\n     * Radius of the slice in pixels.\r\n     *\r\n     * @param value  Radius (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"radius\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"radiusY\", {\n    /**\r\n     * @return Vertical radius (0-1)\r\n     */\n    get: function () {\n      var value = this.getPropertyValue(\"radiusY\");\n\n      if (!$type.isNumber(value)) {\n        value = this.radius;\n      }\n\n      return value;\n    },\n\n    /**\r\n     * Vertical radius for creating skewed slices.\r\n     *\r\n     * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n     * the `radius`.\r\n     *\r\n     * @param value Vertical radius (0-1)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"radiusY\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"innerRadius\", {\n    /**\r\n     * @return Radius (px or %)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"innerRadius\");\n    },\n\n    /**\r\n     * Inner radius of the slice for creating cut out (donut) slices.\r\n     *\r\n     * @default 0\r\n     * @param value  Radius (px or %)\r\n     */\n    set: function (value) {\n      this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"pixelInnerRadius\", {\n    /**\r\n     * @return Radius px\r\n     */\n    get: function () {\n      return $utils.relativeToValue(this.innerRadius, this.radius);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"cornerRadius\", {\n    /**\r\n     * @return Radius (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"cornerRadius\");\n    },\n\n    /**\r\n     * Radius of slice's outer corners in pixels.\r\n     *\r\n     * @default 0\r\n     * @param value  Radius (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"cornerRadius\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"innerCornerRadius\", {\n    /**\r\n     * @return Radius (px)\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"innerCornerRadius\");\n    },\n\n    /**\r\n     * Radius of slice's inner corners in pixels.\r\n     *\r\n     * @default 0\r\n     * @param value  Radius (px)\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"innerCornerRadius\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"shiftRadius\", {\n    /**\r\n     * @return Radius shift\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"shiftRadius\");\n    },\n\n    /**\r\n     * Indicates how far (relatively to center) a slice should be moved.\r\n     *\r\n     * The value is relative to the radius of the slice. Meaning 0 no shift,\r\n     * 1 - slice shifted outside by whole of its radius.\r\n     *\r\n     * @param  value  Radius shift\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"shiftRadius\", value);\n      value = this.getPropertyValue(\"shiftRadius\");\n      this.dx = value * this.radius * this.ix;\n      this.dy = value * this.radiusY * this.iy;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"ix\", {\n    /**\r\n     * [ix description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return $math.cos(this.middleAngle);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"iy\", {\n    /**\r\n     * [iy description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Description\r\n     * @return [description]\r\n     */\n    get: function () {\n      return $math.sin(this.middleAngle);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Slice.prototype, \"middleAngle\", {\n    /**\r\n     * An angle of the slice's middle.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Angle\r\n     */\n    get: function () {\n      return this.startAngle + this.arc / 2;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * X coordinate for the slice tooltip.\r\n   *\r\n   * @return X\r\n   */\n\n  Slice.prototype.getTooltipX = function () {\n    var value = this.getPropertyValue(\"tooltipX\");\n\n    if ($type.isNumber(value)) {\n      return value;\n    }\n\n    var p = 0.5;\n\n    if (value instanceof Percent) {\n      p = value.value;\n    }\n\n    var innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\n    return this.ix * (innerRadius + (this.radius - innerRadius) * p);\n  };\n  /**\r\n   * Y coordinate for the slice tooltip.\r\n   *\r\n   * @return Y\r\n   */\n\n\n  Slice.prototype.getTooltipY = function () {\n    var value = this.getPropertyValue(\"tooltipY\");\n\n    if ($type.isNumber(value)) {\n      return value;\n    }\n\n    var p = 0.5;\n\n    if (value instanceof Percent) {\n      p = value.value;\n    }\n\n    var innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\n    return this.iy * (innerRadius + (this.radius - innerRadius) * p) + this.slice.dy;\n  };\n\n  return Slice;\n}(Container);\n\nexport { Slice };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Slice\"] = Slice;","map":{"version":3,"names":["__extends","Container","Sprite","registry","$math","$path","$type","$utils","Percent","RadialGradient","Slice","_super","_this","call","className","setPropertyValue","setPercentProperty","strokeOpacity","slice","createChild","isMeasured","_disposers","push","applyTheme","prototype","draw","radiusY","radius","path","arc","startAngle","pixelInnerRadius","cornerRadius","innerCornerRadius","invalidate","shiftRadius","realFill","updateGradient","realStroke","gradient","element","attr","cx","cy","Object","defineProperty","get","definedBBox","innerRect","getArcRect","outerRect","getCommonRectangle","x","y","width","height","enumerable","configurable","getPropertyValue","set","value","normalizeAngle","isNumber","relativeToValue","innerRadius","dx","ix","dy","iy","cos","middleAngle","sin","getTooltipX","p","getTooltipY","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js"],"sourcesContent":["/**\r\n * Slice module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container } from \"../Container\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $path from \"../rendering/Path\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport { Percent } from \"../utils/Percent\";\r\nimport { RadialGradient } from \"../rendering/fills/RadialGradient\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Draws a wedged semi-circle - slice. Usually used for Pie/Donut charts.\r\n *\r\n * @see {@link ISliceEvents} for a list of available events\r\n * @see {@link ISliceAdapters} for a list of available Adapters\r\n */\r\nvar Slice = /** @class */ (function (_super) {\r\n    __extends(Slice, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Slice() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"Slice\";\r\n        // Set defaults\r\n        _this.setPropertyValue(\"cornerRadius\", 0);\r\n        _this.setPropertyValue(\"startAngle\", 0);\r\n        _this.setPercentProperty(\"innerRadius\", 0);\r\n        _this.setPercentProperty(\"radius\", 0);\r\n        _this.setPropertyValue(\"arc\", 0);\r\n        _this.setPropertyValue(\"shiftRadius\", 0);\r\n        _this.strokeOpacity = 1;\r\n        _this.setPropertyValue(\"layout\", \"none\");\r\n        // Create a slice wedge element\r\n        _this.slice = _this.createChild(Sprite);\r\n        _this.slice.isMeasured = false;\r\n        _this._disposers.push(_this.slice);\r\n        //this.element.attr({ \"stroke-linejoin\": \"round\" });\r\n        //this.element.attr({ \"stroke-linecap\": \"round\" });\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Slice.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var radiusY = this.radiusY;\r\n        if (this.radius > 0 && radiusY == 0) {\r\n            radiusY = 0.01;\r\n        }\r\n        this.slice.path = $path.arc(this.startAngle, this.arc, this.radius, this.pixelInnerRadius, radiusY, this.cornerRadius, this.innerCornerRadius);\r\n        this.slice.invalidate();\r\n        this.shiftRadius = this.shiftRadius;\r\n        if (this.realFill instanceof RadialGradient) {\r\n            this.updateGradient(this.realFill);\r\n        }\r\n        if (this.realStroke instanceof RadialGradient) {\r\n            this.updateGradient(this.realStroke);\r\n        }\r\n    };\r\n    Slice.prototype.updateGradient = function (gradient) {\r\n        gradient.element.attr({ \"gradientUnits\": \"userSpaceOnUse\" });\r\n        gradient.element.attr({ \"r\": this.radius });\r\n        gradient.cx = 0;\r\n        gradient.cy = 0;\r\n        gradient.element.attr({ radius: this.radius });\r\n    };\r\n    Object.defineProperty(Slice.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.isMeasured) {\r\n                var innerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.pixelInnerRadius);\r\n                var outerRect = $math.getArcRect(this.startAngle, this.startAngle + this.arc, this.radius);\r\n                return $math.getCommonRectangle([innerRect, outerRect]);\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: 0, height: 0 };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"startAngle\", {\r\n        /**\r\n         * @return Angle (0-360)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startAngle\");\r\n        },\r\n        /**\r\n         * The angle at which left edge of the slice is drawn. (0-360)\r\n         *\r\n         * 0 is to the right of the center.\r\n         *\r\n         * @param value  Angle (0-360)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"startAngle\", $math.normalizeAngle(value), true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"arc\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"arc\");\r\n        },\r\n        /**\r\n         * [arc description]\r\n         *\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            if (!$type.isNumber(value)) {\r\n                value = 0;\r\n            }\r\n            this.setPropertyValue(\"arc\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"radius\", {\r\n        /**\r\n         * @return Radius (px)\r\n         */\r\n        get: function () {\r\n            var radius = this.getPropertyValue(\"radius\");\r\n            if (!$type.isNumber(radius)) {\r\n                radius = 0;\r\n            }\r\n            return radius;\r\n        },\r\n        /**\r\n         * Radius of the slice in pixels.\r\n         *\r\n         * @param value  Radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"radius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"radiusY\", {\r\n        /**\r\n         * @return Vertical radius (0-1)\r\n         */\r\n        get: function () {\r\n            var value = this.getPropertyValue(\"radiusY\");\r\n            if (!$type.isNumber(value)) {\r\n                value = this.radius;\r\n            }\r\n            return value;\r\n        },\r\n        /**\r\n         * Vertical radius for creating skewed slices.\r\n         *\r\n         * This is relevant to `radius`, e.g. 0.5 will set vertical radius to half\r\n         * the `radius`.\r\n         *\r\n         * @param value Vertical radius (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"radiusY\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"innerRadius\", {\r\n        /**\r\n         * @return Radius (px or %)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerRadius\");\r\n        },\r\n        /**\r\n         * Inner radius of the slice for creating cut out (donut) slices.\r\n         *\r\n         * @default 0\r\n         * @param value  Radius (px or %)\r\n         */\r\n        set: function (value) {\r\n            this.setPercentProperty(\"innerRadius\", value, true, false, 10, false);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"pixelInnerRadius\", {\r\n        /**\r\n         * @return Radius px\r\n         */\r\n        get: function () {\r\n            return $utils.relativeToValue(this.innerRadius, this.radius);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"cornerRadius\", {\r\n        /**\r\n         * @return Radius (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"cornerRadius\");\r\n        },\r\n        /**\r\n         * Radius of slice's outer corners in pixels.\r\n         *\r\n         * @default 0\r\n         * @param value  Radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"cornerRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"innerCornerRadius\", {\r\n        /**\r\n         * @return Radius (px)\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"innerCornerRadius\");\r\n        },\r\n        /**\r\n         * Radius of slice's inner corners in pixels.\r\n         *\r\n         * @default 0\r\n         * @param value  Radius (px)\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"innerCornerRadius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"shiftRadius\", {\r\n        /**\r\n         * @return Radius shift\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"shiftRadius\");\r\n        },\r\n        /**\r\n         * Indicates how far (relatively to center) a slice should be moved.\r\n         *\r\n         * The value is relative to the radius of the slice. Meaning 0 no shift,\r\n         * 1 - slice shifted outside by whole of its radius.\r\n         *\r\n         * @param  value  Radius shift\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"shiftRadius\", value);\r\n            value = this.getPropertyValue(\"shiftRadius\");\r\n            this.dx = value * this.radius * this.ix;\r\n            this.dy = value * this.radiusY * this.iy;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"ix\", {\r\n        /**\r\n         * [ix description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return $math.cos(this.middleAngle);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"iy\", {\r\n        /**\r\n         * [iy description]\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @todo Description\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return $math.sin(this.middleAngle);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Slice.prototype, \"middleAngle\", {\r\n        /**\r\n         * An angle of the slice's middle.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Angle\r\n         */\r\n        get: function () {\r\n            return this.startAngle + this.arc / 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * X coordinate for the slice tooltip.\r\n     *\r\n     * @return X\r\n     */\r\n    Slice.prototype.getTooltipX = function () {\r\n        var value = this.getPropertyValue(\"tooltipX\");\r\n        if ($type.isNumber(value)) {\r\n            return value;\r\n        }\r\n        var p = 0.5;\r\n        if (value instanceof Percent) {\r\n            p = value.value;\r\n        }\r\n        var innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\r\n        return this.ix * (innerRadius + (this.radius - innerRadius) * p);\r\n    };\r\n    /**\r\n     * Y coordinate for the slice tooltip.\r\n     *\r\n     * @return Y\r\n     */\r\n    Slice.prototype.getTooltipY = function () {\r\n        var value = this.getPropertyValue(\"tooltipY\");\r\n        if ($type.isNumber(value)) {\r\n            return value;\r\n        }\r\n        var p = 0.5;\r\n        if (value instanceof Percent) {\r\n            p = value.value;\r\n        }\r\n        var innerRadius = $utils.relativeToValue(this.innerRadius, this.radius);\r\n        return this.iy * (innerRadius + (this.radius - innerRadius) * p) + this.slice.dy;\r\n    };\r\n    return Slice;\r\n}(Container));\r\nexport { Slice };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Slice\"] = Slice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}