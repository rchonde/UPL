{"ast":null,"code":"import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { forwardRef, PLATFORM_ID, Component, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport DxCheckBox from 'devextreme/ui/check_box';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\n\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => DxCheckBoxComponent),\n  multi: true\n};\n/**\r\n * The CheckBox is a small box, which when selected by the end user, shows that a particular feature has been enabled or a specific property has been chosen.\r\n\r\n */\n\nclass DxCheckBoxComponent extends DxComponent {\n  constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\n    super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\n    this._watcherHelper = _watcherHelper;\n    this._idh = _idh;\n\n    this.touched = _ => {};\n\n    this._createEventEmitters([{\n      subscribe: 'contentReady',\n      emit: 'onContentReady'\n    }, {\n      subscribe: 'disposing',\n      emit: 'onDisposing'\n    }, {\n      subscribe: 'initialized',\n      emit: 'onInitialized'\n    }, {\n      subscribe: 'optionChanged',\n      emit: 'onOptionChanged'\n    }, {\n      subscribe: 'valueChanged',\n      emit: 'onValueChanged'\n    }, {\n      emit: 'accessKeyChange'\n    }, {\n      emit: 'activeStateEnabledChange'\n    }, {\n      emit: 'disabledChange'\n    }, {\n      emit: 'elementAttrChange'\n    }, {\n      emit: 'enableThreeStateBehaviorChange'\n    }, {\n      emit: 'focusStateEnabledChange'\n    }, {\n      emit: 'heightChange'\n    }, {\n      emit: 'hintChange'\n    }, {\n      emit: 'hoverStateEnabledChange'\n    }, {\n      emit: 'iconSizeChange'\n    }, {\n      emit: 'isValidChange'\n    }, {\n      emit: 'nameChange'\n    }, {\n      emit: 'readOnlyChange'\n    }, {\n      emit: 'rtlEnabledChange'\n    }, {\n      emit: 'tabIndexChange'\n    }, {\n      emit: 'textChange'\n    }, {\n      emit: 'validationErrorChange'\n    }, {\n      emit: 'validationErrorsChange'\n    }, {\n      emit: 'validationMessageModeChange'\n    }, {\n      emit: 'validationMessagePositionChange'\n    }, {\n      emit: 'validationStatusChange'\n    }, {\n      emit: 'valueChange'\n    }, {\n      emit: 'visibleChange'\n    }, {\n      emit: 'widthChange'\n    }, {\n      emit: 'onBlur'\n    }]);\n\n    this._idh.setHost(this);\n\n    optionHost.setHost(this);\n  }\n  /**\r\n   * Specifies the shortcut key that sets focus on the UI component.\r\n  \r\n   */\n\n\n  get accessKey() {\n    return this._getOption('accessKey');\n  }\n\n  set accessKey(value) {\n    this._setOption('accessKey', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n  \r\n   */\n\n\n  get activeStateEnabled() {\n    return this._getOption('activeStateEnabled');\n  }\n\n  set activeStateEnabled(value) {\n    this._setOption('activeStateEnabled', value);\n  }\n  /**\r\n   * Specifies whether the UI component responds to user interaction.\r\n  \r\n   */\n\n\n  get disabled() {\n    return this._getOption('disabled');\n  }\n\n  set disabled(value) {\n    this._setOption('disabled', value);\n  }\n  /**\r\n   * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n  \r\n   */\n\n\n  get elementAttr() {\n    return this._getOption('elementAttr');\n  }\n\n  set elementAttr(value) {\n    this._setOption('elementAttr', value);\n  }\n  /**\r\n   * Specifies whether users can set the CheckBox state to indeterminate.\r\n  \r\n   */\n\n\n  get enableThreeStateBehavior() {\n    return this._getOption('enableThreeStateBehavior');\n  }\n\n  set enableThreeStateBehavior(value) {\n    this._setOption('enableThreeStateBehavior', value);\n  }\n  /**\r\n   * Specifies whether the UI component can be focused using keyboard navigation.\r\n  \r\n   */\n\n\n  get focusStateEnabled() {\n    return this._getOption('focusStateEnabled');\n  }\n\n  set focusStateEnabled(value) {\n    this._setOption('focusStateEnabled', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s height.\r\n  \r\n   */\n\n\n  get height() {\n    return this._getOption('height');\n  }\n\n  set height(value) {\n    this._setOption('height', value);\n  }\n  /**\r\n   * Specifies text for a hint that appears when a user pauses on the UI component.\r\n  \r\n   */\n\n\n  get hint() {\n    return this._getOption('hint');\n  }\n\n  set hint(value) {\n    this._setOption('hint', value);\n  }\n  /**\r\n   * Specifies whether the UI component changes its state when a user pauses on it.\r\n  \r\n   */\n\n\n  get hoverStateEnabled() {\n    return this._getOption('hoverStateEnabled');\n  }\n\n  set hoverStateEnabled(value) {\n    this._setOption('hoverStateEnabled', value);\n  }\n  /**\r\n   * Specifies the check box icon&apos;s width and height.\r\n  \r\n   */\n\n\n  get iconSize() {\n    return this._getOption('iconSize');\n  }\n\n  set iconSize(value) {\n    this._setOption('iconSize', value);\n  }\n  /**\r\n   * Specifies or indicates whether the editor&apos;s value is valid.\r\n  \r\n   */\n\n\n  get isValid() {\n    return this._getOption('isValid');\n  }\n\n  set isValid(value) {\n    this._setOption('isValid', value);\n  }\n  /**\r\n   * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n  \r\n   */\n\n\n  get name() {\n    return this._getOption('name');\n  }\n\n  set name(value) {\n    this._setOption('name', value);\n  }\n  /**\r\n   * Specifies whether the editor is read-only.\r\n  \r\n   */\n\n\n  get readOnly() {\n    return this._getOption('readOnly');\n  }\n\n  set readOnly(value) {\n    this._setOption('readOnly', value);\n  }\n  /**\r\n   * Switches the UI component to a right-to-left representation.\r\n  \r\n   */\n\n\n  get rtlEnabled() {\n    return this._getOption('rtlEnabled');\n  }\n\n  set rtlEnabled(value) {\n    this._setOption('rtlEnabled', value);\n  }\n  /**\r\n   * Specifies the number of the element when the Tab key is used for navigating.\r\n  \r\n   */\n\n\n  get tabIndex() {\n    return this._getOption('tabIndex');\n  }\n\n  set tabIndex(value) {\n    this._setOption('tabIndex', value);\n  }\n  /**\r\n   * Specifies the text displayed by the check box.\r\n  \r\n   */\n\n\n  get text() {\n    return this._getOption('text');\n  }\n\n  set text(value) {\n    this._setOption('text', value);\n  }\n  /**\r\n   * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n  \r\n   */\n\n\n  get validationError() {\n    return this._getOption('validationError');\n  }\n\n  set validationError(value) {\n    this._setOption('validationError', value);\n  }\n  /**\r\n   * An array of the validation rules that failed.\r\n  \r\n   */\n\n\n  get validationErrors() {\n    return this._getOption('validationErrors');\n  }\n\n  set validationErrors(value) {\n    this._setOption('validationErrors', value);\n  }\n  /**\r\n   * Specifies how the message about the validation rules that are not satisfied by this editor&apos;s value is displayed.\r\n  \r\n   */\n\n\n  get validationMessageMode() {\n    return this._getOption('validationMessageMode');\n  }\n\n  set validationMessageMode(value) {\n    this._setOption('validationMessageMode', value);\n  }\n  /**\r\n   * Specifies the position of a validation message relative to the component. The validation message describes the validation rules that this component&apos;s value does not satisfy.\r\n  \r\n   */\n\n\n  get validationMessagePosition() {\n    return this._getOption('validationMessagePosition');\n  }\n\n  set validationMessagePosition(value) {\n    this._setOption('validationMessagePosition', value);\n  }\n  /**\r\n   * Indicates or specifies the current validation status.\r\n  \r\n   */\n\n\n  get validationStatus() {\n    return this._getOption('validationStatus');\n  }\n\n  set validationStatus(value) {\n    this._setOption('validationStatus', value);\n  }\n  /**\r\n   * Specifies the UI component state.\r\n  \r\n   */\n\n\n  get value() {\n    return this._getOption('value');\n  }\n\n  set value(value) {\n    this._setOption('value', value);\n  }\n  /**\r\n   * Specifies whether the UI component is visible.\r\n  \r\n   */\n\n\n  get visible() {\n    return this._getOption('visible');\n  }\n\n  set visible(value) {\n    this._setOption('visible', value);\n  }\n  /**\r\n   * Specifies the UI component&apos;s width.\r\n  \r\n   */\n\n\n  get width() {\n    return this._getOption('width');\n  }\n\n  set width(value) {\n    this._setOption('width', value);\n  }\n\n  change(_) {}\n\n  _createInstance(element, options) {\n    return new DxCheckBox(element, options);\n  }\n\n  writeValue(value) {\n    this.eventHelper.lockedValueChangeEvent = true;\n    this.value = value;\n    this.eventHelper.lockedValueChangeEvent = false;\n  }\n\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n\n  registerOnChange(fn) {\n    this.change = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.touched = fn;\n  }\n\n  _createWidget(element) {\n    super._createWidget(element);\n\n    this.instance.on('focusOut', e => {\n      this.eventHelper.fireNgEvent('onBlur', [e]);\n    });\n  }\n\n  ngOnDestroy() {\n    this._destroyWidget();\n  }\n\n  ngOnChanges(changes) {\n    super.ngOnChanges(changes);\n    this.setupChanges('validationErrors', changes);\n  }\n\n  setupChanges(prop, changes) {\n    if (!(prop in this._optionsToUpdate)) {\n      this._idh.setup(prop, changes);\n    }\n  }\n\n  ngDoCheck() {\n    this._idh.doCheck('validationErrors');\n\n    this._watcherHelper.checkWatchers();\n\n    super.ngDoCheck();\n    super.clearChangedOptions();\n  }\n\n  _setOption(name, value) {\n    let isSetup = this._idh.setupSingle(name, value);\n\n    let isChanged = this._idh.getChanges(name, value) !== null;\n\n    if (isSetup || isChanged) {\n      super._setOption(name, value);\n    }\n  }\n\n}\n/** @nocollapse */\n\n\nDxCheckBoxComponent.ɵfac = function DxCheckBoxComponent_Factory(t) {\n  return new (t || DxCheckBoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n/** @nocollapse */\n\n\nDxCheckBoxComponent.ɵcmp =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineComponent({\n  type: DxCheckBoxComponent,\n  selectors: [[\"dx-check-box\"]],\n  hostBindings: function DxCheckBoxComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"valueChange\", function DxCheckBoxComponent_valueChange_HostBindingHandler($event) {\n        return ctx.change($event);\n      })(\"onBlur\", function DxCheckBoxComponent_onBlur_HostBindingHandler($event) {\n        return ctx.touched($event);\n      });\n    }\n  },\n  inputs: {\n    accessKey: \"accessKey\",\n    activeStateEnabled: \"activeStateEnabled\",\n    disabled: \"disabled\",\n    elementAttr: \"elementAttr\",\n    enableThreeStateBehavior: \"enableThreeStateBehavior\",\n    focusStateEnabled: \"focusStateEnabled\",\n    height: \"height\",\n    hint: \"hint\",\n    hoverStateEnabled: \"hoverStateEnabled\",\n    iconSize: \"iconSize\",\n    isValid: \"isValid\",\n    name: \"name\",\n    readOnly: \"readOnly\",\n    rtlEnabled: \"rtlEnabled\",\n    tabIndex: \"tabIndex\",\n    text: \"text\",\n    validationError: \"validationError\",\n    validationErrors: \"validationErrors\",\n    validationMessageMode: \"validationMessageMode\",\n    validationMessagePosition: \"validationMessagePosition\",\n    validationStatus: \"validationStatus\",\n    value: \"value\",\n    visible: \"visible\",\n    width: \"width\"\n  },\n  outputs: {\n    onContentReady: \"onContentReady\",\n    onDisposing: \"onDisposing\",\n    onInitialized: \"onInitialized\",\n    onOptionChanged: \"onOptionChanged\",\n    onValueChanged: \"onValueChanged\",\n    accessKeyChange: \"accessKeyChange\",\n    activeStateEnabledChange: \"activeStateEnabledChange\",\n    disabledChange: \"disabledChange\",\n    elementAttrChange: \"elementAttrChange\",\n    enableThreeStateBehaviorChange: \"enableThreeStateBehaviorChange\",\n    focusStateEnabledChange: \"focusStateEnabledChange\",\n    heightChange: \"heightChange\",\n    hintChange: \"hintChange\",\n    hoverStateEnabledChange: \"hoverStateEnabledChange\",\n    iconSizeChange: \"iconSizeChange\",\n    isValidChange: \"isValidChange\",\n    nameChange: \"nameChange\",\n    readOnlyChange: \"readOnlyChange\",\n    rtlEnabledChange: \"rtlEnabledChange\",\n    tabIndexChange: \"tabIndexChange\",\n    textChange: \"textChange\",\n    validationErrorChange: \"validationErrorChange\",\n    validationErrorsChange: \"validationErrorsChange\",\n    validationMessageModeChange: \"validationMessageModeChange\",\n    validationMessagePositionChange: \"validationMessagePositionChange\",\n    validationStatusChange: \"validationStatusChange\",\n    valueChange: \"valueChange\",\n    visibleChange: \"visibleChange\",\n    widthChange: \"widthChange\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵProvidersFeature([DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function DxCheckBoxComponent_Template(rf, ctx) {},\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxCheckBoxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'dx-check-box',\n      template: '',\n      providers: [DxTemplateHost, WatcherHelper, CUSTOM_VALUE_ACCESSOR_PROVIDER, NestedOptionHost, IterableDifferHelper]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i1.DxTemplateHost\n    }, {\n      type: i1.WatcherHelper\n    }, {\n      type: i1.IterableDifferHelper\n    }, {\n      type: i1.NestedOptionHost\n    }, {\n      type: i2.TransferState\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    accessKey: [{\n      type: Input\n    }],\n    activeStateEnabled: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    elementAttr: [{\n      type: Input\n    }],\n    enableThreeStateBehavior: [{\n      type: Input\n    }],\n    focusStateEnabled: [{\n      type: Input\n    }],\n    height: [{\n      type: Input\n    }],\n    hint: [{\n      type: Input\n    }],\n    hoverStateEnabled: [{\n      type: Input\n    }],\n    iconSize: [{\n      type: Input\n    }],\n    isValid: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    rtlEnabled: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    text: [{\n      type: Input\n    }],\n    validationError: [{\n      type: Input\n    }],\n    validationErrors: [{\n      type: Input\n    }],\n    validationMessageMode: [{\n      type: Input\n    }],\n    validationMessagePosition: [{\n      type: Input\n    }],\n    validationStatus: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    visible: [{\n      type: Input\n    }],\n    width: [{\n      type: Input\n    }],\n    onContentReady: [{\n      type: Output\n    }],\n    onDisposing: [{\n      type: Output\n    }],\n    onInitialized: [{\n      type: Output\n    }],\n    onOptionChanged: [{\n      type: Output\n    }],\n    onValueChanged: [{\n      type: Output\n    }],\n    accessKeyChange: [{\n      type: Output\n    }],\n    activeStateEnabledChange: [{\n      type: Output\n    }],\n    disabledChange: [{\n      type: Output\n    }],\n    elementAttrChange: [{\n      type: Output\n    }],\n    enableThreeStateBehaviorChange: [{\n      type: Output\n    }],\n    focusStateEnabledChange: [{\n      type: Output\n    }],\n    heightChange: [{\n      type: Output\n    }],\n    hintChange: [{\n      type: Output\n    }],\n    hoverStateEnabledChange: [{\n      type: Output\n    }],\n    iconSizeChange: [{\n      type: Output\n    }],\n    isValidChange: [{\n      type: Output\n    }],\n    nameChange: [{\n      type: Output\n    }],\n    readOnlyChange: [{\n      type: Output\n    }],\n    rtlEnabledChange: [{\n      type: Output\n    }],\n    tabIndexChange: [{\n      type: Output\n    }],\n    textChange: [{\n      type: Output\n    }],\n    validationErrorChange: [{\n      type: Output\n    }],\n    validationErrorsChange: [{\n      type: Output\n    }],\n    validationMessageModeChange: [{\n      type: Output\n    }],\n    validationMessagePositionChange: [{\n      type: Output\n    }],\n    validationStatusChange: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    visibleChange: [{\n      type: Output\n    }],\n    widthChange: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    change: [{\n      type: HostListener,\n      args: ['valueChange', ['$event']]\n    }],\n    touched: [{\n      type: HostListener,\n      args: ['onBlur', ['$event']]\n    }]\n  });\n})();\n\nclass DxCheckBoxModule {}\n/** @nocollapse */\n\n\nDxCheckBoxModule.ɵfac = function DxCheckBoxModule_Factory(t) {\n  return new (t || DxCheckBoxModule)();\n};\n/** @nocollapse */\n\n\nDxCheckBoxModule.ɵmod =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineNgModule({\n  type: DxCheckBoxModule\n});\n/** @nocollapse */\n\nDxCheckBoxModule.ɵinj =\n/** @pureOrBreakMyCode */\ni0.ɵɵdefineInjector({\n  imports: [[DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule], DxTemplateModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxCheckBoxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n      declarations: [DxCheckBoxComponent],\n      exports: [DxCheckBoxComponent, DxTemplateModule]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxCheckBoxModule, {\n    declarations: [DxCheckBoxComponent],\n    imports: [DxIntegrationModule, DxTemplateModule, BrowserTransferStateModule],\n    exports: [DxCheckBoxComponent, DxTemplateModule]\n  });\n})();\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { DxCheckBoxComponent, DxCheckBoxModule };","map":{"version":3,"names":["i2","BrowserTransferStateModule","i0","forwardRef","PLATFORM_ID","Component","Inject","Input","Output","HostListener","NgModule","DxCheckBox","NG_VALUE_ACCESSOR","i1","DxComponent","DxTemplateHost","WatcherHelper","NestedOptionHost","IterableDifferHelper","DxIntegrationModule","DxTemplateModule","CUSTOM_VALUE_ACCESSOR_PROVIDER","provide","useExisting","DxCheckBoxComponent","multi","constructor","elementRef","ngZone","templateHost","_watcherHelper","_idh","optionHost","transferState","platformId","touched","_","_createEventEmitters","subscribe","emit","setHost","accessKey","_getOption","value","_setOption","activeStateEnabled","disabled","elementAttr","enableThreeStateBehavior","focusStateEnabled","height","hint","hoverStateEnabled","iconSize","isValid","name","readOnly","rtlEnabled","tabIndex","text","validationError","validationErrors","validationMessageMode","validationMessagePosition","validationStatus","visible","width","change","_createInstance","element","options","writeValue","eventHelper","lockedValueChangeEvent","setDisabledState","isDisabled","registerOnChange","fn","registerOnTouched","_createWidget","instance","on","e","fireNgEvent","ngOnDestroy","_destroyWidget","ngOnChanges","changes","setupChanges","prop","_optionsToUpdate","setup","ngDoCheck","doCheck","checkWatchers","clearChangedOptions","isSetup","setupSingle","isChanged","getChanges","ɵfac","DxCheckBoxComponent_Factory","t","ɵɵdirectiveInject","ElementRef","NgZone","TransferState","ɵcmp","ɵɵdefineComponent","type","selectors","hostBindings","DxCheckBoxComponent_HostBindings","rf","ctx","ɵɵlistener","DxCheckBoxComponent_valueChange_HostBindingHandler","$event","DxCheckBoxComponent_onBlur_HostBindingHandler","inputs","outputs","onContentReady","onDisposing","onInitialized","onOptionChanged","onValueChanged","accessKeyChange","activeStateEnabledChange","disabledChange","elementAttrChange","enableThreeStateBehaviorChange","focusStateEnabledChange","heightChange","hintChange","hoverStateEnabledChange","iconSizeChange","isValidChange","nameChange","readOnlyChange","rtlEnabledChange","tabIndexChange","textChange","validationErrorChange","validationErrorsChange","validationMessageModeChange","validationMessagePositionChange","validationStatusChange","valueChange","visibleChange","widthChange","onBlur","features","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵNgOnChangesFeature","decls","vars","template","DxCheckBoxComponent_Template","encapsulation","ngDevMode","ɵsetClassMetadata","args","selector","providers","undefined","decorators","DxCheckBoxModule","DxCheckBoxModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme-angular/fesm2015/devextreme-angular-ui-check-box.js"],"sourcesContent":["import * as i2 from '@angular/platform-browser';\nimport { BrowserTransferStateModule } from '@angular/platform-browser';\nimport * as i0 from '@angular/core';\nimport { forwardRef, PLATFORM_ID, Component, Inject, Input, Output, HostListener, NgModule } from '@angular/core';\nimport DxCheckBox from 'devextreme/ui/check_box';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i1 from 'devextreme-angular/core';\nimport { DxComponent, DxTemplateHost, WatcherHelper, NestedOptionHost, IterableDifferHelper, DxIntegrationModule, DxTemplateModule } from 'devextreme-angular/core';\n\n/*!\r\n * devextreme-angular\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nconst CUSTOM_VALUE_ACCESSOR_PROVIDER = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => DxCheckBoxComponent),\r\n    multi: true\r\n};\r\n/**\r\n * The CheckBox is a small box, which when selected by the end user, shows that a particular feature has been enabled or a specific property has been chosen.\r\n\r\n */\r\nclass DxCheckBoxComponent extends DxComponent {\r\n    constructor(elementRef, ngZone, templateHost, _watcherHelper, _idh, optionHost, transferState, platformId) {\r\n        super(elementRef, ngZone, templateHost, _watcherHelper, transferState, platformId);\r\n        this._watcherHelper = _watcherHelper;\r\n        this._idh = _idh;\r\n        this.touched = (_) => { };\r\n        this._createEventEmitters([\r\n            { subscribe: 'contentReady', emit: 'onContentReady' },\r\n            { subscribe: 'disposing', emit: 'onDisposing' },\r\n            { subscribe: 'initialized', emit: 'onInitialized' },\r\n            { subscribe: 'optionChanged', emit: 'onOptionChanged' },\r\n            { subscribe: 'valueChanged', emit: 'onValueChanged' },\r\n            { emit: 'accessKeyChange' },\r\n            { emit: 'activeStateEnabledChange' },\r\n            { emit: 'disabledChange' },\r\n            { emit: 'elementAttrChange' },\r\n            { emit: 'enableThreeStateBehaviorChange' },\r\n            { emit: 'focusStateEnabledChange' },\r\n            { emit: 'heightChange' },\r\n            { emit: 'hintChange' },\r\n            { emit: 'hoverStateEnabledChange' },\r\n            { emit: 'iconSizeChange' },\r\n            { emit: 'isValidChange' },\r\n            { emit: 'nameChange' },\r\n            { emit: 'readOnlyChange' },\r\n            { emit: 'rtlEnabledChange' },\r\n            { emit: 'tabIndexChange' },\r\n            { emit: 'textChange' },\r\n            { emit: 'validationErrorChange' },\r\n            { emit: 'validationErrorsChange' },\r\n            { emit: 'validationMessageModeChange' },\r\n            { emit: 'validationMessagePositionChange' },\r\n            { emit: 'validationStatusChange' },\r\n            { emit: 'valueChange' },\r\n            { emit: 'visibleChange' },\r\n            { emit: 'widthChange' },\r\n            { emit: 'onBlur' }\r\n        ]);\r\n        this._idh.setHost(this);\r\n        optionHost.setHost(this);\r\n    }\r\n    /**\r\n     * Specifies the shortcut key that sets focus on the UI component.\r\n    \r\n     */\r\n    get accessKey() {\r\n        return this._getOption('accessKey');\r\n    }\r\n    set accessKey(value) {\r\n        this._setOption('accessKey', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its visual state as a result of user interaction.\r\n    \r\n     */\r\n    get activeStateEnabled() {\r\n        return this._getOption('activeStateEnabled');\r\n    }\r\n    set activeStateEnabled(value) {\r\n        this._setOption('activeStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component responds to user interaction.\r\n    \r\n     */\r\n    get disabled() {\r\n        return this._getOption('disabled');\r\n    }\r\n    set disabled(value) {\r\n        this._setOption('disabled', value);\r\n    }\r\n    /**\r\n     * Specifies the global attributes to be attached to the UI component&apos;s container element.\r\n    \r\n     */\r\n    get elementAttr() {\r\n        return this._getOption('elementAttr');\r\n    }\r\n    set elementAttr(value) {\r\n        this._setOption('elementAttr', value);\r\n    }\r\n    /**\r\n     * Specifies whether users can set the CheckBox state to indeterminate.\r\n    \r\n     */\r\n    get enableThreeStateBehavior() {\r\n        return this._getOption('enableThreeStateBehavior');\r\n    }\r\n    set enableThreeStateBehavior(value) {\r\n        this._setOption('enableThreeStateBehavior', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component can be focused using keyboard navigation.\r\n    \r\n     */\r\n    get focusStateEnabled() {\r\n        return this._getOption('focusStateEnabled');\r\n    }\r\n    set focusStateEnabled(value) {\r\n        this._setOption('focusStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s height.\r\n    \r\n     */\r\n    get height() {\r\n        return this._getOption('height');\r\n    }\r\n    set height(value) {\r\n        this._setOption('height', value);\r\n    }\r\n    /**\r\n     * Specifies text for a hint that appears when a user pauses on the UI component.\r\n    \r\n     */\r\n    get hint() {\r\n        return this._getOption('hint');\r\n    }\r\n    set hint(value) {\r\n        this._setOption('hint', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component changes its state when a user pauses on it.\r\n    \r\n     */\r\n    get hoverStateEnabled() {\r\n        return this._getOption('hoverStateEnabled');\r\n    }\r\n    set hoverStateEnabled(value) {\r\n        this._setOption('hoverStateEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the check box icon&apos;s width and height.\r\n    \r\n     */\r\n    get iconSize() {\r\n        return this._getOption('iconSize');\r\n    }\r\n    set iconSize(value) {\r\n        this._setOption('iconSize', value);\r\n    }\r\n    /**\r\n     * Specifies or indicates whether the editor&apos;s value is valid.\r\n    \r\n     */\r\n    get isValid() {\r\n        return this._getOption('isValid');\r\n    }\r\n    set isValid(value) {\r\n        this._setOption('isValid', value);\r\n    }\r\n    /**\r\n     * The value to be assigned to the `name` attribute of the underlying HTML element.\r\n    \r\n     */\r\n    get name() {\r\n        return this._getOption('name');\r\n    }\r\n    set name(value) {\r\n        this._setOption('name', value);\r\n    }\r\n    /**\r\n     * Specifies whether the editor is read-only.\r\n    \r\n     */\r\n    get readOnly() {\r\n        return this._getOption('readOnly');\r\n    }\r\n    set readOnly(value) {\r\n        this._setOption('readOnly', value);\r\n    }\r\n    /**\r\n     * Switches the UI component to a right-to-left representation.\r\n    \r\n     */\r\n    get rtlEnabled() {\r\n        return this._getOption('rtlEnabled');\r\n    }\r\n    set rtlEnabled(value) {\r\n        this._setOption('rtlEnabled', value);\r\n    }\r\n    /**\r\n     * Specifies the number of the element when the Tab key is used for navigating.\r\n    \r\n     */\r\n    get tabIndex() {\r\n        return this._getOption('tabIndex');\r\n    }\r\n    set tabIndex(value) {\r\n        this._setOption('tabIndex', value);\r\n    }\r\n    /**\r\n     * Specifies the text displayed by the check box.\r\n    \r\n     */\r\n    get text() {\r\n        return this._getOption('text');\r\n    }\r\n    set text(value) {\r\n        this._setOption('text', value);\r\n    }\r\n    /**\r\n     * Information on the broken validation rule. Contains the first item from the validationErrors array.\r\n    \r\n     */\r\n    get validationError() {\r\n        return this._getOption('validationError');\r\n    }\r\n    set validationError(value) {\r\n        this._setOption('validationError', value);\r\n    }\r\n    /**\r\n     * An array of the validation rules that failed.\r\n    \r\n     */\r\n    get validationErrors() {\r\n        return this._getOption('validationErrors');\r\n    }\r\n    set validationErrors(value) {\r\n        this._setOption('validationErrors', value);\r\n    }\r\n    /**\r\n     * Specifies how the message about the validation rules that are not satisfied by this editor&apos;s value is displayed.\r\n    \r\n     */\r\n    get validationMessageMode() {\r\n        return this._getOption('validationMessageMode');\r\n    }\r\n    set validationMessageMode(value) {\r\n        this._setOption('validationMessageMode', value);\r\n    }\r\n    /**\r\n     * Specifies the position of a validation message relative to the component. The validation message describes the validation rules that this component&apos;s value does not satisfy.\r\n    \r\n     */\r\n    get validationMessagePosition() {\r\n        return this._getOption('validationMessagePosition');\r\n    }\r\n    set validationMessagePosition(value) {\r\n        this._setOption('validationMessagePosition', value);\r\n    }\r\n    /**\r\n     * Indicates or specifies the current validation status.\r\n    \r\n     */\r\n    get validationStatus() {\r\n        return this._getOption('validationStatus');\r\n    }\r\n    set validationStatus(value) {\r\n        this._setOption('validationStatus', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component state.\r\n    \r\n     */\r\n    get value() {\r\n        return this._getOption('value');\r\n    }\r\n    set value(value) {\r\n        this._setOption('value', value);\r\n    }\r\n    /**\r\n     * Specifies whether the UI component is visible.\r\n    \r\n     */\r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value) {\r\n        this._setOption('visible', value);\r\n    }\r\n    /**\r\n     * Specifies the UI component&apos;s width.\r\n    \r\n     */\r\n    get width() {\r\n        return this._getOption('width');\r\n    }\r\n    set width(value) {\r\n        this._setOption('width', value);\r\n    }\r\n    change(_) { }\r\n    _createInstance(element, options) {\r\n        return new DxCheckBox(element, options);\r\n    }\r\n    writeValue(value) {\r\n        this.eventHelper.lockedValueChangeEvent = true;\r\n        this.value = value;\r\n        this.eventHelper.lockedValueChangeEvent = false;\r\n    }\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    registerOnChange(fn) { this.change = fn; }\r\n    registerOnTouched(fn) { this.touched = fn; }\r\n    _createWidget(element) {\r\n        super._createWidget(element);\r\n        this.instance.on('focusOut', (e) => {\r\n            this.eventHelper.fireNgEvent('onBlur', [e]);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._destroyWidget();\r\n    }\r\n    ngOnChanges(changes) {\r\n        super.ngOnChanges(changes);\r\n        this.setupChanges('validationErrors', changes);\r\n    }\r\n    setupChanges(prop, changes) {\r\n        if (!(prop in this._optionsToUpdate)) {\r\n            this._idh.setup(prop, changes);\r\n        }\r\n    }\r\n    ngDoCheck() {\r\n        this._idh.doCheck('validationErrors');\r\n        this._watcherHelper.checkWatchers();\r\n        super.ngDoCheck();\r\n        super.clearChangedOptions();\r\n    }\r\n    _setOption(name, value) {\r\n        let isSetup = this._idh.setupSingle(name, value);\r\n        let isChanged = this._idh.getChanges(name, value) !== null;\r\n        if (isSetup || isChanged) {\r\n            super._setOption(name, value);\r\n        }\r\n    }\r\n}\r\n/** @nocollapse */ DxCheckBoxComponent.ɵfac = function DxCheckBoxComponent_Factory(t) { return new (t || DxCheckBoxComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.DxTemplateHost), i0.ɵɵdirectiveInject(i1.WatcherHelper), i0.ɵɵdirectiveInject(i1.IterableDifferHelper), i0.ɵɵdirectiveInject(i1.NestedOptionHost), i0.ɵɵdirectiveInject(i2.TransferState), i0.ɵɵdirectiveInject(PLATFORM_ID)); };\r\n/** @nocollapse */ DxCheckBoxComponent.ɵcmp = /** @pureOrBreakMyCode */ i0.ɵɵdefineComponent({ type: DxCheckBoxComponent, selectors: [[\"dx-check-box\"]], hostBindings: function DxCheckBoxComponent_HostBindings(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵlistener(\"valueChange\", function DxCheckBoxComponent_valueChange_HostBindingHandler($event) { return ctx.change($event); })(\"onBlur\", function DxCheckBoxComponent_onBlur_HostBindingHandler($event) { return ctx.touched($event); });\r\n    } }, inputs: { accessKey: \"accessKey\", activeStateEnabled: \"activeStateEnabled\", disabled: \"disabled\", elementAttr: \"elementAttr\", enableThreeStateBehavior: \"enableThreeStateBehavior\", focusStateEnabled: \"focusStateEnabled\", height: \"height\", hint: \"hint\", hoverStateEnabled: \"hoverStateEnabled\", iconSize: \"iconSize\", isValid: \"isValid\", name: \"name\", readOnly: \"readOnly\", rtlEnabled: \"rtlEnabled\", tabIndex: \"tabIndex\", text: \"text\", validationError: \"validationError\", validationErrors: \"validationErrors\", validationMessageMode: \"validationMessageMode\", validationMessagePosition: \"validationMessagePosition\", validationStatus: \"validationStatus\", value: \"value\", visible: \"visible\", width: \"width\" }, outputs: { onContentReady: \"onContentReady\", onDisposing: \"onDisposing\", onInitialized: \"onInitialized\", onOptionChanged: \"onOptionChanged\", onValueChanged: \"onValueChanged\", accessKeyChange: \"accessKeyChange\", activeStateEnabledChange: \"activeStateEnabledChange\", disabledChange: \"disabledChange\", elementAttrChange: \"elementAttrChange\", enableThreeStateBehaviorChange: \"enableThreeStateBehaviorChange\", focusStateEnabledChange: \"focusStateEnabledChange\", heightChange: \"heightChange\", hintChange: \"hintChange\", hoverStateEnabledChange: \"hoverStateEnabledChange\", iconSizeChange: \"iconSizeChange\", isValidChange: \"isValidChange\", nameChange: \"nameChange\", readOnlyChange: \"readOnlyChange\", rtlEnabledChange: \"rtlEnabledChange\", tabIndexChange: \"tabIndexChange\", textChange: \"textChange\", validationErrorChange: \"validationErrorChange\", validationErrorsChange: \"validationErrorsChange\", validationMessageModeChange: \"validationMessageModeChange\", validationMessagePositionChange: \"validationMessagePositionChange\", validationStatusChange: \"validationStatusChange\", valueChange: \"valueChange\", visibleChange: \"visibleChange\", widthChange: \"widthChange\", onBlur: \"onBlur\" }, features: [i0.ɵɵProvidersFeature([\r\n            DxTemplateHost,\r\n            WatcherHelper,\r\n            CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n            NestedOptionHost,\r\n            IterableDifferHelper\r\n        ]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function DxCheckBoxComponent_Template(rf, ctx) { }, encapsulation: 2 });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxCheckBoxComponent, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'dx-check-box',\r\n                template: '',\r\n                providers: [\r\n                    DxTemplateHost,\r\n                    WatcherHelper,\r\n                    CUSTOM_VALUE_ACCESSOR_PROVIDER,\r\n                    NestedOptionHost,\r\n                    IterableDifferHelper\r\n                ]\r\n            }]\r\n    }], function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1.DxTemplateHost }, { type: i1.WatcherHelper }, { type: i1.IterableDifferHelper }, { type: i1.NestedOptionHost }, { type: i2.TransferState }, { type: undefined, decorators: [{\r\n                type: Inject,\r\n                args: [PLATFORM_ID]\r\n            }] }]; }, { accessKey: [{\r\n            type: Input\r\n        }], activeStateEnabled: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], elementAttr: [{\r\n            type: Input\r\n        }], enableThreeStateBehavior: [{\r\n            type: Input\r\n        }], focusStateEnabled: [{\r\n            type: Input\r\n        }], height: [{\r\n            type: Input\r\n        }], hint: [{\r\n            type: Input\r\n        }], hoverStateEnabled: [{\r\n            type: Input\r\n        }], iconSize: [{\r\n            type: Input\r\n        }], isValid: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], readOnly: [{\r\n            type: Input\r\n        }], rtlEnabled: [{\r\n            type: Input\r\n        }], tabIndex: [{\r\n            type: Input\r\n        }], text: [{\r\n            type: Input\r\n        }], validationError: [{\r\n            type: Input\r\n        }], validationErrors: [{\r\n            type: Input\r\n        }], validationMessageMode: [{\r\n            type: Input\r\n        }], validationMessagePosition: [{\r\n            type: Input\r\n        }], validationStatus: [{\r\n            type: Input\r\n        }], value: [{\r\n            type: Input\r\n        }], visible: [{\r\n            type: Input\r\n        }], width: [{\r\n            type: Input\r\n        }], onContentReady: [{\r\n            type: Output\r\n        }], onDisposing: [{\r\n            type: Output\r\n        }], onInitialized: [{\r\n            type: Output\r\n        }], onOptionChanged: [{\r\n            type: Output\r\n        }], onValueChanged: [{\r\n            type: Output\r\n        }], accessKeyChange: [{\r\n            type: Output\r\n        }], activeStateEnabledChange: [{\r\n            type: Output\r\n        }], disabledChange: [{\r\n            type: Output\r\n        }], elementAttrChange: [{\r\n            type: Output\r\n        }], enableThreeStateBehaviorChange: [{\r\n            type: Output\r\n        }], focusStateEnabledChange: [{\r\n            type: Output\r\n        }], heightChange: [{\r\n            type: Output\r\n        }], hintChange: [{\r\n            type: Output\r\n        }], hoverStateEnabledChange: [{\r\n            type: Output\r\n        }], iconSizeChange: [{\r\n            type: Output\r\n        }], isValidChange: [{\r\n            type: Output\r\n        }], nameChange: [{\r\n            type: Output\r\n        }], readOnlyChange: [{\r\n            type: Output\r\n        }], rtlEnabledChange: [{\r\n            type: Output\r\n        }], tabIndexChange: [{\r\n            type: Output\r\n        }], textChange: [{\r\n            type: Output\r\n        }], validationErrorChange: [{\r\n            type: Output\r\n        }], validationErrorsChange: [{\r\n            type: Output\r\n        }], validationMessageModeChange: [{\r\n            type: Output\r\n        }], validationMessagePositionChange: [{\r\n            type: Output\r\n        }], validationStatusChange: [{\r\n            type: Output\r\n        }], valueChange: [{\r\n            type: Output\r\n        }], visibleChange: [{\r\n            type: Output\r\n        }], widthChange: [{\r\n            type: Output\r\n        }], onBlur: [{\r\n            type: Output\r\n        }], change: [{\r\n            type: HostListener,\r\n            args: ['valueChange', ['$event']]\r\n        }], touched: [{\r\n            type: HostListener,\r\n            args: ['onBlur', ['$event']]\r\n        }] }); })();\r\nclass DxCheckBoxModule {\r\n}\r\n/** @nocollapse */ DxCheckBoxModule.ɵfac = function DxCheckBoxModule_Factory(t) { return new (t || DxCheckBoxModule)(); };\r\n/** @nocollapse */ DxCheckBoxModule.ɵmod = /** @pureOrBreakMyCode */ i0.ɵɵdefineNgModule({ type: DxCheckBoxModule });\r\n/** @nocollapse */ DxCheckBoxModule.ɵinj = /** @pureOrBreakMyCode */ i0.ɵɵdefineInjector({ imports: [[\r\n            DxIntegrationModule,\r\n            DxTemplateModule,\r\n            BrowserTransferStateModule\r\n        ], DxTemplateModule] });\r\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DxCheckBoxModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    DxIntegrationModule,\r\n                    DxTemplateModule,\r\n                    BrowserTransferStateModule\r\n                ],\r\n                declarations: [\r\n                    DxCheckBoxComponent\r\n                ],\r\n                exports: [\r\n                    DxCheckBoxComponent,\r\n                    DxTemplateModule\r\n                ]\r\n            }]\r\n    }], null, null); })();\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(DxCheckBoxModule, { declarations: [DxCheckBoxComponent], imports: [DxIntegrationModule,\r\n        DxTemplateModule,\r\n        BrowserTransferStateModule], exports: [DxCheckBoxComponent, DxTemplateModule] }); })();\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DxCheckBoxComponent, DxCheckBoxModule };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}