{"ast":null,"code":"import { __read, __spread } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { system } from \"../System\";\nimport { registry } from \"../Registry\";\nimport { Container } from \"../Container\";\nimport { Component } from \"../Component\";\nimport { Paper } from \"../rendering/Paper\";\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\nimport { Preloader } from \"../elements/Preloader\";\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\nimport { Tooltip } from \"../elements/Tooltip\";\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\nimport { percent } from \"./Percent\";\nimport { options } from \"../Options\";\nimport * as $array from \"./Array\";\nimport * as $type from \"./Type\";\nimport * as $dom from \"./DOM\";\nimport * as $utils from \"./Utils\";\nimport * as $log from \"./Log\";\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\n\nfunction createChild(htmlElement, classType) {\n  var htmlContainer = $dom.getElement(htmlElement); // If there's no container available yet, we create a fake one\n\n  var tmpContainer = false;\n\n  if (!htmlContainer) {\n    htmlContainer = document.createElement(\"div\");\n    htmlContainer.style.width = \"200px\";\n    htmlContainer.style.height = \"200px\";\n    htmlContainer.style.top = \"0\";\n    htmlContainer.style.left = \"0\";\n    htmlContainer.style.visibility = \"hidden\";\n    htmlContainer.style.position = \"absolute\";\n    document.body.appendChild(htmlContainer);\n    tmpContainer = true;\n  }\n\n  if (htmlContainer) {\n    htmlContainer.innerHTML = \"\"; //htmlContainer.style.overflow = \"hidden\";\n\n    var svgDiv_1 = new SVGContainer(htmlContainer);\n    var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1)); // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\n    // svg area - this is often needed when working with small charts.\n    // main container which holds content container and tooltips container\n\n    var container_1 = new Container();\n    container_1.htmlContainer = htmlContainer;\n    container_1.svgContainer = svgDiv_1;\n    container_1.width = percent(100);\n    container_1.height = percent(100);\n    container_1.background.fillOpacity = 0;\n    container_1.paper = paper;\n    paper.append(container_1.group); // Set up moving to proper element container if it's not yet ready at call time\n\n    if (tmpContainer) {\n      $dom.ready(function () {\n        container_1.moveHtmlContainer(htmlElement);\n      });\n    } // this is set from parent container, but this one doesn't have, so do it manually.\n\n\n    container_1.relativeWidth = 1;\n    container_1.relativeHeight = 1;\n    svgDiv_1.container = container_1; // creating classType instance\n\n    var sprite_1 = container_1.createChild(classType);\n    sprite_1.topParent = container_1;\n    var uid = sprite_1.uid;\n    registry.invalidSprites[uid] = [];\n    registry.invalidDatas[uid] = [];\n    registry.invalidPositions[uid] = [];\n    registry.invalidLayouts[uid] = [];\n    container_1.baseId = uid;\n    sprite_1.isBaseSprite = true;\n    sprite_1.focusFilter = new FocusFilter();\n    registry.baseSprites.push(sprite_1);\n    registry.baseSpritesByUid[uid] = sprite_1;\n    sprite_1.maskRectangle = {\n      x: 0,\n      y: 0,\n      width: Math.max(svgDiv_1.width || 0, 0),\n      height: Math.max(svgDiv_1.height || 0, 0)\n    }; // this solves issues with display:none, as all children are measured as 0x0\n\n    container_1.events.on(\"maxsizechanged\", function (event) {\n      if (event.previousWidth == 0 || event.previousHeight == 0) {\n        container_1.deepInvalidate();\n      }\n\n      if (sprite_1.maskRectangle) {\n        sprite_1.maskRectangle = {\n          x: 0,\n          y: 0,\n          width: Math.max(svgDiv_1.width || 0, 0),\n          height: Math.max(svgDiv_1.height || 0, 0)\n        };\n      }\n    });\n    var loopTimer_1 = null; // Checks to see whether the chart was properly disposed or not\n\n    var loop_1 = function () {\n      if (!sprite_1.isDisposed()) {\n        if ($dom.getRoot(sprite_1.dom) == null) {\n          if (options.autoDispose) {\n            container_1.htmlContainer = undefined;\n            svgDiv_1.htmlElement = undefined;\n            sprite_1.dispose();\n          } else {\n            $log.warn(\"Chart was not disposed\", sprite_1.uid);\n          }\n\n          loopTimer_1 = null;\n        } else {\n          loopTimer_1 = window.setTimeout(loop_1, 1000);\n        }\n      } else {\n        loopTimer_1 = null;\n      }\n    };\n\n    loop_1();\n    sprite_1.addDisposer(new Disposer(function () {\n      if (loopTimer_1 !== null) {\n        clearTimeout(loopTimer_1);\n      }\n\n      $array.remove(registry.baseSprites, sprite_1);\n      registry.baseSpritesByUid[sprite_1.uid] = undefined;\n    })); // TODO figure out a better way of doing this\n\n    sprite_1.addDisposer(container_1); // tooltip container\n\n    var tooltipContainer_1 = container_1.createChild(Container);\n    tooltipContainer_1.topParent = container_1;\n    tooltipContainer_1.width = percent(100);\n    tooltipContainer_1.height = percent(100);\n    tooltipContainer_1.isMeasured = false;\n    container_1.tooltipContainer = tooltipContainer_1;\n    sprite_1.tooltip = new Tooltip();\n    sprite_1.tooltip.hide(0);\n    sprite_1.tooltip.setBounds({\n      x: 0,\n      y: 0,\n      width: tooltipContainer_1.maxWidth,\n      height: tooltipContainer_1.maxHeight\n    });\n    tooltipContainer_1.events.on(\"maxsizechanged\", function () {\n      $type.getValue(sprite_1.tooltip).setBounds({\n        x: 0,\n        y: 0,\n        width: tooltipContainer_1.maxWidth,\n        height: tooltipContainer_1.maxHeight\n      });\n    }, undefined, false); //@todo: maybe we don't need to create one by default but only on request?\n\n    var preloader_1 = new Preloader();\n    preloader_1.events.on(\"inited\", function () {\n      preloader_1.__disabled = true;\n    }, undefined, false);\n    container_1.preloader = preloader_1; //if (!options.commercialLicense) {\n\n    if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\n      var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\n      tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\n        if (tooltipContainer_1.maxWidth <= 100 || tooltipContainer_1.maxHeight <= 50) {\n          logo_1.hide();\n        } else if (logo_1.isHidden || logo_1.isHiding) {\n          logo_1.show();\n        }\n      }, undefined, false);\n      sprite_1.logo = logo_1;\n      logo_1.align = \"left\";\n      logo_1.valign = \"bottom\";\n    }\n\n    $utils.used(sprite_1.numberFormatter); // need to create one.\n    // Set this as an autonomouse instance\n    // Controls like Preloader, Export will use this.\n\n    container_1.isStandaloneInstance = true;\n\n    if (options.onlyShowOnViewport) {\n      if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\n        sprite_1.__disabled = true;\n        sprite_1.tooltipContainer.__disabled = true;\n        var disposers = [$dom.addEventListener(window, \"DOMContentLoaded\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"load\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"resize\", function () {\n          viewPortHandler(sprite_1);\n        }), $dom.addEventListener(window, \"scroll\", function () {\n          viewPortHandler(sprite_1);\n        })];\n\n        if (options.viewportTarget) {\n          var targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\n\n          for (var i = 0; i < targets.length; i++) {\n            var target = targets[i];\n            disposers.push($dom.addEventListener(target, \"resize\", function () {\n              viewPortHandler(sprite_1);\n            }));\n            disposers.push($dom.addEventListener(target, \"scroll\", function () {\n              viewPortHandler(sprite_1);\n            }));\n          }\n        }\n\n        var disposer = new MultiDisposer(disposers);\n        sprite_1.addDisposer(disposer);\n        sprite_1.vpDisposer = disposer;\n      } else if (options.queue) {\n        addToQueue(sprite_1);\n      }\n    } else if (options.queue) {\n      addToQueue(sprite_1);\n    }\n\n    return sprite_1;\n  } else {\n    system.log(\"html container not found\");\n    throw new Error(\"html container not found\");\n  }\n}\n/**\r\n * Disposes all of the currently active charts.\r\n */\n\n\nexport function disposeAllCharts() {\n  while (registry.baseSprites.length !== 0) {\n    registry.baseSprites.pop().dispose();\n  }\n}\nexport function addToQueue(sprite) {\n  if (registry.queue.indexOf(sprite) == -1) {\n    sprite.__disabled = true;\n    sprite.tooltipContainer.__disabled = true;\n    sprite.events.disableType(\"appeared\");\n\n    if (registry.queue.length == 0) {\n      registry.events.once(\"exitframe\", function () {\n        queueHandler(sprite);\n      });\n      system.requestFrame();\n    }\n\n    sprite.addDisposer(new Disposer(function () {\n      removeFromQueue(sprite);\n    }));\n    registry.queue.push(sprite);\n  }\n}\nexport function removeFromQueue(sprite) {\n  var index = registry.queue.indexOf(sprite);\n\n  if (index >= 0) {\n    registry.queue.splice(registry.queue.indexOf(sprite), 1);\n    var nextSprite = registry.queue[index];\n\n    if (nextSprite) {\n      queueHandler(nextSprite);\n    }\n  }\n}\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\n\nexport function viewPortHandler(sprite) {\n  if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n\n    addToQueue(sprite);\n  }\n}\nexport function queueHandler(sprite) {\n  if (sprite && sprite.tooltipContainer) {\n    sprite.__disabled = false;\n    sprite.tooltipContainer.__disabled = false;\n    sprite.events.enableType(\"appeared\");\n    sprite.dispatch(\"removedfromqueue\");\n\n    if (sprite.showOnInit) {\n      sprite.events.on(\"appeared\", function () {\n        removeFromQueue(sprite);\n      });\n    }\n\n    if (sprite.vpDisposer) {\n      sprite.vpDisposer.dispose();\n    }\n\n    if (sprite instanceof Container) {\n      sprite.invalidateLabels();\n    }\n\n    if (sprite.tooltipContainer) {\n      sprite.tooltipContainer.invalidateLayout();\n    }\n\n    if (sprite instanceof Component) {\n      sprite.invalidateData();\n      sprite.reinit();\n      sprite.events.once(\"datavalidated\", function () {\n        if (sprite.showOnInit) {\n          sprite.appear();\n        } else {\n          removeFromQueue(sprite);\n        }\n      });\n    } else {\n      sprite.reinit();\n      sprite.events.once(\"inited\", function () {\n        removeFromQueue(sprite);\n      });\n\n      if (sprite.showOnInit) {\n        sprite.appear();\n      }\n    }\n  }\n}\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\n\nexport function create(htmlElement, classType) {\n  // This is a nasty hack for the benefit of vanilla JS users, who do not\n  // enjoy benefits of type-check anyway.\n  // We're allowing passing in a name of the class rather than type reference\n  // itself.\n  var classError;\n\n  if ($type.isString(classType)) {\n    if ($type.hasValue(registry.registeredClasses[classType])) {\n      classType = registry.registeredClasses[classType];\n    } else {\n      classType = registry.registeredClasses[\"Container\"];\n      classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n    }\n  } // Create the chart\n\n\n  var chart = createChild(htmlElement, classType); // Error?\n\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  }\n\n  return chart;\n}\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\n\nexport function createFromConfig(config, htmlElement, classType) {\n  // Extract chart type from config if necessary\n  if (!$type.hasValue(classType)) {\n    classType = config.type;\n    delete config.type;\n  } // Extract element from config if necessary\n\n\n  if (!$type.hasValue(htmlElement)) {\n    htmlElement = config.container;\n    delete config.container;\n  } // Check if we need to extract actual type reference\n\n\n  var finalType;\n  var classError;\n\n  if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\n    finalType = registry.registeredClasses[classType];\n  } else if (typeof classType !== \"function\") {\n    finalType = Container;\n    classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\n  } else {\n    finalType = classType;\n  } // Create the chart\n\n\n  var chart = createChild(htmlElement, finalType); // Set config\n\n  if (classError) {\n    chart.raiseCriticalError(classError);\n  } else {\n    chart.config = config;\n  }\n\n  return chart;\n}\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\n\nexport function createDeferred(callback, scope) {\n  var rest = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    rest[_i - 2] = arguments[_i];\n  }\n\n  return new Promise(function (resolve, reject) {\n    registry.deferred.push({\n      scope: scope,\n      callback: callback,\n      args: rest,\n      resolve: resolve\n    });\n\n    if (registry.deferred.length == 1) {\n      processNextDeferred();\n    }\n  });\n}\n\nfunction processNextDeferred() {\n  var _a;\n\n  var next = registry.deferred[0];\n\n  if (next) {\n    var sprite_2 = (_a = next.callback).call.apply(_a, __spread([next.scope], next.args));\n\n    sprite_2.events.on(\"ready\", function () {\n      next.resolve(sprite_2);\n      registry.deferred.shift();\n\n      if (options.deferredDelay) {\n        setTimeout(processNextDeferred, options.deferredDelay);\n      } else {\n        processNextDeferred();\n      }\n    });\n  }\n}\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\n\n\nexport function useTheme(value) {\n  if (registry.themes.indexOf(value) === -1) {\n    registry.themes.push(value);\n  }\n}\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\n\nexport function unuseTheme(value) {\n  $array.remove(registry.themes, value);\n}\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\n\nexport function unuseAllThemes() {\n  registry.themes = [];\n}\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\n\nexport function addLicense(license) {\n  options.licenses.push(license);\n}","map":{"version":3,"names":["__read","__spread","system","registry","Container","Component","Paper","SVGContainer","svgContainers","FocusFilter","Preloader","AmChartsLogo","Tooltip","Disposer","MultiDisposer","percent","options","$array","$type","$dom","$utils","$log","createChild","htmlElement","classType","htmlContainer","getElement","tmpContainer","document","createElement","style","width","height","top","left","visibility","position","body","appendChild","innerHTML","svgDiv_1","paper","length","container_1","svgContainer","background","fillOpacity","append","group","ready","moveHtmlContainer","relativeWidth","relativeHeight","container","sprite_1","topParent","uid","invalidSprites","invalidDatas","invalidPositions","invalidLayouts","baseId","isBaseSprite","focusFilter","baseSprites","push","baseSpritesByUid","maskRectangle","x","y","Math","max","events","on","event","previousWidth","previousHeight","deepInvalidate","loopTimer_1","loop_1","isDisposed","getRoot","dom","autoDispose","undefined","dispose","warn","window","setTimeout","addDisposer","clearTimeout","remove","tooltipContainer_1","isMeasured","tooltipContainer","tooltip","hide","setBounds","maxWidth","maxHeight","getValue","preloader_1","__disabled","preloader","hasLicense","logo_1","ev","isHidden","isHiding","show","logo","align","valign","used","numberFormatter","isStandaloneInstance","onlyShowOnViewport","isElementInViewport","viewportTarget","disposers","addEventListener","viewPortHandler","targets","isArray","i","target","disposer","vpDisposer","queue","addToQueue","log","Error","disposeAllCharts","pop","sprite","indexOf","disableType","once","queueHandler","requestFrame","removeFromQueue","index","splice","nextSprite","enableType","dispatch","showOnInit","invalidateLabels","invalidateLayout","invalidateData","reinit","appear","create","classError","isString","hasValue","registeredClasses","chart","raiseCriticalError","createFromConfig","config","type","finalType","createDeferred","callback","scope","rest","_i","arguments","Promise","resolve","reject","deferred","args","processNextDeferred","_a","next","sprite_2","call","apply","shift","deferredDelay","useTheme","value","themes","unuseTheme","unuseAllThemes","addLicense","license","licenses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/utils/Instance.js"],"sourcesContent":["import { __read, __spread } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { system } from \"../System\";\r\nimport { registry } from \"../Registry\";\r\nimport { Container } from \"../Container\";\r\nimport { Component } from \"../Component\";\r\nimport { Paper } from \"../rendering/Paper\";\r\nimport { SVGContainer, svgContainers } from \"../rendering/SVGContainer\";\r\nimport { FocusFilter } from \"../rendering/filters/FocusFilter\";\r\nimport { Preloader } from \"../elements/Preloader\";\r\nimport { AmChartsLogo } from \"../elements/AmChartsLogo\";\r\nimport { Tooltip } from \"../elements/Tooltip\";\r\nimport { Disposer, MultiDisposer } from \"../utils/Disposer\";\r\nimport { percent } from \"./Percent\";\r\nimport { options } from \"../Options\";\r\nimport * as $array from \"./Array\";\r\nimport * as $type from \"./Type\";\r\nimport * as $dom from \"./DOM\";\r\nimport * as $utils from \"./Utils\";\r\nimport * as $log from \"./Log\";\r\n/**\r\n * ============================================================================\r\n * INSTANTIATION FUNCTIONS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates all HTML and SVG containers needed for the chart instance, as well\r\n * as the new [[Sprite]] (as specified in `classType` parameter).\r\n *\r\n * @param htmlElement  A container to creat elements in\r\n * @param classType    A class definition of the new element to create\r\n * @return Newly-created Sprite object\r\n */\r\nfunction createChild(htmlElement, classType) {\r\n    var htmlContainer = $dom.getElement(htmlElement);\r\n    // If there's no container available yet, we create a fake one\r\n    var tmpContainer = false;\r\n    if (!htmlContainer) {\r\n        htmlContainer = document.createElement(\"div\");\r\n        htmlContainer.style.width = \"200px\";\r\n        htmlContainer.style.height = \"200px\";\r\n        htmlContainer.style.top = \"0\";\r\n        htmlContainer.style.left = \"0\";\r\n        htmlContainer.style.visibility = \"hidden\";\r\n        htmlContainer.style.position = \"absolute\";\r\n        document.body.appendChild(htmlContainer);\r\n        tmpContainer = true;\r\n    }\r\n    if (htmlContainer) {\r\n        htmlContainer.innerHTML = \"\";\r\n        //htmlContainer.style.overflow = \"hidden\";\r\n        var svgDiv_1 = new SVGContainer(htmlContainer);\r\n        var paper = new Paper(svgDiv_1.SVGContainer, \"svg-\" + (svgContainers.length - 1));\r\n        // the approach with masks is chosen because overflow:visible is set on SVG element in order tooltips could go outside\r\n        // svg area - this is often needed when working with small charts.\r\n        // main container which holds content container and tooltips container\r\n        var container_1 = new Container();\r\n        container_1.htmlContainer = htmlContainer;\r\n        container_1.svgContainer = svgDiv_1;\r\n        container_1.width = percent(100);\r\n        container_1.height = percent(100);\r\n        container_1.background.fillOpacity = 0;\r\n        container_1.paper = paper;\r\n        paper.append(container_1.group);\r\n        // Set up moving to proper element container if it's not yet ready at call time\r\n        if (tmpContainer) {\r\n            $dom.ready(function () {\r\n                container_1.moveHtmlContainer(htmlElement);\r\n            });\r\n        }\r\n        // this is set from parent container, but this one doesn't have, so do it manually.\r\n        container_1.relativeWidth = 1;\r\n        container_1.relativeHeight = 1;\r\n        svgDiv_1.container = container_1;\r\n        // creating classType instance\r\n        var sprite_1 = container_1.createChild(classType);\r\n        sprite_1.topParent = container_1;\r\n        var uid = sprite_1.uid;\r\n        registry.invalidSprites[uid] = [];\r\n        registry.invalidDatas[uid] = [];\r\n        registry.invalidPositions[uid] = [];\r\n        registry.invalidLayouts[uid] = [];\r\n        container_1.baseId = uid;\r\n        sprite_1.isBaseSprite = true;\r\n        sprite_1.focusFilter = new FocusFilter();\r\n        registry.baseSprites.push(sprite_1);\r\n        registry.baseSpritesByUid[uid] = sprite_1;\r\n        sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width || 0, 0), height: Math.max(svgDiv_1.height || 0, 0) };\r\n        // this solves issues with display:none, as all children are measured as 0x0\r\n        container_1.events.on(\"maxsizechanged\", function (event) {\r\n            if (event.previousWidth == 0 || event.previousHeight == 0) {\r\n                container_1.deepInvalidate();\r\n            }\r\n            if (sprite_1.maskRectangle) {\r\n                sprite_1.maskRectangle = { x: 0, y: 0, width: Math.max(svgDiv_1.width || 0, 0), height: Math.max(svgDiv_1.height || 0, 0) };\r\n            }\r\n        });\r\n        var loopTimer_1 = null;\r\n        // Checks to see whether the chart was properly disposed or not\r\n        var loop_1 = function () {\r\n            if (!sprite_1.isDisposed()) {\r\n                if ($dom.getRoot(sprite_1.dom) == null) {\r\n                    if (options.autoDispose) {\r\n                        container_1.htmlContainer = undefined;\r\n                        svgDiv_1.htmlElement = undefined;\r\n                        sprite_1.dispose();\r\n                    }\r\n                    else {\r\n                        $log.warn(\"Chart was not disposed\", sprite_1.uid);\r\n                    }\r\n                    loopTimer_1 = null;\r\n                }\r\n                else {\r\n                    loopTimer_1 = window.setTimeout(loop_1, 1000);\r\n                }\r\n            }\r\n            else {\r\n                loopTimer_1 = null;\r\n            }\r\n        };\r\n        loop_1();\r\n        sprite_1.addDisposer(new Disposer(function () {\r\n            if (loopTimer_1 !== null) {\r\n                clearTimeout(loopTimer_1);\r\n            }\r\n            $array.remove(registry.baseSprites, sprite_1);\r\n            registry.baseSpritesByUid[sprite_1.uid] = undefined;\r\n        }));\r\n        // TODO figure out a better way of doing this\r\n        sprite_1.addDisposer(container_1);\r\n        // tooltip container\r\n        var tooltipContainer_1 = container_1.createChild(Container);\r\n        tooltipContainer_1.topParent = container_1;\r\n        tooltipContainer_1.width = percent(100);\r\n        tooltipContainer_1.height = percent(100);\r\n        tooltipContainer_1.isMeasured = false;\r\n        container_1.tooltipContainer = tooltipContainer_1;\r\n        sprite_1.tooltip = new Tooltip();\r\n        sprite_1.tooltip.hide(0);\r\n        sprite_1.tooltip.setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        tooltipContainer_1.events.on(\"maxsizechanged\", function () {\r\n            $type.getValue(sprite_1.tooltip).setBounds({ x: 0, y: 0, width: tooltipContainer_1.maxWidth, height: tooltipContainer_1.maxHeight });\r\n        }, undefined, false);\r\n        //@todo: maybe we don't need to create one by default but only on request?\r\n        var preloader_1 = new Preloader();\r\n        preloader_1.events.on(\"inited\", function () {\r\n            preloader_1.__disabled = true;\r\n        }, undefined, false);\r\n        container_1.preloader = preloader_1;\r\n        //if (!options.commercialLicense) {\r\n        if (sprite_1 instanceof Container && !sprite_1.hasLicense()) {\r\n            var logo_1 = tooltipContainer_1.createChild(AmChartsLogo);\r\n            tooltipContainer_1.events.on(\"maxsizechanged\", function (ev) {\r\n                if ((tooltipContainer_1.maxWidth <= 100) || (tooltipContainer_1.maxHeight <= 50)) {\r\n                    logo_1.hide();\r\n                }\r\n                else if (logo_1.isHidden || logo_1.isHiding) {\r\n                    logo_1.show();\r\n                }\r\n            }, undefined, false);\r\n            sprite_1.logo = logo_1;\r\n            logo_1.align = \"left\";\r\n            logo_1.valign = \"bottom\";\r\n        }\r\n        $utils.used(sprite_1.numberFormatter); // need to create one.\r\n        // Set this as an autonomouse instance\r\n        // Controls like Preloader, Export will use this.\r\n        container_1.isStandaloneInstance = true;\r\n        if (options.onlyShowOnViewport) {\r\n            if (!$dom.isElementInViewport(htmlContainer, options.viewportTarget)) {\r\n                sprite_1.__disabled = true;\r\n                sprite_1.tooltipContainer.__disabled = true;\r\n                var disposers = [\r\n                    $dom.addEventListener(window, \"DOMContentLoaded\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"load\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"resize\", function () { viewPortHandler(sprite_1); }),\r\n                    $dom.addEventListener(window, \"scroll\", function () { viewPortHandler(sprite_1); })\r\n                ];\r\n                if (options.viewportTarget) {\r\n                    var targets = $type.isArray(options.viewportTarget) ? options.viewportTarget : options.viewportTarget ? [options.viewportTarget] : [];\r\n                    for (var i = 0; i < targets.length; i++) {\r\n                        var target = targets[i];\r\n                        disposers.push($dom.addEventListener(target, \"resize\", function () { viewPortHandler(sprite_1); }));\r\n                        disposers.push($dom.addEventListener(target, \"scroll\", function () { viewPortHandler(sprite_1); }));\r\n                    }\r\n                }\r\n                var disposer = new MultiDisposer(disposers);\r\n                sprite_1.addDisposer(disposer);\r\n                sprite_1.vpDisposer = disposer;\r\n            }\r\n            else if (options.queue) {\r\n                addToQueue(sprite_1);\r\n            }\r\n        }\r\n        else if (options.queue) {\r\n            addToQueue(sprite_1);\r\n        }\r\n        return sprite_1;\r\n    }\r\n    else {\r\n        system.log(\"html container not found\");\r\n        throw new Error(\"html container not found\");\r\n    }\r\n}\r\n/**\r\n * Disposes all of the currently active charts.\r\n */\r\nexport function disposeAllCharts() {\r\n    while (registry.baseSprites.length !== 0) {\r\n        registry.baseSprites.pop().dispose();\r\n    }\r\n}\r\nexport function addToQueue(sprite) {\r\n    if (registry.queue.indexOf(sprite) == -1) {\r\n        sprite.__disabled = true;\r\n        sprite.tooltipContainer.__disabled = true;\r\n        sprite.events.disableType(\"appeared\");\r\n        if (registry.queue.length == 0) {\r\n            registry.events.once(\"exitframe\", function () {\r\n                queueHandler(sprite);\r\n            });\r\n            system.requestFrame();\r\n        }\r\n        sprite.addDisposer(new Disposer(function () {\r\n            removeFromQueue(sprite);\r\n        }));\r\n        registry.queue.push(sprite);\r\n    }\r\n}\r\nexport function removeFromQueue(sprite) {\r\n    var index = registry.queue.indexOf(sprite);\r\n    if (index >= 0) {\r\n        registry.queue.splice(registry.queue.indexOf(sprite), 1);\r\n        var nextSprite = registry.queue[index];\r\n        if (nextSprite) {\r\n            queueHandler(nextSprite);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Checks whether the chart was not initialized fully due to setting\r\n * of `onlyShowOnViewport`. If it hasn't and is now in the viewport\r\n * the chart will be initialized.\r\n *\r\n * @since 4.9.12\r\n * @param  sprite  Top-level chart object\r\n */\r\nexport function viewPortHandler(sprite) {\r\n    if (sprite.__disabled && $dom.isElementInViewport(sprite.htmlContainer, options.viewportTarget)) {\r\n        if (sprite.vpDisposer) {\r\n            sprite.vpDisposer.dispose();\r\n        }\r\n        addToQueue(sprite);\r\n    }\r\n}\r\nexport function queueHandler(sprite) {\r\n    if (sprite && sprite.tooltipContainer) {\r\n        sprite.__disabled = false;\r\n        sprite.tooltipContainer.__disabled = false;\r\n        sprite.events.enableType(\"appeared\");\r\n        sprite.dispatch(\"removedfromqueue\");\r\n        if (sprite.showOnInit) {\r\n            sprite.events.on(\"appeared\", function () {\r\n                removeFromQueue(sprite);\r\n            });\r\n        }\r\n        if (sprite.vpDisposer) {\r\n            sprite.vpDisposer.dispose();\r\n        }\r\n        if (sprite instanceof Container) {\r\n            sprite.invalidateLabels();\r\n        }\r\n        if (sprite.tooltipContainer) {\r\n            sprite.tooltipContainer.invalidateLayout();\r\n        }\r\n        if (sprite instanceof Component) {\r\n            sprite.invalidateData();\r\n            sprite.reinit();\r\n            sprite.events.once(\"datavalidated\", function () {\r\n                if (sprite.showOnInit) {\r\n                    sprite.appear();\r\n                }\r\n                else {\r\n                    removeFromQueue(sprite);\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            sprite.reinit();\r\n            sprite.events.once(\"inited\", function () {\r\n                removeFromQueue(sprite);\r\n            });\r\n            if (sprite.showOnInit) {\r\n                sprite.appear();\r\n            }\r\n        }\r\n    }\r\n}\r\n/**\r\n * A shortcut to creating a chart instance.\r\n *\r\n * The first argument is either a reference to or an id of a DOM element to be\r\n * used as a container for the chart.\r\n *\r\n * The second argument is the type reference of the chart type. (for plain\r\n * JavaScript users this can also be a string indicating chart type)\r\n *\r\n * ```TypeScript\r\n * let chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n * ```\r\n * ```JavaScript\r\n * // Can pass in chart type reference like this:\r\n * var chart = am4core.create(\"chartdiv\", am4charts.PieChart);\r\n *\r\n * // ... or chart class type as a string:\r\n * var chart = am4core.create(\"chartdiv\", \"PieChart\");\r\n * ```\r\n *\r\n * @param htmlElement  Reference or id of the target container element\r\n * @param classType    Class type of the target chart type\r\n * @return Chart instance\r\n */\r\nexport function create(htmlElement, classType) {\r\n    // This is a nasty hack for the benefit of vanilla JS users, who do not\r\n    // enjoy benefits of type-check anyway.\r\n    // We're allowing passing in a name of the class rather than type reference\r\n    // itself.\r\n    var classError;\r\n    if ($type.isString(classType)) {\r\n        if ($type.hasValue(registry.registeredClasses[classType])) {\r\n            classType = registry.registeredClasses[classType];\r\n        }\r\n        else {\r\n            classType = registry.registeredClasses[\"Container\"];\r\n            classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n        }\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, classType);\r\n    // Error?\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * A shortcut to creating a chart from a config object.\r\n *\r\n * Example:\r\n *\r\n * ```TypeScript\r\n * let chart am4core.createFromConfig({ ... }, \"chartdiv\", am4charts.XYChart );\r\n * ```\r\n * ```JavaScript\r\n * var chart am4core.createFromConfig({ ... }, \"chartdiv\", \"XYChart\" );\r\n * ```\r\n *\r\n * If `chartType` parameter is not supplied it must be set in a config object,\r\n * via reference to chart type, e.g.:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": am4charts.XYChart,\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * Or via string: (if you are using JavaScript)\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * A `container` can either be a reference to an HTML container to put chart\r\n * in, or it's unique id.\r\n *\r\n * If `container` is not specified, it must be included in the config object:\r\n *\r\n * ```TypeScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * {\r\n *   \"type\": \"XYChart\",\r\n *   \"container\": \"chartdiv\",\r\n *   // ...\r\n * }\r\n * ```\r\n *\r\n * @param config       Config object in property/value pairs\r\n * @param htmlElement  Container reference or ID\r\n * @param objectType   Chart type\r\n * @return A newly created chart instance\r\n * @todo Throw exception if type is not correct\r\n */\r\nexport function createFromConfig(config, htmlElement, classType) {\r\n    // Extract chart type from config if necessary\r\n    if (!$type.hasValue(classType)) {\r\n        classType = config.type;\r\n        delete config.type;\r\n    }\r\n    // Extract element from config if necessary\r\n    if (!$type.hasValue(htmlElement)) {\r\n        htmlElement = config.container;\r\n        delete config.container;\r\n    }\r\n    // Check if we need to extract actual type reference\r\n    var finalType;\r\n    var classError;\r\n    if ($type.isString(classType) && $type.hasValue(registry.registeredClasses[classType])) {\r\n        finalType = registry.registeredClasses[classType];\r\n    }\r\n    else if (typeof classType !== \"function\") {\r\n        finalType = Container;\r\n        classError = new Error(\"Class [\" + classType + \"] is not loaded.\");\r\n    }\r\n    else {\r\n        finalType = classType;\r\n    }\r\n    // Create the chart\r\n    var chart = createChild(htmlElement, finalType);\r\n    // Set config\r\n    if (classError) {\r\n        chart.raiseCriticalError(classError);\r\n    }\r\n    else {\r\n        chart.config = config;\r\n    }\r\n    return chart;\r\n}\r\n/**\r\n * Useful in creating real queues form mult-chart creation.\r\n *\r\n * Accepts a reference to a function which crates and returns actual chart\r\n * object.\r\n *\r\n * It returns a `Promise` which you can use to catch chart instance once it's\r\n * created.\r\n *\r\n * ```TypeScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   let chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   let chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n * ```JavaScript\r\n * am4core.createDeferred(function(div) {\r\n *   // Create first chart\r\n *   var chart = am4core.create(div, am4charts.XYChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv1\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n *\r\n * am4core.createDeferred(function(div) {\r\n *   // Create second chart\r\n *   var chart = am4core.create(div, am4charts.PieChart);\r\n *   // ...\r\n *   return chart;\r\n * }, \"chartdiv2\").then(chart) {\r\n *   // `chart` variable holds an instance of the chart\r\n *   console.log(\"Chart ready\", chart);\r\n * }\r\n * ```\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v4/concepts/performance/#Deferred_daisy_chained_instantiation} for more information\r\n * @since 4.10.0\r\n * @param  callback  Callback function that creates chart\r\n * @param  scope     Scope to call callback in\r\n * @param  ...rest   Parameters to pass into callback\r\n * @return           Promise with chart instance\r\n */\r\nexport function createDeferred(callback, scope) {\r\n    var rest = [];\r\n    for (var _i = 2; _i < arguments.length; _i++) {\r\n        rest[_i - 2] = arguments[_i];\r\n    }\r\n    return new Promise(function (resolve, reject) {\r\n        registry.deferred.push({\r\n            scope: scope,\r\n            callback: callback,\r\n            args: rest,\r\n            resolve: resolve\r\n        });\r\n        if (registry.deferred.length == 1) {\r\n            processNextDeferred();\r\n        }\r\n    });\r\n}\r\nfunction processNextDeferred() {\r\n    var _a;\r\n    var next = registry.deferred[0];\r\n    if (next) {\r\n        var sprite_2 = (_a = next.callback).call.apply(_a, __spread([next.scope], next.args));\r\n        sprite_2.events.on(\"ready\", function () {\r\n            next.resolve(sprite_2);\r\n            registry.deferred.shift();\r\n            if (options.deferredDelay) {\r\n                setTimeout(processNextDeferred, options.deferredDelay);\r\n            }\r\n            else {\r\n                processNextDeferred();\r\n            }\r\n        });\r\n    }\r\n}\r\n/**\r\n * Applies a theme to System, and subsequently all chart instances created\r\n * from that point forward.\r\n *\r\n * amCharts supports multiple themes. Calling `useTheme` multiple times will\r\n * make the System apply multiple themes, rather than overwrite previously\r\n * set one.\r\n *\r\n * This enables combining features from multiple themes on the same chart.\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n * ```JavaScript\r\n * am4core.useTheme(am4themes.material);\r\n * am4core.useTheme(am4themes.animated);\r\n * ```\r\n *\r\n * The above will apply both the Material color and animation options to all\r\n * charts created.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function useTheme(value) {\r\n    if (registry.themes.indexOf(value) === -1) {\r\n        registry.themes.push(value);\r\n    }\r\n}\r\n/**\r\n * Removes a theme from \"active themes\" list, so it won't get applied to any\r\n * charts created subsequently.\r\n *\r\n * @param value  A reference to a theme\r\n */\r\nexport function unuseTheme(value) {\r\n    $array.remove(registry.themes, value);\r\n}\r\n/**\r\n * Removes all \"active\" themes. Any charts created subsequently will not have\r\n * any theme applied to them.\r\n */\r\nexport function unuseAllThemes() {\r\n    registry.themes = [];\r\n}\r\n/**\r\n * Adds a license, e.g.:\r\n *\r\n * ```TypeScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n * ```JavaScript\r\n * am4core.addLicense(\"xxxxxxxx\");\r\n * ```\r\n *\r\n * Multiple licenses can be added to cover for multiple products.\r\n *\r\n * @since 4.5.16\r\n * @param  license  License key\r\n */\r\nexport function addLicense(license) {\r\n    options.licenses.push(license);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}