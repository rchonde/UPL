{"ast":null,"code":"/**\r\n * Defines Percent Chart Series.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Series, SeriesDataItem } from \"./Series\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { Label } from \"../../core/elements/Label\";\nimport { Color } from \"../../core/utils/Color\";\nimport { Tick } from \"../elements/Tick\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { Container } from \"../../core/Container\";\nimport { ColorSet } from \"../../core/utils/ColorSet\";\nimport { registry } from \"../../core/Registry\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $ease from \"../../core/utils/Ease\";\nimport * as $type from \"../../core/utils/Type\";\nimport { Disposer } from \"../../core/utils/Disposer\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n//@todo: sequenced?\n\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar PercentSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(PercentSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PercentSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"PercentSeriesDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Adds an `id` attribute the the slice element and returns its id.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  PercentSeriesDataItem.prototype.uidAttr = function () {\n    return this.slice.uidAttr();\n  };\n  /**\r\n   * Hide the data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param toValue   Target value for animation\r\n   * @param fields    Fields to animate while hiding\r\n   */\n\n\n  PercentSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\n    if (!fields) {\n      fields = [\"value\"];\n    }\n\n    return _super.prototype.hide.call(this, duration, delay, 0, fields);\n  };\n  /**\r\n   * Sets visibility of the Data Item.\r\n   *\r\n   * @param value Data Item\r\n   */\n\n\n  PercentSeriesDataItem.prototype.setVisibility = function (value, noChangeValues) {\n    if (!noChangeValues) {\n      if (value) {\n        this.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\n      } else {\n        this.setWorkingValue(\"value\", 0, 0, 0);\n      }\n    }\n\n    _super.prototype.setVisibility.call(this, value, noChangeValues);\n  };\n  /**\r\n   * Show hidden data item (and corresponding visual elements).\r\n   *\r\n   * @param duration  Duration (ms)\r\n   * @param delay     Delay hiding (ms)\r\n   * @param fields    Fields to animate while hiding\r\n   */\n\n\n  PercentSeriesDataItem.prototype.show = function (duration, delay, fields) {\n    if (!fields) {\n      fields = [\"value\"];\n    }\n\n    return _super.prototype.show.call(this, duration, delay, fields);\n  };\n\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"category\", {\n    /**\r\n     * @return Category\r\n     */\n    get: function () {\n      return this.properties.category;\n    },\n\n    /**\r\n     * Category.\r\n     *\r\n     * @param value  Category\r\n     */\n    set: function (value) {\n      this.setProperty(\"category\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates a marker used in the legend for this slice.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker  Marker container\r\n   */\n\n  PercentSeriesDataItem.prototype.createLegendMarker = function (marker) {\n    this.component.createLegendMarker(marker, this);\n  };\n\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"legendDataItem\", {\n    /**\r\n     * @return Legend data item\r\n     */\n    get: function () {\n      return this._legendDataItem;\n    },\n\n    /**\r\n     * A legend's data item, that corresponds to this data item.\r\n     *\r\n     * @param value  Legend data item\r\n     */\n    set: function (value) {\n      this._legendDataItem = value;\n\n      if (value.label) {\n        value.label.dataItem = this;\n      }\n\n      if (value.valueLabel) {\n        value.valueLabel.dataItem = this;\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"tick\", {\n    /**\r\n     * A Tick element, related to this data item. (slice)\r\n     *\r\n     * @readonly\r\n     * @return Tick element\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._tick) {\n        var tick_1 = this.component.ticks.create();\n        this._tick = tick_1;\n        this.addSprite(tick_1);\n\n        this._disposers.push(tick_1);\n\n        tick_1.parent = this.component.ticksContainer;\n\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.ticks.removeValue(tick_1);\n          }\n        }));\n\n        tick_1.visible = this.visible;\n      }\n\n      return this._tick;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"label\", {\n    /**\r\n     * A Label element, related to this data item. (slice)\r\n     *\r\n     * @readonly\r\n     * @return Label element\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._label) {\n        var label_1 = this.component.labels.create();\n        this.addSprite(label_1);\n        this._label = label_1;\n\n        this._disposers.push(label_1);\n\n        label_1.parent = this.component.labelsContainer;\n\n        this._disposers.push(new Disposer(function () {\n          if (_this.component) {\n            _this.component.labels.removeValue(label_1);\n          }\n        }));\n\n        label_1.visible = this.visible;\n      }\n\n      return this._label;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"slice\", {\n    /**\r\n     * An element, related to this data item. (slice)\r\n     *\r\n     * @readonly\r\n     * @return Slice element\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._slice) {\n        var component_1 = this.component;\n        var slice_1 = component_1.slices.create();\n        this.addSprite(slice_1);\n        this._slice = slice_1;\n\n        this._disposers.push(slice_1);\n\n        slice_1.parent = component_1.slicesContainer;\n\n        this._disposers.push(new Disposer(function () {\n          component_1.slices.removeValue(slice_1);\n        }));\n\n        slice_1.visible = this.visible; // Apply accessibility\n\n        if (component_1.itemsFocusable()) {\n          if (!$type.hasValue(this.component.role)) {\n            this.component.role = \"menu\";\n          }\n\n          if (!$type.hasValue(slice_1.role)) {\n            slice_1.role = \"menuitem\";\n          }\n\n          slice_1.focusable = true;\n        } else {\n          if (!$type.hasValue(this.component.role)) {\n            this.component.role = \"list\";\n          }\n\n          if (!$type.hasValue(slice_1.role)) {\n            slice_1.role = \"listitem\";\n          }\n\n          slice_1.focusable = false;\n        } // Apply screen reader label\n\n\n        if (slice_1.focusable) {\n          slice_1.events.on(\"focus\", function (ev) {\n            slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\n          }, undefined, false);\n          slice_1.events.on(\"blur\", function (ev) {\n            slice_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n\n        if (slice_1.hoverable) {\n          slice_1.events.on(\"over\", function (ev) {\n            slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\n          }, undefined, false);\n          slice_1.events.on(\"out\", function (ev) {\n            slice_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n      }\n\n      return this._slice;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeriesDataItem.prototype, \"hiddenInLegend\", {\n    /**\r\n     * @return Disabled in legend?\r\n     */\n    get: function () {\n      return this.properties.hiddenInLegend;\n    },\n\n    /**\r\n     * Should dataItem (slice) be hidden in legend?\r\n     *\r\n     * @param value Visible in legend?\r\n     */\n    set: function (value) {\n      this.setProperty(\"hiddenInLegend\", value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PercentSeriesDataItem;\n}(SeriesDataItem);\n\nexport { PercentSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\n\nvar PercentSeries =\n/** @class */\nfunction (_super) {\n  __extends(PercentSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function PercentSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"PercentSeries\";\n    _this._addAllDataItems = false;\n    _this.colors = new ColorSet();\n    _this.colors.step = 1;\n    _this.isMeasured = true;\n    _this.calculatePercent = true;\n\n    var slicesContainer = _this.createChild(Container);\n\n    slicesContainer.shouldClone = false;\n    slicesContainer.isMeasured = false;\n    _this.slicesContainer = slicesContainer;\n\n    var ticksContainer = _this.createChild(Container);\n\n    ticksContainer.shouldClone = false;\n    ticksContainer.isMeasured = false;\n    ticksContainer.layout = \"none\";\n    _this.ticksContainer = ticksContainer;\n\n    var labelsContainer = _this.createChild(Container);\n\n    labelsContainer.shouldClone = false;\n    labelsContainer.isMeasured = false;\n    labelsContainer.layout = \"none\";\n    _this.labelsContainer = labelsContainer;\n    _this.alignLabels = false;\n\n    _this.bulletsContainer.toFront(); // Make all slices focusable\n\n\n    _this.skipFocusThreshold = 50;\n    var defaultState = _this.defaultState;\n    defaultState.transitionEasing = $ease.sinOut; // Accessibility\n\n    _this.itemReaderText = \"{category}: {value.percent.formatNumber('#.#p')}\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Creates a slice element.\r\n   *\r\n   * @return Slice\r\n   */\n\n\n  PercentSeries.prototype.createSlice = function () {\n    return new Sprite();\n  };\n  /**\r\n   * Creates a tick element.\r\n   *\r\n   * @return Tick\r\n   */\n\n\n  PercentSeries.prototype.createTick = function () {\n    return new Tick();\n  };\n  /**\r\n   * Sreates label element.\r\n   *\r\n   * @return label\r\n   */\n\n\n  PercentSeries.prototype.createLabel = function () {\n    return new Label();\n  };\n\n  Object.defineProperty(PercentSeries.prototype, \"slices\", {\n    /**\r\n     * A list of slice elements for the series.\r\n     *\r\n     * Use its `template` to configure look and behavior of the slices. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * series.slices.template.stroke = am4core.color(\"#fff\");\r\n     * series.slices.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.slices.template.stroke = am4core.color(\"#fff\");\r\n     * series.slices.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"slices\": {\r\n     *       \"stroke\": \"#fff\",\r\n     *       \"strokeWidth\": 2\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n     * @return Slices\r\n     */\n    get: function () {\n      if (!this._slices) {\n        var slice = this.createSlice();\n        slice.applyOnClones = true;\n\n        this._disposers.push(slice);\n\n        this.initSlice(slice);\n        this._slices = new ListTemplate(slice);\n\n        this._disposers.push(new ListDisposer(this._slices));\n      }\n\n      return this._slices;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeries.prototype, \"ticks\", {\n    /**\r\n     * A list of tick elements for the series. Ticks connect slice to its label.\r\n     *\r\n     * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * series.ticks.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.ticks.template.strokeWidth = 2;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"ticks\": {\r\n     *       \"strokeWidth\": 2\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n     * @return Ticks\r\n     */\n    get: function () {\n      if (!this._ticks) {\n        var tick = this.createTick();\n        tick.applyOnClones = true;\n\n        this._disposers.push(tick);\n\n        this.initTick(tick);\n        this._ticks = new ListTemplate(tick);\n\n        this._disposers.push(new ListDisposer(this._ticks));\n      }\n\n      return this._ticks;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeries.prototype, \"labels\", {\n    /**\r\n     * A list of slice label elements for the series.\r\n     *\r\n     * Use its `template` to configure look and behavior of the labels. E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * series.labels.template.fill = am4core.color(\"#c00\");\r\n     * series.labels.template.fontSize = 20;\r\n     * ```\r\n     * ```JavaScript\r\n     * series.labels.template.fill = am4core.color(\"#c00\");\r\n     * series.labels.template.fontSize = 20;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"series\": [{\r\n     *     // ...\r\n     *     \"labels\": {\r\n     *       \"stroke\": \"#c00\",\r\n     *       \"fontSize\": 20\r\n     *     }\r\n     *   }]\r\n     * }\r\n     * ```\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n     * @return Labels\r\n     */\n    get: function () {\n      if (!this._labels) {\n        var label = this.createLabel();\n        label.applyOnClones = true;\n\n        this._disposers.push(label);\n\n        this.initLabel(label);\n        this._labels = new ListTemplate(label);\n\n        this._disposers.push(new ListDisposer(this._labels));\n      }\n\n      return this._labels;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n  PercentSeries.prototype.createDataItem = function () {\n    return new PercentSeriesDataItem();\n  };\n  /**\r\n   * Creates and returns a new slice element.\r\n   *\r\n   * @param sliceType  Type of the slice element\r\n   * @return Slice\r\n   */\n\n\n  PercentSeries.prototype.initSlice = function (slice) {};\n\n  PercentSeries.prototype.initLabel = function (label) {\n    label.text = \"{category}: {value.percent.formatNumber('#.0p')}\";\n    label.isMeasured = false;\n    label.padding(5, 5, 5, 5);\n  };\n\n  PercentSeries.prototype.initTick = function (label) {};\n  /**\r\n   * Validates (processes) data items.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  PercentSeries.prototype.validateDataItems = function () {\n    this.colors.reset();\n\n    if (this.patterns) {\n      this.patterns.reset();\n    }\n\n    _super.prototype.validateDataItems.call(this);\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  PercentSeries.prototype.validateDataElement = function (dataItem) {\n    var slice = dataItem.slice;\n\n    if (slice) {\n      if (slice.fill == undefined) {\n        if (this.patterns) {\n          if (!$type.hasValue(slice.stroke)) {\n            slice.stroke = this.colors.next();\n          }\n\n          slice.fill = this.patterns.next();\n\n          if ($type.hasValue(slice.fillOpacity)) {\n            slice.fill.backgroundOpacity = slice.fillOpacity;\n          }\n\n          if (slice.stroke instanceof Color) {\n            slice.fill.stroke = slice.stroke;\n            slice.fill.fill = slice.stroke;\n          }\n        } else {\n          slice.fill = this.colors.next();\n        }\n      } else {\n        this.colors.currentStep += this.colors.step;\n      }\n\n      if (slice.stroke == undefined) {\n        slice.stroke = slice.fill;\n      }\n    } // do this at the end, otherwise bullets won't be positioned properly\n\n\n    _super.prototype.validateDataElement.call(this, dataItem);\n\n    if (slice) {\n      dataItem.bullets.each(function (key, bullet) {\n        if (bullet.fill == undefined) {\n          bullet.fill = slice.fill;\n        }\n\n        if (bullet.stroke == undefined) {\n          bullet.stroke = slice.stroke;\n        }\n      });\n    }\n\n    this.updateLegendValue(dataItem);\n  };\n  /**\r\n   * Validates (processes) data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  PercentSeries.prototype.validateData = function () {\n    _super.prototype.validateData.call(this);\n\n    if (this.chart) {\n      this.chart.feedLegend();\n    }\n  };\n  /**\r\n   * Arranges slice labels according to position settings.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItems  Data items\r\n   */\n\n\n  PercentSeries.prototype.arrangeLabels = function (dataItems) {\n    for (var i = 0, len = dataItems.length; i < len; i++) {\n      var dataItem = dataItems[i];\n      var label = dataItem.label;\n\n      if (label) {\n        if (label.invalid) {\n          label.validate();\n        }\n\n        var lh = label.measuredHeight;\n\n        if (!label.visible) {\n          lh = 0;\n        }\n\n        if (label.pixelY - lh / 2 < -this.maxHeight / 2) {\n          label.y = -this.maxHeight / 2 + lh / 2;\n        }\n\n        var nextLabel = this.getNextLabel(i + 1, dataItems);\n        var bottom = label.pixelY + lh / 2;\n\n        if (nextLabel) {\n          if (nextLabel.invalid) {\n            nextLabel.validate();\n          }\n\n          var nextLabelHeight = nextLabel.measuredHeight;\n\n          if (!nextLabel.visible) {\n            nextLabelHeight = 0;\n          }\n\n          var nextLabelY = nextLabel.pixelY;\n\n          if (nextLabelY == null) {\n            nextLabelY = 0;\n          }\n\n          if (nextLabelY - nextLabelHeight / 2 < bottom) {\n            nextLabel.y = bottom + nextLabelHeight / 2;\n          }\n        }\n      }\n    }\n  };\n\n  PercentSeries.prototype.arrangeLabels2 = function (dataItems) {\n    var previousTop = this.maxHeight / 2;\n\n    for (var i = dataItems.length - 1; i >= 0; i--) {\n      var dataItem = dataItems[i];\n      var label = dataItem.label;\n\n      if (label) {\n        if (label.invalid) {\n          label.validate();\n        }\n\n        var lh = label.measuredHeight;\n\n        if (!label.visible) {\n          lh = 0;\n        } //if (i == dataItems.length - 1) {\n        //previousTop += lh / 2;\n        //}\n\n\n        if (label.pixelY + lh / 2 > previousTop) {\n          label.y = previousTop - lh / 2;\n          previousTop = label.y - lh / 2;\n        }\n      }\n    }\n  };\n  /**\r\n   * Returns the next label according to `index`.\r\n   *\r\n   * @param index      Current index\r\n   * @param dataItems  Data items\r\n   * @return Label element\r\n   */\n\n\n  PercentSeries.prototype.getNextLabel = function (index, dataItems) {\n    if (dataItems.length >= index) {\n      var nextDataItem = dataItems[index];\n\n      if (nextDataItem) {\n        if (nextDataItem.label) {\n          if (nextDataItem.visible) {\n            return nextDataItem.label;\n          } else {\n            return this.getNextLabel(index + 1, dataItems);\n          }\n        } else {\n          return this.getNextLabel(index + 1, dataItems);\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(PercentSeries.prototype, \"colors\", {\n    /**\r\n     * @return Color set\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"colors\");\n    },\n\n    /**\r\n     * A color set to be used for slices.\r\n     *\r\n     * For each new subsequent slice, the chart will assign the next color in\r\n     * this set.\r\n     *\r\n     * @param value  Color set\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"colors\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PercentSeries.prototype, \"patterns\", {\n    /**\r\n     * @return Pattern set\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"patterns\");\n    },\n\n    /**\r\n     * A [[PatternSet]] to use when creating patterned fills for slices.\r\n     *\r\n     * @since 4.7.5\r\n     * @param value  Pattern set\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"patterns\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Binds related legend data item's visual settings to this series' visual\r\n   * settings.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker    Container\r\n   * @param dataItem  Data item\r\n   */\n\n  PercentSeries.prototype.createLegendMarker = function (marker, dataItem) {\n    $iter.each(marker.children.iterator(), function (child) {\n      var slice = dataItem.slice;\n      child.defaultState.properties.fill = slice.fill;\n      child.defaultState.properties.stroke = slice.stroke;\n      child.defaultState.properties.fillOpacity = slice.fillOpacity;\n      child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\n      child.fill = slice.fill;\n      child.stroke = slice.stroke;\n      child.fillOpacity = slice.fillOpacity;\n      child.strokeOpacity = slice.strokeOpacity;\n\n      if (child.fill == undefined) {\n        child.__disabled = true;\n      }\n\n      var legendDataItem = marker.dataItem;\n      legendDataItem.color = slice.fill;\n      legendDataItem.colorOrig = slice.fill;\n      child.addDisposer(slice.events.on(\"propertychanged\", function (ev) {\n        if (ev.property == \"fill\") {\n          child.__disabled = false;\n\n          if (!child.isActive) {\n            child.fill = slice.fill;\n          }\n\n          child.defaultState.properties.fill = slice.fill;\n          legendDataItem.color = slice.fill;\n          legendDataItem.colorOrig = slice.fill;\n        }\n\n        if (ev.property == \"stroke\") {\n          if (!child.isActive) {\n            child.stroke = slice.stroke;\n          }\n\n          child.defaultState.properties.stroke = slice.stroke;\n        }\n\n        if (ev.property == \"strokeOpacity\") {\n          if (!child.isActive) {\n            child.strokeOpacity = slice.strokeOpacity;\n          }\n\n          child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\n        }\n      }, undefined, false));\n    });\n  };\n  /**\r\n   * Repositions bullets when slice's size changes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event  Event\r\n   */\n\n\n  PercentSeries.prototype.handleSliceScale = function (event) {\n    var _this = this;\n\n    var slice = event.target;\n    var dataItem = slice.dataItem;\n\n    if (dataItem && dataItem.bullets) {\n      $iter.each(dataItem.bullets.iterator(), function (a) {\n        var value = a[1];\n\n        _this.positionBullet(value);\n      });\n    }\n  };\n  /**\r\n   * Repositions bullet and labels when slice moves.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param event  Event\r\n   */\n\n\n  PercentSeries.prototype.handleSliceMove = function (event) {};\n  /**\r\n   * Copies all properties from another instance of [[PercentSeries]].\r\n   *\r\n   * @param source  Source series\r\n   */\n\n\n  PercentSeries.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.slices.template.copyFrom(source.slices.template);\n    this.labels.template.copyFrom(source.labels.template);\n    this.ticks.template.copyFrom(source.ticks.template);\n    this.colors = source.colors.clone();\n  };\n\n  Object.defineProperty(PercentSeries.prototype, \"alignLabels\", {\n    /**\r\n     * @return Align labels?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"alignLabels\");\n    },\n\n    /**\r\n     * Align labels into nice vertical columns?\r\n     *\r\n     * This will ensure that labels never overlap with each other.\r\n     *\r\n     * Arranging labels into columns makes them more readble, and better user\r\n     * experience.\r\n     *\r\n     * If set to `false` labels will be positioned at `label.radius` distance,\r\n     * and may, in some cases, overlap.\r\n     *\r\n     * @default true\r\n     * @param value  Align labels?\r\n     */\n    set: function (value) {\n      this.setAlignLabels(value);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * @ignore\r\n   */\n\n  PercentSeries.prototype.setAlignLabels = function (value) {\n    this.setPropertyValue(\"alignLabels\", value, true);\n  };\n\n  Object.defineProperty(PercentSeries.prototype, \"ignoreZeroValues\", {\n    /**\r\n     * @return Ignore zero values\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"ignoreZeroValues\");\n    },\n\n    /**\r\n     * If set to `true` the chart will not show slices with zero values.\r\n     *\r\n     * @default false\r\n     * @since 4.7.9\r\n     * @param  value  Ignore zero values\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"ignoreZeroValues\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates corresponding legend data item with current values.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n  PercentSeries.prototype.updateLegendValue = function (dataItem) {\n    if (dataItem) {\n      var legendDataItem = dataItem.legendDataItem;\n      var legendSettings = dataItem.legendSettings;\n\n      if (legendDataItem && legendSettings) {\n        if (legendSettings) {\n          if (legendSettings.labelText) {\n            legendDataItem.label.text = legendSettings.labelText;\n          }\n\n          if (legendSettings.itemLabelText) {\n            legendDataItem.label.text = legendSettings.itemLabelText;\n          }\n\n          if (legendSettings.valueText) {\n            legendDataItem.valueLabel.text = legendSettings.valueText;\n          }\n\n          if (legendSettings.itemValueText) {\n            legendDataItem.valueLabel.text = legendSettings.itemValueText;\n          }\n        }\n      }\n    }\n  };\n\n  return PercentSeries;\n}(Series);\n\nexport { PercentSeries };\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\n/**\r\n * Add default responsive rules\r\n */\n\n/**\r\n * Disable labels and ticks.\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.maybeXS,\n  state: function (target, stateId) {\n    if (target instanceof PercentSeries) {\n      var state = target.states.create(stateId);\n      var labelState = target.labels.template.states.create(stateId);\n      labelState.properties.disabled = true;\n      var tickState = target.ticks.template.states.create(stateId);\n      tickState.properties.disabled = true;\n      return state;\n    }\n\n    return null;\n  }\n});","map":{"version":3,"names":["__extends","Series","SeriesDataItem","Sprite","Label","Color","Tick","ListTemplate","ListDisposer","Container","ColorSet","registry","$iter","$ease","$type","Disposer","defaultRules","ResponsiveBreakpoints","PercentSeriesDataItem","_super","_this","call","className","applyTheme","prototype","uidAttr","slice","hide","duration","delay","toValue","fields","setVisibility","value","noChangeValues","setWorkingValue","values","show","Object","defineProperty","get","properties","category","set","setProperty","enumerable","configurable","createLegendMarker","marker","component","_legendDataItem","label","dataItem","valueLabel","_tick","tick_1","ticks","create","addSprite","_disposers","push","parent","ticksContainer","removeValue","visible","_label","label_1","labels","labelsContainer","_slice","component_1","slice_1","slices","slicesContainer","itemsFocusable","hasValue","role","focusable","events","on","ev","readerTitle","populateString","itemReaderText","undefined","hoverable","hiddenInLegend","PercentSeries","_addAllDataItems","colors","step","isMeasured","calculatePercent","createChild","shouldClone","layout","alignLabels","bulletsContainer","toFront","skipFocusThreshold","defaultState","transitionEasing","sinOut","createSlice","createTick","createLabel","_slices","applyOnClones","initSlice","_ticks","tick","initTick","_labels","initLabel","createDataItem","text","padding","validateDataItems","reset","patterns","validateDataElement","fill","stroke","next","fillOpacity","backgroundOpacity","currentStep","bullets","each","key","bullet","updateLegendValue","validateData","chart","feedLegend","arrangeLabels","dataItems","i","len","length","invalid","validate","lh","measuredHeight","pixelY","maxHeight","y","nextLabel","getNextLabel","bottom","nextLabelHeight","nextLabelY","arrangeLabels2","previousTop","index","nextDataItem","getPropertyValue","setPropertyValue","children","iterator","child","strokeOpacity","__disabled","legendDataItem","color","colorOrig","addDisposer","property","isActive","handleSliceScale","event","target","a","positionBullet","handleSliceMove","copyFrom","source","template","clone","setAlignLabels","legendSettings","labelText","itemLabelText","valueText","itemValueText","registeredClasses","relevant","maybeXS","state","stateId","states","labelState","disabled","tickState"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js"],"sourcesContent":["/**\r\n * Defines Percent Chart Series.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Series, SeriesDataItem } from \"./Series\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { Tick } from \"../elements/Tick\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $ease from \"../../core/utils/Ease\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n//@todo: sequenced?\r\n/**\r\n * Defines a [[DataItem]] for [[PercentSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar PercentSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(PercentSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeriesDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Adds an `id` attribute the the slice element and returns its id.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeriesDataItem.prototype.uidAttr = function () {\r\n        return this.slice.uidAttr();\r\n    };\r\n    /**\r\n     * Hide the data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param toValue   Target value for animation\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.hide.call(this, duration, delay, 0, fields);\r\n    };\r\n    /**\r\n     * Sets visibility of the Data Item.\r\n     *\r\n     * @param value Data Item\r\n     */\r\n    PercentSeriesDataItem.prototype.setVisibility = function (value, noChangeValues) {\r\n        if (!noChangeValues) {\r\n            if (value) {\r\n                this.setWorkingValue(\"value\", this.values[\"value\"].value, 0, 0);\r\n            }\r\n            else {\r\n                this.setWorkingValue(\"value\", 0, 0, 0);\r\n            }\r\n        }\r\n        _super.prototype.setVisibility.call(this, value, noChangeValues);\r\n    };\r\n    /**\r\n     * Show hidden data item (and corresponding visual elements).\r\n     *\r\n     * @param duration  Duration (ms)\r\n     * @param delay     Delay hiding (ms)\r\n     * @param fields    Fields to animate while hiding\r\n     */\r\n    PercentSeriesDataItem.prototype.show = function (duration, delay, fields) {\r\n        if (!fields) {\r\n            fields = [\"value\"];\r\n        }\r\n        return _super.prototype.show.call(this, duration, delay, fields);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"category\", {\r\n        /**\r\n         * @return Category\r\n         */\r\n        get: function () {\r\n            return this.properties.category;\r\n        },\r\n        /**\r\n         * Category.\r\n         *\r\n         * @param value  Category\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"category\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates a marker used in the legend for this slice.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Marker container\r\n     */\r\n    PercentSeriesDataItem.prototype.createLegendMarker = function (marker) {\r\n        this.component.createLegendMarker(marker, this);\r\n    };\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"legendDataItem\", {\r\n        /**\r\n         * @return Legend data item\r\n         */\r\n        get: function () {\r\n            return this._legendDataItem;\r\n        },\r\n        /**\r\n         * A legend's data item, that corresponds to this data item.\r\n         *\r\n         * @param value  Legend data item\r\n         */\r\n        set: function (value) {\r\n            this._legendDataItem = value;\r\n            if (value.label) {\r\n                value.label.dataItem = this;\r\n            }\r\n            if (value.valueLabel) {\r\n                value.valueLabel.dataItem = this;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"tick\", {\r\n        /**\r\n         * A Tick element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Tick element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._tick) {\r\n                var tick_1 = this.component.ticks.create();\r\n                this._tick = tick_1;\r\n                this.addSprite(tick_1);\r\n                this._disposers.push(tick_1);\r\n                tick_1.parent = this.component.ticksContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.ticks.removeValue(tick_1);\r\n                    }\r\n                }));\r\n                tick_1.visible = this.visible;\r\n            }\r\n            return this._tick;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"label\", {\r\n        /**\r\n         * A Label element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Label element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._label) {\r\n                var label_1 = this.component.labels.create();\r\n                this.addSprite(label_1);\r\n                this._label = label_1;\r\n                this._disposers.push(label_1);\r\n                label_1.parent = this.component.labelsContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    if (_this.component) {\r\n                        _this.component.labels.removeValue(label_1);\r\n                    }\r\n                }));\r\n                label_1.visible = this.visible;\r\n            }\r\n            return this._label;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"slice\", {\r\n        /**\r\n         * An element, related to this data item. (slice)\r\n         *\r\n         * @readonly\r\n         * @return Slice element\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._slice) {\r\n                var component_1 = this.component;\r\n                var slice_1 = component_1.slices.create();\r\n                this.addSprite(slice_1);\r\n                this._slice = slice_1;\r\n                this._disposers.push(slice_1);\r\n                slice_1.parent = component_1.slicesContainer;\r\n                this._disposers.push(new Disposer(function () {\r\n                    component_1.slices.removeValue(slice_1);\r\n                }));\r\n                slice_1.visible = this.visible;\r\n                // Apply accessibility\r\n                if (component_1.itemsFocusable()) {\r\n                    if (!$type.hasValue(this.component.role)) {\r\n                        this.component.role = \"menu\";\r\n                    }\r\n                    if (!$type.hasValue(slice_1.role)) {\r\n                        slice_1.role = \"menuitem\";\r\n                    }\r\n                    slice_1.focusable = true;\r\n                }\r\n                else {\r\n                    if (!$type.hasValue(this.component.role)) {\r\n                        this.component.role = \"list\";\r\n                    }\r\n                    if (!$type.hasValue(slice_1.role)) {\r\n                        slice_1.role = \"listitem\";\r\n                    }\r\n                    slice_1.focusable = false;\r\n                }\r\n                // Apply screen reader label\r\n                if (slice_1.focusable) {\r\n                    slice_1.events.on(\"focus\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"blur\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (slice_1.hoverable) {\r\n                    slice_1.events.on(\"over\", function (ev) {\r\n                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);\r\n                    }, undefined, false);\r\n                    slice_1.events.on(\"out\", function (ev) {\r\n                        slice_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n            }\r\n            return this._slice;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeriesDataItem.prototype, \"hiddenInLegend\", {\r\n        /**\r\n         * @return Disabled in legend?\r\n         */\r\n        get: function () {\r\n            return this.properties.hiddenInLegend;\r\n        },\r\n        /**\r\n         * Should dataItem (slice) be hidden in legend?\r\n         *\r\n         * @param value Visible in legend?\r\n         */\r\n        set: function (value) {\r\n            this.setProperty(\"hiddenInLegend\", value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return PercentSeriesDataItem;\r\n}(SeriesDataItem));\r\nexport { PercentSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[PercentSeries]] which is a base class for [[PieSeries]],\r\n * [[FunnelSeries]], and [[PyramidSeries]].\r\n *\r\n * @see {@link IPercentSeriesEvents} for a list of available Events\r\n * @see {@link IPercentSeriesAdapters} for a list of available Adapters\r\n */\r\nvar PercentSeries = /** @class */ (function (_super) {\r\n    __extends(PercentSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function PercentSeries() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"PercentSeries\";\r\n        _this._addAllDataItems = false;\r\n        _this.colors = new ColorSet();\r\n        _this.colors.step = 1;\r\n        _this.isMeasured = true;\r\n        _this.calculatePercent = true;\r\n        var slicesContainer = _this.createChild(Container);\r\n        slicesContainer.shouldClone = false;\r\n        slicesContainer.isMeasured = false;\r\n        _this.slicesContainer = slicesContainer;\r\n        var ticksContainer = _this.createChild(Container);\r\n        ticksContainer.shouldClone = false;\r\n        ticksContainer.isMeasured = false;\r\n        ticksContainer.layout = \"none\";\r\n        _this.ticksContainer = ticksContainer;\r\n        var labelsContainer = _this.createChild(Container);\r\n        labelsContainer.shouldClone = false;\r\n        labelsContainer.isMeasured = false;\r\n        labelsContainer.layout = \"none\";\r\n        _this.labelsContainer = labelsContainer;\r\n        _this.alignLabels = false;\r\n        _this.bulletsContainer.toFront();\r\n        // Make all slices focusable\r\n        _this.skipFocusThreshold = 50;\r\n        var defaultState = _this.defaultState;\r\n        defaultState.transitionEasing = $ease.sinOut;\r\n        // Accessibility\r\n        _this.itemReaderText = \"{category}: {value.percent.formatNumber('#.#p')}\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Creates a slice element.\r\n     *\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.createSlice = function () {\r\n        return new Sprite();\r\n    };\r\n    /**\r\n     * Creates a tick element.\r\n     *\r\n     * @return Tick\r\n     */\r\n    PercentSeries.prototype.createTick = function () {\r\n        return new Tick();\r\n    };\r\n    /**\r\n     * Sreates label element.\r\n     *\r\n     * @return label\r\n     */\r\n    PercentSeries.prototype.createLabel = function () {\r\n        return new Label();\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"slices\", {\r\n        /**\r\n         * A list of slice elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the slices. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.slices.template.stroke = am4core.color(\"#fff\");\r\n         * series.slices.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"slices\": {\r\n         *       \"stroke\": \"#fff\",\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Slices\r\n         */\r\n        get: function () {\r\n            if (!this._slices) {\r\n                var slice = this.createSlice();\r\n                slice.applyOnClones = true;\r\n                this._disposers.push(slice);\r\n                this.initSlice(slice);\r\n                this._slices = new ListTemplate(slice);\r\n                this._disposers.push(new ListDisposer(this._slices));\r\n            }\r\n            return this._slices;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"ticks\", {\r\n        /**\r\n         * A list of tick elements for the series. Ticks connect slice to its label.\r\n         *\r\n         * Use its `template` to configure look and behavior of the ticks. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.ticks.template.strokeWidth = 2;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"ticks\": {\r\n         *       \"strokeWidth\": 2\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Ticks\r\n         */\r\n        get: function () {\r\n            if (!this._ticks) {\r\n                var tick = this.createTick();\r\n                tick.applyOnClones = true;\r\n                this._disposers.push(tick);\r\n                this.initTick(tick);\r\n                this._ticks = new ListTemplate(tick);\r\n                this._disposers.push(new ListDisposer(this._ticks));\r\n            }\r\n            return this._ticks;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"labels\", {\r\n        /**\r\n         * A list of slice label elements for the series.\r\n         *\r\n         * Use its `template` to configure look and behavior of the labels. E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JavaScript\r\n         * series.labels.template.fill = am4core.color(\"#c00\");\r\n         * series.labels.template.fontSize = 20;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"series\": [{\r\n         *     // ...\r\n         *     \"labels\": {\r\n         *       \"stroke\": \"#c00\",\r\n         *       \"fontSize\": 20\r\n         *     }\r\n         *   }]\r\n         * }\r\n         * ```\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates\r\n         * @return Labels\r\n         */\r\n        get: function () {\r\n            if (!this._labels) {\r\n                var label = this.createLabel();\r\n                label.applyOnClones = true;\r\n                this._disposers.push(label);\r\n                this.initLabel(label);\r\n                this._labels = new ListTemplate(label);\r\n                this._disposers.push(new ListDisposer(this._labels));\r\n            }\r\n            return this._labels;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    PercentSeries.prototype.createDataItem = function () {\r\n        return new PercentSeriesDataItem();\r\n    };\r\n    /**\r\n     * Creates and returns a new slice element.\r\n     *\r\n     * @param sliceType  Type of the slice element\r\n     * @return Slice\r\n     */\r\n    PercentSeries.prototype.initSlice = function (slice) {\r\n    };\r\n    PercentSeries.prototype.initLabel = function (label) {\r\n        label.text = \"{category}: {value.percent.formatNumber('#.0p')}\";\r\n        label.isMeasured = false;\r\n        label.padding(5, 5, 5, 5);\r\n    };\r\n    PercentSeries.prototype.initTick = function (label) {\r\n    };\r\n    /**\r\n     * Validates (processes) data items.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateDataItems = function () {\r\n        this.colors.reset();\r\n        if (this.patterns) {\r\n            this.patterns.reset();\r\n        }\r\n        _super.prototype.validateDataItems.call(this);\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.validateDataElement = function (dataItem) {\r\n        var slice = dataItem.slice;\r\n        if (slice) {\r\n            if (slice.fill == undefined) {\r\n                if (this.patterns) {\r\n                    if (!$type.hasValue(slice.stroke)) {\r\n                        slice.stroke = this.colors.next();\r\n                    }\r\n                    slice.fill = this.patterns.next();\r\n                    if ($type.hasValue(slice.fillOpacity)) {\r\n                        slice.fill.backgroundOpacity = slice.fillOpacity;\r\n                    }\r\n                    if (slice.stroke instanceof Color) {\r\n                        slice.fill.stroke = slice.stroke;\r\n                        slice.fill.fill = slice.stroke;\r\n                    }\r\n                }\r\n                else {\r\n                    slice.fill = this.colors.next();\r\n                }\r\n            }\r\n            else {\r\n                this.colors.currentStep += this.colors.step;\r\n            }\r\n            if (slice.stroke == undefined) {\r\n                slice.stroke = slice.fill;\r\n            }\r\n        }\r\n        // do this at the end, otherwise bullets won't be positioned properly\r\n        _super.prototype.validateDataElement.call(this, dataItem);\r\n        if (slice) {\r\n            dataItem.bullets.each(function (key, bullet) {\r\n                if (bullet.fill == undefined) {\r\n                    bullet.fill = slice.fill;\r\n                }\r\n                if (bullet.stroke == undefined) {\r\n                    bullet.stroke = slice.stroke;\r\n                }\r\n            });\r\n        }\r\n        this.updateLegendValue(dataItem);\r\n    };\r\n    /**\r\n     * Validates (processes) data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    PercentSeries.prototype.validateData = function () {\r\n        _super.prototype.validateData.call(this);\r\n        if (this.chart) {\r\n            this.chart.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Arranges slice labels according to position settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItems  Data items\r\n     */\r\n    PercentSeries.prototype.arrangeLabels = function (dataItems) {\r\n        for (var i = 0, len = dataItems.length; i < len; i++) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                if (label.pixelY - lh / 2 < -this.maxHeight / 2) {\r\n                    label.y = -this.maxHeight / 2 + lh / 2;\r\n                }\r\n                var nextLabel = this.getNextLabel(i + 1, dataItems);\r\n                var bottom = label.pixelY + lh / 2;\r\n                if (nextLabel) {\r\n                    if (nextLabel.invalid) {\r\n                        nextLabel.validate();\r\n                    }\r\n                    var nextLabelHeight = nextLabel.measuredHeight;\r\n                    if (!nextLabel.visible) {\r\n                        nextLabelHeight = 0;\r\n                    }\r\n                    var nextLabelY = nextLabel.pixelY;\r\n                    if (nextLabelY == null) {\r\n                        nextLabelY = 0;\r\n                    }\r\n                    if (nextLabelY - nextLabelHeight / 2 < bottom) {\r\n                        nextLabel.y = bottom + nextLabelHeight / 2;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PercentSeries.prototype.arrangeLabels2 = function (dataItems) {\r\n        var previousTop = this.maxHeight / 2;\r\n        for (var i = dataItems.length - 1; i >= 0; i--) {\r\n            var dataItem = dataItems[i];\r\n            var label = dataItem.label;\r\n            if (label) {\r\n                if (label.invalid) {\r\n                    label.validate();\r\n                }\r\n                var lh = label.measuredHeight;\r\n                if (!label.visible) {\r\n                    lh = 0;\r\n                }\r\n                //if (i == dataItems.length - 1) {\r\n                //previousTop += lh / 2;\r\n                //}\r\n                if (label.pixelY + lh / 2 > previousTop) {\r\n                    label.y = previousTop - lh / 2;\r\n                    previousTop = label.y - lh / 2;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the next label according to `index`.\r\n     *\r\n     * @param index      Current index\r\n     * @param dataItems  Data items\r\n     * @return Label element\r\n     */\r\n    PercentSeries.prototype.getNextLabel = function (index, dataItems) {\r\n        if (dataItems.length >= index) {\r\n            var nextDataItem = dataItems[index];\r\n            if (nextDataItem) {\r\n                if (nextDataItem.label) {\r\n                    if (nextDataItem.visible) {\r\n                        return nextDataItem.label;\r\n                    }\r\n                    else {\r\n                        return this.getNextLabel(index + 1, dataItems);\r\n                    }\r\n                }\r\n                else {\r\n                    return this.getNextLabel(index + 1, dataItems);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"colors\", {\r\n        /**\r\n         * @return Color set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"colors\");\r\n        },\r\n        /**\r\n         * A color set to be used for slices.\r\n         *\r\n         * For each new subsequent slice, the chart will assign the next color in\r\n         * this set.\r\n         *\r\n         * @param value  Color set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"colors\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PercentSeries.prototype, \"patterns\", {\r\n        /**\r\n         * @return Pattern set\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"patterns\");\r\n        },\r\n        /**\r\n         * A [[PatternSet]] to use when creating patterned fills for slices.\r\n         *\r\n         * @since 4.7.5\r\n         * @param value  Pattern set\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"patterns\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Binds related legend data item's visual settings to this series' visual\r\n     * settings.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker    Container\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.createLegendMarker = function (marker, dataItem) {\r\n        $iter.each(marker.children.iterator(), function (child) {\r\n            var slice = dataItem.slice;\r\n            child.defaultState.properties.fill = slice.fill;\r\n            child.defaultState.properties.stroke = slice.stroke;\r\n            child.defaultState.properties.fillOpacity = slice.fillOpacity;\r\n            child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n            child.fill = slice.fill;\r\n            child.stroke = slice.stroke;\r\n            child.fillOpacity = slice.fillOpacity;\r\n            child.strokeOpacity = slice.strokeOpacity;\r\n            if (child.fill == undefined) {\r\n                child.__disabled = true;\r\n            }\r\n            var legendDataItem = marker.dataItem;\r\n            legendDataItem.color = slice.fill;\r\n            legendDataItem.colorOrig = slice.fill;\r\n            child.addDisposer(slice.events.on(\"propertychanged\", function (ev) {\r\n                if (ev.property == \"fill\") {\r\n                    child.__disabled = false;\r\n                    if (!child.isActive) {\r\n                        child.fill = slice.fill;\r\n                    }\r\n                    child.defaultState.properties.fill = slice.fill;\r\n                    legendDataItem.color = slice.fill;\r\n                    legendDataItem.colorOrig = slice.fill;\r\n                }\r\n                if (ev.property == \"stroke\") {\r\n                    if (!child.isActive) {\r\n                        child.stroke = slice.stroke;\r\n                    }\r\n                    child.defaultState.properties.stroke = slice.stroke;\r\n                }\r\n                if (ev.property == \"strokeOpacity\") {\r\n                    if (!child.isActive) {\r\n                        child.strokeOpacity = slice.strokeOpacity;\r\n                    }\r\n                    child.defaultState.properties.strokeOpacity = slice.strokeOpacity;\r\n                }\r\n            }, undefined, false));\r\n        });\r\n    };\r\n    /**\r\n     * Repositions bullets when slice's size changes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceScale = function (event) {\r\n        var _this = this;\r\n        var slice = event.target;\r\n        var dataItem = slice.dataItem;\r\n        if (dataItem && dataItem.bullets) {\r\n            $iter.each(dataItem.bullets.iterator(), function (a) {\r\n                var value = a[1];\r\n                _this.positionBullet(value);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Repositions bullet and labels when slice moves.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param event  Event\r\n     */\r\n    PercentSeries.prototype.handleSliceMove = function (event) {\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[PercentSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    PercentSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.slices.template.copyFrom(source.slices.template);\r\n        this.labels.template.copyFrom(source.labels.template);\r\n        this.ticks.template.copyFrom(source.ticks.template);\r\n        this.colors = source.colors.clone();\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"alignLabels\", {\r\n        /**\r\n         * @return Align labels?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"alignLabels\");\r\n        },\r\n        /**\r\n         * Align labels into nice vertical columns?\r\n         *\r\n         * This will ensure that labels never overlap with each other.\r\n         *\r\n         * Arranging labels into columns makes them more readble, and better user\r\n         * experience.\r\n         *\r\n         * If set to `false` labels will be positioned at `label.radius` distance,\r\n         * and may, in some cases, overlap.\r\n         *\r\n         * @default true\r\n         * @param value  Align labels?\r\n         */\r\n        set: function (value) {\r\n            this.setAlignLabels(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @ignore\r\n     */\r\n    PercentSeries.prototype.setAlignLabels = function (value) {\r\n        this.setPropertyValue(\"alignLabels\", value, true);\r\n    };\r\n    Object.defineProperty(PercentSeries.prototype, \"ignoreZeroValues\", {\r\n        /**\r\n         * @return Ignore zero values\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"ignoreZeroValues\");\r\n        },\r\n        /**\r\n         * If set to `true` the chart will not show slices with zero values.\r\n         *\r\n         * @default false\r\n         * @since 4.7.9\r\n         * @param  value  Ignore zero values\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"ignoreZeroValues\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates corresponding legend data item with current values.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    PercentSeries.prototype.updateLegendValue = function (dataItem) {\r\n        if (dataItem) {\r\n            var legendDataItem = dataItem.legendDataItem;\r\n            var legendSettings = dataItem.legendSettings;\r\n            if (legendDataItem && legendSettings) {\r\n                if (legendSettings) {\r\n                    if (legendSettings.labelText) {\r\n                        legendDataItem.label.text = legendSettings.labelText;\r\n                    }\r\n                    if (legendSettings.itemLabelText) {\r\n                        legendDataItem.label.text = legendSettings.itemLabelText;\r\n                    }\r\n                    if (legendSettings.valueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.valueText;\r\n                    }\r\n                    if (legendSettings.itemValueText) {\r\n                        legendDataItem.valueLabel.text = legendSettings.itemValueText;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    return PercentSeries;\r\n}(Series));\r\nexport { PercentSeries };\r\n/**\r\n * bboxter class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"PercentSeries\"] = PercentSeries;\r\nregistry.registeredClasses[\"PercentSeriesDataItem\"] = PercentSeriesDataItem;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Disable labels and ticks.\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.maybeXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof PercentSeries) {\r\n            var state = target.states.create(stateId);\r\n            var labelState = target.labels.template.states.create(stateId);\r\n            labelState.properties.disabled = true;\r\n            var tickState = target.ticks.template.states.create(stateId);\r\n            tickState.properties.disabled = true;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}