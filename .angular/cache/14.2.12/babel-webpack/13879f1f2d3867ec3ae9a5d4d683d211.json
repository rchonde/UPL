{"ast":null,"code":"/**\r\n * Column series module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { XYSeries, XYSeriesDataItem } from \"./XYSeries\";\nimport { visualProperties } from \"../../core/Sprite\";\nimport { Container } from \"../../core/Container\";\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\nimport { Dictionary } from \"../../core/utils/Dictionary\";\nimport { ValueAxis } from \"../axes/ValueAxis\";\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\nimport { registry } from \"../../core/Registry\";\nimport { Column } from \"../elements/Column\";\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\nimport { percent, Percent } from \"../../core/utils/Percent\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $object from \"../../core/utils/Object\";\nimport * as $iter from \"../../core/utils/Iterator\";\nimport * as $array from \"../../core/utils/Array\";\nimport * as $type from \"../../core/utils/Type\";\nimport { Disposer } from \"../../core/utils/Disposer\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar ColumnSeriesDataItem =\n/** @class */\nfunction (_super) {\n  __extends(ColumnSeriesDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ColumnSeriesDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ColumnSeriesDataItem\";\n    _this.locations[\"dateX\"] = 0.5;\n    _this.locations[\"dateY\"] = 0.5;\n    _this.locations[\"categoryX\"] = 0.5;\n    _this.locations[\"categoryY\"] = 0.5;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"column\", {\n    /**\r\n     * @return Column\r\n     */\n    get: function () {\n      return this._column;\n    },\n\n    /**\r\n     * A column used to draw a column for this data item.\r\n     *\r\n     * @param column\r\n     */\n    set: function (column) {\n      this.setColumn(column);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ColumnSeriesDataItem.prototype.setColumn = function (column) {\n    var _this = this;\n\n    if (this._column && column != this._column) {\n      $array.remove(this.sprites, this._column);\n    }\n\n    this._column = column;\n\n    if (column) {\n      var prevDataItem = column.dataItem;\n\n      if (prevDataItem && prevDataItem != this) {\n        prevDataItem.column = undefined;\n      }\n\n      this.addSprite(column);\n\n      this._disposers.push(new Disposer(function () {\n        // TODO investigate why component is undefined\n        // https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\n        if (_this.component) {\n          _this.component.columns.removeValue(column);\n        }\n      }));\n    }\n  };\n\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"width\", {\n    get: function () {\n      var width = this.properties.width;\n\n      if (this._adapterO) {\n        width = this._adapterO.apply(\"width\", width);\n      }\n\n      return width;\n    },\n    set: function (value) {\n      if (this.properties.width != value) {\n        this.properties.width = value;\n\n        if (this.component) {\n          this.component.validateDataElement(this);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"height\", {\n    get: function () {\n      var height = this.properties.height;\n\n      if (this._adapterO) {\n        height = this._adapterO.apply(\"height\", height);\n      }\n\n      return height;\n    },\n    set: function (value) {\n      if (this.properties.height != value) {\n        this.properties.height = value;\n\n        if (this.component) {\n          this.component.validateDataElement(this);\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeriesDataItem.prototype, \"rangesColumns\", {\n    /**\r\n     * A dictionary storing axes ranges columns by axis uid\r\n     */\n    get: function () {\n      if (!this._rangesColumns) {\n        this._rangesColumns = new Dictionary();\n      }\n\n      return this._rangesColumns;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ColumnSeriesDataItem;\n}(XYSeriesDataItem);\n\nexport { ColumnSeriesDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\n\nvar ColumnSeries =\n/** @class */\nfunction (_super) {\n  __extends(ColumnSeries, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ColumnSeries() {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Start location within cell for columns.\r\n     */\n\n\n    _this._startLocation = 0;\n    /**\r\n     * End location within cell for columns.\r\n     */\n\n    _this._endLocation = 1;\n    _this.className = \"ColumnSeries\";\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.strokeOpacity = 0;\n    _this.fillOpacity = 1;\n    _this.clustered = true;\n\n    var columnsContainer = _this.mainContainer.createChild(Container);\n\n    columnsContainer.shouldClone = false;\n    columnsContainer.isMeasured = false;\n    columnsContainer.layout = \"none\";\n    _this._columnsContainer = columnsContainer;\n    _this.columns.template.pixelPerfect = false;\n    _this.tooltipColorSource = _this.columns.template;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(ColumnSeries.prototype, \"columnsContainer\", {\n    /**\r\n     * A container that columns are created in.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      return this._columnsContainer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n  ColumnSeries.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Column Series\");\n    }\n  };\n  /**\r\n   * Returns a new/empty DataItem of the type appropriate for this object.\r\n   *\r\n   * @see {@link DataItem}\r\n   * @return Data Item\r\n   */\n\n\n  ColumnSeries.prototype.createDataItem = function () {\n    return new ColumnSeriesDataItem();\n  };\n  /**\r\n   * (Re)validates the whole series, effectively causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  ColumnSeries.prototype.validate = function () {\n    //@todo Check if we can do better than use `instanceof`\n    // find start/end locations based on clustered/stacked settings\n    // go through chart series instead of base axis series, because axis series doesn't maintain order\n    var _this = this;\n\n    this.group.node.removeAttribute(\"fill\");\n\n    if (this.chart && this.xAxis && this.yAxis) {\n      var baseAxisSeries = this.chart.series;\n      var clusterCount_1 = 0;\n      var index_1 = 0;\n      var sortedByAxis_1 = [];\n      $iter.each(baseAxisSeries.iterator(), function (series) {\n        if (series instanceof ColumnSeries) {\n          if (_this.baseAxis == series.baseAxis) {\n            var index_2;\n\n            if (_this.baseAxis == _this.xAxis) {\n              index_2 = _this.chart.yAxes.indexOf(series.yAxis);\n            } else {\n              index_2 = _this.chart.xAxes.indexOf(series.xAxis);\n            }\n\n            sortedByAxis_1.push({\n              series: series,\n              axis: index_2\n            });\n          }\n        }\n      });\n      sortedByAxis_1.sort(function (a, b) {\n        return a.axis - b.axis;\n      });\n      var prevAxisIndex_1;\n      $array.each(sortedByAxis_1, function (sortedItem) {\n        var series = sortedItem.series;\n\n        if (series instanceof ColumnSeries) {\n          if (!series.stacked && series.clustered || prevAxisIndex_1 != sortedItem.axis && series.clustered) {\n            clusterCount_1++;\n          }\n\n          if (series == _this) {\n            index_1 = clusterCount_1 - 1;\n          }\n        }\n\n        prevAxisIndex_1 = sortedItem.axis;\n      });\n\n      if (!this.clustered) {\n        index_1 = 0;\n        clusterCount_1 = 1;\n      }\n\n      var renderer = this.baseAxis.renderer;\n      var cellStartLocation = renderer.cellStartLocation;\n      var cellEndLocation = renderer.cellEndLocation;\n      this._startLocation = cellStartLocation + index_1 / clusterCount_1 * (cellEndLocation - cellStartLocation);\n      this._endLocation = cellStartLocation + (index_1 + 1) / clusterCount_1 * (cellEndLocation - cellStartLocation);\n      var xAxis = this.xAxis;\n      var yAxis = this.yAxis;\n\n      if (xAxis instanceof CategoryAxis && yAxis instanceof ValueAxis) {\n        if (xAxis.sortBySeries == this) {\n          this.sortCategoryAxis(xAxis, \"valueY\");\n        }\n      }\n\n      if (yAxis instanceof CategoryAxis && xAxis instanceof ValueAxis) {\n        if (yAxis.sortBySeries == this) {\n          this.sortCategoryAxis(yAxis, \"valueX\");\n        }\n      }\n    }\n\n    _super.prototype.validate.call(this);\n\n    for (var i = 0; i < this.startIndex; i++) {\n      var dataItem = this.dataItems.getIndex(i);\n      this.disableUnusedColumns(dataItem);\n    }\n\n    for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\n      var dataItem = this.dataItems.getIndex(i);\n      this.disableUnusedColumns(dataItem);\n    }\n\n    this._propertiesChanged = false;\n  };\n\n  ColumnSeries.prototype.sortCategoryAxis = function (axis, key) {\n    var _this = this;\n\n    this.dataItems.values.sort(function (x, y) {\n      return y.values[key].workingValue - x.values[key].workingValue;\n    });\n    var i = 0;\n    this.dataItems.each(function (dataItem) {\n      dataItem._index = i;\n      i++;\n    });\n    axis.dataItems.each(function (dataItem) {\n      var axis = dataItem.component;\n      var currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;\n      var seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, _this);\n\n      if (seriesDataItem) {\n        var index = _this.dataItems.indexOf(seriesDataItem);\n\n        dataItem._index = index;\n        var deltaPosition = $math.round((index + 0.5) / _this.dataItems.length - currentPosition, 3);\n\n        if (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {// void\n        } else if (deltaPosition != $math.round(dataItem.deltaPosition, 3)) {\n          if (dataItem.deltaAnimation) {\n            dataItem.deltaAnimation.stop();\n          }\n\n          dataItem.deltaAnimation = dataItem.animate({\n            property: \"deltaPosition\",\n            from: -deltaPosition,\n            to: 0\n          }, axis.interpolationDuration, axis.interpolationEasing);\n\n          _this._disposers.push(dataItem.deltaAnimation);\n        }\n      }\n    });\n    axis.dataItems.values.sort(function (x, y) {\n      return x.index - y.index;\n    });\n  };\n  /**\r\n   * Validates data item's element, effectively redrawing it.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  ColumnSeries.prototype.validateDataElement = function (dataItem) {\n    // important oder here, first real, then super. we need this to know size\n    if (this.chart && this.xAxis && this.yAxis) {\n      this.validateDataElementReal(dataItem);\n\n      _super.prototype.validateDataElement.call(this, dataItem);\n    }\n  };\n  /**\r\n   * Returns relative start location for the data item.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @return Location (0-1)\r\n   */\n\n\n  ColumnSeries.prototype.getStartLocation = function (dataItem) {\n    var startLocation = this._startLocation;\n\n    if (this.baseAxis == this.xAxis) {\n      startLocation += dataItem.locations[this.xOpenField] - 0.5;\n    } else {\n      startLocation += dataItem.locations[this.yOpenField] - 0.5;\n    }\n\n    return startLocation;\n  };\n  /**\r\n   * [handleDataItemWorkingValueChange description]\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n  /*\r\n  public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n     if (this.simplifiedProcessing) {\r\n         this.validateDataElement(dataItem);\r\n     }\r\n     else {\r\n         super.handleDataItemWorkingValueChange(dataItem, name);\r\n     }\r\n  }*/\n\n  /**\r\n   * Returns relative end location for the data item.\r\n   *\r\n   * @param dataItem  Data item\r\n   * @return Location (0-1)\r\n   */\n\n\n  ColumnSeries.prototype.getEndLocation = function (dataItem) {\n    var endLocation = this._endLocation;\n\n    if (this.baseAxis == this.xAxis) {\n      endLocation += dataItem.locations[this.xField] - 0.5;\n    } else {\n      endLocation += dataItem.locations[this.yField] - 0.5;\n    }\n\n    return endLocation;\n  };\n  /**\r\n   * Validates data item's elements.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n\n  ColumnSeries.prototype.validateDataElementReal = function (dataItem) {\n    var _this = this; //\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\n\n\n    var l;\n    var r;\n    var t;\n    var b;\n    var startLocation = this.getStartLocation(dataItem);\n    var endLocation = this.getEndLocation(dataItem);\n    var xField = this.xField;\n    var xOpenField = this.xOpenField;\n    var yField = this.yField;\n    var yOpenField = this.yOpenField;\n    var template = this.columns.template;\n    var percentWidth = template.percentWidth;\n    var percentHeight = template.percentHeight;\n    var pixelWidth = template.pixelWidth;\n    var pixelHeight = template.pixelHeight;\n    var maxWidth = template.maxWidth;\n    var maxHeight = template.maxHeight;\n    var paddingLeft = template.pixelPaddingLeft;\n    var paddingRight = template.pixelPaddingRight;\n    var paddingTop = template.pixelPaddingTop;\n    var paddingBottom = template.pixelPaddingBottom;\n    var outOfBounds = false;\n    var diw = dataItem.width;\n\n    if ($type.hasValue(diw)) {\n      if ($type.isNumber(diw)) {\n        pixelWidth = diw;\n      }\n\n      if (diw instanceof Percent) {\n        percentWidth = diw.value * 100;\n      }\n    }\n\n    var dih = dataItem.height;\n\n    if ($type.hasValue(dih)) {\n      if ($type.isNumber(dih)) {\n        pixelHeight = dih;\n      }\n\n      if (dih instanceof Percent) {\n        percentHeight = dih.value * 100;\n      }\n    } // two category axes\n\n\n    if (this.xAxis instanceof CategoryAxis && this.yAxis instanceof CategoryAxis) {\n      if (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\n        return;\n      }\n\n      startLocation = 0;\n      endLocation = 1;\n\n      if (!$type.isNaN(percentWidth)) {\n        var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n\n      l = this.xAxis.getX(dataItem, xOpenField, startLocation);\n      r = this.xAxis.getX(dataItem, xField, endLocation); // in case width is set in pixels\n\n      if ($type.isNaN(percentWidth)) {\n        var offset = (r - l - pixelWidth) / 2;\n        l += offset;\n        r -= offset;\n      } // in case max width is set in pixels\n\n\n      if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\n        var offset = (r - l - maxWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n\n      startLocation = 0;\n      endLocation = 1;\n\n      if (!$type.isNaN(percentHeight)) {\n        var offset = $math.round((1 - percentHeight / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n\n      t = this.yAxis.getY(dataItem, yOpenField, startLocation);\n      b = this.yAxis.getY(dataItem, yField, endLocation); // in case width is set in pixels\n\n      if ($type.isNaN(percentHeight)) {\n        var offset = (b - t - pixelHeight) / 2;\n        b += offset;\n        t -= offset;\n      } // in case max width is set in pixels\n\n\n      if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\n        var offset = (b - t - maxHeight) / 2;\n        b += offset;\n        t -= offset;\n      }\n\n      r = this.fixHorizontalCoordinate(r);\n      l = this.fixHorizontalCoordinate(l);\n      t = this.fixVerticalCoordinate(t);\n      b = this.fixVerticalCoordinate(b);\n    } else if (this.baseAxis == this.xAxis) {\n      if (!dataItem.hasValue(this._yValueFields)) {\n        return;\n      } // in case width is set in percent\n\n\n      if (!$type.isNaN(percentWidth)) {\n        var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n\n      l = this.xAxis.getX(dataItem, xOpenField, startLocation);\n      r = this.xAxis.getX(dataItem, xField, endLocation); // in case width is set in pixels\n\n      if ($type.isNaN(percentWidth)) {\n        var offset = (r - l - pixelWidth) / 2;\n        l += offset;\n        r -= offset;\n      } // in case width is set in pixels\n\n\n      if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\n        var offset = (r - l - maxWidth) / 2;\n        l += offset;\n        r -= offset;\n      }\n\n      var bottomLocation = dataItem.locations[yOpenField];\n      var topLocation = dataItem.locations[yField]; // otherwise gantt chart will start items in the middle of a cell\n\n      if (this.yAxis instanceof ValueAxis) {\n        if (this.dataFields[this.yField] != this.dataFields[this.yOpenField]) {\n          bottomLocation = 0;\n          topLocation = 0;\n        }\n      }\n\n      b = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\n      t = this.yAxis.getY(dataItem, yField, topLocation); // used to save location for bullets, but it's not a good approach\n      // dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\n\n      var axisLenght = Math.ceil(this.yAxis.axisLength);\n\n      if (t < 0 && b < 0 || t > axisLenght && b > axisLenght) {\n        outOfBounds = true;\n      }\n\n      t = this.fixVerticalCoordinate(t);\n      b = this.fixVerticalCoordinate(b);\n\n      if (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\n        outOfBounds = true;\n      }\n    } // horizontal bars\n    else {\n      if (!dataItem.hasValue(this._xValueFields)) {\n        return;\n      }\n\n      if (!$type.isNaN(percentHeight)) {\n        var offset = $math.round((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\n        startLocation += offset;\n        endLocation -= offset;\n      }\n\n      t = this.yAxis.getY(dataItem, yOpenField, startLocation);\n      b = this.yAxis.getY(dataItem, yField, endLocation); // in case height is set in pixels\n\n      if ($type.isNaN(percentHeight)) {\n        var offset = (b - t - pixelHeight) / 2;\n        b -= offset;\n        t += offset;\n      } // in case height is set in pixels\n\n\n      if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\n        var offset = (b - t - maxHeight) / 2;\n        b -= offset;\n        t += offset;\n      }\n\n      var rightLocation = dataItem.locations[xField];\n      var leftLocation = dataItem.locations[xOpenField]; // otherwise gantt chart will start items in the middle of a cell\n\n      if (this.xAxis instanceof ValueAxis) {\n        if (this.dataFields[this.xField] != this.dataFields[this.xOpenField]) {\n          rightLocation = 0;\n          leftLocation = 0;\n        }\n      }\n\n      r = this.xAxis.getX(dataItem, xField, rightLocation);\n      l = this.xAxis.getX(dataItem, xOpenField, leftLocation); // used to save location for bullets, but it's not a good approach\n      // dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\n\n      var axisLenght = Math.ceil(this.xAxis.axisLength);\n\n      if (r < 0 && l < 0 || r > axisLenght && l > axisLenght) {\n        outOfBounds = true;\n      }\n\n      r = this.fixHorizontalCoordinate(r);\n      l = this.fixHorizontalCoordinate(l);\n\n      if (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\n        outOfBounds = true;\n      }\n    }\n\n    var w = Math.abs(r - l);\n    var h = Math.abs(b - t);\n    var x = Math.min(l, r);\n    var y = Math.min(t, b);\n\n    if (!outOfBounds) {\n      var column_1;\n\n      if (!dataItem.column) {\n        column_1 = this.columns.create(); //$object.forceCopyProperties(this.columns.template, column, visualProperties);\n\n        $object.copyProperties(this, column_1, visualProperties); // need this because 3d columns are not in the same container\n\n        $object.copyProperties(this.columns.template, column_1, visualProperties); // second time, no force, so that columns.template would override series properties\n\n        dataItem.addSprite(column_1);\n        dataItem.column = column_1;\n        column_1.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\n        // accessibility\n\n        if (this.itemsFocusable()) {\n          if (!$type.hasValue(this.role)) {\n            this.role = \"menu\";\n          }\n\n          if (!$type.hasValue(column_1.role)) {\n            column_1.role = \"menuitem\";\n          }\n\n          column_1.focusable = true;\n        } else {\n          if (!$type.hasValue(this.role)) {\n            this.role = \"list\";\n          }\n\n          if (!$type.hasValue(column_1.role)) {\n            column_1.role = \"listitem\";\n          }\n\n          column_1.focusable = false;\n        }\n\n        if (column_1.focusable) {\n          column_1.events.on(\"focus\", function (ev) {\n            column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\n          }, undefined, false);\n          column_1.events.on(\"blur\", function (ev) {\n            column_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n\n        if (column_1.hoverable) {\n          column_1.events.on(\"over\", function (ev) {\n            column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\n          }, undefined, false);\n          column_1.events.on(\"out\", function (ev) {\n            column_1.readerTitle = \"\";\n          }, undefined, false);\n        }\n\n        column_1.parent = this.columnsContainer;\n        column_1.virtualParent = this;\n      } else {\n        column_1 = dataItem.column;\n\n        if (this._propertiesChanged) {\n          $object.copyProperties(this, column_1, visualProperties);\n          $object.copyProperties(this.columns.template, column_1, visualProperties);\n          $array.each(visualProperties, function (property) {\n            column_1[property] = column_1[property];\n          });\n        }\n      }\n\n      column_1.width = w;\n      column_1.height = h;\n      column_1.x = x;\n      column_1.y = y;\n      column_1.realX = l;\n      column_1.realY = t;\n      column_1.realWidth = r - l;\n      column_1.realHeight = b - t;\n      this.setColumnStates(column_1);\n\n      if (column_1.invalid) {\n        column_1.validate(); // validate as if it was used previously, it will flicker with previous dimensions\n      }\n\n      column_1.__disabled = false; //column.returnAfterTemp();\n\n      $iter.each(this.axisRanges.iterator(), function (axisRange) {\n        var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\n\n        if (!rangeColumn) {\n          rangeColumn = _this.columns.create(); //$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\n\n          $object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\n\n          dataItem.addSprite(rangeColumn);\n          dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\n          rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\n        }\n\n        rangeColumn.parent = axisRange.contents;\n        rangeColumn.width = w;\n        rangeColumn.height = h;\n        rangeColumn.x = x;\n        rangeColumn.y = y;\n\n        _this.setColumnStates(rangeColumn);\n\n        if (rangeColumn.invalid) {\n          rangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\n        }\n\n        rangeColumn.__disabled = false; //rangeColumn.returnAfterTemp();\n      });\n    } else {\n      this.disableUnusedColumns(dataItem);\n    }\n\n    dataItem.itemWidth = w;\n    dataItem.itemHeight = h;\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  ColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\n    if (dataItem) {\n      if (dataItem.column) {\n        // otherwise might flicker when enabling\n        dataItem.column.width = 0;\n        dataItem.column.height = 0;\n        dataItem.column.__disabled = true;\n      }\n\n      $iter.each(this.axisRanges.iterator(), function (axisRange) {\n        var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\n\n        if (rangeColumn) {\n          // otherwise might flicker when enabling\n          rangeColumn.width = 0;\n          rangeColumn.height = 0;\n          rangeColumn.__disabled = true;\n        }\n      });\n    }\n  };\n  /**\r\n   * Apply different state/coloring to columns based on the change value.\r\n   *\r\n   * @param sprite  Sprite to apply state to\r\n   * @todo Do not apply accessibility to wicks of the candlesticks\r\n   */\n\n\n  ColumnSeries.prototype.setColumnStates = function (sprite) {\n    if (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\n      var dataItem = sprite.dataItem;\n\n      if (this.xAxis instanceof ValueAxis || this.yAxis instanceof ValueAxis) {\n        var open_1;\n        var value = void 0;\n        var change = void 0;\n\n        if (this.baseAxis == this.yAxis) {\n          if (this.xOpenField && this.xField && this.xAxis instanceof ValueAxis) {\n            open_1 = dataItem.getValue(this.xOpenField);\n            value = dataItem.getValue(this.xField);\n          }\n\n          change = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\n        } else {\n          if (this.yOpenField && this.yField && this.yAxis instanceof ValueAxis) {\n            open_1 = dataItem.getValue(this.yOpenField);\n            value = dataItem.getValue(this.yField);\n          }\n\n          change = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\n        }\n\n        if (value < open_1) {\n          dataItem.droppedFromOpen = true;\n          sprite.defaultState.copyFrom(this._dropFromOpenState);\n          sprite.setState(this._dropFromOpenState, 0);\n        } else {\n          dataItem.droppedFromOpen = false;\n          sprite.defaultState.copyFrom(this._riseFromOpenState);\n          sprite.setState(this._riseFromOpenState, 0);\n        }\n\n        if (change < 0) {\n          dataItem.droppedFromPrevious = true;\n          sprite.defaultState.copyFrom(this._dropFromPreviousState);\n          sprite.setState(this._dropFromPreviousState, 0);\n        } else {\n          dataItem.droppedFromPrevious = false;\n          sprite.defaultState.copyFrom(this._riseFromPreviousState);\n          sprite.setState(this._riseFromPreviousState, 0);\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(ColumnSeries.prototype, \"columns\", {\n    /**\r\n     * A list of column elements in the series.\r\n     *\r\n     * @return Columns\r\n     */\n    get: function () {\n      if (!this._columns) {\n        this._columns = new ListTemplate(this.createColumnTemplate());\n\n        this._disposers.push(new ListDisposer(this._columns));\n\n        this._disposers.push(this._columns.template);\n      }\n\n      return this._columns;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Creates and returns a column element to use as a template.\r\n   *\r\n   * @return Column template\r\n   */\n\n  ColumnSeries.prototype.createColumnTemplate = function () {\n    return new Column();\n  };\n\n  Object.defineProperty(ColumnSeries.prototype, \"clustered\", {\n    /**\r\n     * @return Clustered?\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"clustered\");\n    },\n\n    /**\r\n     * Cluster this series columns?\r\n     *\r\n     * Setting to `false` will make columns overlap with other series.\r\n     *\r\n     * @default true\r\n     * @param value  Clustered?\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"clustered\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"dropFromOpenState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._dropFromOpenState) {\n        this._dropFromOpenState = this.states.create(\"dropFromOpenState\");\n      }\n\n      return this._dropFromOpenState;\n    },\n\n    /**\r\n     * A state to apply to a column when close value is lower than open value.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._dropFromOpenState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"dropFromPreviousState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._dropFromPreviousState) {\n        this._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\n      }\n\n      return this._dropFromPreviousState;\n    },\n\n    /**\r\n     * A state to apply to a column when its value is lower value of a previous\r\n     * column.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._dropFromPreviousState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"riseFromOpenState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._riseFromOpenState) {\n        this._riseFromOpenState = this.states.create(\"riseFromOpenState\");\n      }\n\n      return this._riseFromOpenState;\n    },\n\n    /**\r\n     * A state to apply to a column when close value is same or higher than open\r\n     * value.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._riseFromOpenState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ColumnSeries.prototype, \"riseFromPreviousState\", {\n    /**\r\n     * @return State\r\n     */\n    get: function () {\n      if (!this._riseFromPreviousState) {\n        this._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\n      }\n\n      return this._riseFromPreviousState;\n    },\n\n    /**\r\n     * A state to apply to a column when its value is same or higher than value\r\n     * of a previous column.\r\n     *\r\n     * Can be used to differentiate appearance based on value relations.\r\n     *\r\n     * @readonly You can modify state object, but can't overwrite it\r\n     * @param  value  State\r\n     */\n    set: function (value) {\n      this._riseFromPreviousState = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Updates value of the related legend item.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param dataItem  Data item\r\n   */\n\n  ColumnSeries.prototype.updateLegendValue = function (dataItem, notRange) {\n    var _this = this;\n\n    _super.prototype.updateLegendValue.call(this, dataItem, notRange);\n\n    if (this.legendDataItem) {\n      var marker = this.legendDataItem.marker;\n      var fromOpenState_1;\n      var fromPreviousState_1;\n\n      if (dataItem) {\n        if (dataItem.droppedFromOpen) {\n          fromOpenState_1 = this._dropFromOpenState;\n        } else {\n          fromOpenState_1 = this._riseFromOpenState;\n        }\n\n        if (dataItem.droppedFromPrevious) {\n          fromPreviousState_1 = this._dropFromPreviousState;\n        } else {\n          fromPreviousState_1 = this._riseFromPreviousState;\n        }\n      }\n\n      $iter.each(marker.children.iterator(), function (child) {\n        if (dataItem) {\n          child.setState(fromPreviousState_1);\n          child.setState(fromOpenState_1);\n        } else {\n          // todo: think what to do here, maybe apply above states based on totals?\n          child.setState(_this._riseFromPreviousState);\n          child.setState(_this._riseFromOpenState);\n        }\n      });\n    }\n  };\n  /**\r\n   * Creates elements in related legend container, that mimics the look of this\r\n   * Series.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param marker  Legend item container\r\n   */\n\n\n  ColumnSeries.prototype.createLegendMarker = function (marker) {\n    var w = marker.pixelWidth;\n    var h = marker.pixelHeight;\n    marker.removeChildren();\n    var column = marker.createChild(RoundedRectangle);\n    column.shouldClone = false;\n    $object.copyProperties(this, column, visualProperties);\n    column.copyFrom(this.columns.template);\n    column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\n\n    column.width = w;\n    column.height = h;\n    var legendDataItem = marker.dataItem;\n    legendDataItem.color = this.fill;\n    legendDataItem.colorOrig = this.fill;\n  };\n  /**\r\n   * Copies all properties from another instance of [[ColumnSeries]].\r\n   *\r\n   * @param source  Source series\r\n   */\n\n\n  ColumnSeries.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.columns.template.copyFrom(source.columns.template);\n  };\n  /**\r\n  * returns bullet x location\r\n  * @ignore\r\n  */\n\n\n  ColumnSeries.prototype.getBulletLocationX = function (bullet, field) {\n    if (this.baseAxis == this.xAxis) {\n      var bulletLocationX = bullet.locationX;\n\n      if (!$type.isNumber(bulletLocationX)) {\n        bulletLocationX = 0.5;\n      }\n\n      var endLocation = this.getEndLocation(bullet.dataItem);\n      var startLocation = this.getStartLocation(bullet.dataItem);\n      return endLocation - (endLocation - startLocation) * bulletLocationX;\n    } else {\n      return _super.prototype.getBulletLocationX.call(this, bullet, field);\n    }\n  };\n  /**\r\n  * returns bullet y location\r\n  * @ignore\r\n  */\n\n\n  ColumnSeries.prototype.getBulletLocationY = function (bullet, field) {\n    if (this.baseAxis == this.yAxis) {\n      var bulletLocationY = bullet.locationY;\n\n      if (!$type.isNumber(bulletLocationY)) {\n        bulletLocationY = 0.5;\n      }\n\n      var endLocation = this.getEndLocation(bullet.dataItem);\n      var startLocation = this.getStartLocation(bullet.dataItem);\n      return endLocation - (endLocation - startLocation) * bulletLocationY;\n    } else {\n      return _super.prototype.getBulletLocationY.call(this, bullet, field);\n    }\n  };\n\n  ColumnSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\n    //if (this.baseAxis == this.xAxis) {\n    if (!$type.isNumber(bulletLocationX)) {\n      if (dataItem) {\n        bulletLocationX = dataItem.locations[field];\n      } else {\n        bulletLocationX = 0.5;\n      }\n    }\n\n    return this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX); //}\n    //else {\n    //\treturn super.getAdjustedXLocation(dataItem, field);\n    //}\n  };\n\n  ColumnSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\n    //if (this.baseAxis == this.yAxis) {\n    if (!$type.isNumber(bulletLocationY)) {\n      if (dataItem) {\n        bulletLocationY = dataItem.locations[field];\n      } else {\n        bulletLocationY = 0.5;\n      }\n    }\n\n    return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY; //}\n    //else {\n    //\treturn super.getAdjustedYLocation(dataItem, field);\n    //}\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  ColumnSeries.prototype.fixVerticalCoordinate = function (coordinate) {\n    var paddingBottom = this.columns.template.pixelPaddingBottom;\n    var paddingTop = this.columns.template.pixelPaddingTop;\n    var minY = -paddingTop;\n    var maxY = this.yAxis.axisLength + paddingBottom;\n    return $math.fitToRange(coordinate, minY, maxY);\n  };\n  /**\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  ColumnSeries.prototype.fixHorizontalCoordinate = function (coordinate) {\n    var paddingLeft = this.columns.template.pixelPaddingLeft;\n    var paddingRight = this.columns.template.pixelPaddingRight;\n    var minX = -paddingLeft;\n    var maxX = this.xAxis.axisLength + paddingRight;\n    return $math.fitToRange(coordinate, minX, maxX);\n  };\n  /**\r\n   * @ignore\r\n   */\n\n\n  ColumnSeries.prototype.disposeData = function () {\n    _super.prototype.disposeData.call(this);\n\n    this.columns.clear();\n  };\n\n  return ColumnSeries;\n}(XYSeries);\n\nexport { ColumnSeries };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ColumnSeries\"] = ColumnSeries;\nregistry.registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;","map":{"version":3,"names":["__extends","XYSeries","XYSeriesDataItem","visualProperties","Container","ListTemplate","ListDisposer","Dictionary","ValueAxis","CategoryAxis","registry","Column","RoundedRectangle","percent","Percent","$math","$object","$iter","$array","$type","Disposer","ColumnSeriesDataItem","_super","_this","call","className","locations","applyTheme","Object","defineProperty","prototype","get","_column","set","column","setColumn","enumerable","configurable","remove","sprites","prevDataItem","dataItem","undefined","addSprite","_disposers","push","component","columns","removeValue","width","properties","_adapterO","apply","value","validateDataElement","height","_rangesColumns","ColumnSeries","_startLocation","_endLocation","strokeOpacity","fillOpacity","clustered","columnsContainer","mainContainer","createChild","shouldClone","isMeasured","layout","_columnsContainer","template","pixelPerfect","tooltipColorSource","applyInternalDefaults","hasValue","readerTitle","language","translate","createDataItem","validate","group","node","removeAttribute","chart","xAxis","yAxis","baseAxisSeries","series","clusterCount_1","index_1","sortedByAxis_1","each","iterator","baseAxis","index_2","yAxes","indexOf","xAxes","axis","sort","a","b","prevAxisIndex_1","sortedItem","stacked","renderer","cellStartLocation","cellEndLocation","sortBySeries","sortCategoryAxis","i","startIndex","dataItems","getIndex","disableUnusedColumns","length","endIndex","_propertiesChanged","key","values","x","y","workingValue","_index","currentPosition","categoryToPosition","category","deltaPosition","seriesDataItem","getSeriesDataItemByCategory","index","round","deltaAnimation","isDisposed","animationOptions","to","stop","animate","property","from","interpolationDuration","interpolationEasing","validateDataElementReal","getStartLocation","startLocation","xOpenField","yOpenField","getEndLocation","endLocation","xField","yField","l","r","t","percentWidth","percentHeight","pixelWidth","pixelHeight","maxWidth","maxHeight","paddingLeft","pixelPaddingLeft","paddingRight","pixelPaddingRight","paddingTop","pixelPaddingTop","paddingBottom","pixelPaddingBottom","outOfBounds","diw","isNumber","dih","_xValueFields","_yValueFields","isNaN","offset","getX","Math","abs","getY","fixHorizontalCoordinate","fixVerticalCoordinate","bottomLocation","topLocation","dataFields","axisLenght","ceil","axisLength","rightLocation","leftLocation","w","h","min","column_1","create","copyProperties","paper","itemsFocusable","role","focusable","events","on","ev","populateString","itemReaderText","hoverable","parent","virtualParent","realX","realY","realWidth","realHeight","setColumnStates","invalid","__disabled","axisRanges","axisRange","rangeColumn","rangesColumns","getKey","uid","contents","setKey","itemWidth","itemHeight","sprite","_dropFromOpenState","_dropFromPreviousState","_riseFromOpenState","_riseFromPreviousState","open_1","change","getValue","axisFieldName","droppedFromOpen","defaultState","copyFrom","setState","droppedFromPrevious","_columns","createColumnTemplate","getPropertyValue","setPropertyValue","states","updateLegendValue","notRange","legendDataItem","marker","fromOpenState_1","fromPreviousState_1","children","child","createLegendMarker","removeChildren","padding","color","fill","colorOrig","source","getBulletLocationX","bullet","field","bulletLocationX","locationX","getBulletLocationY","bulletLocationY","locationY","getAdjustedXLocation","getAdjustedYLocation","coordinate","minY","maxY","fitToRange","minX","maxX","disposeData","clear","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js"],"sourcesContent":["/**\r\n * Column series module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { XYSeries, XYSeriesDataItem } from \"./XYSeries\";\r\nimport { visualProperties } from \"../../core/Sprite\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { ListTemplate, ListDisposer } from \"../../core/utils/List\";\r\nimport { Dictionary } from \"../../core/utils/Dictionary\";\r\nimport { ValueAxis } from \"../axes/ValueAxis\";\r\nimport { CategoryAxis } from \"../axes/CategoryAxis\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Column } from \"../elements/Column\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { percent, Percent } from \"../../core/utils/Percent\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $object from \"../../core/utils/Object\";\r\nimport * as $iter from \"../../core/utils/Iterator\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[ColumnSeries]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ColumnSeriesDataItem = /** @class */ (function (_super) {\r\n    __extends(ColumnSeriesDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeriesDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ColumnSeriesDataItem\";\r\n        _this.locations[\"dateX\"] = 0.5;\r\n        _this.locations[\"dateY\"] = 0.5;\r\n        _this.locations[\"categoryX\"] = 0.5;\r\n        _this.locations[\"categoryY\"] = 0.5;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"column\", {\r\n        /**\r\n         * @return Column\r\n         */\r\n        get: function () {\r\n            return this._column;\r\n        },\r\n        /**\r\n         * A column used to draw a column for this data item.\r\n         *\r\n         * @param column\r\n         */\r\n        set: function (column) {\r\n            this.setColumn(column);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ColumnSeriesDataItem.prototype.setColumn = function (column) {\r\n        var _this = this;\r\n        if (this._column && column != this._column) {\r\n            $array.remove(this.sprites, this._column);\r\n        }\r\n        this._column = column;\r\n        if (column) {\r\n            var prevDataItem = column.dataItem;\r\n            if (prevDataItem && prevDataItem != this) {\r\n                prevDataItem.column = undefined;\r\n            }\r\n            this.addSprite(column);\r\n            this._disposers.push(new Disposer(function () {\r\n                // TODO investigate why component is undefined\r\n                // https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010\r\n                if (_this.component) {\r\n                    _this.component.columns.removeValue(column);\r\n                }\r\n            }));\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"width\", {\r\n        get: function () {\r\n            var width = this.properties.width;\r\n            if (this._adapterO) {\r\n                width = this._adapterO.apply(\"width\", width);\r\n            }\r\n            return width;\r\n        },\r\n        set: function (value) {\r\n            if (this.properties.width != value) {\r\n                this.properties.width = value;\r\n                if (this.component) {\r\n                    this.component.validateDataElement(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"height\", {\r\n        get: function () {\r\n            var height = this.properties.height;\r\n            if (this._adapterO) {\r\n                height = this._adapterO.apply(\"height\", height);\r\n            }\r\n            return height;\r\n        },\r\n        set: function (value) {\r\n            if (this.properties.height != value) {\r\n                this.properties.height = value;\r\n                if (this.component) {\r\n                    this.component.validateDataElement(this);\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeriesDataItem.prototype, \"rangesColumns\", {\r\n        /**\r\n         * A dictionary storing axes ranges columns by axis uid\r\n         */\r\n        get: function () {\r\n            if (!this._rangesColumns) {\r\n                this._rangesColumns = new Dictionary();\r\n            }\r\n            return this._rangesColumns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ColumnSeriesDataItem;\r\n}(XYSeriesDataItem));\r\nexport { ColumnSeriesDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines [[Series]] for a column graph.\r\n *\r\n * @see {@link IColumnSeriesEvents} for a list of available Events\r\n * @see {@link IColumnSeriesAdapters} for a list of available Adapters\r\n * @todo Example\r\n * @important\r\n */\r\nvar ColumnSeries = /** @class */ (function (_super) {\r\n    __extends(ColumnSeries, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ColumnSeries() {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Start location within cell for columns.\r\n         */\r\n        _this._startLocation = 0;\r\n        /**\r\n         * End location within cell for columns.\r\n         */\r\n        _this._endLocation = 1;\r\n        _this.className = \"ColumnSeries\";\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.strokeOpacity = 0;\r\n        _this.fillOpacity = 1;\r\n        _this.clustered = true;\r\n        var columnsContainer = _this.mainContainer.createChild(Container);\r\n        columnsContainer.shouldClone = false;\r\n        columnsContainer.isMeasured = false;\r\n        columnsContainer.layout = \"none\";\r\n        _this._columnsContainer = columnsContainer;\r\n        _this.columns.template.pixelPerfect = false;\r\n        _this.tooltipColorSource = _this.columns.template;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ColumnSeries.prototype, \"columnsContainer\", {\r\n        /**\r\n         * A container that columns are created in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            return this._columnsContainer;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    ColumnSeries.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Column Series\");\r\n        }\r\n    };\r\n    /**\r\n     * Returns a new/empty DataItem of the type appropriate for this object.\r\n     *\r\n     * @see {@link DataItem}\r\n     * @return Data Item\r\n     */\r\n    ColumnSeries.prototype.createDataItem = function () {\r\n        return new ColumnSeriesDataItem();\r\n    };\r\n    /**\r\n     * (Re)validates the whole series, effectively causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.validate = function () {\r\n        //@todo Check if we can do better than use `instanceof`\r\n        // find start/end locations based on clustered/stacked settings\r\n        // go through chart series instead of base axis series, because axis series doesn't maintain order\r\n        var _this = this;\r\n        this.group.node.removeAttribute(\"fill\");\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            var baseAxisSeries = this.chart.series;\r\n            var clusterCount_1 = 0;\r\n            var index_1 = 0;\r\n            var sortedByAxis_1 = [];\r\n            $iter.each(baseAxisSeries.iterator(), function (series) {\r\n                if (series instanceof ColumnSeries) {\r\n                    if (_this.baseAxis == series.baseAxis) {\r\n                        var index_2;\r\n                        if (_this.baseAxis == _this.xAxis) {\r\n                            index_2 = _this.chart.yAxes.indexOf(series.yAxis);\r\n                        }\r\n                        else {\r\n                            index_2 = _this.chart.xAxes.indexOf(series.xAxis);\r\n                        }\r\n                        sortedByAxis_1.push({ series: series, axis: index_2 });\r\n                    }\r\n                }\r\n            });\r\n            sortedByAxis_1.sort(function (a, b) { return a.axis - b.axis; });\r\n            var prevAxisIndex_1;\r\n            $array.each(sortedByAxis_1, function (sortedItem) {\r\n                var series = sortedItem.series;\r\n                if (series instanceof ColumnSeries) {\r\n                    if ((!series.stacked && series.clustered) || (prevAxisIndex_1 != sortedItem.axis && series.clustered)) {\r\n                        clusterCount_1++;\r\n                    }\r\n                    if (series == _this) {\r\n                        index_1 = clusterCount_1 - 1;\r\n                    }\r\n                }\r\n                prevAxisIndex_1 = sortedItem.axis;\r\n            });\r\n            if (!this.clustered) {\r\n                index_1 = 0;\r\n                clusterCount_1 = 1;\r\n            }\r\n            var renderer = this.baseAxis.renderer;\r\n            var cellStartLocation = renderer.cellStartLocation;\r\n            var cellEndLocation = renderer.cellEndLocation;\r\n            this._startLocation = cellStartLocation + (index_1 / clusterCount_1) * (cellEndLocation - cellStartLocation);\r\n            this._endLocation = cellStartLocation + (index_1 + 1) / clusterCount_1 * (cellEndLocation - cellStartLocation);\r\n            var xAxis = this.xAxis;\r\n            var yAxis = this.yAxis;\r\n            if (xAxis instanceof CategoryAxis && yAxis instanceof ValueAxis) {\r\n                if (xAxis.sortBySeries == this) {\r\n                    this.sortCategoryAxis(xAxis, \"valueY\");\r\n                }\r\n            }\r\n            if (yAxis instanceof CategoryAxis && xAxis instanceof ValueAxis) {\r\n                if (yAxis.sortBySeries == this) {\r\n                    this.sortCategoryAxis(yAxis, \"valueX\");\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.validate.call(this);\r\n        for (var i = 0; i < this.startIndex; i++) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {\r\n            var dataItem = this.dataItems.getIndex(i);\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        this._propertiesChanged = false;\r\n    };\r\n    ColumnSeries.prototype.sortCategoryAxis = function (axis, key) {\r\n        var _this = this;\r\n        this.dataItems.values.sort(function (x, y) {\r\n            return y.values[key].workingValue - x.values[key].workingValue;\r\n        });\r\n        var i = 0;\r\n        this.dataItems.each(function (dataItem) {\r\n            dataItem._index = i;\r\n            i++;\r\n        });\r\n        axis.dataItems.each(function (dataItem) {\r\n            var axis = dataItem.component;\r\n            var currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;\r\n            var seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, _this);\r\n            if (seriesDataItem) {\r\n                var index = _this.dataItems.indexOf(seriesDataItem);\r\n                dataItem._index = index;\r\n                var deltaPosition = $math.round((index + 0.5) / _this.dataItems.length - currentPosition, 3);\r\n                if (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {\r\n                    // void\r\n                }\r\n                else if (deltaPosition != $math.round(dataItem.deltaPosition, 3)) {\r\n                    if (dataItem.deltaAnimation) {\r\n                        dataItem.deltaAnimation.stop();\r\n                    }\r\n                    dataItem.deltaAnimation = dataItem.animate({ property: \"deltaPosition\", from: -deltaPosition, to: 0 }, axis.interpolationDuration, axis.interpolationEasing);\r\n                    _this._disposers.push(dataItem.deltaAnimation);\r\n                }\r\n            }\r\n        });\r\n        axis.dataItems.values.sort(function (x, y) {\r\n            return x.index - y.index;\r\n        });\r\n    };\r\n    /**\r\n     * Validates data item's element, effectively redrawing it.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElement = function (dataItem) {\r\n        // important oder here, first real, then super. we need this to know size\r\n        if (this.chart && this.xAxis && this.yAxis) {\r\n            this.validateDataElementReal(dataItem);\r\n            _super.prototype.validateDataElement.call(this, dataItem);\r\n        }\r\n    };\r\n    /**\r\n     * Returns relative start location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getStartLocation = function (dataItem) {\r\n        var startLocation = this._startLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            startLocation += dataItem.locations[this.xOpenField] - 0.5;\r\n        }\r\n        else {\r\n            startLocation += dataItem.locations[this.yOpenField] - 0.5;\r\n        }\r\n        return startLocation;\r\n    };\r\n    /**\r\n     * [handleDataItemWorkingValueChange description]\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    /*\r\n   public handleDataItemWorkingValueChange(dataItem?: this[\"_dataItem\"], name?: string): void {\r\n       if (this.simplifiedProcessing) {\r\n           this.validateDataElement(dataItem);\r\n       }\r\n       else {\r\n           super.handleDataItemWorkingValueChange(dataItem, name);\r\n       }\r\n   }*/\r\n    /**\r\n     * Returns relative end location for the data item.\r\n     *\r\n     * @param dataItem  Data item\r\n     * @return Location (0-1)\r\n     */\r\n    ColumnSeries.prototype.getEndLocation = function (dataItem) {\r\n        var endLocation = this._endLocation;\r\n        if (this.baseAxis == this.xAxis) {\r\n            endLocation += dataItem.locations[this.xField] - 0.5;\r\n        }\r\n        else {\r\n            endLocation += dataItem.locations[this.yField] - 0.5;\r\n        }\r\n        return endLocation;\r\n    };\r\n    /**\r\n     * Validates data item's elements.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.validateDataElementReal = function (dataItem) {\r\n        var _this = this;\r\n        //\tif (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way\r\n        var l;\r\n        var r;\r\n        var t;\r\n        var b;\r\n        var startLocation = this.getStartLocation(dataItem);\r\n        var endLocation = this.getEndLocation(dataItem);\r\n        var xField = this.xField;\r\n        var xOpenField = this.xOpenField;\r\n        var yField = this.yField;\r\n        var yOpenField = this.yOpenField;\r\n        var template = this.columns.template;\r\n        var percentWidth = template.percentWidth;\r\n        var percentHeight = template.percentHeight;\r\n        var pixelWidth = template.pixelWidth;\r\n        var pixelHeight = template.pixelHeight;\r\n        var maxWidth = template.maxWidth;\r\n        var maxHeight = template.maxHeight;\r\n        var paddingLeft = template.pixelPaddingLeft;\r\n        var paddingRight = template.pixelPaddingRight;\r\n        var paddingTop = template.pixelPaddingTop;\r\n        var paddingBottom = template.pixelPaddingBottom;\r\n        var outOfBounds = false;\r\n        var diw = dataItem.width;\r\n        if ($type.hasValue(diw)) {\r\n            if ($type.isNumber(diw)) {\r\n                pixelWidth = diw;\r\n            }\r\n            if (diw instanceof Percent) {\r\n                percentWidth = diw.value * 100;\r\n            }\r\n        }\r\n        var dih = dataItem.height;\r\n        if ($type.hasValue(dih)) {\r\n            if ($type.isNumber(dih)) {\r\n                pixelHeight = dih;\r\n            }\r\n            if (dih instanceof Percent) {\r\n                percentHeight = dih.value * 100;\r\n            }\r\n        }\r\n        // two category axes\r\n        if ((this.xAxis instanceof CategoryAxis) && (this.yAxis instanceof CategoryAxis)) {\r\n            if (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!$type.isNaN(percentWidth)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            startLocation = 0;\r\n            endLocation = 1;\r\n            if (!$type.isNaN(percentHeight)) {\r\n                var offset = $math.round((1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            // in case max width is set in pixels\r\n            if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b += offset;\r\n                t -= offset;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n        }\r\n        else if (this.baseAxis == this.xAxis) {\r\n            if (!dataItem.hasValue(this._yValueFields)) {\r\n                return;\r\n            }\r\n            // in case width is set in percent\r\n            if (!$type.isNaN(percentWidth)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            l = this.xAxis.getX(dataItem, xOpenField, startLocation);\r\n            r = this.xAxis.getX(dataItem, xField, endLocation);\r\n            // in case width is set in pixels\r\n            if ($type.isNaN(percentWidth)) {\r\n                var offset = ((r - l) - pixelWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            // in case width is set in pixels\r\n            if (!$type.isNaN(maxWidth) && maxWidth < Math.abs(r - l)) {\r\n                var offset = ((r - l) - maxWidth) / 2;\r\n                l += offset;\r\n                r -= offset;\r\n            }\r\n            var bottomLocation = dataItem.locations[yOpenField];\r\n            var topLocation = dataItem.locations[yField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.yAxis instanceof ValueAxis) {\r\n                if (this.dataFields[this.yField] != this.dataFields[this.yOpenField]) {\r\n                    bottomLocation = 0;\r\n                    topLocation = 0;\r\n                }\r\n            }\r\n            b = this.yAxis.getY(dataItem, yOpenField, bottomLocation);\r\n            t = this.yAxis.getY(dataItem, yField, topLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.yAxis.axisLength);\r\n            if ((t < 0 && b < 0) || (t > axisLenght && b > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            t = this.fixVerticalCoordinate(t);\r\n            b = this.fixVerticalCoordinate(b);\r\n            if (Math.abs(r - l) - paddingLeft - paddingRight == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        // horizontal bars\r\n        else {\r\n            if (!dataItem.hasValue(this._xValueFields)) {\r\n                return;\r\n            }\r\n            if (!$type.isNaN(percentHeight)) {\r\n                var offset = $math.round((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);\r\n                startLocation += offset;\r\n                endLocation -= offset;\r\n            }\r\n            t = this.yAxis.getY(dataItem, yOpenField, startLocation);\r\n            b = this.yAxis.getY(dataItem, yField, endLocation);\r\n            // in case height is set in pixels\r\n            if ($type.isNaN(percentHeight)) {\r\n                var offset = ((b - t) - pixelHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            // in case height is set in pixels\r\n            if (!$type.isNaN(maxHeight) && maxHeight < Math.abs(b - t)) {\r\n                var offset = ((b - t) - maxHeight) / 2;\r\n                b -= offset;\r\n                t += offset;\r\n            }\r\n            var rightLocation = dataItem.locations[xField];\r\n            var leftLocation = dataItem.locations[xOpenField];\r\n            // otherwise gantt chart will start items in the middle of a cell\r\n            if (this.xAxis instanceof ValueAxis) {\r\n                if (this.dataFields[this.xField] != this.dataFields[this.xOpenField]) {\r\n                    rightLocation = 0;\r\n                    leftLocation = 0;\r\n                }\r\n            }\r\n            r = this.xAxis.getX(dataItem, xField, rightLocation);\r\n            l = this.xAxis.getX(dataItem, xOpenField, leftLocation);\r\n            // used to save location for bullets, but it's not a good approach\r\n            // dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;\r\n            var axisLenght = Math.ceil(this.xAxis.axisLength);\r\n            if ((r < 0 && l < 0) || (r > axisLenght && l > axisLenght)) {\r\n                outOfBounds = true;\r\n            }\r\n            r = this.fixHorizontalCoordinate(r);\r\n            l = this.fixHorizontalCoordinate(l);\r\n            if (Math.abs(t - b) - paddingTop - paddingBottom == 0) {\r\n                outOfBounds = true;\r\n            }\r\n        }\r\n        var w = Math.abs(r - l);\r\n        var h = Math.abs(b - t);\r\n        var x = Math.min(l, r);\r\n        var y = Math.min(t, b);\r\n        if (!outOfBounds) {\r\n            var column_1;\r\n            if (!dataItem.column) {\r\n                column_1 = this.columns.create();\r\n                //$object.forceCopyProperties(this.columns.template, column, visualProperties);\r\n                $object.copyProperties(this, column_1, visualProperties); // need this because 3d columns are not in the same container\r\n                $object.copyProperties(this.columns.template, column_1, visualProperties); // second time, no force, so that columns.template would override series properties\r\n                dataItem.addSprite(column_1);\r\n                dataItem.column = column_1;\r\n                column_1.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n                // accessibility\r\n                if (this.itemsFocusable()) {\r\n                    if (!$type.hasValue(this.role)) {\r\n                        this.role = \"menu\";\r\n                    }\r\n                    if (!$type.hasValue(column_1.role)) {\r\n                        column_1.role = \"menuitem\";\r\n                    }\r\n                    column_1.focusable = true;\r\n                }\r\n                else {\r\n                    if (!$type.hasValue(this.role)) {\r\n                        this.role = \"list\";\r\n                    }\r\n                    if (!$type.hasValue(column_1.role)) {\r\n                        column_1.role = \"listitem\";\r\n                    }\r\n                    column_1.focusable = false;\r\n                }\r\n                if (column_1.focusable) {\r\n                    column_1.events.on(\"focus\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"blur\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                if (column_1.hoverable) {\r\n                    column_1.events.on(\"over\", function (ev) {\r\n                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);\r\n                    }, undefined, false);\r\n                    column_1.events.on(\"out\", function (ev) {\r\n                        column_1.readerTitle = \"\";\r\n                    }, undefined, false);\r\n                }\r\n                column_1.parent = this.columnsContainer;\r\n                column_1.virtualParent = this;\r\n            }\r\n            else {\r\n                column_1 = dataItem.column;\r\n                if (this._propertiesChanged) {\r\n                    $object.copyProperties(this, column_1, visualProperties);\r\n                    $object.copyProperties(this.columns.template, column_1, visualProperties);\r\n                    $array.each(visualProperties, function (property) {\r\n                        column_1[property] = column_1[property];\r\n                    });\r\n                }\r\n            }\r\n            column_1.width = w;\r\n            column_1.height = h;\r\n            column_1.x = x;\r\n            column_1.y = y;\r\n            column_1.realX = l;\r\n            column_1.realY = t;\r\n            column_1.realWidth = r - l;\r\n            column_1.realHeight = b - t;\r\n            this.setColumnStates(column_1);\r\n            if (column_1.invalid) {\r\n                column_1.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n            }\r\n            column_1.__disabled = false;\r\n            //column.returnAfterTemp();\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (!rangeColumn) {\r\n                    rangeColumn = _this.columns.create();\r\n                    //$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);\r\n                    $object.copyProperties(axisRange.contents, rangeColumn, visualProperties); // need this because 3d columns are not in the same container\r\n                    dataItem.addSprite(rangeColumn);\r\n                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);\r\n                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.\r\n                }\r\n                rangeColumn.parent = axisRange.contents;\r\n                rangeColumn.width = w;\r\n                rangeColumn.height = h;\r\n                rangeColumn.x = x;\r\n                rangeColumn.y = y;\r\n                _this.setColumnStates(rangeColumn);\r\n                if (rangeColumn.invalid) {\r\n                    rangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions\r\n                }\r\n                rangeColumn.__disabled = false;\r\n                //rangeColumn.returnAfterTemp();\r\n            });\r\n        }\r\n        else {\r\n            this.disableUnusedColumns(dataItem);\r\n        }\r\n        dataItem.itemWidth = w;\r\n        dataItem.itemHeight = h;\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disableUnusedColumns = function (dataItem) {\r\n        if (dataItem) {\r\n            if (dataItem.column) {\r\n                // otherwise might flicker when enabling\r\n                dataItem.column.width = 0;\r\n                dataItem.column.height = 0;\r\n                dataItem.column.__disabled = true;\r\n            }\r\n            $iter.each(this.axisRanges.iterator(), function (axisRange) {\r\n                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);\r\n                if (rangeColumn) {\r\n                    // otherwise might flicker when enabling\r\n                    rangeColumn.width = 0;\r\n                    rangeColumn.height = 0;\r\n                    rangeColumn.__disabled = true;\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Apply different state/coloring to columns based on the change value.\r\n     *\r\n     * @param sprite  Sprite to apply state to\r\n     * @todo Do not apply accessibility to wicks of the candlesticks\r\n     */\r\n    ColumnSeries.prototype.setColumnStates = function (sprite) {\r\n        if (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {\r\n            var dataItem = sprite.dataItem;\r\n            if (this.xAxis instanceof ValueAxis || this.yAxis instanceof ValueAxis) {\r\n                var open_1;\r\n                var value = void 0;\r\n                var change = void 0;\r\n                if (this.baseAxis == this.yAxis) {\r\n                    if (this.xOpenField && this.xField && this.xAxis instanceof ValueAxis) {\r\n                        open_1 = dataItem.getValue(this.xOpenField);\r\n                        value = dataItem.getValue(this.xField);\r\n                    }\r\n                    change = dataItem.getValue(this.xAxis.axisFieldName + \"X\", \"previousChange\");\r\n                }\r\n                else {\r\n                    if (this.yOpenField && this.yField && this.yAxis instanceof ValueAxis) {\r\n                        open_1 = dataItem.getValue(this.yOpenField);\r\n                        value = dataItem.getValue(this.yField);\r\n                    }\r\n                    change = dataItem.getValue(this.yAxis.axisFieldName + \"Y\", \"previousChange\");\r\n                }\r\n                if (value < open_1) {\r\n                    dataItem.droppedFromOpen = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromOpenState);\r\n                    sprite.setState(this._dropFromOpenState, 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromOpen = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromOpenState);\r\n                    sprite.setState(this._riseFromOpenState, 0);\r\n                }\r\n                if (change < 0) {\r\n                    dataItem.droppedFromPrevious = true;\r\n                    sprite.defaultState.copyFrom(this._dropFromPreviousState);\r\n                    sprite.setState((this._dropFromPreviousState), 0);\r\n                }\r\n                else {\r\n                    dataItem.droppedFromPrevious = false;\r\n                    sprite.defaultState.copyFrom(this._riseFromPreviousState);\r\n                    sprite.setState((this._riseFromPreviousState), 0);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"columns\", {\r\n        /**\r\n         * A list of column elements in the series.\r\n         *\r\n         * @return Columns\r\n         */\r\n        get: function () {\r\n            if (!this._columns) {\r\n                this._columns = new ListTemplate(this.createColumnTemplate());\r\n                this._disposers.push(new ListDisposer(this._columns));\r\n                this._disposers.push(this._columns.template);\r\n            }\r\n            return this._columns;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Creates and returns a column element to use as a template.\r\n     *\r\n     * @return Column template\r\n     */\r\n    ColumnSeries.prototype.createColumnTemplate = function () {\r\n        return new Column();\r\n    };\r\n    Object.defineProperty(ColumnSeries.prototype, \"clustered\", {\r\n        /**\r\n         * @return Clustered?\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"clustered\");\r\n        },\r\n        /**\r\n         * Cluster this series columns?\r\n         *\r\n         * Setting to `false` will make columns overlap with other series.\r\n         *\r\n         * @default true\r\n         * @param value  Clustered?\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"clustered\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromOpenState) {\r\n                this._dropFromOpenState = this.states.create(\"dropFromOpenState\");\r\n            }\r\n            return this._dropFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is lower than open value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"dropFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._dropFromPreviousState) {\r\n                this._dropFromPreviousState = this.states.create(\"dropFromPreviousState\");\r\n            }\r\n            return this._dropFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is lower value of a previous\r\n         * column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._dropFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromOpenState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromOpenState) {\r\n                this._riseFromOpenState = this.states.create(\"riseFromOpenState\");\r\n            }\r\n            return this._riseFromOpenState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when close value is same or higher than open\r\n         * value.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * NOTE: this will work only if at least one axis is [[ValueAxis]].\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromOpenState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ColumnSeries.prototype, \"riseFromPreviousState\", {\r\n        /**\r\n         * @return State\r\n         */\r\n        get: function () {\r\n            if (!this._riseFromPreviousState) {\r\n                this._riseFromPreviousState = this.states.create(\"riseFromPreviousState\");\r\n            }\r\n            return this._riseFromPreviousState;\r\n        },\r\n        /**\r\n         * A state to apply to a column when its value is same or higher than value\r\n         * of a previous column.\r\n         *\r\n         * Can be used to differentiate appearance based on value relations.\r\n         *\r\n         * @readonly You can modify state object, but can't overwrite it\r\n         * @param  value  State\r\n         */\r\n        set: function (value) {\r\n            this._riseFromPreviousState = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Updates value of the related legend item.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param dataItem  Data item\r\n     */\r\n    ColumnSeries.prototype.updateLegendValue = function (dataItem, notRange) {\r\n        var _this = this;\r\n        _super.prototype.updateLegendValue.call(this, dataItem, notRange);\r\n        if (this.legendDataItem) {\r\n            var marker = this.legendDataItem.marker;\r\n            var fromOpenState_1;\r\n            var fromPreviousState_1;\r\n            if (dataItem) {\r\n                if (dataItem.droppedFromOpen) {\r\n                    fromOpenState_1 = this._dropFromOpenState;\r\n                }\r\n                else {\r\n                    fromOpenState_1 = this._riseFromOpenState;\r\n                }\r\n                if (dataItem.droppedFromPrevious) {\r\n                    fromPreviousState_1 = this._dropFromPreviousState;\r\n                }\r\n                else {\r\n                    fromPreviousState_1 = this._riseFromPreviousState;\r\n                }\r\n            }\r\n            $iter.each(marker.children.iterator(), function (child) {\r\n                if (dataItem) {\r\n                    child.setState(fromPreviousState_1);\r\n                    child.setState(fromOpenState_1);\r\n                }\r\n                else {\r\n                    // todo: think what to do here, maybe apply above states based on totals?\r\n                    child.setState(_this._riseFromPreviousState);\r\n                    child.setState(_this._riseFromOpenState);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Creates elements in related legend container, that mimics the look of this\r\n     * Series.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param marker  Legend item container\r\n     */\r\n    ColumnSeries.prototype.createLegendMarker = function (marker) {\r\n        var w = marker.pixelWidth;\r\n        var h = marker.pixelHeight;\r\n        marker.removeChildren();\r\n        var column = marker.createChild(RoundedRectangle);\r\n        column.shouldClone = false;\r\n        $object.copyProperties(this, column, visualProperties);\r\n        column.copyFrom(this.columns.template);\r\n        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow\r\n        column.width = w;\r\n        column.height = h;\r\n        var legendDataItem = marker.dataItem;\r\n        legendDataItem.color = this.fill;\r\n        legendDataItem.colorOrig = this.fill;\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[ColumnSeries]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    ColumnSeries.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.columns.template.copyFrom(source.columns.template);\r\n    };\r\n    /**\r\n    * returns bullet x location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationX = function (bullet, field) {\r\n        if (this.baseAxis == this.xAxis) {\r\n            var bulletLocationX = bullet.locationX;\r\n            if (!$type.isNumber(bulletLocationX)) {\r\n                bulletLocationX = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationX;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationX.call(this, bullet, field);\r\n        }\r\n    };\r\n    /**\r\n    * returns bullet y location\r\n    * @ignore\r\n    */\r\n    ColumnSeries.prototype.getBulletLocationY = function (bullet, field) {\r\n        if (this.baseAxis == this.yAxis) {\r\n            var bulletLocationY = bullet.locationY;\r\n            if (!$type.isNumber(bulletLocationY)) {\r\n                bulletLocationY = 0.5;\r\n            }\r\n            var endLocation = this.getEndLocation(bullet.dataItem);\r\n            var startLocation = this.getStartLocation(bullet.dataItem);\r\n            return endLocation - (endLocation - startLocation) * bulletLocationY;\r\n        }\r\n        else {\r\n            return _super.prototype.getBulletLocationY.call(this, bullet, field);\r\n        }\r\n    };\r\n    ColumnSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {\r\n        //if (this.baseAxis == this.xAxis) {\r\n        if (!$type.isNumber(bulletLocationX)) {\r\n            if (dataItem) {\r\n                bulletLocationX = dataItem.locations[field];\r\n            }\r\n            else {\r\n                bulletLocationX = 0.5;\r\n            }\r\n        }\r\n        return this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX);\r\n        //}\r\n        //else {\r\n        //\treturn super.getAdjustedXLocation(dataItem, field);\r\n        //}\r\n    };\r\n    ColumnSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {\r\n        //if (this.baseAxis == this.yAxis) {\r\n        if (!$type.isNumber(bulletLocationY)) {\r\n            if (dataItem) {\r\n                bulletLocationY = dataItem.locations[field];\r\n            }\r\n            else {\r\n                bulletLocationY = 0.5;\r\n            }\r\n        }\r\n        return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;\r\n        //}\r\n        //else {\r\n        //\treturn super.getAdjustedYLocation(dataItem, field);\r\n        //}\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixVerticalCoordinate = function (coordinate) {\r\n        var paddingBottom = this.columns.template.pixelPaddingBottom;\r\n        var paddingTop = this.columns.template.pixelPaddingTop;\r\n        var minY = -paddingTop;\r\n        var maxY = this.yAxis.axisLength + paddingBottom;\r\n        return $math.fitToRange(coordinate, minY, maxY);\r\n    };\r\n    /**\r\n     * @ignore Exclude from docs\r\n     */\r\n    ColumnSeries.prototype.fixHorizontalCoordinate = function (coordinate) {\r\n        var paddingLeft = this.columns.template.pixelPaddingLeft;\r\n        var paddingRight = this.columns.template.pixelPaddingRight;\r\n        var minX = -paddingLeft;\r\n        var maxX = this.xAxis.axisLength + paddingRight;\r\n        return $math.fitToRange(coordinate, minX, maxX);\r\n    };\r\n    /**\r\n     * @ignore\r\n     */\r\n    ColumnSeries.prototype.disposeData = function () {\r\n        _super.prototype.disposeData.call(this);\r\n        this.columns.clear();\r\n    };\r\n    return ColumnSeries;\r\n}(XYSeries));\r\nexport { ColumnSeries };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ColumnSeries\"] = ColumnSeries;\r\nregistry.registeredClasses[\"ColumnSeriesDataItem\"] = ColumnSeriesDataItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}