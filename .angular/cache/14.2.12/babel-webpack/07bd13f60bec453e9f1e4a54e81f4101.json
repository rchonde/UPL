{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.size_helper.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, getHeight, setHeight, setWidth } from \"../../core/utils/size\";\nimport { hasWindow } from \"../../core/utils/window\";\nexport class GanttSizeHelper {\n  constructor(gantt) {\n    this._gantt = gantt;\n  }\n\n  _setTreeListDimension(dimension, value) {\n    var _this$_gantt$_ganttTr;\n\n    var setter = \"width\" === dimension ? setWidth : setHeight;\n    var getter = \"width\" === dimension ? getWidth : getHeight;\n    setter(this._gantt._$treeListWrapper, value);\n    null === (_this$_gantt$_ganttTr = this._gantt._ganttTreeList) || void 0 === _this$_gantt$_ganttTr ? void 0 : _this$_gantt$_ganttTr.setOption(dimension, getter(this._gantt._$treeListWrapper));\n  }\n\n  _setGanttViewDimension(dimension, value) {\n    var setter = \"width\" === dimension ? setWidth : setHeight;\n    var getter = \"width\" === dimension ? getWidth : getHeight;\n    setter(this._gantt._$ganttView, value);\n\n    this._gantt._setGanttViewOption(dimension, getter(this._gantt._$ganttView));\n  }\n\n  _getPanelsWidthByOption() {\n    var _leftPanelWidth$index, _leftPanelWidth$index2;\n\n    var ganttWidth = getWidth(this._gantt._$element);\n\n    var leftPanelWidth = this._gantt.option(\"taskListWidth\");\n\n    var rightPanelWidth;\n\n    if (!isNaN(leftPanelWidth)) {\n      rightPanelWidth = ganttWidth - parseInt(leftPanelWidth);\n    } else if ((null === (_leftPanelWidth$index = leftPanelWidth.indexOf) || void 0 === _leftPanelWidth$index ? void 0 : _leftPanelWidth$index.call(leftPanelWidth, \"px\")) > 0) {\n      rightPanelWidth = ganttWidth - parseInt(leftPanelWidth.replace(\"px\", \"\")) + \"px\";\n    } else if ((null === (_leftPanelWidth$index2 = leftPanelWidth.indexOf) || void 0 === _leftPanelWidth$index2 ? void 0 : _leftPanelWidth$index2.call(leftPanelWidth, \"%\")) > 0) {\n      rightPanelWidth = 100 - parseInt(leftPanelWidth.replace(\"%\", \"\")) + \"%\";\n    }\n\n    return {\n      leftPanelWidth: leftPanelWidth,\n      rightPanelWidth: rightPanelWidth\n    };\n  }\n\n  onAdjustControl() {\n    var elementHeight = getHeight(this._gantt._$element);\n    this.updateGanttWidth();\n    this.setGanttHeight(elementHeight);\n  }\n\n  onApplyPanelSize(e) {\n    this.setInnerElementsWidth(e);\n    this.updateGanttRowHeights();\n  }\n\n  updateGanttRowHeights() {\n    var rowHeight = this._gantt._ganttTreeList.getRowHeight();\n\n    if (this._gantt._getGanttViewOption(\"rowHeight\") !== rowHeight) {\n      var _this$_gantt$_ganttVi;\n\n      this._gantt._setGanttViewOption(\"rowHeight\", rowHeight);\n\n      null === (_this$_gantt$_ganttVi = this._gantt._ganttView) || void 0 === _this$_gantt$_ganttVi ? void 0 : _this$_gantt$_ganttVi._ganttViewCore.updateRowHeights(rowHeight);\n    }\n  }\n\n  adjustHeight() {\n    if (!this._gantt._hasHeight) {\n      this._gantt._setGanttViewOption(\"height\", 0);\n\n      this._gantt._setGanttViewOption(\"height\", this._gantt._ganttTreeList.getOffsetHeight());\n    }\n  }\n\n  setInnerElementsWidth(widths) {\n    if (!hasWindow()) {\n      return;\n    }\n\n    if (!widths) {\n      widths = this._getPanelsWidthByOption();\n\n      this._gantt._splitter._setSplitterPositionLeft({\n        splitterPositionLeft: widths.leftPanelWidth\n      });\n\n      this._setTreeListDimension(\"width\", 0);\n\n      this._setGanttViewDimension(\"width\", 0);\n    }\n\n    this._setTreeListDimension(\"width\", widths.leftPanelWidth);\n\n    this._setGanttViewDimension(\"width\", widths.rightPanelWidth);\n  }\n\n  updateGanttWidth() {\n    this._gantt._splitter._dimensionChanged();\n  }\n\n  setGanttHeight(height) {\n    var _this$_gantt$_ganttVi2;\n\n    var toolbarHeightOffset = this._gantt._$toolbarWrapper.get(0).offsetHeight;\n\n    var mainWrapperHeight = height - toolbarHeightOffset;\n\n    this._setTreeListDimension(\"height\", mainWrapperHeight);\n\n    this._setGanttViewDimension(\"height\", mainWrapperHeight);\n\n    null === (_this$_gantt$_ganttVi2 = this._gantt._ganttView) || void 0 === _this$_gantt$_ganttVi2 ? void 0 : _this$_gantt$_ganttVi2._ganttViewCore.resetAndUpdate();\n  }\n\n}","map":{"version":3,"names":["getWidth","getHeight","setHeight","setWidth","hasWindow","GanttSizeHelper","constructor","gantt","_gantt","_setTreeListDimension","dimension","value","_this$_gantt$_ganttTr","setter","getter","_$treeListWrapper","_ganttTreeList","setOption","_setGanttViewDimension","_$ganttView","_setGanttViewOption","_getPanelsWidthByOption","_leftPanelWidth$index","_leftPanelWidth$index2","ganttWidth","_$element","leftPanelWidth","option","rightPanelWidth","isNaN","parseInt","indexOf","call","replace","onAdjustControl","elementHeight","updateGanttWidth","setGanttHeight","onApplyPanelSize","e","setInnerElementsWidth","updateGanttRowHeights","rowHeight","getRowHeight","_getGanttViewOption","_this$_gantt$_ganttVi","_ganttView","_ganttViewCore","updateRowHeights","adjustHeight","_hasHeight","getOffsetHeight","widths","_splitter","_setSplitterPositionLeft","splitterPositionLeft","_dimensionChanged","height","_this$_gantt$_ganttVi2","toolbarHeightOffset","_$toolbarWrapper","get","offsetHeight","mainWrapperHeight","resetAndUpdate"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/gantt/ui.gantt.size_helper.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/gantt/ui.gantt.size_helper.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getHeight,\r\n    setHeight,\r\n    setWidth\r\n} from \"../../core/utils/size\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nexport class GanttSizeHelper {\r\n    constructor(gantt) {\r\n        this._gantt = gantt\r\n    }\r\n    _setTreeListDimension(dimension, value) {\r\n        var _this$_gantt$_ganttTr;\r\n        var setter = \"width\" === dimension ? setWidth : setHeight;\r\n        var getter = \"width\" === dimension ? getWidth : getHeight;\r\n        setter(this._gantt._$treeListWrapper, value);\r\n        null === (_this$_gantt$_ganttTr = this._gantt._ganttTreeList) || void 0 === _this$_gantt$_ganttTr ? void 0 : _this$_gantt$_ganttTr.setOption(dimension, getter(this._gantt._$treeListWrapper))\r\n    }\r\n    _setGanttViewDimension(dimension, value) {\r\n        var setter = \"width\" === dimension ? setWidth : setHeight;\r\n        var getter = \"width\" === dimension ? getWidth : getHeight;\r\n        setter(this._gantt._$ganttView, value);\r\n        this._gantt._setGanttViewOption(dimension, getter(this._gantt._$ganttView))\r\n    }\r\n    _getPanelsWidthByOption() {\r\n        var _leftPanelWidth$index, _leftPanelWidth$index2;\r\n        var ganttWidth = getWidth(this._gantt._$element);\r\n        var leftPanelWidth = this._gantt.option(\"taskListWidth\");\r\n        var rightPanelWidth;\r\n        if (!isNaN(leftPanelWidth)) {\r\n            rightPanelWidth = ganttWidth - parseInt(leftPanelWidth)\r\n        } else if ((null === (_leftPanelWidth$index = leftPanelWidth.indexOf) || void 0 === _leftPanelWidth$index ? void 0 : _leftPanelWidth$index.call(leftPanelWidth, \"px\")) > 0) {\r\n            rightPanelWidth = ganttWidth - parseInt(leftPanelWidth.replace(\"px\", \"\")) + \"px\"\r\n        } else if ((null === (_leftPanelWidth$index2 = leftPanelWidth.indexOf) || void 0 === _leftPanelWidth$index2 ? void 0 : _leftPanelWidth$index2.call(leftPanelWidth, \"%\")) > 0) {\r\n            rightPanelWidth = 100 - parseInt(leftPanelWidth.replace(\"%\", \"\")) + \"%\"\r\n        }\r\n        return {\r\n            leftPanelWidth: leftPanelWidth,\r\n            rightPanelWidth: rightPanelWidth\r\n        }\r\n    }\r\n    onAdjustControl() {\r\n        var elementHeight = getHeight(this._gantt._$element);\r\n        this.updateGanttWidth();\r\n        this.setGanttHeight(elementHeight)\r\n    }\r\n    onApplyPanelSize(e) {\r\n        this.setInnerElementsWidth(e);\r\n        this.updateGanttRowHeights()\r\n    }\r\n    updateGanttRowHeights() {\r\n        var rowHeight = this._gantt._ganttTreeList.getRowHeight();\r\n        if (this._gantt._getGanttViewOption(\"rowHeight\") !== rowHeight) {\r\n            var _this$_gantt$_ganttVi;\r\n            this._gantt._setGanttViewOption(\"rowHeight\", rowHeight);\r\n            null === (_this$_gantt$_ganttVi = this._gantt._ganttView) || void 0 === _this$_gantt$_ganttVi ? void 0 : _this$_gantt$_ganttVi._ganttViewCore.updateRowHeights(rowHeight)\r\n        }\r\n    }\r\n    adjustHeight() {\r\n        if (!this._gantt._hasHeight) {\r\n            this._gantt._setGanttViewOption(\"height\", 0);\r\n            this._gantt._setGanttViewOption(\"height\", this._gantt._ganttTreeList.getOffsetHeight())\r\n        }\r\n    }\r\n    setInnerElementsWidth(widths) {\r\n        if (!hasWindow()) {\r\n            return\r\n        }\r\n        if (!widths) {\r\n            widths = this._getPanelsWidthByOption();\r\n            this._gantt._splitter._setSplitterPositionLeft({\r\n                splitterPositionLeft: widths.leftPanelWidth\r\n            });\r\n            this._setTreeListDimension(\"width\", 0);\r\n            this._setGanttViewDimension(\"width\", 0)\r\n        }\r\n        this._setTreeListDimension(\"width\", widths.leftPanelWidth);\r\n        this._setGanttViewDimension(\"width\", widths.rightPanelWidth)\r\n    }\r\n    updateGanttWidth() {\r\n        this._gantt._splitter._dimensionChanged()\r\n    }\r\n    setGanttHeight(height) {\r\n        var _this$_gantt$_ganttVi2;\r\n        var toolbarHeightOffset = this._gantt._$toolbarWrapper.get(0).offsetHeight;\r\n        var mainWrapperHeight = height - toolbarHeightOffset;\r\n        this._setTreeListDimension(\"height\", mainWrapperHeight);\r\n        this._setGanttViewDimension(\"height\", mainWrapperHeight);\r\n        null === (_this$_gantt$_ganttVi2 = this._gantt._ganttView) || void 0 === _this$_gantt$_ganttVi2 ? void 0 : _this$_gantt$_ganttVi2._ganttViewCore.resetAndUpdate()\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}