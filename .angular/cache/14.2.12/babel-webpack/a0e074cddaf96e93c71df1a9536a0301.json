{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.base.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth, getOuterWidth, getHeight } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport { isMaterial, waitWebFont } from \"../themes\";\nimport { isPlainObject, isDefined } from \"../../core/utils/type\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport AsyncCollectionWidget from \"../collection/ui.collection_widget.async\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport fx from \"../../animation/fx\";\nimport { TOOLBAR_CLASS } from \"./constants\";\nvar TOOLBAR_BEFORE_CLASS = \"dx-toolbar-before\";\nvar TOOLBAR_CENTER_CLASS = \"dx-toolbar-center\";\nvar TOOLBAR_AFTER_CLASS = \"dx-toolbar-after\";\nvar TOOLBAR_MINI_CLASS = \"dx-toolbar-mini\";\nvar TOOLBAR_ITEM_CLASS = \"dx-toolbar-item\";\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\nvar TOOLBAR_BUTTON_CLASS = \"dx-toolbar-button\";\nvar TOOLBAR_ITEMS_CONTAINER_CLASS = \"dx-toolbar-items-container\";\nvar TOOLBAR_GROUP_CLASS = \"dx-toolbar-group\";\nvar TOOLBAR_COMPACT_CLASS = \"dx-toolbar-compact\";\nvar TEXT_BUTTON_MODE = \"text\";\nvar DEFAULT_BUTTON_TYPE = \"default\";\nvar DEFAULT_DROPDOWNBUTTON_STYLING_MODE = \"contained\";\nvar TOOLBAR_ITEM_DATA_KEY = \"dxToolbarItemDataKey\";\nvar ANIMATION_TIMEOUT = 15;\n\nclass ToolbarBase extends AsyncCollectionWidget {\n  _getSynchronizableOptionsForCreateComponent() {\n    return super._getSynchronizableOptionsForCreateComponent().filter(item => \"disabled\" !== item);\n  }\n\n  _initTemplates() {\n    super._initTemplates();\n\n    var template = new BindableTemplate(function ($container, data, rawModel) {\n      if (isPlainObject(data)) {\n        var {\n          text: text,\n          html: html,\n          widget: widget\n        } = data;\n\n        if (text) {\n          $container.text(text).wrapInner(\"<div>\");\n        }\n\n        if (html) {\n          $container.html(html);\n        }\n\n        if (\"dxDropDownButton\" === widget) {\n          var _data$options;\n\n          data.options = null !== (_data$options = data.options) && void 0 !== _data$options ? _data$options : {};\n\n          if (!isDefined(data.options.stylingMode)) {\n            data.options.stylingMode = this.option(\"useFlatButtons\") ? TEXT_BUTTON_MODE : DEFAULT_DROPDOWNBUTTON_STYLING_MODE;\n          }\n        }\n\n        if (\"dxButton\" === widget) {\n          if (this.option(\"useFlatButtons\")) {\n            var _data$options2, _data$options$styling;\n\n            data.options = null !== (_data$options2 = data.options) && void 0 !== _data$options2 ? _data$options2 : {};\n            data.options.stylingMode = null !== (_data$options$styling = data.options.stylingMode) && void 0 !== _data$options$styling ? _data$options$styling : TEXT_BUTTON_MODE;\n          }\n\n          if (this.option(\"useDefaultButtons\")) {\n            var _data$options3, _data$options$type;\n\n            data.options = null !== (_data$options3 = data.options) && void 0 !== _data$options3 ? _data$options3 : {};\n            data.options.type = null !== (_data$options$type = data.options.type) && void 0 !== _data$options$type ? _data$options$type : DEFAULT_BUTTON_TYPE;\n          }\n        }\n      } else {\n        $container.text(String(data));\n      }\n\n      this._getTemplate(\"dx-polymorph-widget\").render({\n        container: $container,\n        model: rawModel,\n        parent: this\n      });\n    }.bind(this), [\"text\", \"html\", \"widget\", \"options\"], this.option(\"integrationOptions.watchMethod\"));\n\n    this._templateManager.addDefaultTemplates({\n      item: template,\n      menuItem: template\n    });\n  }\n\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      renderAs: \"topToolbar\",\n      grouped: false,\n      useFlatButtons: false,\n      useDefaultButtons: false\n    });\n  }\n\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device: function () {\n        return isMaterial();\n      },\n      options: {\n        useFlatButtons: true\n      }\n    }]);\n  }\n\n  _itemContainer() {\n    return this._$toolbarItemsContainer.find([\".\".concat(TOOLBAR_BEFORE_CLASS), \".\".concat(TOOLBAR_CENTER_CLASS), \".\".concat(TOOLBAR_AFTER_CLASS)].join(\",\"));\n  }\n\n  _itemClass() {\n    return TOOLBAR_ITEM_CLASS;\n  }\n\n  _itemDataKey() {\n    return TOOLBAR_ITEM_DATA_KEY;\n  }\n\n  _dimensionChanged() {\n    this._arrangeItems();\n\n    this._applyCompactMode();\n  }\n\n  _initMarkup() {\n    this._renderToolbar();\n\n    this._renderSections();\n\n    super._initMarkup();\n  }\n\n  _render() {\n    super._render();\n\n    this._renderItemsAsync();\n\n    this._updateDimensionsInMaterial();\n  }\n\n  _postProcessRenderItems() {\n    this._arrangeItems();\n  }\n\n  _renderToolbar() {\n    this.$element().addClass(TOOLBAR_CLASS);\n    this._$toolbarItemsContainer = $(\"<div>\").addClass(TOOLBAR_ITEMS_CONTAINER_CLASS).appendTo(this.$element());\n    this.setAria(\"role\", \"toolbar\");\n  }\n\n  _renderSections() {\n    var $container = this._$toolbarItemsContainer;\n    each([\"before\", \"center\", \"after\"], (_, section) => {\n      var sectionClass = \"dx-toolbar-\".concat(section);\n      var $section = $container.find(\".\".concat(sectionClass));\n\n      if (!$section.length) {\n        this[\"_$\".concat(section, \"Section\")] = $(\"<div>\").addClass(sectionClass).appendTo($container);\n      }\n    });\n  }\n\n  _arrangeItems(elementWidth) {\n    var _elementWidth;\n\n    elementWidth = null !== (_elementWidth = elementWidth) && void 0 !== _elementWidth ? _elementWidth : getWidth(this.$element());\n\n    this._$centerSection.css({\n      margin: \"0 auto\",\n      float: \"none\"\n    });\n\n    var beforeRect = getBoundingRect(this._$beforeSection.get(0));\n    var afterRect = getBoundingRect(this._$afterSection.get(0));\n\n    this._alignCenterSection(beforeRect, afterRect, elementWidth);\n\n    var $label = this._$toolbarItemsContainer.find(\".\".concat(TOOLBAR_LABEL_CLASS)).eq(0);\n\n    var $section = $label.parent();\n\n    if (!$label.length) {\n      return;\n    }\n\n    var labelOffset = beforeRect.width ? beforeRect.width : $label.position().left;\n    var widthBeforeSection = $section.hasClass(TOOLBAR_BEFORE_CLASS) ? 0 : labelOffset;\n    var widthAfterSection = $section.hasClass(TOOLBAR_AFTER_CLASS) ? 0 : afterRect.width;\n    var elemsAtSectionWidth = 0;\n    $section.children().not(\".\".concat(TOOLBAR_LABEL_CLASS)).each(function () {\n      elemsAtSectionWidth += getOuterWidth(this);\n    });\n    var freeSpace = elementWidth - elemsAtSectionWidth;\n    var sectionMaxWidth = Math.max(freeSpace - widthBeforeSection - widthAfterSection, 0);\n\n    if ($section.hasClass(TOOLBAR_BEFORE_CLASS)) {\n      this._alignSection(this._$beforeSection, sectionMaxWidth);\n    } else {\n      var labelPaddings = getOuterWidth($label) - getWidth($label);\n      $label.css(\"maxWidth\", sectionMaxWidth - labelPaddings);\n    }\n  }\n\n  _alignCenterSection(beforeRect, afterRect, elementWidth) {\n    this._alignSection(this._$centerSection, elementWidth - beforeRect.width - afterRect.width);\n\n    var isRTL = this.option(\"rtlEnabled\");\n    var leftRect = isRTL ? afterRect : beforeRect;\n    var rightRect = isRTL ? beforeRect : afterRect;\n    var centerRect = getBoundingRect(this._$centerSection.get(0));\n\n    if (leftRect.right > centerRect.left || centerRect.right > rightRect.left) {\n      this._$centerSection.css({\n        marginLeft: leftRect.width,\n        marginRight: rightRect.width,\n        float: leftRect.width > rightRect.width ? \"none\" : \"right\"\n      });\n    }\n  }\n\n  _alignSection($section, maxWidth) {\n    var $labels = $section.find(\".\".concat(TOOLBAR_LABEL_CLASS));\n    var labels = $labels.toArray();\n    maxWidth -= this._getCurrentLabelsPaddings(labels);\n\n    var currentWidth = this._getCurrentLabelsWidth(labels);\n\n    var difference = Math.abs(currentWidth - maxWidth);\n\n    if (maxWidth < currentWidth) {\n      labels = labels.reverse();\n\n      this._alignSectionLabels(labels, difference, false);\n    } else {\n      this._alignSectionLabels(labels, difference, true);\n    }\n  }\n\n  _alignSectionLabels(labels, difference, expanding) {\n    var getRealLabelWidth = function (label) {\n      return getBoundingRect(label).width;\n    };\n\n    for (var i = 0; i < labels.length; i++) {\n      var $label = $(labels[i]);\n      var currentLabelWidth = Math.ceil(getRealLabelWidth(labels[i]));\n      var labelMaxWidth = void 0;\n\n      if (expanding) {\n        $label.css(\"maxWidth\", \"inherit\");\n      }\n\n      var possibleLabelWidth = Math.ceil(expanding ? getRealLabelWidth(labels[i]) : currentLabelWidth);\n\n      if (possibleLabelWidth < difference) {\n        labelMaxWidth = expanding ? possibleLabelWidth : 0;\n        difference -= possibleLabelWidth;\n      } else {\n        labelMaxWidth = expanding ? currentLabelWidth + difference : currentLabelWidth - difference;\n        $label.css(\"maxWidth\", labelMaxWidth);\n        break;\n      }\n\n      $label.css(\"maxWidth\", labelMaxWidth);\n    }\n  }\n\n  _applyCompactMode() {\n    var $element = this.$element();\n    $element.removeClass(TOOLBAR_COMPACT_CLASS);\n\n    if (this.option(\"compactMode\") && this._getSummaryItemsWidth(this.itemElements(), true) > getWidth($element)) {\n      $element.addClass(TOOLBAR_COMPACT_CLASS);\n    }\n  }\n\n  _getCurrentLabelsWidth(labels) {\n    var width = 0;\n    labels.forEach(function (label, index) {\n      width += getOuterWidth(label);\n    });\n    return width;\n  }\n\n  _getCurrentLabelsPaddings(labels) {\n    var padding = 0;\n    labels.forEach(function (label, index) {\n      padding += getOuterWidth(label) - getWidth(label);\n    });\n    return padding;\n  }\n\n  _renderItem(index, item, itemContainer, $after) {\n    var _item$location, _item$text;\n\n    var location = null !== (_item$location = item.location) && void 0 !== _item$location ? _item$location : \"center\";\n    var container = null !== itemContainer && void 0 !== itemContainer ? itemContainer : this[\"_$\".concat(location, \"Section\")];\n    var itemHasText = !!(null !== (_item$text = item.text) && void 0 !== _item$text ? _item$text : item.html);\n\n    var itemElement = super._renderItem(index, item, container, $after);\n\n    itemElement.toggleClass(TOOLBAR_BUTTON_CLASS, !itemHasText).toggleClass(TOOLBAR_LABEL_CLASS, itemHasText).addClass(item.cssClass);\n    return itemElement;\n  }\n\n  _renderGroupedItems() {\n    each(this.option(\"items\"), (groupIndex, group) => {\n      var _group$location;\n\n      var groupItems = group.items;\n      var $container = $(\"<div>\").addClass(TOOLBAR_GROUP_CLASS);\n      var location = null !== (_group$location = group.location) && void 0 !== _group$location ? _group$location : \"center\";\n\n      if (!groupItems || !groupItems.length) {\n        return;\n      }\n\n      each(groupItems, (itemIndex, item) => {\n        this._renderItem(itemIndex, item, $container, null);\n      });\n\n      this._$toolbarItemsContainer.find(\".dx-toolbar-\".concat(location)).append($container);\n    });\n  }\n\n  _renderItems(items) {\n    var grouped = this.option(\"grouped\") && items.length && items[0].items;\n    grouped ? this._renderGroupedItems() : super._renderItems(items);\n  }\n\n  _getToolbarItems() {\n    var _this$option;\n\n    return null !== (_this$option = this.option(\"items\")) && void 0 !== _this$option ? _this$option : [];\n  }\n\n  _renderContentImpl() {\n    var items = this._getToolbarItems();\n\n    this.$element().toggleClass(TOOLBAR_MINI_CLASS, 0 === items.length);\n\n    if (this._renderedItemsCount) {\n      this._renderItems(items.slice(this._renderedItemsCount));\n    } else {\n      this._renderItems(items);\n    }\n\n    this._applyCompactMode();\n  }\n\n  _renderEmptyMessage() {}\n\n  _clean() {\n    this._$toolbarItemsContainer.children().empty();\n\n    this.$element().empty();\n    delete this._$beforeSection;\n    delete this._$centerSection;\n    delete this._$afterSection;\n  }\n\n  _visibilityChanged(visible) {\n    if (visible) {\n      this._arrangeItems();\n    }\n  }\n\n  _isVisible() {\n    return getWidth(this.$element()) > 0 && getHeight(this.$element()) > 0;\n  }\n\n  _getIndexByItem(item) {\n    return this._getToolbarItems().indexOf(item);\n  }\n\n  _itemOptionChanged(item, property, value) {\n    super._itemOptionChanged.apply(this, [item, property, value]);\n\n    this._arrangeItems();\n  }\n\n  _optionChanged(_ref) {\n    var {\n      name: name,\n      value: value\n    } = _ref;\n\n    switch (name) {\n      case \"width\":\n        super._optionChanged.apply(this, arguments);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"renderAs\":\n      case \"useFlatButtons\":\n      case \"useDefaultButtons\":\n        this._invalidate();\n\n        break;\n\n      case \"compactMode\":\n        this._applyCompactMode();\n\n        break;\n\n      case \"grouped\":\n        break;\n\n      default:\n        super._optionChanged.apply(this, arguments);\n\n    }\n  }\n\n  _dispose() {\n    super._dispose();\n\n    clearTimeout(this._waitParentAnimationTimeout);\n  }\n\n  _updateDimensionsInMaterial() {\n    if (isMaterial()) {\n      Promise.all([(() => new Promise(resolve => {\n        var check = () => {\n          var readyToResolve = true;\n          this.$element().parents().each((_, parent) => {\n            if (fx.isAnimating($(parent))) {\n              readyToResolve = false;\n              return false;\n            }\n          });\n\n          if (readyToResolve) {\n            resolve();\n          }\n\n          return readyToResolve;\n        };\n\n        var runCheck = () => {\n          clearTimeout(this._waitParentAnimationTimeout);\n          this._waitParentAnimationTimeout = setTimeout(() => check() || runCheck(), ANIMATION_TIMEOUT);\n        };\n\n        runCheck();\n      }))(), (() => {\n        var $labels = this.$element().find(\".\".concat(TOOLBAR_LABEL_CLASS));\n        var promises = [];\n        $labels.each((_, label) => {\n          var text = $(label).text();\n          var fontWeight = $(label).css(\"fontWeight\");\n          promises.push(waitWebFont(text, fontWeight));\n        });\n        return Promise.all(promises);\n      })()]).then(() => {\n        this._dimensionChanged();\n      });\n    }\n  }\n\n}\n\nregisterComponent(\"dxToolbarBase\", ToolbarBase);\nexport default ToolbarBase;","map":{"version":3,"names":["getWidth","getOuterWidth","getHeight","$","isMaterial","waitWebFont","isPlainObject","isDefined","registerComponent","extend","each","getBoundingRect","AsyncCollectionWidget","BindableTemplate","fx","TOOLBAR_CLASS","TOOLBAR_BEFORE_CLASS","TOOLBAR_CENTER_CLASS","TOOLBAR_AFTER_CLASS","TOOLBAR_MINI_CLASS","TOOLBAR_ITEM_CLASS","TOOLBAR_LABEL_CLASS","TOOLBAR_BUTTON_CLASS","TOOLBAR_ITEMS_CONTAINER_CLASS","TOOLBAR_GROUP_CLASS","TOOLBAR_COMPACT_CLASS","TEXT_BUTTON_MODE","DEFAULT_BUTTON_TYPE","DEFAULT_DROPDOWNBUTTON_STYLING_MODE","TOOLBAR_ITEM_DATA_KEY","ANIMATION_TIMEOUT","ToolbarBase","_getSynchronizableOptionsForCreateComponent","filter","item","_initTemplates","template","$container","data","rawModel","text","html","widget","wrapInner","_data$options","options","stylingMode","option","_data$options2","_data$options$styling","_data$options3","_data$options$type","type","String","_getTemplate","render","container","model","parent","bind","_templateManager","addDefaultTemplates","menuItem","_getDefaultOptions","renderAs","grouped","useFlatButtons","useDefaultButtons","_defaultOptionsRules","concat","device","_itemContainer","_$toolbarItemsContainer","find","join","_itemClass","_itemDataKey","_dimensionChanged","_arrangeItems","_applyCompactMode","_initMarkup","_renderToolbar","_renderSections","_render","_renderItemsAsync","_updateDimensionsInMaterial","_postProcessRenderItems","$element","addClass","appendTo","setAria","_","section","sectionClass","$section","length","elementWidth","_elementWidth","_$centerSection","css","margin","float","beforeRect","_$beforeSection","get","afterRect","_$afterSection","_alignCenterSection","$label","eq","labelOffset","width","position","left","widthBeforeSection","hasClass","widthAfterSection","elemsAtSectionWidth","children","not","freeSpace","sectionMaxWidth","Math","max","_alignSection","labelPaddings","isRTL","leftRect","rightRect","centerRect","right","marginLeft","marginRight","maxWidth","$labels","labels","toArray","_getCurrentLabelsPaddings","currentWidth","_getCurrentLabelsWidth","difference","abs","reverse","_alignSectionLabels","expanding","getRealLabelWidth","label","i","currentLabelWidth","ceil","labelMaxWidth","possibleLabelWidth","removeClass","_getSummaryItemsWidth","itemElements","forEach","index","padding","_renderItem","itemContainer","$after","_item$location","_item$text","location","itemHasText","itemElement","toggleClass","cssClass","_renderGroupedItems","groupIndex","group","_group$location","groupItems","items","itemIndex","append","_renderItems","_getToolbarItems","_this$option","_renderContentImpl","_renderedItemsCount","slice","_renderEmptyMessage","_clean","empty","_visibilityChanged","visible","_isVisible","_getIndexByItem","indexOf","_itemOptionChanged","property","value","apply","_optionChanged","_ref","name","arguments","_invalidate","_dispose","clearTimeout","_waitParentAnimationTimeout","Promise","all","resolve","check","readyToResolve","parents","isAnimating","runCheck","setTimeout","promises","fontWeight","push","then"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/toolbar/ui.toolbar.base.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/toolbar/ui.toolbar.base.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth,\r\n    getOuterWidth,\r\n    getHeight\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    isMaterial,\r\n    waitWebFont\r\n} from \"../themes\";\r\nimport {\r\n    isPlainObject,\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport AsyncCollectionWidget from \"../collection/ui.collection_widget.async\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport fx from \"../../animation/fx\";\r\nimport {\r\n    TOOLBAR_CLASS\r\n} from \"./constants\";\r\nvar TOOLBAR_BEFORE_CLASS = \"dx-toolbar-before\";\r\nvar TOOLBAR_CENTER_CLASS = \"dx-toolbar-center\";\r\nvar TOOLBAR_AFTER_CLASS = \"dx-toolbar-after\";\r\nvar TOOLBAR_MINI_CLASS = \"dx-toolbar-mini\";\r\nvar TOOLBAR_ITEM_CLASS = \"dx-toolbar-item\";\r\nvar TOOLBAR_LABEL_CLASS = \"dx-toolbar-label\";\r\nvar TOOLBAR_BUTTON_CLASS = \"dx-toolbar-button\";\r\nvar TOOLBAR_ITEMS_CONTAINER_CLASS = \"dx-toolbar-items-container\";\r\nvar TOOLBAR_GROUP_CLASS = \"dx-toolbar-group\";\r\nvar TOOLBAR_COMPACT_CLASS = \"dx-toolbar-compact\";\r\nvar TEXT_BUTTON_MODE = \"text\";\r\nvar DEFAULT_BUTTON_TYPE = \"default\";\r\nvar DEFAULT_DROPDOWNBUTTON_STYLING_MODE = \"contained\";\r\nvar TOOLBAR_ITEM_DATA_KEY = \"dxToolbarItemDataKey\";\r\nvar ANIMATION_TIMEOUT = 15;\r\nclass ToolbarBase extends AsyncCollectionWidget {\r\n    _getSynchronizableOptionsForCreateComponent() {\r\n        return super._getSynchronizableOptionsForCreateComponent().filter(item => \"disabled\" !== item)\r\n    }\r\n    _initTemplates() {\r\n        super._initTemplates();\r\n        var template = new BindableTemplate(function($container, data, rawModel) {\r\n            if (isPlainObject(data)) {\r\n                var {\r\n                    text: text,\r\n                    html: html,\r\n                    widget: widget\r\n                } = data;\r\n                if (text) {\r\n                    $container.text(text).wrapInner(\"<div>\")\r\n                }\r\n                if (html) {\r\n                    $container.html(html)\r\n                }\r\n                if (\"dxDropDownButton\" === widget) {\r\n                    var _data$options;\r\n                    data.options = null !== (_data$options = data.options) && void 0 !== _data$options ? _data$options : {};\r\n                    if (!isDefined(data.options.stylingMode)) {\r\n                        data.options.stylingMode = this.option(\"useFlatButtons\") ? TEXT_BUTTON_MODE : DEFAULT_DROPDOWNBUTTON_STYLING_MODE\r\n                    }\r\n                }\r\n                if (\"dxButton\" === widget) {\r\n                    if (this.option(\"useFlatButtons\")) {\r\n                        var _data$options2, _data$options$styling;\r\n                        data.options = null !== (_data$options2 = data.options) && void 0 !== _data$options2 ? _data$options2 : {};\r\n                        data.options.stylingMode = null !== (_data$options$styling = data.options.stylingMode) && void 0 !== _data$options$styling ? _data$options$styling : TEXT_BUTTON_MODE\r\n                    }\r\n                    if (this.option(\"useDefaultButtons\")) {\r\n                        var _data$options3, _data$options$type;\r\n                        data.options = null !== (_data$options3 = data.options) && void 0 !== _data$options3 ? _data$options3 : {};\r\n                        data.options.type = null !== (_data$options$type = data.options.type) && void 0 !== _data$options$type ? _data$options$type : DEFAULT_BUTTON_TYPE\r\n                    }\r\n                }\r\n            } else {\r\n                $container.text(String(data))\r\n            }\r\n            this._getTemplate(\"dx-polymorph-widget\").render({\r\n                container: $container,\r\n                model: rawModel,\r\n                parent: this\r\n            })\r\n        }.bind(this), [\"text\", \"html\", \"widget\", \"options\"], this.option(\"integrationOptions.watchMethod\"));\r\n        this._templateManager.addDefaultTemplates({\r\n            item: template,\r\n            menuItem: template\r\n        })\r\n    }\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            renderAs: \"topToolbar\",\r\n            grouped: false,\r\n            useFlatButtons: false,\r\n            useDefaultButtons: false\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                useFlatButtons: true\r\n            }\r\n        }])\r\n    }\r\n    _itemContainer() {\r\n        return this._$toolbarItemsContainer.find([\".\".concat(TOOLBAR_BEFORE_CLASS), \".\".concat(TOOLBAR_CENTER_CLASS), \".\".concat(TOOLBAR_AFTER_CLASS)].join(\",\"))\r\n    }\r\n    _itemClass() {\r\n        return TOOLBAR_ITEM_CLASS\r\n    }\r\n    _itemDataKey() {\r\n        return TOOLBAR_ITEM_DATA_KEY\r\n    }\r\n    _dimensionChanged() {\r\n        this._arrangeItems();\r\n        this._applyCompactMode()\r\n    }\r\n    _initMarkup() {\r\n        this._renderToolbar();\r\n        this._renderSections();\r\n        super._initMarkup()\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._renderItemsAsync();\r\n        this._updateDimensionsInMaterial()\r\n    }\r\n    _postProcessRenderItems() {\r\n        this._arrangeItems()\r\n    }\r\n    _renderToolbar() {\r\n        this.$element().addClass(TOOLBAR_CLASS);\r\n        this._$toolbarItemsContainer = $(\"<div>\").addClass(TOOLBAR_ITEMS_CONTAINER_CLASS).appendTo(this.$element());\r\n        this.setAria(\"role\", \"toolbar\")\r\n    }\r\n    _renderSections() {\r\n        var $container = this._$toolbarItemsContainer;\r\n        each([\"before\", \"center\", \"after\"], (_, section) => {\r\n            var sectionClass = \"dx-toolbar-\".concat(section);\r\n            var $section = $container.find(\".\".concat(sectionClass));\r\n            if (!$section.length) {\r\n                this[\"_$\".concat(section, \"Section\")] = $(\"<div>\").addClass(sectionClass).appendTo($container)\r\n            }\r\n        })\r\n    }\r\n    _arrangeItems(elementWidth) {\r\n        var _elementWidth;\r\n        elementWidth = null !== (_elementWidth = elementWidth) && void 0 !== _elementWidth ? _elementWidth : getWidth(this.$element());\r\n        this._$centerSection.css({\r\n            margin: \"0 auto\",\r\n            float: \"none\"\r\n        });\r\n        var beforeRect = getBoundingRect(this._$beforeSection.get(0));\r\n        var afterRect = getBoundingRect(this._$afterSection.get(0));\r\n        this._alignCenterSection(beforeRect, afterRect, elementWidth);\r\n        var $label = this._$toolbarItemsContainer.find(\".\".concat(TOOLBAR_LABEL_CLASS)).eq(0);\r\n        var $section = $label.parent();\r\n        if (!$label.length) {\r\n            return\r\n        }\r\n        var labelOffset = beforeRect.width ? beforeRect.width : $label.position().left;\r\n        var widthBeforeSection = $section.hasClass(TOOLBAR_BEFORE_CLASS) ? 0 : labelOffset;\r\n        var widthAfterSection = $section.hasClass(TOOLBAR_AFTER_CLASS) ? 0 : afterRect.width;\r\n        var elemsAtSectionWidth = 0;\r\n        $section.children().not(\".\".concat(TOOLBAR_LABEL_CLASS)).each((function() {\r\n            elemsAtSectionWidth += getOuterWidth(this)\r\n        }));\r\n        var freeSpace = elementWidth - elemsAtSectionWidth;\r\n        var sectionMaxWidth = Math.max(freeSpace - widthBeforeSection - widthAfterSection, 0);\r\n        if ($section.hasClass(TOOLBAR_BEFORE_CLASS)) {\r\n            this._alignSection(this._$beforeSection, sectionMaxWidth)\r\n        } else {\r\n            var labelPaddings = getOuterWidth($label) - getWidth($label);\r\n            $label.css(\"maxWidth\", sectionMaxWidth - labelPaddings)\r\n        }\r\n    }\r\n    _alignCenterSection(beforeRect, afterRect, elementWidth) {\r\n        this._alignSection(this._$centerSection, elementWidth - beforeRect.width - afterRect.width);\r\n        var isRTL = this.option(\"rtlEnabled\");\r\n        var leftRect = isRTL ? afterRect : beforeRect;\r\n        var rightRect = isRTL ? beforeRect : afterRect;\r\n        var centerRect = getBoundingRect(this._$centerSection.get(0));\r\n        if (leftRect.right > centerRect.left || centerRect.right > rightRect.left) {\r\n            this._$centerSection.css({\r\n                marginLeft: leftRect.width,\r\n                marginRight: rightRect.width,\r\n                float: leftRect.width > rightRect.width ? \"none\" : \"right\"\r\n            })\r\n        }\r\n    }\r\n    _alignSection($section, maxWidth) {\r\n        var $labels = $section.find(\".\".concat(TOOLBAR_LABEL_CLASS));\r\n        var labels = $labels.toArray();\r\n        maxWidth -= this._getCurrentLabelsPaddings(labels);\r\n        var currentWidth = this._getCurrentLabelsWidth(labels);\r\n        var difference = Math.abs(currentWidth - maxWidth);\r\n        if (maxWidth < currentWidth) {\r\n            labels = labels.reverse();\r\n            this._alignSectionLabels(labels, difference, false)\r\n        } else {\r\n            this._alignSectionLabels(labels, difference, true)\r\n        }\r\n    }\r\n    _alignSectionLabels(labels, difference, expanding) {\r\n        var getRealLabelWidth = function(label) {\r\n            return getBoundingRect(label).width\r\n        };\r\n        for (var i = 0; i < labels.length; i++) {\r\n            var $label = $(labels[i]);\r\n            var currentLabelWidth = Math.ceil(getRealLabelWidth(labels[i]));\r\n            var labelMaxWidth = void 0;\r\n            if (expanding) {\r\n                $label.css(\"maxWidth\", \"inherit\")\r\n            }\r\n            var possibleLabelWidth = Math.ceil(expanding ? getRealLabelWidth(labels[i]) : currentLabelWidth);\r\n            if (possibleLabelWidth < difference) {\r\n                labelMaxWidth = expanding ? possibleLabelWidth : 0;\r\n                difference -= possibleLabelWidth\r\n            } else {\r\n                labelMaxWidth = expanding ? currentLabelWidth + difference : currentLabelWidth - difference;\r\n                $label.css(\"maxWidth\", labelMaxWidth);\r\n                break\r\n            }\r\n            $label.css(\"maxWidth\", labelMaxWidth)\r\n        }\r\n    }\r\n    _applyCompactMode() {\r\n        var $element = this.$element();\r\n        $element.removeClass(TOOLBAR_COMPACT_CLASS);\r\n        if (this.option(\"compactMode\") && this._getSummaryItemsWidth(this.itemElements(), true) > getWidth($element)) {\r\n            $element.addClass(TOOLBAR_COMPACT_CLASS)\r\n        }\r\n    }\r\n    _getCurrentLabelsWidth(labels) {\r\n        var width = 0;\r\n        labels.forEach((function(label, index) {\r\n            width += getOuterWidth(label)\r\n        }));\r\n        return width\r\n    }\r\n    _getCurrentLabelsPaddings(labels) {\r\n        var padding = 0;\r\n        labels.forEach((function(label, index) {\r\n            padding += getOuterWidth(label) - getWidth(label)\r\n        }));\r\n        return padding\r\n    }\r\n    _renderItem(index, item, itemContainer, $after) {\r\n        var _item$location, _item$text;\r\n        var location = null !== (_item$location = item.location) && void 0 !== _item$location ? _item$location : \"center\";\r\n        var container = null !== itemContainer && void 0 !== itemContainer ? itemContainer : this[\"_$\".concat(location, \"Section\")];\r\n        var itemHasText = !!(null !== (_item$text = item.text) && void 0 !== _item$text ? _item$text : item.html);\r\n        var itemElement = super._renderItem(index, item, container, $after);\r\n        itemElement.toggleClass(TOOLBAR_BUTTON_CLASS, !itemHasText).toggleClass(TOOLBAR_LABEL_CLASS, itemHasText).addClass(item.cssClass);\r\n        return itemElement\r\n    }\r\n    _renderGroupedItems() {\r\n        each(this.option(\"items\"), (groupIndex, group) => {\r\n            var _group$location;\r\n            var groupItems = group.items;\r\n            var $container = $(\"<div>\").addClass(TOOLBAR_GROUP_CLASS);\r\n            var location = null !== (_group$location = group.location) && void 0 !== _group$location ? _group$location : \"center\";\r\n            if (!groupItems || !groupItems.length) {\r\n                return\r\n            }\r\n            each(groupItems, (itemIndex, item) => {\r\n                this._renderItem(itemIndex, item, $container, null)\r\n            });\r\n            this._$toolbarItemsContainer.find(\".dx-toolbar-\".concat(location)).append($container)\r\n        })\r\n    }\r\n    _renderItems(items) {\r\n        var grouped = this.option(\"grouped\") && items.length && items[0].items;\r\n        grouped ? this._renderGroupedItems() : super._renderItems(items)\r\n    }\r\n    _getToolbarItems() {\r\n        var _this$option;\r\n        return null !== (_this$option = this.option(\"items\")) && void 0 !== _this$option ? _this$option : []\r\n    }\r\n    _renderContentImpl() {\r\n        var items = this._getToolbarItems();\r\n        this.$element().toggleClass(TOOLBAR_MINI_CLASS, 0 === items.length);\r\n        if (this._renderedItemsCount) {\r\n            this._renderItems(items.slice(this._renderedItemsCount))\r\n        } else {\r\n            this._renderItems(items)\r\n        }\r\n        this._applyCompactMode()\r\n    }\r\n    _renderEmptyMessage() {}\r\n    _clean() {\r\n        this._$toolbarItemsContainer.children().empty();\r\n        this.$element().empty();\r\n        delete this._$beforeSection;\r\n        delete this._$centerSection;\r\n        delete this._$afterSection\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            this._arrangeItems()\r\n        }\r\n    }\r\n    _isVisible() {\r\n        return getWidth(this.$element()) > 0 && getHeight(this.$element()) > 0\r\n    }\r\n    _getIndexByItem(item) {\r\n        return this._getToolbarItems().indexOf(item)\r\n    }\r\n    _itemOptionChanged(item, property, value) {\r\n        super._itemOptionChanged.apply(this, [item, property, value]);\r\n        this._arrangeItems()\r\n    }\r\n    _optionChanged(_ref) {\r\n        var {\r\n            name: name,\r\n            value: value\r\n        } = _ref;\r\n        switch (name) {\r\n            case \"width\":\r\n                super._optionChanged.apply(this, arguments);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"renderAs\":\r\n            case \"useFlatButtons\":\r\n            case \"useDefaultButtons\":\r\n                this._invalidate();\r\n                break;\r\n            case \"compactMode\":\r\n                this._applyCompactMode();\r\n                break;\r\n            case \"grouped\":\r\n                break;\r\n            default:\r\n                super._optionChanged.apply(this, arguments)\r\n        }\r\n    }\r\n    _dispose() {\r\n        super._dispose();\r\n        clearTimeout(this._waitParentAnimationTimeout)\r\n    }\r\n    _updateDimensionsInMaterial() {\r\n        if (isMaterial()) {\r\n            Promise.all([(() => new Promise(resolve => {\r\n                var check = () => {\r\n                    var readyToResolve = true;\r\n                    this.$element().parents().each((_, parent) => {\r\n                        if (fx.isAnimating($(parent))) {\r\n                            readyToResolve = false;\r\n                            return false\r\n                        }\r\n                    });\r\n                    if (readyToResolve) {\r\n                        resolve()\r\n                    }\r\n                    return readyToResolve\r\n                };\r\n                var runCheck = () => {\r\n                    clearTimeout(this._waitParentAnimationTimeout);\r\n                    this._waitParentAnimationTimeout = setTimeout(() => check() || runCheck(), ANIMATION_TIMEOUT)\r\n                };\r\n                runCheck()\r\n            }))(), (() => {\r\n                var $labels = this.$element().find(\".\".concat(TOOLBAR_LABEL_CLASS));\r\n                var promises = [];\r\n                $labels.each((_, label) => {\r\n                    var text = $(label).text();\r\n                    var fontWeight = $(label).css(\"fontWeight\");\r\n                    promises.push(waitWebFont(text, fontWeight))\r\n                });\r\n                return Promise.all(promises)\r\n            })()]).then(() => {\r\n                this._dimensionChanged()\r\n            })\r\n        }\r\n    }\r\n}\r\nregisterComponent(\"dxToolbarBase\", ToolbarBase);\r\nexport default ToolbarBase;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}