{"ast":null,"code":"/**\r\n * ChordLink module\r\n */\nimport { __extends } from \"tslib\";\nimport { FlowDiagramLink } from \"./FlowDiagramLink\";\nimport { registry } from \"../../core/Registry\";\nimport { QuadraticCurve } from \"../../core/elements/QuadraticCurve\";\nimport * as $math from \"../../core/utils/Math\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Chord Diagram.\r\n *\r\n * @see {@link IChordLinkEvents} for a list of available events\r\n * @see {@link IChordLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar ChordLink =\n/** @class */\nfunction (_super) {\n  __extends(ChordLink, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ChordLink() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ChordLink\";\n    _this.middleLine = _this.createChild(QuadraticCurve);\n    _this.middleLine.shouldClone = false;\n    _this.middleLine.strokeOpacity = 0;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * (Re)validates (redraws) the link.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  ChordLink.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n\n    if (!this.isTemplate) {\n      var startAngle = this.startAngle;\n      var endAngle = this.endAngle;\n      var arc = this.arc;\n      var radius = this.radius;\n      var fromNode = this.dataItem.fromNode;\n      var toNode = this.dataItem.toNode;\n      var fromX = 0;\n      var fromY = 0;\n\n      if (fromNode) {\n        fromX = fromNode.pixelX + fromNode.dx;\n        fromY = fromNode.pixelY + fromNode.dy;\n      }\n\n      var toX = 0;\n      var toY = 0;\n\n      if (toNode) {\n        toX = toNode.pixelX + toNode.dx;\n        toY = toNode.pixelY + toNode.dy;\n      }\n\n      if (radius > 0) {\n        var x1 = radius * $math.cos(startAngle) + fromX;\n        var y1 = radius * $math.sin(startAngle) + fromY;\n        var x2 = radius * $math.cos(endAngle) + toX;\n        var y2 = radius * $math.sin(endAngle) + toY; //let cpAngle = startAngle + arc + (endAngle - startAngle - arc) / 2;\n        //let arcWidth = $math.getDistance({x:x1, y:y1}, {x:x4, y:y4});\n        //let cpx = (arcWidth) * $math.cos(cpAngle);\n        //let cpy = (arcWidth) * $math.sin(cpAngle);\n\n        var cp = {\n          x: 0,\n          y: 0\n        };\n        var path = $path.moveTo({\n          x: x1,\n          y: y1\n        });\n        path += $path.arcTo(startAngle, arc, radius);\n        path += $path.quadraticCurveTo({\n          x: x2,\n          y: y2\n        }, cp);\n        path += $path.arcTo(endAngle, arc, radius);\n        path += $path.quadraticCurveTo({\n          x: x1,\n          y: y1\n        }, cp);\n\n        if (arc > 0) {\n          this.link.path = path;\n        } else {\n          this.link.path = \"\";\n        }\n\n        if (this.maskBullets) {\n          this.bulletsMask.path = path;\n          this.bulletsContainer.mask = this.bulletsMask;\n        }\n\n        var mAngle1 = startAngle + arc / 2;\n        var mAngle2 = endAngle + arc / 2;\n        var middleLine = this.middleLine;\n        middleLine.x1 = radius * $math.cos(mAngle1) + fromX;\n        middleLine.y1 = radius * $math.sin(mAngle1) + fromY;\n        middleLine.x2 = radius * $math.cos(mAngle2) + toX;\n        middleLine.y2 = radius * $math.sin(mAngle2) + toY;\n        middleLine.cpx = 0;\n        middleLine.cpy = 0;\n        middleLine.stroke = this.fill;\n        this.positionBullets();\n      }\n    }\n  };\n\n  Object.defineProperty(ChordLink.prototype, \"radius\", {\n    /**\r\n     * @return End Y\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"radius\");\n    },\n\n    /**\r\n     * [radius description]\r\n     *\r\n     * @todo Description\r\n     * @param value End Y\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"radius\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ChordLink.prototype, \"arc\", {\n    /**\r\n     * @return [description]\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"arc\");\n    },\n\n    /**\r\n     * [arc description]\r\n     *\r\n     * @todo Description\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this.setPropertyValue(\"arc\", value, true);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return ChordLink;\n}(FlowDiagramLink);\n\nexport { ChordLink };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ChordLink\"] = ChordLink;","map":{"version":3,"names":["__extends","FlowDiagramLink","registry","QuadraticCurve","$math","$path","ChordLink","_super","_this","call","className","middleLine","createChild","shouldClone","strokeOpacity","applyTheme","prototype","validate","isTemplate","startAngle","endAngle","arc","radius","fromNode","dataItem","toNode","fromX","fromY","pixelX","dx","pixelY","dy","toX","toY","x1","cos","y1","sin","x2","y2","cp","x","y","path","moveTo","arcTo","quadraticCurveTo","link","maskBullets","bulletsMask","bulletsContainer","mask","mAngle1","mAngle2","cpx","cpy","stroke","fill","positionBullets","Object","defineProperty","get","getPropertyValue","set","value","setPropertyValue","enumerable","configurable","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js"],"sourcesContent":["/**\r\n * ChordLink module\r\n */\r\nimport { __extends } from \"tslib\";\r\nimport { FlowDiagramLink } from \"./FlowDiagramLink\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { QuadraticCurve } from \"../../core/elements/QuadraticCurve\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * This class creates a link (waved color-filled line) between two nodes in a\r\n * Chord Diagram.\r\n *\r\n * @see {@link IChordLinkEvents} for a list of available events\r\n * @see {@link IChordLinkAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar ChordLink = /** @class */ (function (_super) {\r\n    __extends(ChordLink, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChordLink() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChordLink\";\r\n        _this.middleLine = _this.createChild(QuadraticCurve);\r\n        _this.middleLine.shouldClone = false;\r\n        _this.middleLine.strokeOpacity = 0;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * (Re)validates (redraws) the link.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    ChordLink.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n        if (!this.isTemplate) {\r\n            var startAngle = this.startAngle;\r\n            var endAngle = this.endAngle;\r\n            var arc = this.arc;\r\n            var radius = this.radius;\r\n            var fromNode = this.dataItem.fromNode;\r\n            var toNode = this.dataItem.toNode;\r\n            var fromX = 0;\r\n            var fromY = 0;\r\n            if (fromNode) {\r\n                fromX = fromNode.pixelX + fromNode.dx;\r\n                fromY = fromNode.pixelY + fromNode.dy;\r\n            }\r\n            var toX = 0;\r\n            var toY = 0;\r\n            if (toNode) {\r\n                toX = toNode.pixelX + toNode.dx;\r\n                toY = toNode.pixelY + toNode.dy;\r\n            }\r\n            if (radius > 0) {\r\n                var x1 = radius * $math.cos(startAngle) + fromX;\r\n                var y1 = radius * $math.sin(startAngle) + fromY;\r\n                var x2 = radius * $math.cos(endAngle) + toX;\r\n                var y2 = radius * $math.sin(endAngle) + toY;\r\n                //let cpAngle = startAngle + arc + (endAngle - startAngle - arc) / 2;\r\n                //let arcWidth = $math.getDistance({x:x1, y:y1}, {x:x4, y:y4});\r\n                //let cpx = (arcWidth) * $math.cos(cpAngle);\r\n                //let cpy = (arcWidth) * $math.sin(cpAngle);\r\n                var cp = { x: 0, y: 0 };\r\n                var path = $path.moveTo({ x: x1, y: y1 });\r\n                path += $path.arcTo(startAngle, arc, radius);\r\n                path += $path.quadraticCurveTo({ x: x2, y: y2 }, cp);\r\n                path += $path.arcTo(endAngle, arc, radius);\r\n                path += $path.quadraticCurveTo({ x: x1, y: y1 }, cp);\r\n                if (arc > 0) {\r\n                    this.link.path = path;\r\n                }\r\n                else {\r\n                    this.link.path = \"\";\r\n                }\r\n                if (this.maskBullets) {\r\n                    this.bulletsMask.path = path;\r\n                    this.bulletsContainer.mask = this.bulletsMask;\r\n                }\r\n                var mAngle1 = startAngle + arc / 2;\r\n                var mAngle2 = endAngle + arc / 2;\r\n                var middleLine = this.middleLine;\r\n                middleLine.x1 = radius * $math.cos(mAngle1) + fromX;\r\n                middleLine.y1 = radius * $math.sin(mAngle1) + fromY;\r\n                middleLine.x2 = radius * $math.cos(mAngle2) + toX;\r\n                middleLine.y2 = radius * $math.sin(mAngle2) + toY;\r\n                middleLine.cpx = 0;\r\n                middleLine.cpy = 0;\r\n                middleLine.stroke = this.fill;\r\n                this.positionBullets();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(ChordLink.prototype, \"radius\", {\r\n        /**\r\n         * @return End Y\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"radius\");\r\n        },\r\n        /**\r\n         * [radius description]\r\n         *\r\n         * @todo Description\r\n         * @param value End Y\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"radius\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ChordLink.prototype, \"arc\", {\r\n        /**\r\n         * @return [description]\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"arc\");\r\n        },\r\n        /**\r\n         * [arc description]\r\n         *\r\n         * @todo Description\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.setPropertyValue(\"arc\", value, true);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return ChordLink;\r\n}(FlowDiagramLink));\r\nexport { ChordLink };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ChordLink\"] = ChordLink;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}