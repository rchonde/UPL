{"ast":null,"code":"/**\r\n * Contains code and logic for generating linear gradients.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { BaseObject } from \"../../Base\";\nimport { List } from \"../../utils/List\";\nimport { getGhostPaper } from \"../Paper\";\nimport { registry } from \"../../Registry\";\nimport * as $iter from \"../../utils/Iterator\";\nimport * as $math from \"../../utils/Math\";\nimport * as $type from \"../../utils/Type\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Linear gradient class.\r\n */\n\nvar LinearGradient =\n/** @class */\nfunction (_super) {\n  __extends(LinearGradient, _super);\n  /**\r\n   * Constructor.\r\n   */\n\n\n  function LinearGradient() {\n    var _this = // Init\n    _super.call(this) || this;\n    /**\r\n     * List of colors switch definitions in a gradient.\r\n     */\n\n\n    _this._stops = new List();\n    /**\r\n     * Gradient direction.\r\n     */\n\n    _this._rotation = 0;\n    _this.className = \"LinearGradient\";\n\n    _this._stops.events.on(\"setIndex\", _this.validate, _this);\n\n    _this._stops.events.on(\"inserted\", _this.validate, _this); // Create element\n\n\n    _this.element = _this.paper.addGroup(\"linearGradient\");\n    _this.id = \"gradient-\" + registry.getUniqueId();\n\n    _this.element.attr({\n      \"id\": _this.id\n    });\n\n    _this._disposers.push(_this.element); // Apply theme\n\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Draws gradient.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  LinearGradient.prototype.validate = function () {\n    var _this = this;\n\n    var rotation = (this._rotation + 90) * $math.RADIANS;\n    var x1 = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';\n    var y1 = Math.round(50 + Math.cos(rotation) * 50) + '%';\n    var x2 = Math.round(50 + Math.sin(rotation) * 50) + '%';\n    var y2 = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';\n    var gradientElement = this.element;\n    gradientElement.removeChildNodes();\n    gradientElement.attr({\n      \"x1\": x1,\n      \"x2\": x2,\n      \"y1\": y1,\n      \"y2\": y2\n    });\n    $iter.each($iter.indexed(this._stops.iterator()), function (a) {\n      var i = a[0];\n      var stop = a[1];\n      var offset = stop.offset;\n\n      if (!$type.isNumber(offset)) {\n        offset = i / (_this._stops.length - 1);\n      }\n\n      var gradientStop = _this.paper.add(\"stop\");\n\n      if ($type.hasValue(stop.color)) {\n        gradientStop.attr({\n          \"stop-color\": stop.color.toString()\n        });\n      }\n\n      if ($type.isNumber(stop.opacity)) {\n        gradientStop.attr({\n          \"stop-opacity\": stop.opacity\n        });\n      }\n\n      if ($type.isNumber(offset)) {\n        gradientStop.attr({\n          \"offset\": offset\n        });\n      }\n\n      gradientElement.add(gradientStop);\n    });\n  };\n  /**\r\n   * Clears the gradient.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  LinearGradient.prototype.clear = function () {\n    this._stops.clear();\n  };\n  /**\r\n   * Adds a color step to the gradient.\r\n   *\r\n   * @param color    Color (hex code or named color)\r\n   * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n   * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n   */\n\n\n  LinearGradient.prototype.addColor = function (color, opacity, offset) {\n    this._stops.push({\n      color: color,\n      opacity: opacity,\n      offset: offset\n    });\n  };\n\n  Object.defineProperty(LinearGradient.prototype, \"stops\", {\n    /**\r\n     * A list of color stops in the gradient.\r\n     *\r\n     * @return Stops\r\n     */\n    get: function () {\n      return this._stops;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGradient.prototype, \"paper\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Paper\r\n     */\n    get: function () {\n      if (this._paper) {\n        return this._paper;\n      }\n\n      return getGhostPaper();\n    },\n\n    /**\r\n     * [[Paper]] instace to use for the gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param paper  Paper\r\n     */\n    set: function (paper) {\n      if (this._paper != paper) {\n        this._paper = paper;\n        this.validate();\n        paper.appendDef(this.element);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(LinearGradient.prototype, \"rotation\", {\n    /**\r\n     * @return Rotation\r\n     */\n    get: function () {\n      return this._rotation;\n    },\n\n    /**\r\n     * Rotation (direction) of the gradient in degrees.\r\n     *\r\n     * @param value  Rotation\r\n     */\n    set: function (value) {\n      //this.element.attr({ \"gradientTransform\": \"rotate(\" + value + \" 10 100)\" });\n      this._rotation = value;\n      this.validate();\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  LinearGradient.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.stops.copyFrom(source.stops);\n    this._rotation = source.rotation;\n  };\n\n  Object.defineProperty(LinearGradient.prototype, \"gradientUnits\", {\n    /**\r\n     * Which units are used when drawing gradient filter.\r\n     *\r\n     * Use `\"userSpaceOnUse\"` when applying gradient on a perfectly straight line.\r\n     *\r\n     * @since 4.9.17\r\n     * @default objectBoundingBox\r\n     * @param value Filter units\r\n     */\n    set: function (value) {\n      this.element.attr({\n        gradientUnits: value\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return LinearGradient;\n}(BaseObject);\n\nexport { LinearGradient };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"LinearGradient\"] = LinearGradient;","map":{"version":3,"names":["__extends","BaseObject","List","getGhostPaper","registry","$iter","$math","$type","LinearGradient","_super","_this","call","_stops","_rotation","className","events","on","validate","element","paper","addGroup","id","getUniqueId","attr","_disposers","push","applyTheme","prototype","rotation","RADIANS","x1","Math","round","sin","PI","y1","cos","x2","y2","gradientElement","removeChildNodes","each","indexed","iterator","a","i","stop","offset","isNumber","length","gradientStop","add","hasValue","color","toString","opacity","clear","addColor","Object","defineProperty","get","enumerable","configurable","_paper","set","appendDef","value","copyFrom","source","stops","gradientUnits","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js"],"sourcesContent":["/**\r\n * Contains code and logic for generating linear gradients.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { List } from \"../../utils/List\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { registry } from \"../../Registry\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $math from \"../../utils/Math\";\r\nimport * as $type from \"../../utils/Type\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Linear gradient class.\r\n */\r\nvar LinearGradient = /** @class */ (function (_super) {\r\n    __extends(LinearGradient, _super);\r\n    /**\r\n     * Constructor.\r\n     */\r\n    function LinearGradient() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * List of colors switch definitions in a gradient.\r\n         */\r\n        _this._stops = new List();\r\n        /**\r\n         * Gradient direction.\r\n         */\r\n        _this._rotation = 0;\r\n        _this.className = \"LinearGradient\";\r\n        _this._stops.events.on(\"setIndex\", _this.validate, _this);\r\n        _this._stops.events.on(\"inserted\", _this.validate, _this);\r\n        // Create element\r\n        _this.element = _this.paper.addGroup(\"linearGradient\");\r\n        _this.id = \"gradient-\" + registry.getUniqueId();\r\n        _this.element.attr({ \"id\": _this.id });\r\n        _this._disposers.push(_this.element);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LinearGradient.prototype.validate = function () {\r\n        var _this = this;\r\n        var rotation = (this._rotation + 90) * $math.RADIANS;\r\n        var x1 = Math.round(50 + Math.sin(rotation + Math.PI) * 50) + '%';\r\n        var y1 = Math.round(50 + Math.cos(rotation) * 50) + '%';\r\n        var x2 = Math.round(50 + Math.sin(rotation) * 50) + '%';\r\n        var y2 = Math.round(50 + Math.cos(rotation + Math.PI) * 50) + '%';\r\n        var gradientElement = this.element;\r\n        gradientElement.removeChildNodes();\r\n        gradientElement.attr({ \"x1\": x1, \"x2\": x2, \"y1\": y1, \"y2\": y2 });\r\n        $iter.each($iter.indexed(this._stops.iterator()), function (a) {\r\n            var i = a[0];\r\n            var stop = a[1];\r\n            var offset = stop.offset;\r\n            if (!$type.isNumber(offset)) {\r\n                offset = i / (_this._stops.length - 1);\r\n            }\r\n            var gradientStop = _this.paper.add(\"stop\");\r\n            if ($type.hasValue(stop.color)) {\r\n                gradientStop.attr({ \"stop-color\": stop.color.toString() });\r\n            }\r\n            if ($type.isNumber(stop.opacity)) {\r\n                gradientStop.attr({ \"stop-opacity\": stop.opacity });\r\n            }\r\n            if ($type.isNumber(offset)) {\r\n                gradientStop.attr({ \"offset\": offset });\r\n            }\r\n            gradientElement.add(gradientStop);\r\n        });\r\n    };\r\n    /**\r\n     * Clears the gradient.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    LinearGradient.prototype.clear = function () {\r\n        this._stops.clear();\r\n    };\r\n    /**\r\n     * Adds a color step to the gradient.\r\n     *\r\n     * @param color    Color (hex code or named color)\r\n     * @param opacity  Opacity (value from 0 to 1; 0 completely transaprent, 1 fully opaque)\r\n     * @param offset   Position of color in the gradient (value 0 to 1; 0 meaning start of the gradient and 1 end)\r\n     */\r\n    LinearGradient.prototype.addColor = function (color, opacity, offset) {\r\n        this._stops.push({ color: color, opacity: opacity, offset: offset });\r\n    };\r\n    Object.defineProperty(LinearGradient.prototype, \"stops\", {\r\n        /**\r\n         * A list of color stops in the gradient.\r\n         *\r\n         * @return Stops\r\n         */\r\n        get: function () {\r\n            return this._stops;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGradient.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * [[Paper]] instace to use for the gradient.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n                this.validate();\r\n                paper.appendDef(this.element);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(LinearGradient.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation\r\n         */\r\n        get: function () {\r\n            return this._rotation;\r\n        },\r\n        /**\r\n         * Rotation (direction) of the gradient in degrees.\r\n         *\r\n         * @param value  Rotation\r\n         */\r\n        set: function (value) {\r\n            //this.element.attr({ \"gradientTransform\": \"rotate(\" + value + \" 10 100)\" });\r\n            this._rotation = value;\r\n            this.validate();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinearGradient.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.stops.copyFrom(source.stops);\r\n        this._rotation = source.rotation;\r\n    };\r\n    Object.defineProperty(LinearGradient.prototype, \"gradientUnits\", {\r\n        /**\r\n         * Which units are used when drawing gradient filter.\r\n         *\r\n         * Use `\"userSpaceOnUse\"` when applying gradient on a perfectly straight line.\r\n         *\r\n         * @since 4.9.17\r\n         * @default objectBoundingBox\r\n         * @param value Filter units\r\n         */\r\n        set: function (value) {\r\n            this.element.attr({ gradientUnits: value });\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return LinearGradient;\r\n}(BaseObject));\r\nexport { LinearGradient };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"LinearGradient\"] = LinearGradient;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}