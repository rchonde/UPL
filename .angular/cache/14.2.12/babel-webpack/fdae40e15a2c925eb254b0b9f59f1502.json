{"ast":null,"code":"/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { registry } from \"../core/Registry\";\nimport { Component } from \"../core/Component\";\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\nimport { Container } from \"../core/Container\";\nimport { Label } from \"../core/elements/Label\";\nimport { Grip } from \"../core/elements/Grip\";\nimport { DataItem } from \"../core/DataItem\";\nimport { percent } from \"../core/utils/Percent\";\nimport * as $iter from \"../core/utils/Iterator\";\nimport * as $type from \"../core/utils/Type\";\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar ChartDataItem =\n/** @class */\nfunction (_super) {\n  __extends(ChartDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ChartDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ChartDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return ChartDataItem;\n}(DataItem);\n\nexport { ChartDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\n\nvar Chart =\n/** @class */\nfunction (_super) {\n  __extends(Chart, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Chart() {\n    var _this = // Init\n    _super.call(this) || this;\n    /**\r\n     * A reference to chart's [[Legend]].\r\n     * @ignore\r\n     */\n\n\n    _this._legend = new MutableValueDisposer();\n\n    if (_this.constructor === Chart) {\n      throw new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\n    }\n\n    _this.className = \"Chart\"; // Create a list of titles\n\n    var template = new Label();\n    _this.titles = new ListTemplate(template);\n\n    _this._disposers.push(new ListDisposer(_this.titles));\n\n    _this._disposers.push(template); // Chart component is also a container. it holds _chartAndLegendCont and titles\n\n\n    _this.width = percent(100);\n    _this.height = percent(100);\n    _this.layout = \"vertical\"; // Chart and legend\n\n    var chartAndLegendContainer = _this.createChild(Container);\n\n    chartAndLegendContainer.shouldClone = false;\n    chartAndLegendContainer.layout = \"vertical\";\n    chartAndLegendContainer.width = percent(100);\n    chartAndLegendContainer.height = percent(100);\n    _this.chartAndLegendContainer = chartAndLegendContainer; // Chart container holds all the elements of a chart, extept titles and legend\n\n    var chartContainer = chartAndLegendContainer.createChild(Container);\n    chartContainer.shouldClone = false;\n    chartContainer.width = percent(100);\n    chartContainer.height = percent(100);\n    _this.chartContainer = chartContainer;\n    _this.showOnInit = true;\n\n    _this._disposers.push(_this._legend); // Add title list events to apply certain formatting options and to make\n    // the chart reference them as accessible screen reader labels\n\n\n    _this.titles.events.on(\"inserted\", function (label) {\n      _this.processTitle(label);\n\n      _this.updateReaderTitleReferences();\n    }, _this, false);\n\n    _this.titles.events.on(\"removed\", function (label) {\n      _this.updateReaderTitleReferences();\n    }, _this, false); // Accessibility\n    // It seems we can't set focusable on the whole chart because it seems to\n    // mess up the whole focus event system - getting a focus on an inside\n    // object also trigger focus on parent\n    //this.focusable = true;\n\n\n    _this.role = \"region\";\n    _this.defaultState.transitionDuration = 1; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  Chart.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this);\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Chart\");\n    }\n  };\n  /**\r\n   * Initiates drawing of the chart.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Chart.prototype.draw = function () {\n    this.fixLayout();\n\n    _super.prototype.draw.call(this);\n  };\n  /**\r\n   * Updates legend's hierarchy based on the position.\r\n   */\n\n\n  Chart.prototype.fixLayout = function () {\n    var legend = this.legend;\n\n    if (legend) {\n      var chartAndLegendContainer = this.chartAndLegendContainer;\n      var chartContainer = this.chartContainer;\n      chartContainer.x = undefined;\n      chartContainer.y = undefined;\n\n      if (legend.position != \"absolute\") {\n        legend.x = undefined;\n        legend.y = undefined;\n      }\n\n      switch (legend.position) {\n        case \"left\":\n          chartAndLegendContainer.layout = \"horizontal\";\n          legend.toBack();\n          break;\n\n        case \"right\":\n          chartAndLegendContainer.layout = \"horizontal\";\n          legend.toFront();\n          break;\n\n        case \"top\":\n          chartAndLegendContainer.layout = \"vertical\";\n          legend.toBack();\n          break;\n\n        case \"bottom\":\n          chartAndLegendContainer.layout = \"vertical\";\n          legend.toFront();\n          break;\n\n        case \"absolute\":\n          legend.isMeasured = false;\n          break;\n      }\n    }\n  };\n  /**\r\n   * Setups the legend to use the chart's data.\r\n   */\n\n\n  Chart.prototype.feedLegend = function () {// Nothing here. This method is provided only as a \"placeholder\" for\n    // extending classes to override\n  };\n  /**\r\n   * Adds a new title to the chart when it is inserted into chart's titles\r\n   * list.\r\n   * @param event  An event object which is triggered when inserting into titles list\r\n   * @return Label object\r\n   */\n\n\n  Chart.prototype.processTitle = function (event) {\n    var title = event.newValue;\n    title.parent = this;\n    title.toBack();\n    title.shouldClone = false;\n    title.align = \"center\"; // Need to explicitly apply the `id` attribute so it can be referenced by\n    // `aria-labelledby`\n\n    title.uidAttr();\n    return title;\n  };\n  /**\r\n   * Checks if chart has any title elements. If it does, we will use them in an\r\n   * `aria-labelledby` attribute so that screen readers can use them to properly\r\n   * describe the chart when it is focused or hovered.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Chart.prototype.updateReaderTitleReferences = function () {\n    if (this.titles.length) {\n      var titleIds_1 = [];\n      $iter.each(this.titles.iterator(), function (title) {\n        titleIds_1.push(title.uid);\n      });\n      this.setSVGAttribute({\n        \"aria-labelledby\": titleIds_1.join(\" \")\n      });\n    } else {\n      this.removeSVGAttribute(\"aria-labelledby\");\n    }\n  };\n\n  Object.defineProperty(Chart.prototype, \"legend\", {\n    /**\r\n     * @return Legend\r\n     */\n    get: function () {\n      return this._legend.get();\n    },\n\n    /**\r\n     * Holds the instance of chart's [[Leged]].\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n     * @param Legend\r\n     */\n    set: function (legend) {\n      this.setLegend(legend);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Prepares the legend instance for use in this chart.\r\n   *\r\n   * @param legend  Legend\r\n   */\n\n  Chart.prototype.setLegend = function (legend) {\n    var _this = this;\n\n    if (this._legend.get() !== legend) {\n      if (legend) {\n        // Set legend options\n        legend.parent = this.chartAndLegendContainer;\n\n        this._legend.set(legend, legend.events.on(\"propertychanged\", function (event) {\n          if (event.property == \"position\") {\n            _this.fixLayout();\n          }\n        }, undefined, false));\n\n        legend.addDisposer(new Disposer(function () {\n          _this.legend = undefined;\n        }));\n      } else {\n        this._legend.reset();\n      }\n\n      this.feedLegend();\n    }\n  };\n  /**\r\n   * Destroys this object and all related data.\r\n   */\n\n\n  Chart.prototype.dispose = function () {\n    // otherwise there might be some errors when disposing chart which was just inited\n    if (this.legend) {\n      this.legend.dispose();\n    }\n\n    _super.prototype.dispose.call(this);\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n\n  Chart.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up legend\n      if ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\n        config.legend.type = \"Legend\";\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * Copies all properties from another instance of [[Series]].\r\n   *\r\n   * @param source  Source series\r\n   */\n\n\n  Chart.prototype.copyFrom = function (source) {\n    this.titles.copyFrom(source.titles);\n    this.chartContainer.copyFrom(source.chartContainer);\n\n    if (source.legend) {\n      this.legend = source.legend.clone();\n      this.legend.removeChildren();\n    }\n\n    _super.prototype.copyFrom.call(this, source);\n  };\n\n  Object.defineProperty(Chart.prototype, \"dragGrip\", {\n    /**\r\n     * @return Grip\r\n     */\n    get: function () {\n      var _this = this;\n\n      if (!this._dragGrip) {\n        var grip_1 = this.tooltipContainer.createChild(Grip);\n        grip_1.align = \"right\";\n        grip_1.valign = \"middle\";\n        grip_1.hide(0);\n        grip_1.events.on(\"down\", function (ev) {\n          if (ev.touch) {\n            _this.interactionsEnabled = false;\n          }\n        });\n        grip_1.events.on(\"up\", function (ev) {\n          _this.interactionsEnabled = true;\n        });\n        this.events.on(\"down\", function (ev) {\n          if (ev.touch) {\n            grip_1.show();\n          }\n        });\n        this._dragGrip = grip_1;\n      }\n\n      return this._dragGrip;\n    },\n\n    /**\r\n     * An instance of [[Grip]] which serves as a grip point which appears on\r\n     * touch and allows scrolling whole page even if chart is occupying the\r\n     * whole of the screen and would otherwise prevent scrolling.\r\n     *\r\n     * @since 4.4.0\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n     * @param  value  Grip\r\n     */\n    set: function (value) {\n      this._dragGrip = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Chart.prototype, \"focusable\", {\n    get: function () {\n      return this.parent.focusable;\n    },\n    set: function (value) {\n      this.parent.focusable = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Chart;\n}(Component);\n\nexport { Chart };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Chart\"] = Chart;\n/**\r\n * Add default responsive rules\r\n */\n\n/**\r\n * Reduce horizontal margins\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.widthXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n\n      if (target.pixelPaddingLeft > 10) {\n        state.properties.paddingLeft = 10;\n      }\n\n      if (target.pixelPaddingRight > 10) {\n        state.properties.paddingRight = 10;\n      }\n\n      return state;\n    }\n\n    return null;\n  }\n});\n/**\r\n * Reduce vertical margins\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.heightXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n\n      if (target.pixelPaddingTop > 10) {\n        state.properties.paddingTop = 10;\n      }\n\n      if (target.pixelPaddingBottom > 10) {\n        state.properties.paddingBottom = 10;\n      }\n\n      return state;\n    }\n\n    return null;\n  }\n});\n/**\r\n * Remove horizontal padding\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.widthXXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n      state.properties.paddingLeft = 0;\n      state.properties.paddingRight = 0;\n      return state;\n    }\n\n    return null;\n  }\n});\n/**\r\n * Remove vertical padding\r\n */\n\ndefaultRules.push({\n  relevant: ResponsiveBreakpoints.heightXXS,\n  state: function (target, stateId) {\n    if (target instanceof Chart) {\n      var state = target.states.create(stateId);\n      state.properties.paddingTop = 0;\n      state.properties.paddingBottom = 0;\n      return state;\n    }\n\n    return null;\n  }\n});","map":{"version":3,"names":["__extends","registry","Component","MutableValueDisposer","Disposer","ListTemplate","ListDisposer","Container","Label","Grip","DataItem","percent","$iter","$type","defaultRules","ResponsiveBreakpoints","ChartDataItem","_super","_this","call","className","applyTheme","Chart","_legend","constructor","Error","template","titles","_disposers","push","width","height","layout","chartAndLegendContainer","createChild","shouldClone","chartContainer","showOnInit","events","on","label","processTitle","updateReaderTitleReferences","role","defaultState","transitionDuration","prototype","applyInternalDefaults","hasValue","readerTitle","language","translate","draw","fixLayout","legend","x","undefined","y","position","toBack","toFront","isMeasured","feedLegend","event","title","newValue","parent","align","uidAttr","length","titleIds_1","each","iterator","uid","setSVGAttribute","join","removeSVGAttribute","Object","defineProperty","get","set","setLegend","enumerable","configurable","property","addDisposer","reset","dispose","processConfig","config","type","copyFrom","source","clone","removeChildren","_dragGrip","grip_1","tooltipContainer","valign","hide","ev","touch","interactionsEnabled","show","value","focusable","registeredClasses","relevant","widthXS","state","target","stateId","states","create","pixelPaddingLeft","properties","paddingLeft","pixelPaddingRight","paddingRight","heightXS","pixelPaddingTop","paddingTop","pixelPaddingBottom","paddingBottom","widthXXS","heightXXS"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/Chart.js"],"sourcesContent":["/**\r\n * [[Chart]] class provides base functionality for all chart types to inherit.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { registry } from \"../core/Registry\";\r\nimport { Component } from \"../core/Component\";\r\nimport { MutableValueDisposer, Disposer } from \"../core/utils/Disposer\";\r\nimport { ListTemplate, ListDisposer } from \"../core/utils/List\";\r\nimport { Container } from \"../core/Container\";\r\nimport { Label } from \"../core/elements/Label\";\r\nimport { Grip } from \"../core/elements/Grip\";\r\nimport { DataItem } from \"../core/DataItem\";\r\nimport { percent } from \"../core/utils/Percent\";\r\nimport * as $iter from \"../core/utils/Iterator\";\r\nimport * as $type from \"../core/utils/Type\";\r\nimport { defaultRules, ResponsiveBreakpoints } from \"../core/utils/Responsive\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[Chart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar ChartDataItem = /** @class */ (function (_super) {\r\n    __extends(ChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return ChartDataItem;\r\n}(DataItem));\r\nexport { ChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * A base class for all Charts.\r\n *\r\n * @see {@link IChartEvents} for a list of available Events\r\n * @see {@link IChartAdapters} for a list of available Adapters\r\n */\r\nvar Chart = /** @class */ (function (_super) {\r\n    __extends(Chart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Chart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * A reference to chart's [[Legend]].\r\n         * @ignore\r\n         */\r\n        _this._legend = new MutableValueDisposer();\r\n        if (_this.constructor === Chart) {\r\n            throw new Error(\"'Chart' cannot be instantiated directly. Please use a specific chart type.\");\r\n        }\r\n        _this.className = \"Chart\";\r\n        // Create a list of titles\r\n        var template = new Label();\r\n        _this.titles = new ListTemplate(template);\r\n        _this._disposers.push(new ListDisposer(_this.titles));\r\n        _this._disposers.push(template);\r\n        // Chart component is also a container. it holds _chartAndLegendCont and titles\r\n        _this.width = percent(100);\r\n        _this.height = percent(100);\r\n        _this.layout = \"vertical\";\r\n        // Chart and legend\r\n        var chartAndLegendContainer = _this.createChild(Container);\r\n        chartAndLegendContainer.shouldClone = false;\r\n        chartAndLegendContainer.layout = \"vertical\";\r\n        chartAndLegendContainer.width = percent(100);\r\n        chartAndLegendContainer.height = percent(100);\r\n        _this.chartAndLegendContainer = chartAndLegendContainer;\r\n        // Chart container holds all the elements of a chart, extept titles and legend\r\n        var chartContainer = chartAndLegendContainer.createChild(Container);\r\n        chartContainer.shouldClone = false;\r\n        chartContainer.width = percent(100);\r\n        chartContainer.height = percent(100);\r\n        _this.chartContainer = chartContainer;\r\n        _this.showOnInit = true;\r\n        _this._disposers.push(_this._legend);\r\n        // Add title list events to apply certain formatting options and to make\r\n        // the chart reference them as accessible screen reader labels\r\n        _this.titles.events.on(\"inserted\", function (label) {\r\n            _this.processTitle(label);\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        _this.titles.events.on(\"removed\", function (label) {\r\n            _this.updateReaderTitleReferences();\r\n        }, _this, false);\r\n        // Accessibility\r\n        // It seems we can't set focusable on the whole chart because it seems to\r\n        // mess up the whole focus event system - getting a focus on an inside\r\n        // object also trigger focus on parent\r\n        //this.focusable = true;\r\n        _this.role = \"region\";\r\n        _this.defaultState.transitionDuration = 1;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    Chart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Chart\");\r\n        }\r\n    };\r\n    /**\r\n     * Initiates drawing of the chart.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.draw = function () {\r\n        this.fixLayout();\r\n        _super.prototype.draw.call(this);\r\n    };\r\n    /**\r\n     * Updates legend's hierarchy based on the position.\r\n     */\r\n    Chart.prototype.fixLayout = function () {\r\n        var legend = this.legend;\r\n        if (legend) {\r\n            var chartAndLegendContainer = this.chartAndLegendContainer;\r\n            var chartContainer = this.chartContainer;\r\n            chartContainer.x = undefined;\r\n            chartContainer.y = undefined;\r\n            if (legend.position != \"absolute\") {\r\n                legend.x = undefined;\r\n                legend.y = undefined;\r\n            }\r\n            switch (legend.position) {\r\n                case \"left\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    legend.toBack();\r\n                    break;\r\n                case \"right\":\r\n                    chartAndLegendContainer.layout = \"horizontal\";\r\n                    legend.toFront();\r\n                    break;\r\n                case \"top\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.toBack();\r\n                    break;\r\n                case \"bottom\":\r\n                    chartAndLegendContainer.layout = \"vertical\";\r\n                    legend.toFront();\r\n                    break;\r\n                case \"absolute\":\r\n                    legend.isMeasured = false;\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Setups the legend to use the chart's data.\r\n     */\r\n    Chart.prototype.feedLegend = function () {\r\n        // Nothing here. This method is provided only as a \"placeholder\" for\r\n        // extending classes to override\r\n    };\r\n    /**\r\n     * Adds a new title to the chart when it is inserted into chart's titles\r\n     * list.\r\n     * @param event  An event object which is triggered when inserting into titles list\r\n     * @return Label object\r\n     */\r\n    Chart.prototype.processTitle = function (event) {\r\n        var title = event.newValue;\r\n        title.parent = this;\r\n        title.toBack();\r\n        title.shouldClone = false;\r\n        title.align = \"center\";\r\n        // Need to explicitly apply the `id` attribute so it can be referenced by\r\n        // `aria-labelledby`\r\n        title.uidAttr();\r\n        return title;\r\n    };\r\n    /**\r\n     * Checks if chart has any title elements. If it does, we will use them in an\r\n     * `aria-labelledby` attribute so that screen readers can use them to properly\r\n     * describe the chart when it is focused or hovered.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Chart.prototype.updateReaderTitleReferences = function () {\r\n        if (this.titles.length) {\r\n            var titleIds_1 = [];\r\n            $iter.each(this.titles.iterator(), function (title) {\r\n                titleIds_1.push(title.uid);\r\n            });\r\n            this.setSVGAttribute({ \"aria-labelledby\": titleIds_1.join(\" \") });\r\n        }\r\n        else {\r\n            this.removeSVGAttribute(\"aria-labelledby\");\r\n        }\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"legend\", {\r\n        /**\r\n         * @return Legend\r\n         */\r\n        get: function () {\r\n            return this._legend.get();\r\n        },\r\n        /**\r\n         * Holds the instance of chart's [[Leged]].\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends\r\n         * @param Legend\r\n         */\r\n        set: function (legend) {\r\n            this.setLegend(legend);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Prepares the legend instance for use in this chart.\r\n     *\r\n     * @param legend  Legend\r\n     */\r\n    Chart.prototype.setLegend = function (legend) {\r\n        var _this = this;\r\n        if (this._legend.get() !== legend) {\r\n            if (legend) {\r\n                // Set legend options\r\n                legend.parent = this.chartAndLegendContainer;\r\n                this._legend.set(legend, legend.events.on(\"propertychanged\", function (event) {\r\n                    if (event.property == \"position\") {\r\n                        _this.fixLayout();\r\n                    }\r\n                }, undefined, false));\r\n                legend.addDisposer(new Disposer(function () {\r\n                    _this.legend = undefined;\r\n                }));\r\n            }\r\n            else {\r\n                this._legend.reset();\r\n            }\r\n            this.feedLegend();\r\n        }\r\n    };\r\n    /**\r\n     * Destroys this object and all related data.\r\n     */\r\n    Chart.prototype.dispose = function () {\r\n        // otherwise there might be some errors when disposing chart which was just inited\r\n        if (this.legend) {\r\n            this.legend.dispose();\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Chart.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up legend\r\n            if ($type.hasValue(config.legend) && !$type.hasValue(config.legend.type)) {\r\n                config.legend.type = \"Legend\";\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * Copies all properties from another instance of [[Series]].\r\n     *\r\n     * @param source  Source series\r\n     */\r\n    Chart.prototype.copyFrom = function (source) {\r\n        this.titles.copyFrom(source.titles);\r\n        this.chartContainer.copyFrom(source.chartContainer);\r\n        if (source.legend) {\r\n            this.legend = source.legend.clone();\r\n            this.legend.removeChildren();\r\n        }\r\n        _super.prototype.copyFrom.call(this, source);\r\n    };\r\n    Object.defineProperty(Chart.prototype, \"dragGrip\", {\r\n        /**\r\n         * @return Grip\r\n         */\r\n        get: function () {\r\n            var _this = this;\r\n            if (!this._dragGrip) {\r\n                var grip_1 = this.tooltipContainer.createChild(Grip);\r\n                grip_1.align = \"right\";\r\n                grip_1.valign = \"middle\";\r\n                grip_1.hide(0);\r\n                grip_1.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        _this.interactionsEnabled = false;\r\n                    }\r\n                });\r\n                grip_1.events.on(\"up\", function (ev) {\r\n                    _this.interactionsEnabled = true;\r\n                });\r\n                this.events.on(\"down\", function (ev) {\r\n                    if (ev.touch) {\r\n                        grip_1.show();\r\n                    }\r\n                });\r\n                this._dragGrip = grip_1;\r\n            }\r\n            return this._dragGrip;\r\n        },\r\n        /**\r\n         * An instance of [[Grip]] which serves as a grip point which appears on\r\n         * touch and allows scrolling whole page even if chart is occupying the\r\n         * whole of the screen and would otherwise prevent scrolling.\r\n         *\r\n         * @since 4.4.0\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.\r\n         * @param  value  Grip\r\n         */\r\n        set: function (value) {\r\n            this._dragGrip = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Chart.prototype, \"focusable\", {\r\n        get: function () {\r\n            return this.parent.focusable;\r\n        },\r\n        set: function (value) {\r\n            this.parent.focusable = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Chart;\r\n}(Component));\r\nexport { Chart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Chart\"] = Chart;\r\n/**\r\n * Add default responsive rules\r\n */\r\n/**\r\n * Reduce horizontal margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingLeft > 10) {\r\n                state.properties.paddingLeft = 10;\r\n            }\r\n            if (target.pixelPaddingRight > 10) {\r\n                state.properties.paddingRight = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Reduce vertical margins\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            if (target.pixelPaddingTop > 10) {\r\n                state.properties.paddingTop = 10;\r\n            }\r\n            if (target.pixelPaddingBottom > 10) {\r\n                state.properties.paddingBottom = 10;\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove horizontal padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.widthXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingLeft = 0;\r\n            state.properties.paddingRight = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n/**\r\n * Remove vertical padding\r\n */\r\ndefaultRules.push({\r\n    relevant: ResponsiveBreakpoints.heightXXS,\r\n    state: function (target, stateId) {\r\n        if (target instanceof Chart) {\r\n            var state = target.states.create(stateId);\r\n            state.properties.paddingTop = 0;\r\n            state.properties.paddingBottom = 0;\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}