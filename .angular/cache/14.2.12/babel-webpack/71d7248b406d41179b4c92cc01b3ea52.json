{"ast":null,"code":"/**\r\n * Sliced chart module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { PercentChart, PercentChartDataItem } from \"./PercentChart\";\nimport { registry } from \"../../core/Registry\";\nimport * as $type from \"../../core/utils/Type\";\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\n\nvar SlicedChartDataItem =\n/** @class */\nfunction (_super) {\n  __extends(SlicedChartDataItem, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function SlicedChartDataItem() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"SlicedChartDataItem\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  return SlicedChartDataItem;\n}(PercentChartDataItem);\n\nexport { SlicedChartDataItem };\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\n\nvar SlicedChart =\n/** @class */\nfunction (_super) {\n  __extends(SlicedChart, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function SlicedChart() {\n    var _this = // Init\n    _super.call(this) || this;\n\n    _this.className = \"SlicedChart\";\n    _this.seriesContainer.layout = \"horizontal\";\n\n    _this.padding(15, 15, 15, 15); // Apply theme\n\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Sets defaults that instantiate some objects that rely on parent, so they\r\n   * cannot be set in constructor.\r\n   */\n\n\n  SlicedChart.prototype.applyInternalDefaults = function () {\n    _super.prototype.applyInternalDefaults.call(this); // Add a default screen reader title for accessibility\n    // This will be overridden in screen reader if there are any `titles` set\n\n\n    if (!$type.hasValue(this.readerTitle)) {\n      this.readerTitle = this.language.translate(\"Sliced chart\");\n    }\n  };\n  /**\r\n   * (Re)validates the chart, causing it to redraw.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  SlicedChart.prototype.validate = function () {\n    _super.prototype.validate.call(this);\n  };\n\n  return SlicedChart;\n}(PercentChart);\n\nexport { SlicedChart };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"SlicedChart\"] = SlicedChart;\nregistry.registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;","map":{"version":3,"names":["__extends","PercentChart","PercentChartDataItem","registry","$type","SlicedChartDataItem","_super","_this","call","className","applyTheme","SlicedChart","seriesContainer","layout","padding","prototype","applyInternalDefaults","hasValue","readerTitle","language","translate","validate","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js"],"sourcesContent":["/**\r\n * Sliced chart module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { PercentChart, PercentChartDataItem } from \"./PercentChart\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Defines a [[DataItem]] for [[SlicedChart]].\r\n *\r\n * @see {@link DataItem}\r\n */\r\nvar SlicedChartDataItem = /** @class */ (function (_super) {\r\n    __extends(SlicedChartDataItem, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChartDataItem() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"SlicedChartDataItem\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    return SlicedChartDataItem;\r\n}(PercentChartDataItem));\r\nexport { SlicedChartDataItem };\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a Sliced chart.\r\n *\r\n * @see {@link ISlicedChartEvents} for a list of available Events\r\n * @see {@link ISlicedChartAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation\r\n * @important\r\n */\r\nvar SlicedChart = /** @class */ (function (_super) {\r\n    __extends(SlicedChart, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function SlicedChart() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        _this.className = \"SlicedChart\";\r\n        _this.seriesContainer.layout = \"horizontal\";\r\n        _this.padding(15, 15, 15, 15);\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Sets defaults that instantiate some objects that rely on parent, so they\r\n     * cannot be set in constructor.\r\n     */\r\n    SlicedChart.prototype.applyInternalDefaults = function () {\r\n        _super.prototype.applyInternalDefaults.call(this);\r\n        // Add a default screen reader title for accessibility\r\n        // This will be overridden in screen reader if there are any `titles` set\r\n        if (!$type.hasValue(this.readerTitle)) {\r\n            this.readerTitle = this.language.translate(\"Sliced chart\");\r\n        }\r\n    };\r\n    /**\r\n     * (Re)validates the chart, causing it to redraw.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    SlicedChart.prototype.validate = function () {\r\n        _super.prototype.validate.call(this);\r\n    };\r\n    return SlicedChart;\r\n}(PercentChart));\r\nexport { SlicedChart };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"SlicedChart\"] = SlicedChart;\r\nregistry.registeredClasses[\"SlicedChartDataItem\"] = SlicedChartDataItem;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,gBAAnD;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACvDN,SAAS,CAACK,mBAAD,EAAsBC,MAAtB,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,mBAAT,GAA+B;IAC3B,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,qBAAlB;;IACAF,KAAK,CAACG,UAAN;;IACA,OAAOH,KAAP;EACH;;EACD,OAAOF,mBAAP;AACH,CAZwC,CAYvCH,oBAZuC,CAAzC;;AAaA,SAASG,mBAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIM,WAAW;AAAG;AAAe,UAAUL,MAAV,EAAkB;EAC/CN,SAAS,CAACW,WAAD,EAAcL,MAAd,CAAT;EACA;AACJ;AACA;;;EACI,SAASK,WAAT,GAAuB;IACnB,IAAIJ,KAAK,GACT;IACAD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAFrB;;IAGAD,KAAK,CAACE,SAAN,GAAkB,aAAlB;IACAF,KAAK,CAACK,eAAN,CAAsBC,MAAtB,GAA+B,YAA/B;;IACAN,KAAK,CAACO,OAAN,CAAc,EAAd,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,EANmB,CAOnB;;;IACAP,KAAK,CAACG,UAAN;;IACA,OAAOH,KAAP;EACH;EACD;AACJ;AACA;AACA;;;EACII,WAAW,CAACI,SAAZ,CAAsBC,qBAAtB,GAA8C,YAAY;IACtDV,MAAM,CAACS,SAAP,CAAiBC,qBAAjB,CAAuCR,IAAvC,CAA4C,IAA5C,EADsD,CAEtD;IACA;;;IACA,IAAI,CAACJ,KAAK,CAACa,QAAN,CAAe,KAAKC,WAApB,CAAL,EAAuC;MACnC,KAAKA,WAAL,GAAmB,KAAKC,QAAL,CAAcC,SAAd,CAAwB,cAAxB,CAAnB;IACH;EACJ,CAPD;EAQA;AACJ;AACA;AACA;AACA;;;EACIT,WAAW,CAACI,SAAZ,CAAsBM,QAAtB,GAAiC,YAAY;IACzCf,MAAM,CAACS,SAAP,CAAiBM,QAAjB,CAA0Bb,IAA1B,CAA+B,IAA/B;EACH,CAFD;;EAGA,OAAOG,WAAP;AACH,CArCgC,CAqC/BV,YArC+B,CAAjC;;AAsCA,SAASU,WAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAR,QAAQ,CAACmB,iBAAT,CAA2B,aAA3B,IAA4CX,WAA5C;AACAR,QAAQ,CAACmB,iBAAT,CAA2B,qBAA3B,IAAoDjB,mBAApD"},"metadata":{},"sourceType":"module"}