{"ast":null,"code":"/**\r\n * Bullet module\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Bullet } from \"./Bullet\";\nimport { Sprite } from \"../../core/Sprite\";\nimport { registry } from \"../../core/Registry\";\nimport * as $path from \"../../core/rendering/Path\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\n\nvar ErrorBullet =\n/** @class */\nfunction (_super) {\n  __extends(ErrorBullet, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function ErrorBullet() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"ErrorBullet\";\n    _this.errorLine = _this.createChild(Sprite);\n    _this.errorLine.shouldClone = false;\n    _this.width = 20;\n    _this.height = 20;\n    _this.strokeOpacity = 1;\n    _this.isDynamic = true;\n    return _this;\n  }\n\n  ErrorBullet.prototype.validatePosition = function () {\n    _super.prototype.validatePosition.call(this);\n\n    var w = this.pixelWidth / 2;\n    var h = this.pixelHeight / 2;\n    this.errorLine.path = $path.moveTo({\n      x: -w,\n      y: -h\n    }) + $path.lineTo({\n      x: w,\n      y: -h\n    }) + $path.moveTo({\n      x: 0,\n      y: -h\n    }) + $path.lineTo({\n      x: 0,\n      y: h\n    }) + $path.moveTo({\n      x: -w,\n      y: h\n    }) + $path.lineTo({\n      x: w,\n      y: h\n    });\n  };\n  /**\r\n   * Copies all proprities and related stuff from another instance of\r\n   * [[ErrorBullet]].\r\n   *\r\n   * @param source  Source element\r\n   */\n\n\n  ErrorBullet.prototype.copyFrom = function (source) {\n    _super.prototype.copyFrom.call(this, source);\n\n    this.errorLine.copyFrom(source.errorLine);\n  };\n\n  return ErrorBullet;\n}(Bullet);\n\nexport { ErrorBullet };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;","map":{"version":3,"names":["__extends","Bullet","Sprite","registry","$path","ErrorBullet","_super","_this","call","className","errorLine","createChild","shouldClone","width","height","strokeOpacity","isDynamic","prototype","validatePosition","w","pixelWidth","h","pixelHeight","path","moveTo","x","y","lineTo","copyFrom","source","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js"],"sourcesContent":["/**\r\n * Bullet module\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Bullet } from \"./Bullet\";\r\nimport { Sprite } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Creates a bullet with a textual label.\r\n *\r\n * Uses [[Label]] instance to draw the label, so the label itself is\r\n * configurable.\r\n *\r\n * @see {@link IBulletEvents} for a list of available events\r\n * @see {@link IBulletAdapters} for a list of available Adapters\r\n * @todo Usage example\r\n * @important\r\n */\r\nvar ErrorBullet = /** @class */ (function (_super) {\r\n    __extends(ErrorBullet, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function ErrorBullet() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"ErrorBullet\";\r\n        _this.errorLine = _this.createChild(Sprite);\r\n        _this.errorLine.shouldClone = false;\r\n        _this.width = 20;\r\n        _this.height = 20;\r\n        _this.strokeOpacity = 1;\r\n        _this.isDynamic = true;\r\n        return _this;\r\n    }\r\n    ErrorBullet.prototype.validatePosition = function () {\r\n        _super.prototype.validatePosition.call(this);\r\n        var w = this.pixelWidth / 2;\r\n        var h = this.pixelHeight / 2;\r\n        this.errorLine.path = $path.moveTo({ x: -w, y: -h }) + $path.lineTo({ x: w, y: -h }) + $path.moveTo({ x: 0, y: -h }) + $path.lineTo({ x: 0, y: h }) + $path.moveTo({ x: -w, y: h }) + $path.lineTo({ x: w, y: h });\r\n    };\r\n    /**\r\n     * Copies all proprities and related stuff from another instance of\r\n     * [[ErrorBullet]].\r\n     *\r\n     * @param source  Source element\r\n     */\r\n    ErrorBullet.prototype.copyFrom = function (source) {\r\n        _super.prototype.copyFrom.call(this, source);\r\n        this.errorLine.copyFrom(source.errorLine);\r\n    };\r\n    return ErrorBullet;\r\n}(Bullet));\r\nexport { ErrorBullet };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ErrorBullet\"] = ErrorBullet;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,2BAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC/CN,SAAS,CAACK,WAAD,EAAcC,MAAd,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,WAAT,GAAuB;IACnB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,aAAlB;IACAF,KAAK,CAACG,SAAN,GAAkBH,KAAK,CAACI,WAAN,CAAkBT,MAAlB,CAAlB;IACAK,KAAK,CAACG,SAAN,CAAgBE,WAAhB,GAA8B,KAA9B;IACAL,KAAK,CAACM,KAAN,GAAc,EAAd;IACAN,KAAK,CAACO,MAAN,GAAe,EAAf;IACAP,KAAK,CAACQ,aAAN,GAAsB,CAAtB;IACAR,KAAK,CAACS,SAAN,GAAkB,IAAlB;IACA,OAAOT,KAAP;EACH;;EACDF,WAAW,CAACY,SAAZ,CAAsBC,gBAAtB,GAAyC,YAAY;IACjDZ,MAAM,CAACW,SAAP,CAAiBC,gBAAjB,CAAkCV,IAAlC,CAAuC,IAAvC;;IACA,IAAIW,CAAC,GAAG,KAAKC,UAAL,GAAkB,CAA1B;IACA,IAAIC,CAAC,GAAG,KAAKC,WAAL,GAAmB,CAA3B;IACA,KAAKZ,SAAL,CAAea,IAAf,GAAsBnB,KAAK,CAACoB,MAAN,CAAa;MAAEC,CAAC,EAAE,CAACN,CAAN;MAASO,CAAC,EAAE,CAACL;IAAb,CAAb,IAAiCjB,KAAK,CAACuB,MAAN,CAAa;MAAEF,CAAC,EAAEN,CAAL;MAAQO,CAAC,EAAE,CAACL;IAAZ,CAAb,CAAjC,GAAiEjB,KAAK,CAACoB,MAAN,CAAa;MAAEC,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAE,CAACL;IAAZ,CAAb,CAAjE,GAAiGjB,KAAK,CAACuB,MAAN,CAAa;MAAEF,CAAC,EAAE,CAAL;MAAQC,CAAC,EAAEL;IAAX,CAAb,CAAjG,GAAgIjB,KAAK,CAACoB,MAAN,CAAa;MAAEC,CAAC,EAAE,CAACN,CAAN;MAASO,CAAC,EAAEL;IAAZ,CAAb,CAAhI,GAAgKjB,KAAK,CAACuB,MAAN,CAAa;MAAEF,CAAC,EAAEN,CAAL;MAAQO,CAAC,EAAEL;IAAX,CAAb,CAAtL;EACH,CALD;EAMA;AACJ;AACA;AACA;AACA;AACA;;;EACIhB,WAAW,CAACY,SAAZ,CAAsBW,QAAtB,GAAiC,UAAUC,MAAV,EAAkB;IAC/CvB,MAAM,CAACW,SAAP,CAAiBW,QAAjB,CAA0BpB,IAA1B,CAA+B,IAA/B,EAAqCqB,MAArC;;IACA,KAAKnB,SAAL,CAAekB,QAAf,CAAwBC,MAAM,CAACnB,SAA/B;EACH,CAHD;;EAIA,OAAOL,WAAP;AACH,CAjCgC,CAiC/BJ,MAjC+B,CAAjC;;AAkCA,SAASI,WAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,QAAQ,CAAC2B,iBAAT,CAA2B,aAA3B,IAA4CzB,WAA5C"},"metadata":{},"sourceType":"module"}