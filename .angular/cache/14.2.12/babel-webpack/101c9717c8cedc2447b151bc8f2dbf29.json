{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getWidth } from \"../../core/utils/size\";\nimport $ from \"../../core/renderer\";\nimport eventsEngine from \"../../events/core/events_engine\";\nimport { default as FormItemsRunTimeInfo } from \"./ui.form.items_runtime_info\";\nimport registerComponent from \"../../core/component_registrator\";\nimport { isDefined, isEmptyObject, isFunction, isObject, type } from \"../../core/utils/type\";\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\nimport { getCurrentScreenFactor, hasWindow } from \"../../core/utils/window\";\nimport { each } from \"../../core/utils/iterator\";\nimport { extend } from \"../../core/utils/extend\";\nimport { normalizeIndexes } from \"../../core/utils/array\";\nimport { compileGetter } from \"../../core/utils/data\";\nimport { removeEvent } from \"../../events/remove\";\nimport messageLocalization from \"../../localization/message\";\nimport Widget from \"../widget/ui.widget\";\nimport ResponsiveBox from \"../responsive_box\";\nimport { LAYOUT_MANAGER_ONE_COLUMN, FORM_LAYOUT_MANAGER_CLASS, SINGLE_COLUMN_ITEM_CONTENT, ROOT_SIMPLE_ITEM_CLASS, SIMPLE_ITEM_TYPE, FIELD_ITEM_CLASS } from \"./constants\";\nimport \"../text_box\";\nimport \"../number_box\";\nimport \"../check_box\";\nimport \"../date_box\";\nimport \"../button\";\nimport { renderFieldItem } from \"./components/field_item\";\nimport { renderButtonItem } from \"./components/button_item\";\nimport { renderEmptyItem } from \"./components/empty_item\";\nimport { convertToRenderFieldItemOptions } from \"./ui.form.layout_manager.utils\";\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\nvar LayoutManager = Widget.inherit({\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      layoutData: {},\n      readOnly: false,\n      colCount: 1,\n      colCountByScreen: void 0,\n      labelLocation: \"left\",\n      onFieldDataChanged: null,\n      onEditorEnterKey: null,\n      customizeItem: null,\n      alignItemLabels: true,\n      minColWidth: 200,\n      showRequiredMark: true,\n      screenByWidth: null,\n      showOptionalMark: false,\n      requiredMark: \"*\",\n      labelMode: \"outside\",\n      optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\n      requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\n    });\n  },\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      layoutData: true,\n      validationGroup: true\n    });\n  },\n  _init: function () {\n    var layoutData = this.option(\"layoutData\");\n    this.callBase();\n    this._itemWatchers = [];\n    this._itemsRunTimeInfo = new FormItemsRunTimeInfo();\n\n    this._updateReferencedOptions(layoutData);\n\n    this._initDataAndItems(layoutData);\n  },\n  _dispose: function () {\n    this.callBase();\n\n    this._cleanItemWatchers();\n  },\n  _initDataAndItems: function (initialData) {\n    this._syncDataWithItems();\n\n    this._updateItems(initialData);\n  },\n  _syncDataWithItems: function () {\n    var layoutData = this.option(\"layoutData\");\n    var userItems = this.option(\"items\");\n\n    if (isDefined(userItems)) {\n      userItems.forEach(item => {\n        if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\n          var value;\n\n          if (item.editorOptions) {\n            value = item.editorOptions.value;\n          }\n\n          if (isDefined(value) || item.dataField in layoutData) {\n            this._updateFieldValue(item.dataField, value);\n          }\n        }\n      });\n    }\n  },\n  _getDataByField: function (dataField) {\n    return dataField ? this.option(\"layoutData.\" + dataField) : null;\n  },\n  _isCheckboxUndefinedStateEnabled: function (_ref) {\n    var {\n      allowIndeterminateState: allowIndeterminateState,\n      editorType: editorType,\n      dataField: dataField\n    } = _ref;\n\n    if (true === allowIndeterminateState && \"dxCheckBox\" === editorType) {\n      var nameParts = [\"layoutData\", ...dataField.split(\".\")];\n      var propertyName = nameParts.pop();\n      var layoutData = this.option(nameParts.join(\".\"));\n      return layoutData && propertyName in layoutData;\n    }\n\n    return false;\n  },\n  _updateFieldValue: function (dataField, value) {\n    var layoutData = this.option(\"layoutData\");\n    var newValue = value;\n\n    if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\n      this.option(\"layoutData.\" + dataField, newValue);\n    } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\n      newValue = isFunction(newValue) ? newValue() : newValue;\n      layoutData[dataField](newValue);\n    }\n\n    this._triggerOnFieldDataChanged({\n      dataField: dataField,\n      value: newValue\n    });\n  },\n  _triggerOnFieldDataChanged: function (args) {\n    this._createActionByOption(\"onFieldDataChanged\")(args);\n  },\n  _updateItems: function (layoutData) {\n    var that = this;\n    var userItems = this.option(\"items\");\n    var isUserItemsExist = isDefined(userItems);\n    var customizeItem = that.option(\"customizeItem\");\n    var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\n\n    if (isDefined(items)) {\n      var processedItems = [];\n      each(items, function (index, item) {\n        if (that._isAcceptableItem(item)) {\n          item = that._processItem(item);\n          customizeItem && customizeItem(item);\n\n          if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\n            processedItems.push(item);\n          }\n        }\n      });\n\n      if (!that._itemWatchers.length || !isUserItemsExist) {\n        that._updateItemWatchers(items);\n      }\n\n      this._setItems(processedItems);\n\n      this._sortItems();\n    }\n  },\n  _cleanItemWatchers: function () {\n    this._itemWatchers.forEach(function (dispose) {\n      dispose();\n    });\n\n    this._itemWatchers = [];\n  },\n  _updateItemWatchers: function (items) {\n    var that = this;\n\n    var watch = that._getWatch();\n\n    items.forEach(function (item) {\n      if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\n        that._itemWatchers.push(watch(function () {\n          return variableWrapper.unwrap(item.visible);\n        }, function () {\n          that._updateItems(that.option(\"layoutData\"));\n\n          that.repaint();\n        }, {\n          skipImmediate: true\n        }));\n      }\n    });\n  },\n  _generateItemsByData: function (layoutData) {\n    var result = [];\n\n    if (isDefined(layoutData)) {\n      each(layoutData, function (dataField) {\n        result.push({\n          dataField: dataField\n        });\n      });\n    }\n\n    return result;\n  },\n  _isAcceptableItem: function (item) {\n    var itemField = item.dataField || item;\n\n    var itemData = this._getDataByField(itemField);\n\n    return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData));\n  },\n  _processItem: function (item) {\n    if (\"string\" === typeof item) {\n      item = {\n        dataField: item\n      };\n    }\n\n    if (\"object\" === typeof item && !item.itemType) {\n      item.itemType = SIMPLE_ITEM_TYPE;\n    }\n\n    if (!isDefined(item.editorType) && isDefined(item.dataField)) {\n      var value = this._getDataByField(item.dataField);\n\n      item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT;\n    }\n\n    if (\"dxCheckBox\" === item.editorType) {\n      var _item$allowIndetermin;\n\n      item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true;\n    }\n\n    return item;\n  },\n  _getEditorTypeByDataType: function (dataType) {\n    switch (dataType) {\n      case \"number\":\n        return \"dxNumberBox\";\n\n      case \"date\":\n        return \"dxDateBox\";\n\n      case \"boolean\":\n        return \"dxCheckBox\";\n\n      default:\n        return \"dxTextBox\";\n    }\n  },\n  _sortItems: function () {\n    normalizeIndexes(this._items, \"visibleIndex\");\n\n    this._sortIndexes();\n  },\n  _sortIndexes: function () {\n    this._items.sort(function (itemA, itemB) {\n      var indexA = itemA.visibleIndex;\n      var indexB = itemB.visibleIndex;\n      var result;\n\n      if (indexA > indexB) {\n        result = 1;\n      } else if (indexA < indexB) {\n        result = -1;\n      } else {\n        result = 0;\n      }\n\n      return result;\n    });\n  },\n  _initMarkup: function () {\n    this._itemsRunTimeInfo.clear();\n\n    this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\n    this.callBase();\n\n    this._renderResponsiveBox();\n  },\n  _renderResponsiveBox: function () {\n    var templatesInfo = [];\n\n    if (this._items && this._items.length) {\n      var colCount = this._getColCount();\n\n      var $container = $(\"<div>\").appendTo(this.$element());\n\n      this._prepareItemsWithMerging(colCount);\n\n      var layoutItems = this._generateLayoutItems();\n\n      this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\n\n      if (!hasWindow()) {\n        this._renderTemplates(templatesInfo);\n      }\n    }\n  },\n  _itemStateChangedHandler: function (e) {\n    this._refresh();\n  },\n  _renderTemplates: function (templatesInfo) {\n    var that = this;\n    var itemsWithLabelTemplateCount = 0;\n    templatesInfo.forEach(_ref2 => {\n      var _item$label;\n\n      var {\n        item: item\n      } = _ref2;\n\n      if (null !== item && void 0 !== item && null !== (_item$label = item.label) && void 0 !== _item$label && _item$label.template) {\n        itemsWithLabelTemplateCount++;\n      }\n    });\n    each(templatesInfo, function (index, info) {\n      switch (info.itemType) {\n        case \"empty\":\n          renderEmptyItem(info);\n          break;\n\n        case \"button\":\n          that._renderButtonItem(info);\n\n          break;\n\n        default:\n          that._renderFieldItem(info, itemsWithLabelTemplateCount);\n\n      }\n    });\n  },\n  _getResponsiveBoxConfig: function (layoutItems, colCount, templatesInfo) {\n    var that = this;\n    var colCountByScreen = that.option(\"colCountByScreen\");\n    var xsColCount = colCountByScreen && colCountByScreen.xs;\n    return {\n      onItemStateChanged: this._itemStateChangedHandler.bind(this),\n      onLayoutChanged: function () {\n        var onLayoutChanged = that.option(\"onLayoutChanged\");\n        var isSingleColumnMode = that.isSingleColumnMode();\n\n        if (onLayoutChanged) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\n          onLayoutChanged(isSingleColumnMode);\n        }\n      },\n      onContentReady: function (e) {\n        if (hasWindow()) {\n          that._renderTemplates(templatesInfo);\n        }\n\n        if (that.option(\"onLayoutChanged\")) {\n          that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component));\n        }\n      },\n      itemTemplate: function (e, itemData, itemElement) {\n        if (!e.location) {\n          return;\n        }\n\n        var $itemElement = $(itemElement);\n        var itemRenderedCountInPreviousRows = e.location.row * colCount;\n        var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\n\n        if (!item) {\n          return;\n        }\n\n        var itemCssClassList = [item.cssClass];\n        $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\n\n        if (0 === e.location.row) {\n          itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS);\n        }\n\n        if (0 === e.location.col) {\n          itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS);\n        }\n\n        if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\n          $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS);\n        }\n\n        var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\n\n        var rowsCount = that._getRowsCount();\n\n        var isLastRow = e.location.row === rowsCount - 1;\n\n        if (isLastColumn) {\n          itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS);\n        }\n\n        if (isLastRow) {\n          itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS);\n        }\n\n        if (\"empty\" !== item.itemType) {\n          itemCssClassList.push(FIELD_ITEM_CLASS);\n          itemCssClassList.push(that.option(\"cssItemClass\"));\n\n          if (isDefined(item.col)) {\n            itemCssClassList.push(\"dx-col-\" + item.col);\n          }\n        }\n\n        templatesInfo.push({\n          itemType: item.itemType,\n          item: item,\n          $parent: $itemElement,\n          rootElementCssClassList: itemCssClassList\n        });\n      },\n      cols: that._generateRatio(colCount),\n      rows: that._generateRatio(that._getRowsCount(), true),\n      dataSource: layoutItems,\n      screenByWidth: that.option(\"screenByWidth\"),\n      singleColumnScreen: xsColCount ? false : \"xs\"\n    };\n  },\n  _getColCount: function () {\n    var colCount = this.option(\"colCount\");\n    var colCountByScreen = this.option(\"colCountByScreen\");\n\n    if (colCountByScreen) {\n      var screenFactor = this.option(\"form\").getTargetScreenFactor();\n\n      if (!screenFactor) {\n        screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\";\n      }\n\n      colCount = colCountByScreen[screenFactor] || colCount;\n    }\n\n    if (\"auto\" === colCount) {\n      if (this._cashedColCount) {\n        return this._cashedColCount;\n      }\n\n      this._cashedColCount = colCount = this._getMaxColCount();\n    }\n\n    return colCount < 1 ? 1 : colCount;\n  },\n  _getMaxColCount: function () {\n    if (!hasWindow()) {\n      return 1;\n    }\n\n    var minColWidth = this.option(\"minColWidth\");\n    var width = getWidth(this.$element());\n    var itemsCount = this._items.length;\n    var maxColCount = Math.floor(width / minColWidth) || 1;\n    return itemsCount < maxColCount ? itemsCount : maxColCount;\n  },\n  isCachedColCountObsolete: function () {\n    return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount;\n  },\n  _prepareItemsWithMerging: function (colCount) {\n    var items = this._items.slice(0);\n\n    var item;\n    var itemsMergedByCol;\n    var result = [];\n    var j;\n    var i;\n\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n      result.push(item);\n\n      if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\n        item.col = this._getColByIndex(result.length - 1, colCount);\n      }\n\n      if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\n        itemsMergedByCol = [];\n\n        for (j = 0; j < item.colSpan - 1; j++) {\n          itemsMergedByCol.push({\n            merged: true\n          });\n        }\n\n        result = result.concat(itemsMergedByCol);\n      } else {\n        delete item.colSpan;\n      }\n    }\n\n    this._setItems(result);\n  },\n  _getColByIndex: function (index, colCount) {\n    return index % colCount;\n  },\n  _setItems: function (items) {\n    this._items = items;\n    this._cashedColCount = null;\n  },\n  _generateLayoutItems: function () {\n    var items = this._items;\n\n    var colCount = this._getColCount();\n\n    var result = [];\n    var item;\n    var i;\n\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n\n      if (!item.merged) {\n        var generatedItem = {\n          location: {\n            row: parseInt(i / colCount),\n            col: this._getColByIndex(i, colCount)\n          }\n        };\n\n        if (isDefined(item.disabled)) {\n          generatedItem.disabled = item.disabled;\n        }\n\n        if (isDefined(item.visible)) {\n          generatedItem.visible = item.visible;\n        }\n\n        if (isDefined(item.colSpan)) {\n          generatedItem.location.colspan = item.colSpan;\n        }\n\n        if (isDefined(item.rowSpan)) {\n          generatedItem.location.rowspan = item.rowSpan;\n        }\n\n        result.push(generatedItem);\n      }\n    }\n\n    return result;\n  },\n  _renderEmptyItem: function ($container) {\n    renderEmptyItem({\n      $container: $container\n    });\n  },\n  _renderButtonItem: function (_ref3) {\n    var {\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList\n    } = _ref3;\n    var {\n      $rootElement: $rootElement,\n      buttonInstance: buttonInstance\n    } = renderButtonItem({\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList,\n      validationGroup: this.option(\"validationGroup\"),\n      createComponentCallback: this._createComponent.bind(this)\n    });\n\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: buttonInstance,\n      guid: item.guid,\n      $itemContainer: $rootElement\n    });\n  },\n  _renderFieldItem: function (_ref4, itemsWithLabelTemplateCount) {\n    var _item$label2, _this$option;\n\n    var {\n      item: item,\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList\n    } = _ref4;\n\n    var editorValue = this._getDataByField(item.dataField);\n\n    var canAssignUndefinedValueToEditor = false;\n\n    if (void 0 === editorValue) {\n      var {\n        allowIndeterminateState: allowIndeterminateState,\n        editorType: editorType,\n        dataField: dataField\n      } = item;\n      canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({\n        allowIndeterminateState: allowIndeterminateState,\n        editorType: editorType,\n        dataField: dataField\n      });\n    }\n\n    var name = item.dataField || item.name;\n\n    var formOrLayoutManager = this._getFormOrThis();\n\n    var {\n      $fieldEditorContainer: $fieldEditorContainer,\n      widgetInstance: widgetInstance,\n      $rootElement: $rootElement\n    } = renderFieldItem(convertToRenderFieldItemOptions({\n      $parent: $parent,\n      rootElementCssClassList: rootElementCssClassList,\n      item: item,\n      name: name,\n      editorValue: editorValue,\n      canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\n      formOrLayoutManager: this._getFormOrThis(),\n      createComponentCallback: this._createComponent.bind(this),\n      formLabelLocation: this.option(\"labelLocation\"),\n      requiredMessageTemplate: this.option(\"requiredMessage\"),\n      validationGroup: this.option(\"validationGroup\"),\n      editorValidationBoundary: this.option(\"validationBoundary\"),\n      editorStylingMode: this.option(\"form\") && this.option(\"form\").option(\"stylingMode\"),\n      showColonAfterLabel: this.option(\"showColonAfterLabel\"),\n      managerLabelLocation: this.option(\"labelLocation\"),\n      template: item.template ? this._getTemplate(item.template) : null,\n      labelTemplate: null !== (_item$label2 = item.label) && void 0 !== _item$label2 && _item$label2.template ? this._getTemplate(item.label.template) : null,\n      itemId: this.option(\"form\") && this.option(\"form\").getItemID(name),\n      managerMarkOptions: this._getMarkOptions(),\n      labelMode: this.option(\"labelMode\"),\n      onLabelTemplateRendered: () => {\n        this._incTemplateRenderedCallCount();\n\n        if (this._shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, itemsWithLabelTemplateCount)) {\n          formOrLayoutManager._alignLabels(this, this.isSingleColumnMode(formOrLayoutManager));\n        }\n      }\n    }));\n    null === (_this$option = this.option(\"onFieldItemRendered\")) || void 0 === _this$option ? void 0 : _this$option();\n\n    if (widgetInstance && item.dataField) {\n      this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer);\n    }\n\n    this._itemsRunTimeInfo.add({\n      item: item,\n      widgetInstance: widgetInstance,\n      guid: item.guid,\n      $itemContainer: $rootElement\n    });\n  },\n\n  _incTemplateRenderedCallCount() {\n    var _this$_labelTemplateR;\n\n    this._labelTemplateRenderedCallCount = (null !== (_this$_labelTemplateR = this._labelTemplateRenderedCallCount) && void 0 !== _this$_labelTemplateR ? _this$_labelTemplateR : 0) + 1;\n  },\n\n  _shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, totalItemsWithLabelTemplate) {\n    return formOrLayoutManager.option(\"templatesRenderAsynchronously\") && this._labelTemplateRenderedCallCount === totalItemsWithLabelTemplate;\n  },\n\n  _getMarkOptions: function () {\n    return {\n      showRequiredMark: this.option(\"showRequiredMark\"),\n      requiredMark: this.option(\"requiredMark\"),\n      showOptionalMark: this.option(\"showOptionalMark\"),\n      optionalMark: this.option(\"optionalMark\")\n    };\n  },\n  _getFormOrThis: function () {\n    return this.option(\"form\") || this;\n  },\n  _bindDataField: function (editorInstance, dataField, editorType, $container) {\n    var formOrThis = this._getFormOrThis();\n\n    editorInstance.on(\"enterKey\", function (args) {\n      formOrThis._createActionByOption(\"onEditorEnterKey\")(extend(args, {\n        dataField: dataField\n      }));\n    });\n\n    this._createWatcher(editorInstance, $container, dataField);\n\n    this.linkEditorToDataField(editorInstance, dataField, editorType);\n  },\n  _createWatcher: function (editorInstance, $container, dataField) {\n    var that = this;\n\n    var watch = that._getWatch();\n\n    if (!isFunction(watch)) {\n      return;\n    }\n\n    var dispose = watch(function () {\n      return that._getDataByField(dataField);\n    }, function () {\n      var fieldValue = that._getDataByField(dataField);\n\n      if (\"dxTagBox\" === editorInstance.NAME) {\n        var editorValue = editorInstance.option(\"value\");\n\n        if (fieldValue !== editorValue && function (array1, array2) {\n          if (!Array.isArray(array1) || !Array.isArray(array2) || array1.length !== array2.length) {\n            return false;\n          }\n\n          for (var i = 0; i < array1.length; i++) {\n            if (array1[i] !== array2[i]) {\n              return false;\n            }\n          }\n\n          return true;\n        }(fieldValue, editorValue)) {\n          return;\n        }\n      }\n\n      editorInstance.option(\"value\", fieldValue);\n    }, {\n      deep: true,\n      skipImmediate: true\n    });\n    eventsEngine.on($container, removeEvent, dispose);\n  },\n  _getWatch: function () {\n    if (!isDefined(this._watch)) {\n      var formInstance = this.option(\"form\");\n      this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\");\n    }\n\n    return this._watch;\n  },\n  _createComponent: function ($editor, type, editorOptions) {\n    var readOnlyState = this.option(\"readOnly\");\n    var instance = this.callBase($editor, type, editorOptions);\n    readOnlyState && instance.option(\"readOnly\", readOnlyState);\n    this.on(\"optionChanged\", function (args) {\n      if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\n        instance.option(args.name, args.value);\n      }\n    });\n    return instance;\n  },\n  _generateRatio: function (count, isAutoSize) {\n    var result = [];\n    var ratio;\n    var i;\n\n    for (i = 0; i < count; i++) {\n      ratio = {\n        ratio: 1\n      };\n\n      if (isAutoSize) {\n        ratio.baseSize = \"auto\";\n      }\n\n      result.push(ratio);\n    }\n\n    return result;\n  },\n  _getRowsCount: function () {\n    return Math.ceil(this._items.length / this._getColCount());\n  },\n  _updateReferencedOptions: function (newLayoutData) {\n    var layoutData = this.option(\"layoutData\");\n\n    if (isObject(layoutData)) {\n      Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property]);\n    }\n\n    if (isObject(newLayoutData)) {\n      Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true);\n    }\n  },\n\n  _resetWidget(instance) {\n    this._disableEditorValueChangedHandler = true;\n    instance.reset();\n    this._disableEditorValueChangedHandler = false;\n    instance.option(\"isValid\", true);\n  },\n\n  _optionChanged(args) {\n    if (0 === args.fullName.search(\"layoutData.\")) {\n      return;\n    }\n\n    switch (args.name) {\n      case \"showRequiredMark\":\n      case \"showOptionalMark\":\n      case \"requiredMark\":\n      case \"optionalMark\":\n        this._cashedRequiredConfig = null;\n\n        this._invalidate();\n\n        break;\n\n      case \"layoutData\":\n        this._updateReferencedOptions(args.value);\n\n        if (this.option(\"items\")) {\n          if (!isEmptyObject(args.value)) {\n            this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\n              if (isDefined(itemRunTimeInfo.item)) {\n                var dataField = itemRunTimeInfo.item.dataField;\n\n                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\n                  var valueGetter = compileGetter(dataField);\n                  var dataValue = valueGetter(args.value);\n                  var {\n                    allowIndeterminateState: allowIndeterminateState,\n                    editorType: editorType\n                  } = itemRunTimeInfo.item;\n\n                  if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled({\n                    allowIndeterminateState: allowIndeterminateState,\n                    editorType: editorType,\n                    dataField: dataField\n                  })) {\n                    itemRunTimeInfo.widgetInstance.option(\"value\", dataValue);\n                  } else {\n                    this._resetWidget(itemRunTimeInfo.widgetInstance);\n                  }\n                }\n              }\n            });\n          }\n        } else {\n          this._initDataAndItems(args.value);\n\n          this._invalidate();\n        }\n\n        break;\n\n      case \"items\":\n        this._cleanItemWatchers();\n\n        this._initDataAndItems(args.value);\n\n        this._invalidate();\n\n        break;\n\n      case \"alignItemLabels\":\n      case \"labelLocation\":\n      case \"labelMode\":\n      case \"requiredMessage\":\n        this._invalidate();\n\n        break;\n\n      case \"customizeItem\":\n        this._updateItems(this.option(\"layoutData\"));\n\n        this._invalidate();\n\n        break;\n\n      case \"colCount\":\n        this._resetColCount();\n\n        break;\n\n      case \"minColWidth\":\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n\n        break;\n\n      case \"readOnly\":\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        if (\"auto\" === this.option(\"colCount\")) {\n          this._resetColCount();\n        }\n\n        break;\n\n      case \"onFieldDataChanged\":\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n\n  _resetColCount: function () {\n    this._cashedColCount = null;\n\n    this._invalidate();\n  },\n\n  linkEditorToDataField(editorInstance, dataField) {\n    this.on(\"optionChanged\", args => {\n      if (args.fullName === \"layoutData.\".concat(dataField)) {\n        editorInstance._setOptionWithoutOptionChange(\"value\", args.value);\n      }\n    });\n    editorInstance.on(\"valueChanged\", args => {\n      var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\n\n      if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\n        this._updateFieldValue(dataField, args.value);\n      }\n    });\n  },\n\n  _dimensionChanged: function () {\n    if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\n      this._eventsStrategy.fireEvent(\"autoColCountChanged\");\n    }\n  },\n  updateData: function (data, value) {\n    var that = this;\n\n    if (isObject(data)) {\n      each(data, function (dataField, fieldValue) {\n        that._updateFieldValue(dataField, fieldValue);\n      });\n    } else if (\"string\" === typeof data) {\n      that._updateFieldValue(data, value);\n    }\n  },\n  getEditor: function (field) {\n    return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field);\n  },\n  isSingleColumnMode: function (component) {\n    var responsiveBox = this._responsiveBox || component;\n\n    if (responsiveBox) {\n      return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\");\n    }\n  },\n  getItemsRunTimeInfo: function () {\n    return this._itemsRunTimeInfo;\n  }\n});\nregisterComponent(\"dxLayoutManager\", LayoutManager);\nexport default LayoutManager;","map":{"version":3,"names":["getWidth","$","eventsEngine","default","FormItemsRunTimeInfo","registerComponent","isDefined","isEmptyObject","isFunction","isObject","type","variableWrapper","getCurrentScreenFactor","hasWindow","each","extend","normalizeIndexes","compileGetter","removeEvent","messageLocalization","Widget","ResponsiveBox","LAYOUT_MANAGER_ONE_COLUMN","FORM_LAYOUT_MANAGER_CLASS","SINGLE_COLUMN_ITEM_CONTENT","ROOT_SIMPLE_ITEM_CLASS","SIMPLE_ITEM_TYPE","FIELD_ITEM_CLASS","renderFieldItem","renderButtonItem","renderEmptyItem","convertToRenderFieldItemOptions","FORM_EDITOR_BY_DEFAULT","LAYOUT_MANAGER_FIRST_ROW_CLASS","LAYOUT_MANAGER_LAST_ROW_CLASS","LAYOUT_MANAGER_FIRST_COL_CLASS","LAYOUT_MANAGER_LAST_COL_CLASS","LayoutManager","inherit","_getDefaultOptions","callBase","layoutData","readOnly","colCount","colCountByScreen","labelLocation","onFieldDataChanged","onEditorEnterKey","customizeItem","alignItemLabels","minColWidth","showRequiredMark","screenByWidth","showOptionalMark","requiredMark","labelMode","optionalMark","format","requiredMessage","getFormatter","_setOptionsByReference","_optionsByReference","validationGroup","_init","option","_itemWatchers","_itemsRunTimeInfo","_updateReferencedOptions","_initDataAndItems","_dispose","_cleanItemWatchers","initialData","_syncDataWithItems","_updateItems","userItems","forEach","item","dataField","_getDataByField","value","editorOptions","_updateFieldValue","_isCheckboxUndefinedStateEnabled","_ref","allowIndeterminateState","editorType","nameParts","split","propertyName","pop","join","newValue","isWrapped","isWritableWrapped","_triggerOnFieldDataChanged","args","_createActionByOption","that","isUserItemsExist","items","_generateItemsByData","processedItems","index","_isAcceptableItem","_processItem","unwrap","visible","push","length","_updateItemWatchers","_setItems","_sortItems","dispose","watch","_getWatch","repaint","skipImmediate","result","itemField","itemData","itemType","_getEditorTypeByDataType","_item$allowIndetermin","dataType","_items","_sortIndexes","sort","itemA","itemB","indexA","visibleIndex","indexB","_initMarkup","clear","$element","addClass","_renderResponsiveBox","templatesInfo","_getColCount","$container","appendTo","_prepareItemsWithMerging","layoutItems","_generateLayoutItems","_responsiveBox","_createComponent","_getResponsiveBoxConfig","_renderTemplates","_itemStateChangedHandler","e","_refresh","itemsWithLabelTemplateCount","_ref2","_item$label","label","template","info","_renderButtonItem","_renderFieldItem","xsColCount","xs","onItemStateChanged","bind","onLayoutChanged","isSingleColumnMode","toggleClass","onContentReady","component","itemTemplate","itemElement","location","$itemElement","itemRenderedCountInPreviousRows","row","col","itemCssClassList","cssClass","isLastColumn","colspan","rowsCount","_getRowsCount","isLastRow","$parent","rootElementCssClassList","cols","_generateRatio","rows","dataSource","singleColumnScreen","screenFactor","getTargetScreenFactor","_cashedColCount","_getMaxColCount","width","itemsCount","maxColCount","Math","floor","isCachedColCountObsolete","slice","itemsMergedByCol","j","i","colSpan","_getColByIndex","merged","concat","generatedItem","parseInt","disabled","rowSpan","rowspan","_renderEmptyItem","_ref3","$rootElement","buttonInstance","createComponentCallback","add","widgetInstance","guid","$itemContainer","_ref4","_item$label2","_this$option","editorValue","canAssignUndefinedValueToEditor","name","formOrLayoutManager","_getFormOrThis","$fieldEditorContainer","formLabelLocation","requiredMessageTemplate","editorValidationBoundary","editorStylingMode","showColonAfterLabel","managerLabelLocation","_getTemplate","labelTemplate","itemId","getItemID","managerMarkOptions","_getMarkOptions","onLabelTemplateRendered","_incTemplateRenderedCallCount","_shouldAlignLabelsOnTemplateRendered","_alignLabels","_bindDataField","_this$_labelTemplateR","_labelTemplateRenderedCallCount","totalItemsWithLabelTemplate","editorInstance","formOrThis","on","_createWatcher","linkEditorToDataField","fieldValue","NAME","array1","array2","Array","isArray","deep","_watch","formInstance","$editor","readOnlyState","instance","count","isAutoSize","ratio","baseSize","ceil","newLayoutData","Object","getOwnPropertyNames","property","_resetWidget","_disableEditorValueChangedHandler","reset","_optionChanged","fullName","search","_cashedRequiredConfig","_invalidate","_","itemRunTimeInfo","valueGetter","dataValue","_resetColCount","_setOptionWithoutOptionChange","isValueReferenceType","previousValue","_dimensionChanged","_eventsStrategy","fireEvent","updateData","data","getEditor","field","findWidgetInstanceByDataField","findWidgetInstanceByName","responsiveBox","getItemsRunTimeInfo"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/devextreme/esm/ui/form/ui.form.layout_manager.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/ui/form/ui.form.layout_manager.js)\r\n * Version: 22.2.4\r\n * Build date: Thu Jan 19 2023\r\n *\r\n * Copyright (c) 2012 - 2023 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getWidth\r\n} from \"../../core/utils/size\";\r\nimport $ from \"../../core/renderer\";\r\nimport eventsEngine from \"../../events/core/events_engine\";\r\nimport {\r\n    default as FormItemsRunTimeInfo\r\n} from \"./ui.form.items_runtime_info\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isFunction,\r\n    isObject,\r\n    type\r\n} from \"../../core/utils/type\";\r\nimport variableWrapper from \"../../core/utils/variable_wrapper\";\r\nimport {\r\n    getCurrentScreenFactor,\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    normalizeIndexes\r\n} from \"../../core/utils/array\";\r\nimport {\r\n    compileGetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    removeEvent\r\n} from \"../../events/remove\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport ResponsiveBox from \"../responsive_box\";\r\nimport {\r\n    LAYOUT_MANAGER_ONE_COLUMN,\r\n    FORM_LAYOUT_MANAGER_CLASS,\r\n    SINGLE_COLUMN_ITEM_CONTENT,\r\n    ROOT_SIMPLE_ITEM_CLASS,\r\n    SIMPLE_ITEM_TYPE,\r\n    FIELD_ITEM_CLASS\r\n} from \"./constants\";\r\nimport \"../text_box\";\r\nimport \"../number_box\";\r\nimport \"../check_box\";\r\nimport \"../date_box\";\r\nimport \"../button\";\r\nimport {\r\n    renderFieldItem\r\n} from \"./components/field_item\";\r\nimport {\r\n    renderButtonItem\r\n} from \"./components/button_item\";\r\nimport {\r\n    renderEmptyItem\r\n} from \"./components/empty_item\";\r\nimport {\r\n    convertToRenderFieldItemOptions\r\n} from \"./ui.form.layout_manager.utils\";\r\nvar FORM_EDITOR_BY_DEFAULT = \"dxTextBox\";\r\nvar LAYOUT_MANAGER_FIRST_ROW_CLASS = \"dx-first-row\";\r\nvar LAYOUT_MANAGER_LAST_ROW_CLASS = \"dx-last-row\";\r\nvar LAYOUT_MANAGER_FIRST_COL_CLASS = \"dx-first-col\";\r\nvar LAYOUT_MANAGER_LAST_COL_CLASS = \"dx-last-col\";\r\nvar LayoutManager = Widget.inherit({\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            layoutData: {},\r\n            readOnly: false,\r\n            colCount: 1,\r\n            colCountByScreen: void 0,\r\n            labelLocation: \"left\",\r\n            onFieldDataChanged: null,\r\n            onEditorEnterKey: null,\r\n            customizeItem: null,\r\n            alignItemLabels: true,\r\n            minColWidth: 200,\r\n            showRequiredMark: true,\r\n            screenByWidth: null,\r\n            showOptionalMark: false,\r\n            requiredMark: \"*\",\r\n            labelMode: \"outside\",\r\n            optionalMark: messageLocalization.format(\"dxForm-optionalMark\"),\r\n            requiredMessage: messageLocalization.getFormatter(\"dxForm-requiredMessage\")\r\n        })\r\n    },\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            layoutData: true,\r\n            validationGroup: true\r\n        })\r\n    },\r\n    _init: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        this.callBase();\r\n        this._itemWatchers = [];\r\n        this._itemsRunTimeInfo = new FormItemsRunTimeInfo;\r\n        this._updateReferencedOptions(layoutData);\r\n        this._initDataAndItems(layoutData)\r\n    },\r\n    _dispose: function() {\r\n        this.callBase();\r\n        this._cleanItemWatchers()\r\n    },\r\n    _initDataAndItems: function(initialData) {\r\n        this._syncDataWithItems();\r\n        this._updateItems(initialData)\r\n    },\r\n    _syncDataWithItems: function() {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var userItems = this.option(\"items\");\r\n        if (isDefined(userItems)) {\r\n            userItems.forEach(item => {\r\n                if (item.dataField && void 0 === this._getDataByField(item.dataField)) {\r\n                    var value;\r\n                    if (item.editorOptions) {\r\n                        value = item.editorOptions.value\r\n                    }\r\n                    if (isDefined(value) || item.dataField in layoutData) {\r\n                        this._updateFieldValue(item.dataField, value)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    },\r\n    _getDataByField: function(dataField) {\r\n        return dataField ? this.option(\"layoutData.\" + dataField) : null\r\n    },\r\n    _isCheckboxUndefinedStateEnabled: function(_ref) {\r\n        var {\r\n            allowIndeterminateState: allowIndeterminateState,\r\n            editorType: editorType,\r\n            dataField: dataField\r\n        } = _ref;\r\n        if (true === allowIndeterminateState && \"dxCheckBox\" === editorType) {\r\n            var nameParts = [\"layoutData\", ...dataField.split(\".\")];\r\n            var propertyName = nameParts.pop();\r\n            var layoutData = this.option(nameParts.join(\".\"));\r\n            return layoutData && propertyName in layoutData\r\n        }\r\n        return false\r\n    },\r\n    _updateFieldValue: function(dataField, value) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        var newValue = value;\r\n        if (!variableWrapper.isWrapped(layoutData[dataField]) && isDefined(dataField)) {\r\n            this.option(\"layoutData.\" + dataField, newValue)\r\n        } else if (variableWrapper.isWritableWrapped(layoutData[dataField])) {\r\n            newValue = isFunction(newValue) ? newValue() : newValue;\r\n            layoutData[dataField](newValue)\r\n        }\r\n        this._triggerOnFieldDataChanged({\r\n            dataField: dataField,\r\n            value: newValue\r\n        })\r\n    },\r\n    _triggerOnFieldDataChanged: function(args) {\r\n        this._createActionByOption(\"onFieldDataChanged\")(args)\r\n    },\r\n    _updateItems: function(layoutData) {\r\n        var that = this;\r\n        var userItems = this.option(\"items\");\r\n        var isUserItemsExist = isDefined(userItems);\r\n        var customizeItem = that.option(\"customizeItem\");\r\n        var items = isUserItemsExist ? userItems : this._generateItemsByData(layoutData);\r\n        if (isDefined(items)) {\r\n            var processedItems = [];\r\n            each(items, (function(index, item) {\r\n                if (that._isAcceptableItem(item)) {\r\n                    item = that._processItem(item);\r\n                    customizeItem && customizeItem(item);\r\n                    if (isObject(item) && false !== variableWrapper.unwrap(item.visible)) {\r\n                        processedItems.push(item)\r\n                    }\r\n                }\r\n            }));\r\n            if (!that._itemWatchers.length || !isUserItemsExist) {\r\n                that._updateItemWatchers(items)\r\n            }\r\n            this._setItems(processedItems);\r\n            this._sortItems()\r\n        }\r\n    },\r\n    _cleanItemWatchers: function() {\r\n        this._itemWatchers.forEach((function(dispose) {\r\n            dispose()\r\n        }));\r\n        this._itemWatchers = []\r\n    },\r\n    _updateItemWatchers: function(items) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        items.forEach((function(item) {\r\n            if (isObject(item) && isDefined(item.visible) && isFunction(watch)) {\r\n                that._itemWatchers.push(watch((function() {\r\n                    return variableWrapper.unwrap(item.visible)\r\n                }), (function() {\r\n                    that._updateItems(that.option(\"layoutData\"));\r\n                    that.repaint()\r\n                }), {\r\n                    skipImmediate: true\r\n                }))\r\n            }\r\n        }))\r\n    },\r\n    _generateItemsByData: function(layoutData) {\r\n        var result = [];\r\n        if (isDefined(layoutData)) {\r\n            each(layoutData, (function(dataField) {\r\n                result.push({\r\n                    dataField: dataField\r\n                })\r\n            }))\r\n        }\r\n        return result\r\n    },\r\n    _isAcceptableItem: function(item) {\r\n        var itemField = item.dataField || item;\r\n        var itemData = this._getDataByField(itemField);\r\n        return !(isFunction(itemData) && !variableWrapper.isWrapped(itemData))\r\n    },\r\n    _processItem: function(item) {\r\n        if (\"string\" === typeof item) {\r\n            item = {\r\n                dataField: item\r\n            }\r\n        }\r\n        if (\"object\" === typeof item && !item.itemType) {\r\n            item.itemType = SIMPLE_ITEM_TYPE\r\n        }\r\n        if (!isDefined(item.editorType) && isDefined(item.dataField)) {\r\n            var value = this._getDataByField(item.dataField);\r\n            item.editorType = isDefined(value) ? this._getEditorTypeByDataType(type(value)) : FORM_EDITOR_BY_DEFAULT\r\n        }\r\n        if (\"dxCheckBox\" === item.editorType) {\r\n            var _item$allowIndetermin;\r\n            item.allowIndeterminateState = null !== (_item$allowIndetermin = item.allowIndeterminateState) && void 0 !== _item$allowIndetermin ? _item$allowIndetermin : true\r\n        }\r\n        return item\r\n    },\r\n    _getEditorTypeByDataType: function(dataType) {\r\n        switch (dataType) {\r\n            case \"number\":\r\n                return \"dxNumberBox\";\r\n            case \"date\":\r\n                return \"dxDateBox\";\r\n            case \"boolean\":\r\n                return \"dxCheckBox\";\r\n            default:\r\n                return \"dxTextBox\"\r\n        }\r\n    },\r\n    _sortItems: function() {\r\n        normalizeIndexes(this._items, \"visibleIndex\");\r\n        this._sortIndexes()\r\n    },\r\n    _sortIndexes: function() {\r\n        this._items.sort((function(itemA, itemB) {\r\n            var indexA = itemA.visibleIndex;\r\n            var indexB = itemB.visibleIndex;\r\n            var result;\r\n            if (indexA > indexB) {\r\n                result = 1\r\n            } else if (indexA < indexB) {\r\n                result = -1\r\n            } else {\r\n                result = 0\r\n            }\r\n            return result\r\n        }))\r\n    },\r\n    _initMarkup: function() {\r\n        this._itemsRunTimeInfo.clear();\r\n        this.$element().addClass(FORM_LAYOUT_MANAGER_CLASS);\r\n        this.callBase();\r\n        this._renderResponsiveBox()\r\n    },\r\n    _renderResponsiveBox: function() {\r\n        var templatesInfo = [];\r\n        if (this._items && this._items.length) {\r\n            var colCount = this._getColCount();\r\n            var $container = $(\"<div>\").appendTo(this.$element());\r\n            this._prepareItemsWithMerging(colCount);\r\n            var layoutItems = this._generateLayoutItems();\r\n            this._responsiveBox = this._createComponent($container, ResponsiveBox, this._getResponsiveBoxConfig(layoutItems, colCount, templatesInfo));\r\n            if (!hasWindow()) {\r\n                this._renderTemplates(templatesInfo)\r\n            }\r\n        }\r\n    },\r\n    _itemStateChangedHandler: function(e) {\r\n        this._refresh()\r\n    },\r\n    _renderTemplates: function(templatesInfo) {\r\n        var that = this;\r\n        var itemsWithLabelTemplateCount = 0;\r\n        templatesInfo.forEach(_ref2 => {\r\n            var _item$label;\r\n            var {\r\n                item: item\r\n            } = _ref2;\r\n            if (null !== item && void 0 !== item && null !== (_item$label = item.label) && void 0 !== _item$label && _item$label.template) {\r\n                itemsWithLabelTemplateCount++\r\n            }\r\n        });\r\n        each(templatesInfo, (function(index, info) {\r\n            switch (info.itemType) {\r\n                case \"empty\":\r\n                    renderEmptyItem(info);\r\n                    break;\r\n                case \"button\":\r\n                    that._renderButtonItem(info);\r\n                    break;\r\n                default:\r\n                    that._renderFieldItem(info, itemsWithLabelTemplateCount)\r\n            }\r\n        }))\r\n    },\r\n    _getResponsiveBoxConfig: function(layoutItems, colCount, templatesInfo) {\r\n        var that = this;\r\n        var colCountByScreen = that.option(\"colCountByScreen\");\r\n        var xsColCount = colCountByScreen && colCountByScreen.xs;\r\n        return {\r\n            onItemStateChanged: this._itemStateChangedHandler.bind(this),\r\n            onLayoutChanged: function() {\r\n                var onLayoutChanged = that.option(\"onLayoutChanged\");\r\n                var isSingleColumnMode = that.isSingleColumnMode();\r\n                if (onLayoutChanged) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, isSingleColumnMode);\r\n                    onLayoutChanged(isSingleColumnMode)\r\n                }\r\n            },\r\n            onContentReady: function(e) {\r\n                if (hasWindow()) {\r\n                    that._renderTemplates(templatesInfo)\r\n                }\r\n                if (that.option(\"onLayoutChanged\")) {\r\n                    that.$element().toggleClass(LAYOUT_MANAGER_ONE_COLUMN, that.isSingleColumnMode(e.component))\r\n                }\r\n            },\r\n            itemTemplate: function(e, itemData, itemElement) {\r\n                if (!e.location) {\r\n                    return\r\n                }\r\n                var $itemElement = $(itemElement);\r\n                var itemRenderedCountInPreviousRows = e.location.row * colCount;\r\n                var item = that._items[e.location.col + itemRenderedCountInPreviousRows];\r\n                if (!item) {\r\n                    return\r\n                }\r\n                var itemCssClassList = [item.cssClass];\r\n                $itemElement.toggleClass(SINGLE_COLUMN_ITEM_CONTENT, that.isSingleColumnMode(this));\r\n                if (0 === e.location.row) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_ROW_CLASS)\r\n                }\r\n                if (0 === e.location.col) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_FIRST_COL_CLASS)\r\n                }\r\n                if (item.itemType === SIMPLE_ITEM_TYPE && that.option(\"isRoot\")) {\r\n                    $itemElement.addClass(ROOT_SIMPLE_ITEM_CLASS)\r\n                }\r\n                var isLastColumn = e.location.col === colCount - 1 || e.location.col + e.location.colspan === colCount;\r\n                var rowsCount = that._getRowsCount();\r\n                var isLastRow = e.location.row === rowsCount - 1;\r\n                if (isLastColumn) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_COL_CLASS)\r\n                }\r\n                if (isLastRow) {\r\n                    itemCssClassList.push(LAYOUT_MANAGER_LAST_ROW_CLASS)\r\n                }\r\n                if (\"empty\" !== item.itemType) {\r\n                    itemCssClassList.push(FIELD_ITEM_CLASS);\r\n                    itemCssClassList.push(that.option(\"cssItemClass\"));\r\n                    if (isDefined(item.col)) {\r\n                        itemCssClassList.push(\"dx-col-\" + item.col)\r\n                    }\r\n                }\r\n                templatesInfo.push({\r\n                    itemType: item.itemType,\r\n                    item: item,\r\n                    $parent: $itemElement,\r\n                    rootElementCssClassList: itemCssClassList\r\n                })\r\n            },\r\n            cols: that._generateRatio(colCount),\r\n            rows: that._generateRatio(that._getRowsCount(), true),\r\n            dataSource: layoutItems,\r\n            screenByWidth: that.option(\"screenByWidth\"),\r\n            singleColumnScreen: xsColCount ? false : \"xs\"\r\n        }\r\n    },\r\n    _getColCount: function() {\r\n        var colCount = this.option(\"colCount\");\r\n        var colCountByScreen = this.option(\"colCountByScreen\");\r\n        if (colCountByScreen) {\r\n            var screenFactor = this.option(\"form\").getTargetScreenFactor();\r\n            if (!screenFactor) {\r\n                screenFactor = hasWindow() ? getCurrentScreenFactor(this.option(\"screenByWidth\")) : \"lg\"\r\n            }\r\n            colCount = colCountByScreen[screenFactor] || colCount\r\n        }\r\n        if (\"auto\" === colCount) {\r\n            if (this._cashedColCount) {\r\n                return this._cashedColCount\r\n            }\r\n            this._cashedColCount = colCount = this._getMaxColCount()\r\n        }\r\n        return colCount < 1 ? 1 : colCount\r\n    },\r\n    _getMaxColCount: function() {\r\n        if (!hasWindow()) {\r\n            return 1\r\n        }\r\n        var minColWidth = this.option(\"minColWidth\");\r\n        var width = getWidth(this.$element());\r\n        var itemsCount = this._items.length;\r\n        var maxColCount = Math.floor(width / minColWidth) || 1;\r\n        return itemsCount < maxColCount ? itemsCount : maxColCount\r\n    },\r\n    isCachedColCountObsolete: function() {\r\n        return this._cashedColCount && this._getMaxColCount() !== this._cashedColCount\r\n    },\r\n    _prepareItemsWithMerging: function(colCount) {\r\n        var items = this._items.slice(0);\r\n        var item;\r\n        var itemsMergedByCol;\r\n        var result = [];\r\n        var j;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            result.push(item);\r\n            if (this.option(\"alignItemLabels\") || item.alignItemLabels || item.colSpan) {\r\n                item.col = this._getColByIndex(result.length - 1, colCount)\r\n            }\r\n            if (item.colSpan > 1 && item.col + item.colSpan <= colCount) {\r\n                itemsMergedByCol = [];\r\n                for (j = 0; j < item.colSpan - 1; j++) {\r\n                    itemsMergedByCol.push({\r\n                        merged: true\r\n                    })\r\n                }\r\n                result = result.concat(itemsMergedByCol)\r\n            } else {\r\n                delete item.colSpan\r\n            }\r\n        }\r\n        this._setItems(result)\r\n    },\r\n    _getColByIndex: function(index, colCount) {\r\n        return index % colCount\r\n    },\r\n    _setItems: function(items) {\r\n        this._items = items;\r\n        this._cashedColCount = null\r\n    },\r\n    _generateLayoutItems: function() {\r\n        var items = this._items;\r\n        var colCount = this._getColCount();\r\n        var result = [];\r\n        var item;\r\n        var i;\r\n        for (i = 0; i < items.length; i++) {\r\n            item = items[i];\r\n            if (!item.merged) {\r\n                var generatedItem = {\r\n                    location: {\r\n                        row: parseInt(i / colCount),\r\n                        col: this._getColByIndex(i, colCount)\r\n                    }\r\n                };\r\n                if (isDefined(item.disabled)) {\r\n                    generatedItem.disabled = item.disabled\r\n                }\r\n                if (isDefined(item.visible)) {\r\n                    generatedItem.visible = item.visible\r\n                }\r\n                if (isDefined(item.colSpan)) {\r\n                    generatedItem.location.colspan = item.colSpan\r\n                }\r\n                if (isDefined(item.rowSpan)) {\r\n                    generatedItem.location.rowspan = item.rowSpan\r\n                }\r\n                result.push(generatedItem)\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _renderEmptyItem: function($container) {\r\n        renderEmptyItem({\r\n            $container: $container\r\n        })\r\n    },\r\n    _renderButtonItem: function(_ref3) {\r\n        var {\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList\r\n        } = _ref3;\r\n        var {\r\n            $rootElement: $rootElement,\r\n            buttonInstance: buttonInstance\r\n        } = renderButtonItem({\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList,\r\n            validationGroup: this.option(\"validationGroup\"),\r\n            createComponentCallback: this._createComponent.bind(this)\r\n        });\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: buttonInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _renderFieldItem: function(_ref4, itemsWithLabelTemplateCount) {\r\n        var _item$label2, _this$option;\r\n        var {\r\n            item: item,\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList\r\n        } = _ref4;\r\n        var editorValue = this._getDataByField(item.dataField);\r\n        var canAssignUndefinedValueToEditor = false;\r\n        if (void 0 === editorValue) {\r\n            var {\r\n                allowIndeterminateState: allowIndeterminateState,\r\n                editorType: editorType,\r\n                dataField: dataField\r\n            } = item;\r\n            canAssignUndefinedValueToEditor = this._isCheckboxUndefinedStateEnabled({\r\n                allowIndeterminateState: allowIndeterminateState,\r\n                editorType: editorType,\r\n                dataField: dataField\r\n            })\r\n        }\r\n        var name = item.dataField || item.name;\r\n        var formOrLayoutManager = this._getFormOrThis();\r\n        var {\r\n            $fieldEditorContainer: $fieldEditorContainer,\r\n            widgetInstance: widgetInstance,\r\n            $rootElement: $rootElement\r\n        } = renderFieldItem(convertToRenderFieldItemOptions({\r\n            $parent: $parent,\r\n            rootElementCssClassList: rootElementCssClassList,\r\n            item: item,\r\n            name: name,\r\n            editorValue: editorValue,\r\n            canAssignUndefinedValueToEditor: canAssignUndefinedValueToEditor,\r\n            formOrLayoutManager: this._getFormOrThis(),\r\n            createComponentCallback: this._createComponent.bind(this),\r\n            formLabelLocation: this.option(\"labelLocation\"),\r\n            requiredMessageTemplate: this.option(\"requiredMessage\"),\r\n            validationGroup: this.option(\"validationGroup\"),\r\n            editorValidationBoundary: this.option(\"validationBoundary\"),\r\n            editorStylingMode: this.option(\"form\") && this.option(\"form\").option(\"stylingMode\"),\r\n            showColonAfterLabel: this.option(\"showColonAfterLabel\"),\r\n            managerLabelLocation: this.option(\"labelLocation\"),\r\n            template: item.template ? this._getTemplate(item.template) : null,\r\n            labelTemplate: null !== (_item$label2 = item.label) && void 0 !== _item$label2 && _item$label2.template ? this._getTemplate(item.label.template) : null,\r\n            itemId: this.option(\"form\") && this.option(\"form\").getItemID(name),\r\n            managerMarkOptions: this._getMarkOptions(),\r\n            labelMode: this.option(\"labelMode\"),\r\n            onLabelTemplateRendered: () => {\r\n                this._incTemplateRenderedCallCount();\r\n                if (this._shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, itemsWithLabelTemplateCount)) {\r\n                    formOrLayoutManager._alignLabels(this, this.isSingleColumnMode(formOrLayoutManager))\r\n                }\r\n            }\r\n        }));\r\n        null === (_this$option = this.option(\"onFieldItemRendered\")) || void 0 === _this$option ? void 0 : _this$option();\r\n        if (widgetInstance && item.dataField) {\r\n            this._bindDataField(widgetInstance, item.dataField, item.editorType, $fieldEditorContainer)\r\n        }\r\n        this._itemsRunTimeInfo.add({\r\n            item: item,\r\n            widgetInstance: widgetInstance,\r\n            guid: item.guid,\r\n            $itemContainer: $rootElement\r\n        })\r\n    },\r\n    _incTemplateRenderedCallCount() {\r\n        var _this$_labelTemplateR;\r\n        this._labelTemplateRenderedCallCount = (null !== (_this$_labelTemplateR = this._labelTemplateRenderedCallCount) && void 0 !== _this$_labelTemplateR ? _this$_labelTemplateR : 0) + 1\r\n    },\r\n    _shouldAlignLabelsOnTemplateRendered(formOrLayoutManager, totalItemsWithLabelTemplate) {\r\n        return formOrLayoutManager.option(\"templatesRenderAsynchronously\") && this._labelTemplateRenderedCallCount === totalItemsWithLabelTemplate\r\n    },\r\n    _getMarkOptions: function() {\r\n        return {\r\n            showRequiredMark: this.option(\"showRequiredMark\"),\r\n            requiredMark: this.option(\"requiredMark\"),\r\n            showOptionalMark: this.option(\"showOptionalMark\"),\r\n            optionalMark: this.option(\"optionalMark\")\r\n        }\r\n    },\r\n    _getFormOrThis: function() {\r\n        return this.option(\"form\") || this\r\n    },\r\n    _bindDataField: function(editorInstance, dataField, editorType, $container) {\r\n        var formOrThis = this._getFormOrThis();\r\n        editorInstance.on(\"enterKey\", (function(args) {\r\n            formOrThis._createActionByOption(\"onEditorEnterKey\")(extend(args, {\r\n                dataField: dataField\r\n            }))\r\n        }));\r\n        this._createWatcher(editorInstance, $container, dataField);\r\n        this.linkEditorToDataField(editorInstance, dataField, editorType)\r\n    },\r\n    _createWatcher: function(editorInstance, $container, dataField) {\r\n        var that = this;\r\n        var watch = that._getWatch();\r\n        if (!isFunction(watch)) {\r\n            return\r\n        }\r\n        var dispose = watch((function() {\r\n            return that._getDataByField(dataField)\r\n        }), (function() {\r\n            var fieldValue = that._getDataByField(dataField);\r\n            if (\"dxTagBox\" === editorInstance.NAME) {\r\n                var editorValue = editorInstance.option(\"value\");\r\n                if (fieldValue !== editorValue && function(array1, array2) {\r\n                        if (!Array.isArray(array1) || !Array.isArray(array2) || array1.length !== array2.length) {\r\n                            return false\r\n                        }\r\n                        for (var i = 0; i < array1.length; i++) {\r\n                            if (array1[i] !== array2[i]) {\r\n                                return false\r\n                            }\r\n                        }\r\n                        return true\r\n                    }(fieldValue, editorValue)) {\r\n                    return\r\n                }\r\n            }\r\n            editorInstance.option(\"value\", fieldValue)\r\n        }), {\r\n            deep: true,\r\n            skipImmediate: true\r\n        });\r\n        eventsEngine.on($container, removeEvent, dispose)\r\n    },\r\n    _getWatch: function() {\r\n        if (!isDefined(this._watch)) {\r\n            var formInstance = this.option(\"form\");\r\n            this._watch = formInstance && formInstance.option(\"integrationOptions.watchMethod\")\r\n        }\r\n        return this._watch\r\n    },\r\n    _createComponent: function($editor, type, editorOptions) {\r\n        var readOnlyState = this.option(\"readOnly\");\r\n        var instance = this.callBase($editor, type, editorOptions);\r\n        readOnlyState && instance.option(\"readOnly\", readOnlyState);\r\n        this.on(\"optionChanged\", (function(args) {\r\n            if (\"readOnly\" === args.name && !isDefined(editorOptions.readOnly)) {\r\n                instance.option(args.name, args.value)\r\n            }\r\n        }));\r\n        return instance\r\n    },\r\n    _generateRatio: function(count, isAutoSize) {\r\n        var result = [];\r\n        var ratio;\r\n        var i;\r\n        for (i = 0; i < count; i++) {\r\n            ratio = {\r\n                ratio: 1\r\n            };\r\n            if (isAutoSize) {\r\n                ratio.baseSize = \"auto\"\r\n            }\r\n            result.push(ratio)\r\n        }\r\n        return result\r\n    },\r\n    _getRowsCount: function() {\r\n        return Math.ceil(this._items.length / this._getColCount())\r\n    },\r\n    _updateReferencedOptions: function(newLayoutData) {\r\n        var layoutData = this.option(\"layoutData\");\r\n        if (isObject(layoutData)) {\r\n            Object.getOwnPropertyNames(layoutData).forEach(property => delete this._optionsByReference[\"layoutData.\" + property])\r\n        }\r\n        if (isObject(newLayoutData)) {\r\n            Object.getOwnPropertyNames(newLayoutData).forEach(property => this._optionsByReference[\"layoutData.\" + property] = true)\r\n        }\r\n    },\r\n    _resetWidget(instance) {\r\n        this._disableEditorValueChangedHandler = true;\r\n        instance.reset();\r\n        this._disableEditorValueChangedHandler = false;\r\n        instance.option(\"isValid\", true)\r\n    },\r\n    _optionChanged(args) {\r\n        if (0 === args.fullName.search(\"layoutData.\")) {\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"showRequiredMark\":\r\n            case \"showOptionalMark\":\r\n            case \"requiredMark\":\r\n            case \"optionalMark\":\r\n                this._cashedRequiredConfig = null;\r\n                this._invalidate();\r\n                break;\r\n            case \"layoutData\":\r\n                this._updateReferencedOptions(args.value);\r\n                if (this.option(\"items\")) {\r\n                    if (!isEmptyObject(args.value)) {\r\n                        this._itemsRunTimeInfo.each((_, itemRunTimeInfo) => {\r\n                            if (isDefined(itemRunTimeInfo.item)) {\r\n                                var dataField = itemRunTimeInfo.item.dataField;\r\n                                if (dataField && isDefined(itemRunTimeInfo.widgetInstance)) {\r\n                                    var valueGetter = compileGetter(dataField);\r\n                                    var dataValue = valueGetter(args.value);\r\n                                    var {\r\n                                        allowIndeterminateState: allowIndeterminateState,\r\n                                        editorType: editorType\r\n                                    } = itemRunTimeInfo.item;\r\n                                    if (void 0 !== dataValue || this._isCheckboxUndefinedStateEnabled({\r\n                                            allowIndeterminateState: allowIndeterminateState,\r\n                                            editorType: editorType,\r\n                                            dataField: dataField\r\n                                        })) {\r\n                                        itemRunTimeInfo.widgetInstance.option(\"value\", dataValue)\r\n                                    } else {\r\n                                        this._resetWidget(itemRunTimeInfo.widgetInstance)\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    }\r\n                } else {\r\n                    this._initDataAndItems(args.value);\r\n                    this._invalidate()\r\n                }\r\n                break;\r\n            case \"items\":\r\n                this._cleanItemWatchers();\r\n                this._initDataAndItems(args.value);\r\n                this._invalidate();\r\n                break;\r\n            case \"alignItemLabels\":\r\n            case \"labelLocation\":\r\n            case \"labelMode\":\r\n            case \"requiredMessage\":\r\n                this._invalidate();\r\n                break;\r\n            case \"customizeItem\":\r\n                this._updateItems(this.option(\"layoutData\"));\r\n                this._invalidate();\r\n                break;\r\n            case \"colCount\":\r\n                this._resetColCount();\r\n                break;\r\n            case \"minColWidth\":\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"readOnly\":\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                if (\"auto\" === this.option(\"colCount\")) {\r\n                    this._resetColCount()\r\n                }\r\n                break;\r\n            case \"onFieldDataChanged\":\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    _resetColCount: function() {\r\n        this._cashedColCount = null;\r\n        this._invalidate()\r\n    },\r\n    linkEditorToDataField(editorInstance, dataField) {\r\n        this.on(\"optionChanged\", args => {\r\n            if (args.fullName === \"layoutData.\".concat(dataField)) {\r\n                editorInstance._setOptionWithoutOptionChange(\"value\", args.value)\r\n            }\r\n        });\r\n        editorInstance.on(\"valueChanged\", args => {\r\n            var isValueReferenceType = isObject(args.value) || Array.isArray(args.value);\r\n            if (!this._disableEditorValueChangedHandler && !(isValueReferenceType && args.value === args.previousValue)) {\r\n                this._updateFieldValue(dataField, args.value)\r\n            }\r\n        })\r\n    },\r\n    _dimensionChanged: function() {\r\n        if (\"auto\" === this.option(\"colCount\") && this.isCachedColCountObsolete()) {\r\n            this._eventsStrategy.fireEvent(\"autoColCountChanged\")\r\n        }\r\n    },\r\n    updateData: function(data, value) {\r\n        var that = this;\r\n        if (isObject(data)) {\r\n            each(data, (function(dataField, fieldValue) {\r\n                that._updateFieldValue(dataField, fieldValue)\r\n            }))\r\n        } else if (\"string\" === typeof data) {\r\n            that._updateFieldValue(data, value)\r\n        }\r\n    },\r\n    getEditor: function(field) {\r\n        return this._itemsRunTimeInfo.findWidgetInstanceByDataField(field) || this._itemsRunTimeInfo.findWidgetInstanceByName(field)\r\n    },\r\n    isSingleColumnMode: function(component) {\r\n        var responsiveBox = this._responsiveBox || component;\r\n        if (responsiveBox) {\r\n            return responsiveBox.option(\"currentScreenFactor\") === responsiveBox.option(\"singleColumnScreen\")\r\n        }\r\n    },\r\n    getItemsRunTimeInfo: function() {\r\n        return this._itemsRunTimeInfo\r\n    }\r\n});\r\nregisterComponent(\"dxLayoutManager\", LayoutManager);\r\nexport default LayoutManager;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}