{"ast":null,"code":"/**\r\n * Pattern module.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { BaseObject } from \"../../Base\";\nimport { getGhostPaper } from \"../Paper\";\nimport { List, ListDisposer } from \"../../utils/List\";\nimport { Animation, AnimationDisposer } from \"../../utils/Animation\";\nimport { registry } from \"../../Registry\";\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\nimport * as $iter from \"../../utils/Iterator\";\nimport * as $object from \"../../utils/Object\";\nimport * as $type from \"../../utils/Type\";\n;\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Base class to define patterns.\r\n */\n\nvar Pattern =\n/** @class */\nfunction (_super) {\n  __extends(Pattern, _super); //public propertyValues = new Dictionary<PatternProperties, any>();\n\n  /**\r\n   * Constructor\r\n   */\n\n\n  function Pattern() {\n    var _this = // Init\n    _super.call(this) || this;\n    /**\r\n     * List of elements the pattern consists of.\r\n     */\n\n\n    _this._elements = new List();\n    /**\r\n     * A storage for Filter property/value pairs.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @see {@link PatternProperties}\r\n     */\n\n    _this.properties = {};\n    _this.className = \"Pattern\"; // Set defaults\n\n    _this.width = 10;\n    _this.height = 10;\n    _this.x = 0;\n    _this.y = 0;\n    _this.patternUnits = \"userSpaceOnUse\";\n    var interfaceColors = new InterfaceColorSet();\n    _this.backgroundFill = interfaceColors.getFor(\"background\");\n    _this.backgroundOpacity = 0;\n    _this.fillOpacity = 1;\n    _this.fill = interfaceColors.getFor(\"alternativeBackground\");\n    _this.stroke = interfaceColors.getFor(\"alternativeBackground\");\n    _this.strokeOpacity = 1;\n    _this.strokeWidth = 1;\n    _this.shapeRendering = \"crispEdges\";\n    _this.rotation = 0; // Create main group to store pattern elements inelements\n\n    _this.element = _this.paper.addGroup(\"pattern\");\n    _this.id = \"pattern-\" + registry.getUniqueId();\n\n    _this.element.attr({\n      \"id\": _this.id\n    });\n\n    _this._disposers.push(_this.element); // Make elements disposable\n\n\n    _this._disposers.push(new ListDisposer(_this._elements)); // Request again to trigger getter/setter code\n\n\n    _this.patternUnits = _this.patternUnits;\n    _this.width = _this.width;\n    _this.height = _this.height; // Apply theme\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Draws the pattern.\r\n   */\n\n\n  Pattern.prototype.draw = function () {\n    var _this = this;\n\n    var patternElement = this.element;\n\n    if (patternElement) {\n      patternElement.removeChildNodes();\n      var background = this.paper.add(\"rect\");\n      background.attr({\n        \"width\": this.width,\n        \"height\": this.height,\n        \"shape-rendering\": \"crispEdges\",\n        \"fill\": this.backgroundFill.hex,\n        \"fill-opacity\": this.backgroundOpacity,\n        \"stroke\": this.backgroundFill.hex,\n        \"stroke-opacity\": 0\n      });\n      patternElement.add(background);\n      patternElement.attr({\n        \"x\": this.x,\n        \"y\": this.y,\n        \"width\": this.width,\n        \"height\": this.height,\n        \"stroke\": this.stroke.hex,\n        \"fill\": this.fill.hex,\n        \"fill-opacity\": this.fillOpacity,\n        \"stroke-opacity\": this.strokeOpacity,\n        \"stroke-width\": this.strokeWidth,\n        \"shape-rendering\": this.shapeRendering,\n        \"patternUnits\": this.patternUnits,\n        \"stroke-dasharray\": this.strokeDasharray\n      });\n      $iter.each(this._elements.iterator(), function (element) {\n        element.rotation = _this.rotation;\n        element.rotationX = _this.properties[\"rotationX\"];\n        element.rotationY = _this.properties[\"rotationY\"];\n\n        _this.element.add(element);\n      });\n    }\n  };\n  /**\r\n   * Animate pattern properties.\r\n   *\r\n   * @see {@link Animation}\r\n   * @param animationOptions  Animation options\r\n   * @param duration          Duration (ms)\r\n   * @param easing            Easing function\r\n   * @return Animation instance\r\n   */\n\n\n  Pattern.prototype.animate = function (animationOptions, duration, easing) {\n    return new Animation(this, animationOptions, duration, easing).start();\n  };\n  /**\r\n   * Adds an element to the pattern.\r\n   *\r\n   * @param element  Element\r\n   */\n\n\n  Pattern.prototype.addElement = function (element) {\n    this._elements.push(element);\n\n    this._disposers.push(element);\n  };\n  /**\r\n   * Remove an element from the pattern.\r\n   *\r\n   * @param element  Element\r\n   */\n\n\n  Pattern.prototype.removeElement = function (element) {\n    this._elements.removeValue(element);\n\n    this.removeDispose(element);\n  };\n\n  Object.defineProperty(Pattern.prototype, \"elements\", {\n    /**\r\n     * Returns the list of SVG elements comprising the pattern.\r\n     *\r\n     * @return Pattern elements\r\n     */\n    get: function () {\n      return this._elements;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"fillOpacity\", {\n    /**\r\n     * @return Opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"fillOpacity\"];\n    },\n\n    /**\r\n     * Pattern fill opacity. (0-1)\r\n     *\r\n     * @param value  Opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"fillOpacity\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"fill\", {\n    /**\r\n     * @return Fill color\r\n     */\n    get: function () {\n      return this.properties[\"fill\"];\n    },\n\n    /**\r\n     * Fill color of the pattern.\r\n     *\r\n     * @param value  Fill color\r\n     */\n    set: function (value) {\n      this.properties[\"fill\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"backgroundFill\", {\n    /**\r\n     * @return Background color\r\n     */\n    get: function () {\n      return this.properties[\"backgroundFill\"];\n    },\n\n    /**\r\n     * Pattern background fill color.\r\n     *\r\n     * @param value  Background color\r\n     */\n    set: function (value) {\n      this.properties[\"backgroundFill\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"backgroundOpacity\", {\n    /**\r\n     * @return Background opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"backgroundOpacity\"];\n    },\n\n    /**\r\n     * Pattern backgorund opacity. (0-1)\r\n     *\r\n     * @param value  Background opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"backgroundOpacity\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"stroke\", {\n    /**\r\n     * @return Color\r\n     */\n    get: function () {\n      return this.properties[\"stroke\"];\n    },\n\n    /**\r\n     * Pattern stroke (border) color.\r\n     *\r\n     * @param value  Color\r\n     */\n    set: function (value) {\n      this.properties[\"stroke\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"strokeOpacity\", {\n    /**\r\n     * @return Opacity (0-1)\r\n     */\n    get: function () {\n      return this.properties[\"strokeOpacity\"];\n    },\n\n    /**\r\n     * Pattern stroke opacity. (0-1)\r\n     *\r\n     * @param value  Opacity (0-1)\r\n     */\n    set: function (value) {\n      this.properties[\"strokeOpacity\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"strokeWidth\", {\n    /**\r\n     * @return Stroke thickness (px)\r\n     */\n    get: function () {\n      return this.properties[\"strokeWidth\"];\n    },\n\n    /**\r\n     * Pattern stroke thickness in pixels.\r\n     *\r\n     * @param value  Stroke thickness (px)\r\n     */\n    set: function (value) {\n      this.properties[\"strokeWidth\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"shapeRendering\", {\n    get: function () {\n      return this.properties[\"shapeRendering\"];\n    },\n\n    /**\r\n     * Shape rendering\r\n     * @param value [description]\r\n     */\n    set: function (value) {\n      this.properties[\"shapeRendering\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"rotation\", {\n    /**\r\n     * @return Rotation\r\n     */\n    get: function () {\n      return this.properties[\"rotation\"];\n    },\n\n    /**\r\n     * Pattern rotation in degrees.\r\n     *\r\n     * @param value  Rotation\r\n     */\n    set: function (value) {\n      this.properties[\"rotation\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"patternUnits\", {\n    /**\r\n     * @return Units\r\n     */\n    get: function () {\n      return this.properties[\"patternUnits\"];\n    },\n\n    /**\r\n     * Pattern measuring units.\r\n     *\r\n     * Available options: \"userSpaceOnUse\" | \"objectBoundingBox\".\r\n     *\r\n     * @param value  Units\r\n     */\n    set: function (value) {\n      this.properties[\"patternUnits\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"width\", {\n    /**\r\n     * @return Width (px)\r\n     */\n    get: function () {\n      return this.properties[\"width\"];\n    },\n\n    /**\r\n     * Pattern width in pixels.\r\n     *\r\n     * @param value  Width (px)\r\n     */\n    set: function (value) {\n      this.properties[\"width\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"height\", {\n    /**\r\n     * @return Height (px)\r\n     */\n    get: function () {\n      return this.properties[\"height\"];\n    },\n\n    /**\r\n     * Pattern height in pixels.\r\n     *\r\n     * @param value Height (px)\r\n     */\n    set: function (value) {\n      this.properties[\"height\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"x\", {\n    /**\r\n     * @return X (px)\r\n     */\n    get: function () {\n      return this.properties[\"x\"];\n    },\n\n    /**\r\n     * X position. (pixels)\r\n     *\r\n     * @param value X (px)\r\n     */\n    set: function (value) {\n      this.properties[\"x\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"y\", {\n    /**\r\n     * @return Y (px)\r\n     */\n    get: function () {\n      return this.properties[\"y\"];\n    },\n\n    /**\r\n     * Y position (px).\r\n     *\r\n     * @param value Y (px)\r\n     */\n    set: function (value) {\n      this.properties[\"y\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"paper\", {\n    /**\r\n     * @ignore Exclude from docs\r\n     * @return Paper\r\n     */\n    get: function () {\n      if (this._paper) {\n        return this._paper;\n      }\n\n      return getGhostPaper();\n    },\n\n    /**\r\n     * [[Paper]] instance to draw pattern in.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param paper  Paper\r\n     */\n    set: function (paper) {\n      if (this._paper != paper) {\n        this._paper = paper;\n        this.draw();\n        paper.appendDef(this.element);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Copies properties from another Pattern instance.\r\n   *\r\n   * @param source  Source pattern\r\n   */\n\n  Pattern.prototype.copyFrom = function (source) {\n    var _this = this;\n\n    _super.prototype.copyFrom.call(this, source);\n\n    $object.each(source.properties, function (key, value) {\n      _this[key] = value;\n    });\n  };\n\n  Object.defineProperty(Pattern.prototype, \"animations\", {\n    /**\r\n     * A list of animations currently running on the patter.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Animation list\r\n     */\n    get: function () {\n      if (!this._animations) {\n        this._animations = [];\n\n        this._disposers.push(new AnimationDisposer(this._animations));\n      }\n\n      return this._animations;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Pattern.prototype, \"strokeDasharray\", {\n    /**\r\n     * @return `stroke-dasharray`\r\n     */\n    get: function () {\n      return this.properties[\"strokeDashArray\"];\n    },\n\n    /**\r\n     * A `stroke-dasharray` for the stroke (outline).\r\n     *\r\n     * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n     *\r\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n     * @param value  `stroke-dasharray`\r\n     */\n    set: function (value) {\n      this.properties[\"strokeDashArray\"] = value;\n      this.draw();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n\n  Pattern.prototype.processConfig = function (config) {\n    if (config) {\n      // Set up series\n      if ($type.hasValue(config.elements) && $type.isArray(config.elements)) {\n        for (var i = 0, len = config.elements.length; i < len; i++) {\n          var element = config.elements[i];\n\n          if ($type.hasValue(element[\"type\"])) {\n            var sprite = this.createEntryInstance(element);\n\n            if (sprite instanceof BaseObject) {\n              sprite.config = element;\n            }\n\n            this.addElement($type.hasValue(element[\"typeProperty\"]) ? sprite[element[\"typeProperty\"]] : sprite.element);\n          }\n        }\n      }\n    }\n\n    _super.prototype.processConfig.call(this, config);\n  };\n\n  return Pattern;\n}(BaseObject);\n\nexport { Pattern };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Pattern\"] = Pattern;","map":{"version":3,"names":["__extends","BaseObject","getGhostPaper","List","ListDisposer","Animation","AnimationDisposer","registry","InterfaceColorSet","$iter","$object","$type","Pattern","_super","_this","call","_elements","properties","className","width","height","x","y","patternUnits","interfaceColors","backgroundFill","getFor","backgroundOpacity","fillOpacity","fill","stroke","strokeOpacity","strokeWidth","shapeRendering","rotation","element","paper","addGroup","id","getUniqueId","attr","_disposers","push","applyTheme","prototype","draw","patternElement","removeChildNodes","background","add","hex","strokeDasharray","each","iterator","rotationX","rotationY","animate","animationOptions","duration","easing","start","addElement","removeElement","removeValue","removeDispose","Object","defineProperty","get","enumerable","configurable","set","value","_paper","appendDef","copyFrom","source","key","_animations","processConfig","config","hasValue","elements","isArray","i","len","length","sprite","createEntryInstance","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/Pattern.js"],"sourcesContent":["/**\r\n * Pattern module.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { BaseObject } from \"../../Base\";\r\nimport { getGhostPaper } from \"../Paper\";\r\nimport { List, ListDisposer } from \"../../utils/List\";\r\nimport { Animation, AnimationDisposer } from \"../../utils/Animation\";\r\nimport { registry } from \"../../Registry\";\r\nimport { InterfaceColorSet } from \"../../utils/InterfaceColorSet\";\r\nimport * as $iter from \"../../utils/Iterator\";\r\nimport * as $object from \"../../utils/Object\";\r\nimport * as $type from \"../../utils/Type\";\r\n;\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Base class to define patterns.\r\n */\r\nvar Pattern = /** @class */ (function (_super) {\r\n    __extends(Pattern, _super);\r\n    //public propertyValues = new Dictionary<PatternProperties, any>();\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Pattern() {\r\n        var _this = \r\n        // Init\r\n        _super.call(this) || this;\r\n        /**\r\n         * List of elements the pattern consists of.\r\n         */\r\n        _this._elements = new List();\r\n        /**\r\n         * A storage for Filter property/value pairs.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @see {@link PatternProperties}\r\n         */\r\n        _this.properties = {};\r\n        _this.className = \"Pattern\";\r\n        // Set defaults\r\n        _this.width = 10;\r\n        _this.height = 10;\r\n        _this.x = 0;\r\n        _this.y = 0;\r\n        _this.patternUnits = \"userSpaceOnUse\";\r\n        var interfaceColors = new InterfaceColorSet();\r\n        _this.backgroundFill = interfaceColors.getFor(\"background\");\r\n        _this.backgroundOpacity = 0;\r\n        _this.fillOpacity = 1;\r\n        _this.fill = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.stroke = interfaceColors.getFor(\"alternativeBackground\");\r\n        _this.strokeOpacity = 1;\r\n        _this.strokeWidth = 1;\r\n        _this.shapeRendering = \"crispEdges\";\r\n        _this.rotation = 0;\r\n        // Create main group to store pattern elements inelements\r\n        _this.element = _this.paper.addGroup(\"pattern\");\r\n        _this.id = \"pattern-\" + registry.getUniqueId();\r\n        _this.element.attr({ \"id\": _this.id });\r\n        _this._disposers.push(_this.element);\r\n        // Make elements disposable\r\n        _this._disposers.push(new ListDisposer(_this._elements));\r\n        // Request again to trigger getter/setter code\r\n        _this.patternUnits = _this.patternUnits;\r\n        _this.width = _this.width;\r\n        _this.height = _this.height;\r\n        // Apply theme\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the pattern.\r\n     */\r\n    Pattern.prototype.draw = function () {\r\n        var _this = this;\r\n        var patternElement = this.element;\r\n        if (patternElement) {\r\n            patternElement.removeChildNodes();\r\n            var background = this.paper.add(\"rect\");\r\n            background.attr({ \"width\": this.width, \"height\": this.height, \"shape-rendering\": \"crispEdges\", \"fill\": this.backgroundFill.hex, \"fill-opacity\": this.backgroundOpacity, \"stroke\": this.backgroundFill.hex, \"stroke-opacity\": 0 });\r\n            patternElement.add(background);\r\n            patternElement.attr({ \"x\": this.x, \"y\": this.y, \"width\": this.width, \"height\": this.height, \"stroke\": this.stroke.hex, \"fill\": this.fill.hex, \"fill-opacity\": this.fillOpacity, \"stroke-opacity\": this.strokeOpacity, \"stroke-width\": this.strokeWidth, \"shape-rendering\": this.shapeRendering, \"patternUnits\": this.patternUnits, \"stroke-dasharray\": this.strokeDasharray });\r\n            $iter.each(this._elements.iterator(), function (element) {\r\n                element.rotation = _this.rotation;\r\n                element.rotationX = _this.properties[\"rotationX\"];\r\n                element.rotationY = _this.properties[\"rotationY\"];\r\n                _this.element.add(element);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Animate pattern properties.\r\n     *\r\n     * @see {@link Animation}\r\n     * @param animationOptions  Animation options\r\n     * @param duration          Duration (ms)\r\n     * @param easing            Easing function\r\n     * @return Animation instance\r\n     */\r\n    Pattern.prototype.animate = function (animationOptions, duration, easing) {\r\n        return new Animation(this, animationOptions, duration, easing).start();\r\n    };\r\n    /**\r\n     * Adds an element to the pattern.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Pattern.prototype.addElement = function (element) {\r\n        this._elements.push(element);\r\n        this._disposers.push(element);\r\n    };\r\n    /**\r\n     * Remove an element from the pattern.\r\n     *\r\n     * @param element  Element\r\n     */\r\n    Pattern.prototype.removeElement = function (element) {\r\n        this._elements.removeValue(element);\r\n        this.removeDispose(element);\r\n    };\r\n    Object.defineProperty(Pattern.prototype, \"elements\", {\r\n        /**\r\n         * Returns the list of SVG elements comprising the pattern.\r\n         *\r\n         * @return Pattern elements\r\n         */\r\n        get: function () {\r\n            return this._elements;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"fillOpacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"fillOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern fill opacity. (0-1)\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"fillOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"fill\", {\r\n        /**\r\n         * @return Fill color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"fill\"];\r\n        },\r\n        /**\r\n         * Fill color of the pattern.\r\n         *\r\n         * @param value  Fill color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"fill\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"backgroundFill\", {\r\n        /**\r\n         * @return Background color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"backgroundFill\"];\r\n        },\r\n        /**\r\n         * Pattern background fill color.\r\n         *\r\n         * @param value  Background color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"backgroundFill\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"backgroundOpacity\", {\r\n        /**\r\n         * @return Background opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"backgroundOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern backgorund opacity. (0-1)\r\n         *\r\n         * @param value  Background opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"backgroundOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"stroke\", {\r\n        /**\r\n         * @return Color\r\n         */\r\n        get: function () {\r\n            return this.properties[\"stroke\"];\r\n        },\r\n        /**\r\n         * Pattern stroke (border) color.\r\n         *\r\n         * @param value  Color\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"stroke\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeOpacity\", {\r\n        /**\r\n         * @return Opacity (0-1)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeOpacity\"];\r\n        },\r\n        /**\r\n         * Pattern stroke opacity. (0-1)\r\n         *\r\n         * @param value  Opacity (0-1)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeOpacity\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeWidth\", {\r\n        /**\r\n         * @return Stroke thickness (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeWidth\"];\r\n        },\r\n        /**\r\n         * Pattern stroke thickness in pixels.\r\n         *\r\n         * @param value  Stroke thickness (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeWidth\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"shapeRendering\", {\r\n        get: function () {\r\n            return this.properties[\"shapeRendering\"];\r\n        },\r\n        /**\r\n         * Shape rendering\r\n         * @param value [description]\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"shapeRendering\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"rotation\", {\r\n        /**\r\n         * @return Rotation\r\n         */\r\n        get: function () {\r\n            return this.properties[\"rotation\"];\r\n        },\r\n        /**\r\n         * Pattern rotation in degrees.\r\n         *\r\n         * @param value  Rotation\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"rotation\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"patternUnits\", {\r\n        /**\r\n         * @return Units\r\n         */\r\n        get: function () {\r\n            return this.properties[\"patternUnits\"];\r\n        },\r\n        /**\r\n         * Pattern measuring units.\r\n         *\r\n         * Available options: \"userSpaceOnUse\" | \"objectBoundingBox\".\r\n         *\r\n         * @param value  Units\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"patternUnits\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"width\", {\r\n        /**\r\n         * @return Width (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"width\"];\r\n        },\r\n        /**\r\n         * Pattern width in pixels.\r\n         *\r\n         * @param value  Width (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"width\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"height\", {\r\n        /**\r\n         * @return Height (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"height\"];\r\n        },\r\n        /**\r\n         * Pattern height in pixels.\r\n         *\r\n         * @param value Height (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"height\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"x\", {\r\n        /**\r\n         * @return X (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"x\"];\r\n        },\r\n        /**\r\n         * X position. (pixels)\r\n         *\r\n         * @param value X (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"x\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"y\", {\r\n        /**\r\n         * @return Y (px)\r\n         */\r\n        get: function () {\r\n            return this.properties[\"y\"];\r\n        },\r\n        /**\r\n         * Y position (px).\r\n         *\r\n         * @param value Y (px)\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"y\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"paper\", {\r\n        /**\r\n         * @ignore Exclude from docs\r\n         * @return Paper\r\n         */\r\n        get: function () {\r\n            if (this._paper) {\r\n                return this._paper;\r\n            }\r\n            return getGhostPaper();\r\n        },\r\n        /**\r\n         * [[Paper]] instance to draw pattern in.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @param paper  Paper\r\n         */\r\n        set: function (paper) {\r\n            if (this._paper != paper) {\r\n                this._paper = paper;\r\n                this.draw();\r\n                paper.appendDef(this.element);\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Copies properties from another Pattern instance.\r\n     *\r\n     * @param source  Source pattern\r\n     */\r\n    Pattern.prototype.copyFrom = function (source) {\r\n        var _this = this;\r\n        _super.prototype.copyFrom.call(this, source);\r\n        $object.each(source.properties, function (key, value) {\r\n            _this[key] = value;\r\n        });\r\n    };\r\n    Object.defineProperty(Pattern.prototype, \"animations\", {\r\n        /**\r\n         * A list of animations currently running on the patter.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Animation list\r\n         */\r\n        get: function () {\r\n            if (!this._animations) {\r\n                this._animations = [];\r\n                this._disposers.push(new AnimationDisposer(this._animations));\r\n            }\r\n            return this._animations;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Pattern.prototype, \"strokeDasharray\", {\r\n        /**\r\n         * @return `stroke-dasharray`\r\n         */\r\n        get: function () {\r\n            return this.properties[\"strokeDashArray\"];\r\n        },\r\n        /**\r\n         * A `stroke-dasharray` for the stroke (outline).\r\n         *\r\n         * \"Dasharray\" allows setting rules to make lines dashed, dotted, etc.\r\n         *\r\n         * @see {@link https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray} for more info on `stroke-dasharray`\r\n         * @param value  `stroke-dasharray`\r\n         */\r\n        set: function (value) {\r\n            this.properties[\"strokeDashArray\"] = value;\r\n            this.draw();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Pattern.prototype.processConfig = function (config) {\r\n        if (config) {\r\n            // Set up series\r\n            if ($type.hasValue(config.elements) && $type.isArray(config.elements)) {\r\n                for (var i = 0, len = config.elements.length; i < len; i++) {\r\n                    var element = config.elements[i];\r\n                    if ($type.hasValue(element[\"type\"])) {\r\n                        var sprite = this.createEntryInstance(element);\r\n                        if (sprite instanceof BaseObject) {\r\n                            sprite.config = element;\r\n                        }\r\n                        this.addElement($type.hasValue(element[\"typeProperty\"])\r\n                            ? sprite[element[\"typeProperty\"]]\r\n                            : sprite.element);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    return Pattern;\r\n}(BaseObject));\r\nexport { Pattern };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Pattern\"] = Pattern;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}