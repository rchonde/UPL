{"ast":null,"code":"/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\nimport { registry } from \"../../core/Registry\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\n\nvar DateAxisBreak =\n/** @class */\nfunction (_super) {\n  __extends(DateAxisBreak, _super);\n  /**\r\n   * Constructor\r\n   */\n\n\n  function DateAxisBreak() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"DateAxisBreak\";\n\n    _this.applyTheme();\n\n    return _this;\n  }\n\n  Object.defineProperty(DateAxisBreak.prototype, \"startDate\", {\n    /**\r\n     * @return Start date\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"startDate\");\n    },\n\n    /**\r\n     * Starting date for the break.\r\n     *\r\n     * @param value Start date\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"startDate\", value)) {\n        this.startValue = value.getTime();\n\n        if (this.axis) {\n          this.axis.invalidate();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(DateAxisBreak.prototype, \"endDate\", {\n    /**\r\n     * @return End date\r\n     */\n    get: function () {\n      return this.getPropertyValue(\"endDate\");\n    },\n\n    /**\r\n     * Ending date for the break.\r\n     *\r\n     * @param value End date\r\n     */\n    set: function (value) {\n      if (this.setPropertyValue(\"endDate\", value)) {\n        this.endValue = value.getTime();\n\n        if (this.axis) {\n          this.axis.invalidate();\n          this.axis.invalidateSeries();\n        }\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return DateAxisBreak;\n}(ValueAxisBreak);\n\nexport { DateAxisBreak };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;","map":{"version":3,"names":["__extends","ValueAxisBreak","registry","DateAxisBreak","_super","_this","call","className","applyTheme","Object","defineProperty","prototype","get","getPropertyValue","set","value","setPropertyValue","startValue","getTime","axis","invalidate","invalidateSeries","enumerable","configurable","endValue","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js"],"sourcesContent":["/**\r\n * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ValueAxisBreak } from \"./ValueAxisBreak\";\r\nimport { registry } from \"../../core/Registry\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Class used to define breaks for [[DateAxis]].\r\n *\r\n * A \"break\" can be used to \"cut out\" specific ranges of the axis scale, e.g.\r\n * weekends and holidays out of the Date-based axis.\r\n *\r\n * @see {@link IDateAxisBreakEvents} for a list of available events\r\n * @see {@link IDateAxisBreakAdapters} for a list of available Adapters\r\n * @important\r\n */\r\nvar DateAxisBreak = /** @class */ (function (_super) {\r\n    __extends(DateAxisBreak, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function DateAxisBreak() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"DateAxisBreak\";\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    Object.defineProperty(DateAxisBreak.prototype, \"startDate\", {\r\n        /**\r\n         * @return Start date\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"startDate\");\r\n        },\r\n        /**\r\n         * Starting date for the break.\r\n         *\r\n         * @param value Start date\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"startDate\", value)) {\r\n                this.startValue = value.getTime();\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(DateAxisBreak.prototype, \"endDate\", {\r\n        /**\r\n         * @return End date\r\n         */\r\n        get: function () {\r\n            return this.getPropertyValue(\"endDate\");\r\n        },\r\n        /**\r\n         * Ending date for the break.\r\n         *\r\n         * @param value End date\r\n         */\r\n        set: function (value) {\r\n            if (this.setPropertyValue(\"endDate\", value)) {\r\n                this.endValue = value.getTime();\r\n                if (this.axis) {\r\n                    this.axis.invalidate();\r\n                    this.axis.invalidateSeries();\r\n                }\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DateAxisBreak;\r\n}(ValueAxisBreak));\r\nexport { DateAxisBreak };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"DateAxisBreak\"] = DateAxisBreak;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa;AAAG;AAAe,UAAUC,MAAV,EAAkB;EACjDJ,SAAS,CAACG,aAAD,EAAgBC,MAAhB,CAAT;EACA;AACJ;AACA;;;EACI,SAASD,aAAT,GAAyB;IACrB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,eAAlB;;IACAF,KAAK,CAACG,UAAN;;IACA,OAAOH,KAAP;EACH;;EACDI,MAAM,CAACC,cAAP,CAAsBP,aAAa,CAACQ,SAApC,EAA+C,WAA/C,EAA4D;IACxD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,gBAAL,CAAsB,WAAtB,CAAP;IACH,CANuD;;IAOxD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,IAAI,KAAKC,gBAAL,CAAsB,WAAtB,EAAmCD,KAAnC,CAAJ,EAA+C;QAC3C,KAAKE,UAAL,GAAkBF,KAAK,CAACG,OAAN,EAAlB;;QACA,IAAI,KAAKC,IAAT,EAAe;UACX,KAAKA,IAAL,CAAUC,UAAV;UACA,KAAKD,IAAL,CAAUE,gBAAV;QACH;MACJ;IACJ,CApBuD;IAqBxDC,UAAU,EAAE,IArB4C;IAsBxDC,YAAY,EAAE;EAtB0C,CAA5D;EAwBAd,MAAM,CAACC,cAAP,CAAsBP,aAAa,CAACQ,SAApC,EAA+C,SAA/C,EAA0D;IACtD;AACR;AACA;IACQC,GAAG,EAAE,YAAY;MACb,OAAO,KAAKC,gBAAL,CAAsB,SAAtB,CAAP;IACH,CANqD;;IAOtD;AACR;AACA;AACA;AACA;IACQC,GAAG,EAAE,UAAUC,KAAV,EAAiB;MAClB,IAAI,KAAKC,gBAAL,CAAsB,SAAtB,EAAiCD,KAAjC,CAAJ,EAA6C;QACzC,KAAKS,QAAL,GAAgBT,KAAK,CAACG,OAAN,EAAhB;;QACA,IAAI,KAAKC,IAAT,EAAe;UACX,KAAKA,IAAL,CAAUC,UAAV;UACA,KAAKD,IAAL,CAAUE,gBAAV;QACH;MACJ;IACJ,CApBqD;IAqBtDC,UAAU,EAAE,IArB0C;IAsBtDC,YAAY,EAAE;EAtBwC,CAA1D;EAwBA,OAAOpB,aAAP;AACH,CA5DkC,CA4DjCF,cA5DiC,CAAnC;;AA6DA,SAASE,aAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAD,QAAQ,CAACuB,iBAAT,CAA2B,eAA3B,IAA8CtB,aAA9C"},"metadata":{},"sourceType":"module"}