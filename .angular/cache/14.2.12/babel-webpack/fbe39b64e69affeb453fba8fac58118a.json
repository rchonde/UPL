{"ast":null,"code":"/**\r\n * Functionality for drawing rectangles.\r\n */\nimport { __extends } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\n\nimport { Sprite } from \"../Sprite\";\nimport { registry } from \"../Registry\";\nimport * as $math from \"../utils/Math\";\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\n\nvar Rectangle =\n/** @class */\nfunction (_super) {\n  __extends(Rectangle, _super);\n  /**\r\n   * Constructor\r\n   * * Creates a `<rect>` element\r\n   * * Creates default state\r\n   */\n\n\n  function Rectangle() {\n    var _this = _super.call(this) || this;\n\n    _this.className = \"Rectangle\";\n    _this.element = _this.paper.add(\"rect\"); //this.pixelPerfect = false;\n\n    _this.applyTheme();\n\n    return _this;\n  }\n  /**\r\n   * Draws the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Rectangle.prototype.draw = function () {\n    _super.prototype.draw.call(this);\n\n    var precision = this._positionPrecision;\n\n    if (this.pixelPerfect) {\n      precision = 0;\n    }\n\n    var w = $math.round(this.innerWidth, precision);\n    var h = $math.round(this.innerHeight, precision);\n    this.element.attr({\n      \"width\": w,\n      \"height\": h\n    });\n  };\n  /**\r\n   * Measures the element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n\n\n  Rectangle.prototype.measureElement = function () {};\n\n  Object.defineProperty(Rectangle.prototype, \"bbox\", {\n    /**\r\n     * Returns bounding box (square) for this element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    get: function () {\n      if (this.definedBBox) {\n        return this.definedBBox;\n      }\n\n      if (this.isMeasured) {\n        return {\n          x: 0,\n          y: 0,\n          width: this.innerWidth,\n          height: this.innerHeight\n        };\n      } else {\n        return {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Rectangle;\n}(Sprite);\n\nexport { Rectangle };\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\n\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;","map":{"version":3,"names":["__extends","Sprite","registry","$math","Rectangle","_super","_this","call","className","element","paper","add","applyTheme","prototype","draw","precision","_positionPrecision","pixelPerfect","w","round","innerWidth","h","innerHeight","attr","measureElement","Object","defineProperty","get","definedBBox","isMeasured","x","y","width","height","enumerable","configurable","registeredClasses"],"sources":["D:/APPLICATION/UI/UPL/NEW/node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js"],"sourcesContent":["/**\r\n * Functionality for drawing rectangles.\r\n */\r\nimport { __extends } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite } from \"../Sprite\";\r\nimport { registry } from \"../Registry\";\r\nimport * as $math from \"../utils/Math\";\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * Used to draw a rectangle.\r\n *\r\n * @see {@link IRectangleEvents} for a list of available events\r\n * @see {@link IRectangleAdapters} for a list of available Adapters\r\n */\r\nvar Rectangle = /** @class */ (function (_super) {\r\n    __extends(Rectangle, _super);\r\n    /**\r\n     * Constructor\r\n     * * Creates a `<rect>` element\r\n     * * Creates default state\r\n     */\r\n    function Rectangle() {\r\n        var _this = _super.call(this) || this;\r\n        _this.className = \"Rectangle\";\r\n        _this.element = _this.paper.add(\"rect\");\r\n        //this.pixelPerfect = false;\r\n        _this.applyTheme();\r\n        return _this;\r\n    }\r\n    /**\r\n     * Draws the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Rectangle.prototype.draw = function () {\r\n        _super.prototype.draw.call(this);\r\n        var precision = this._positionPrecision;\r\n        if (this.pixelPerfect) {\r\n            precision = 0;\r\n        }\r\n        var w = $math.round(this.innerWidth, precision);\r\n        var h = $math.round(this.innerHeight, precision);\r\n        this.element.attr({\r\n            \"width\": w,\r\n            \"height\": h\r\n        });\r\n    };\r\n    /**\r\n     * Measures the element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Rectangle.prototype.measureElement = function () {\r\n    };\r\n    Object.defineProperty(Rectangle.prototype, \"bbox\", {\r\n        /**\r\n         * Returns bounding box (square) for this element.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        get: function () {\r\n            if (this.definedBBox) {\r\n                return this.definedBBox;\r\n            }\r\n            if (this.isMeasured) {\r\n                return {\r\n                    x: 0,\r\n                    y: 0,\r\n                    width: this.innerWidth,\r\n                    height: this.innerHeight\r\n                };\r\n            }\r\n            else {\r\n                return { x: 0, y: 0, width: 0, height: 0 };\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Rectangle;\r\n}(Sprite));\r\nexport { Rectangle };\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"Rectangle\"] = Rectangle;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;AAAe,UAAUC,MAAV,EAAkB;EAC7CL,SAAS,CAACI,SAAD,EAAYC,MAAZ,CAAT;EACA;AACJ;AACA;AACA;AACA;;;EACI,SAASD,SAAT,GAAqB;IACjB,IAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;IACAD,KAAK,CAACE,SAAN,GAAkB,WAAlB;IACAF,KAAK,CAACG,OAAN,GAAgBH,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CAAhB,CAHiB,CAIjB;;IACAL,KAAK,CAACM,UAAN;;IACA,OAAON,KAAP;EACH;EACD;AACJ;AACA;AACA;AACA;;;EACIF,SAAS,CAACS,SAAV,CAAoBC,IAApB,GAA2B,YAAY;IACnCT,MAAM,CAACQ,SAAP,CAAiBC,IAAjB,CAAsBP,IAAtB,CAA2B,IAA3B;;IACA,IAAIQ,SAAS,GAAG,KAAKC,kBAArB;;IACA,IAAI,KAAKC,YAAT,EAAuB;MACnBF,SAAS,GAAG,CAAZ;IACH;;IACD,IAAIG,CAAC,GAAGf,KAAK,CAACgB,KAAN,CAAY,KAAKC,UAAjB,EAA6BL,SAA7B,CAAR;IACA,IAAIM,CAAC,GAAGlB,KAAK,CAACgB,KAAN,CAAY,KAAKG,WAAjB,EAA8BP,SAA9B,CAAR;IACA,KAAKN,OAAL,CAAac,IAAb,CAAkB;MACd,SAASL,CADK;MAEd,UAAUG;IAFI,CAAlB;EAIH,CAZD;EAaA;AACJ;AACA;AACA;AACA;;;EACIjB,SAAS,CAACS,SAAV,CAAoBW,cAApB,GAAqC,YAAY,CAChD,CADD;;EAEAC,MAAM,CAACC,cAAP,CAAsBtB,SAAS,CAACS,SAAhC,EAA2C,MAA3C,EAAmD;IAC/C;AACR;AACA;AACA;AACA;IACQc,GAAG,EAAE,YAAY;MACb,IAAI,KAAKC,WAAT,EAAsB;QAClB,OAAO,KAAKA,WAAZ;MACH;;MACD,IAAI,KAAKC,UAAT,EAAqB;QACjB,OAAO;UACHC,CAAC,EAAE,CADA;UAEHC,CAAC,EAAE,CAFA;UAGHC,KAAK,EAAE,KAAKZ,UAHT;UAIHa,MAAM,EAAE,KAAKX;QAJV,CAAP;MAMH,CAPD,MAQK;QACD,OAAO;UAAEQ,CAAC,EAAE,CAAL;UAAQC,CAAC,EAAE,CAAX;UAAcC,KAAK,EAAE,CAArB;UAAwBC,MAAM,EAAE;QAAhC,CAAP;MACH;IACJ,CArB8C;IAsB/CC,UAAU,EAAE,IAtBmC;IAuB/CC,YAAY,EAAE;EAvBiC,CAAnD;EAyBA,OAAO/B,SAAP;AACH,CAlE8B,CAkE7BH,MAlE6B,CAA/B;;AAmEA,SAASG,SAAT;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,QAAQ,CAACkC,iBAAT,CAA2B,WAA3B,IAA0ChC,SAA1C"},"metadata":{},"sourceType":"module"}